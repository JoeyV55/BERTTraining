Util,Network,DB,Interpreter,i18n,Logic,Test,IO,UI,Security,App,corpus
1,0,0,1,1,1,1,1,1,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix a grammar mistakefixes #3161d60f7f352c7ce8ae031c916b045eb30a6f1a8ab8-------<p> in open-source guava completely skip trying to discover pluggable patterncompiler implementationsits never been possible to create such implementations externally anyway and users are now seeing problems running the useless discovery code under the module systemfixes https://githubcom/google/guava/issues/3147relnotes`base`: fixed the `serviceconfigurationerror` that some users encountered when using guava as a jpms module0954b82dc4e3fe400550fcba78ae2878a8604c3b-------<p> suppress exceptions raised from arguments tostring methods during lenient formatting - take 260c6e22c0ba9c7b305c787bd72e0fd4f1f005afc-------<p> create an htmlescapers target for people who want to avoid the bulk of i18n identifiers and icu4je0eae79a5ba94850ca447116cd033447240d489e-------<p> fix b/80241237 to correctly *not* change segment weight nor report an eviction when a compute() call does not change the present valuerelnotesfix a bug where cacheasmapcompute* methods could cause nonsensical weights to be stored breaking cache eviction21b52f64ceda0119daec68f6be2712bee55f02af so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of the commit author(s) and merge this pull request when appropriate*<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)<!-- cla_yes --> ||
1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fix a grammar mistakefixes #3161d60f7f352c7ce8ae031c916b045eb30a6f1a8ab8-------<p> in open-source guava completely skip trying to discover pluggable patterncompiler implementationsits never been possible to create such implementations externally anyway and users are now seeing problems running the useless discovery code under the module systemfixes https://githubcom/google/guava/issues/3147relnotes`base`: fixed the `serviceconfigurationerror` that some users encountered when using guava as a jpms module0954b82dc4e3fe400550fcba78ae2878a8604c3b-------<p> suppress exceptions raised from arguments tostring methods during lenient formatting - take 260c6e22c0ba9c7b305c787bd72e0fd4f1f005afc-------<p> create an htmlescapers target for people who want to avoid the bulk of i18n identifiers and icu4je0eae79a5ba94850ca447116cd033447240d489e-------<p> fix b/80241237 to correctly *not* change segment weight nor report an eviction when a compute() call does not change the present valuerelnotesfix a bug where cacheasmapcompute* methods could cause nonsensical weights to be stored breaking cache eviction21b52f64ceda0119daec68f6be2712bee55f02af so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of the commit author(s) and merge this pull request when appropriate*<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)<!-- cla_yes --> ||
1,0,1,1,1,1,0,1,0,1,0,"moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> add report-to headerhttps://wwww3org/tr/reporting/504978f1032ab9b6284ffadd1f94bdb7c870557a-------<p> remove unused imports and warningsfixes #3356f0945a2ca741ead2a435cf52ddae2217763cc092-------<p> reformat with google-java-formatrelnotesn/a7809097021927058b21523e7b4d24d1f7fdb91b8-------<p> add missing @override annotations8843b6ca39c8baddcf01991ea34ad91f87b30d82-------<p> document the retention of listeners added to guava implementations of listenablefuturerelnotesdocument the retention of listeners added to guava implementations of `listenablefuture`f6287e1b85eb4daf5678d252aaaf215a82f4fd2d-------<p> reformat with google-java-formatrelnotesn/a28cff42bc92b7685937c5771868167e0c03155d3-------<p> name the method parameter unused for immutablesortedsetreadobject(objectinputstream) (so the static analysis doesnt complain)0967c796d6e6be72b0d9e8d68af66d6a7b524b54-------<p> remove @beta from apis:collect- most collectors (aside from bloomfilter and immutablerange* as those whole classes are @beta (though i did remove the redundant @beta annotation from the collector-returning methods for clarity))- maps: asconverter immutableenummap- multimapbuilder- streams: stream(iterable) concatio- bytestreams: copy tobytearray- charstreams: copy tostring- files: as(char|byte)(source|sink)utilconcurrent- futures: addcallback getdone getunchecked immediatecancelledfuture immediatefailedfuture immediatefuture- listeningscheduledexecutorservice- uninterruptiblesother- htmlescapers- splittersplittolist- tickerfixes https://githubcom/google/guava/pull/3287fixes https://githubcom/google/guava/issues/3251 (aside from immutablerange* but those whole classes are @beta anyway)addresses the main concerns of https://githubcom/google/guava/issues/3285 but doesnt cover the broader requestfixes https://githubcom/google/guava/issues/3340partially addresses https://githubcom/google/guava/issues/3239relnotesremoved `@beta` from a number of frequently used apis068cb9005cc701ed98e31df9b56117b86df21d0f-------<p> add some known utf-8 hash values to murmur3_32 tests utf-8 is more comparable between platforms than relying on javas internal encodinge7ec53773bcf89533496de1611ac4dddd876fb54-------<p> remove @canignorereturnvalue from orderingsortedcopy() and immutablesortedcopy()relnotesremove `@canignorereturnvalue` from `orderingsortedcopy()` and `immutablesortedcopy()`da2895f5c3a55b84771488e0f8a38c67e0f63543-------<p> make a constructor private(im looking into enummap stuff for other reasons and i got to wondering if this was used outside the file nope)b1933ce7d8c8ff0fac90b494b33ab8af159e1906-------<p> delete wellbehavedmapthe bug it worked around was fixed in java 7:https://bugsjavacom/bugdatabase/view_bugdo?bug_id6312706and i dont believe it was ever present under android:https://androidgooglesourcecom/platform/libcore/+/fdb2704414a9ed92394ada0d1395e4db86889465/luni/src/main/java/java/util/enummapjava#146i havent looked for the absolute first version ever of gwt but the still very old gwt file doesnt have the bug eitherdeleting this class will simplify some work im doing around our enummap usage for j2cl2115c74c21ab47c3a41c2fb73a16aa6d051bf784-------<p> internal gwt change1d49ade94c3e7d2c056893a630739c8a6b897f66-------<p> automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66*** original change description ***internal gwt change***46a2123f4b077840b4b466fe6344579ac4b52bad-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapkeysetto prevent crashes on iostestedcreated a map inside a autorelease pool and saved a reference to thekeyset checked that the keyset functions correctly outside the autoreleasepool checked that both the keyset and the map are deallocated by theautorelease pool when not holding a reference to the keyset did this test withboth immutablemapof(<2 entries>) and immutablebimapof(<2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapkeyset()`76c954518752acb36256009840ed004eef412291-------<p> annotate checknotnulls input and output as @nonnullwe dont want to go down the road of annotating most things @nonnull as we eventually want to use tools that assume that thats the default however its pretty weird for checknotnull() to return a @nullable value in the minds of some tools so lets annotate just that method and see how it goesrelnotesannotated `checknotnull`s input and output as `@nonnull`63d0b31e62b4d4da33ec61a1d84d026391ffd126-------<p> document the jdk 9+ alternative to `maps#immutableentry`fixes #3385998858f9abd06b3774bf72a3b4f2fdaa18a88ceb-------<p> modernize book reference7eafede7552490351956e8038bb07596b227e3ef-------<p> create constants for the sourcemap headernone of the tests like this header name so each required some workaroundsrelnotesadd the sourcemap header to httpheaders81f191e80265001b3dc8b4544cd0bb277a05ba7b-------<p> internal gwt changedb6ada7b4f9db07b8de6ec549ca7e2ab6079b354-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapvaluesto prevent crashes on iostestedcreated a map inside an autorelease pool and saved a reference to thevalues collection checked that the values collection functions correctlyoutside the autorelease pool checked that both the values collection and themap are deallocated by the autorelease pool when not holding a strong referenceto the values collection did this test with immutablemapof(<2 entries>) andimmutablemapcopyof(<enummap with 2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapvalues()`05ac56322f6c3a4b0109aab2b46671716f109cb5-------<p> fix javadoc breakage under jdk11 canaryhttps://bugsopenjdkjavanet/browse/jdk-8212233https://bugsopenjdkjavanet/browse/jdk-8193030d8bdef58d54712286d86a9146778d25614fd3c9a-------<p> remove gwt emulations that are no longer needed as of gwt 282relnotesremoved gwt emulations that are no longer needed as of gwt 282 this means that gwt projects that use this version of guava must use gwt 282 or higherbe02df5ad4a530d5cb206a7042de8c2f5dbbff32 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- cla_yes --> || > annotate checknotnulls input and output as @nonnullhi just curious about the motivation behind this decision (well behind part of this decision) i totally agree that ""its pretty weird for checknotnull() to return a @nullable value in the minds of some tools"" and am in favor of `checknotnull()` returning a non-null valueim just unclear on why the input is considered `@nonnull` now instead of `@nullable` maybe im misusing it but i use `checknotnull()` as a fluent assertion on expressions where the compiler cant infer the nullability but i know its `@nonnull` for my uses the ideal signature would be:```java@canignorereturnvalue@nonnullpublic static <t> t checknotnull(@nullable t ref) {  }``` || "
1,0,0,0,1,0,1,0,0,0,0,"moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> add report-to headerhttps://wwww3org/tr/reporting/504978f1032ab9b6284ffadd1f94bdb7c870557a-------<p> remove unused imports and warningsfixes #3356f0945a2ca741ead2a435cf52ddae2217763cc092-------<p> reformat with google-java-formatrelnotesn/a7809097021927058b21523e7b4d24d1f7fdb91b8-------<p> add missing @override annotations8843b6ca39c8baddcf01991ea34ad91f87b30d82-------<p> document the retention of listeners added to guava implementations of listenablefuturerelnotesdocument the retention of listeners added to guava implementations of `listenablefuture`f6287e1b85eb4daf5678d252aaaf215a82f4fd2d-------<p> reformat with google-java-formatrelnotesn/a28cff42bc92b7685937c5771868167e0c03155d3-------<p> name the method parameter unused for immutablesortedsetreadobject(objectinputstream) (so the static analysis doesnt complain)0967c796d6e6be72b0d9e8d68af66d6a7b524b54-------<p> remove @beta from apis:collect- most collectors (aside from bloomfilter and immutablerange* as those whole classes are @beta (though i did remove the redundant @beta annotation from the collector-returning methods for clarity))- maps: asconverter immutableenummap- multimapbuilder- streams: stream(iterable) concatio- bytestreams: copy tobytearray- charstreams: copy tostring- files: as(char|byte)(source|sink)utilconcurrent- futures: addcallback getdone getunchecked immediatecancelledfuture immediatefailedfuture immediatefuture- listeningscheduledexecutorservice- uninterruptiblesother- htmlescapers- splittersplittolist- tickerfixes https://githubcom/google/guava/pull/3287fixes https://githubcom/google/guava/issues/3251 (aside from immutablerange* but those whole classes are @beta anyway)addresses the main concerns of https://githubcom/google/guava/issues/3285 but doesnt cover the broader requestfixes https://githubcom/google/guava/issues/3340partially addresses https://githubcom/google/guava/issues/3239relnotesremoved `@beta` from a number of frequently used apis068cb9005cc701ed98e31df9b56117b86df21d0f-------<p> add some known utf-8 hash values to murmur3_32 tests utf-8 is more comparable between platforms than relying on javas internal encodinge7ec53773bcf89533496de1611ac4dddd876fb54-------<p> remove @canignorereturnvalue from orderingsortedcopy() and immutablesortedcopy()relnotesremove `@canignorereturnvalue` from `orderingsortedcopy()` and `immutablesortedcopy()`da2895f5c3a55b84771488e0f8a38c67e0f63543-------<p> make a constructor private(im looking into enummap stuff for other reasons and i got to wondering if this was used outside the file nope)b1933ce7d8c8ff0fac90b494b33ab8af159e1906-------<p> delete wellbehavedmapthe bug it worked around was fixed in java 7:https://bugsjavacom/bugdatabase/view_bugdo?bug_id6312706and i dont believe it was ever present under android:https://androidgooglesourcecom/platform/libcore/+/fdb2704414a9ed92394ada0d1395e4db86889465/luni/src/main/java/java/util/enummapjava#146i havent looked for the absolute first version ever of gwt but the still very old gwt file doesnt have the bug eitherdeleting this class will simplify some work im doing around our enummap usage for j2cl2115c74c21ab47c3a41c2fb73a16aa6d051bf784-------<p> internal gwt change1d49ade94c3e7d2c056893a630739c8a6b897f66-------<p> automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66*** original change description ***internal gwt change***46a2123f4b077840b4b466fe6344579ac4b52bad-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapkeysetto prevent crashes on iostestedcreated a map inside a autorelease pool and saved a reference to thekeyset checked that the keyset functions correctly outside the autoreleasepool checked that both the keyset and the map are deallocated by theautorelease pool when not holding a reference to the keyset did this test withboth immutablemapof(<2 entries>) and immutablebimapof(<2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapkeyset()`76c954518752acb36256009840ed004eef412291-------<p> annotate checknotnulls input and output as @nonnullwe dont want to go down the road of annotating most things @nonnull as we eventually want to use tools that assume that thats the default however its pretty weird for checknotnull() to return a @nullable value in the minds of some tools so lets annotate just that method and see how it goesrelnotesannotated `checknotnull`s input and output as `@nonnull`63d0b31e62b4d4da33ec61a1d84d026391ffd126-------<p> document the jdk 9+ alternative to `maps#immutableentry`fixes #3385998858f9abd06b3774bf72a3b4f2fdaa18a88ceb-------<p> modernize book reference7eafede7552490351956e8038bb07596b227e3ef-------<p> create constants for the sourcemap headernone of the tests like this header name so each required some workaroundsrelnotesadd the sourcemap header to httpheaders81f191e80265001b3dc8b4544cd0bb277a05ba7b-------<p> internal gwt changedb6ada7b4f9db07b8de6ec549ca7e2ab6079b354-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapvaluesto prevent crashes on iostestedcreated a map inside an autorelease pool and saved a reference to thevalues collection checked that the values collection functions correctlyoutside the autorelease pool checked that both the values collection and themap are deallocated by the autorelease pool when not holding a strong referenceto the values collection did this test with immutablemapof(<2 entries>) andimmutablemapcopyof(<enummap with 2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapvalues()`05ac56322f6c3a4b0109aab2b46671716f109cb5-------<p> fix javadoc breakage under jdk11 canaryhttps://bugsopenjdkjavanet/browse/jdk-8212233https://bugsopenjdkjavanet/browse/jdk-8193030d8bdef58d54712286d86a9146778d25614fd3c9a-------<p> remove gwt emulations that are no longer needed as of gwt 282relnotesremoved gwt emulations that are no longer needed as of gwt 282 this means that gwt projects that use this version of guava must use gwt 282 or higherbe02df5ad4a530d5cb206a7042de8c2f5dbbff32 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- cla_yes --> || > annotate checknotnulls input and output as @nonnullhi just curious about the motivation behind this decision (well behind part of this decision) i totally agree that ""its pretty weird for checknotnull() to return a @nullable value in the minds of some tools"" and am in favor of `checknotnull()` returning a non-null valueim just unclear on why the input is considered `@nonnull` now instead of `@nullable` maybe im misusing it but i use `checknotnull()` as a fluent assertion on expressions where the compiler cant infer the nullability but i know its `@nonnull` for my uses the ideal signature would be:```java@canignorereturnvalue@nonnullpublic static <t> t checknotnull(@nullable t ref) {  }``` || "
1,0,1,1,1,1,0,1,0,1,0,"moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> add report-to headerhttps://wwww3org/tr/reporting/504978f1032ab9b6284ffadd1f94bdb7c870557a-------<p> remove unused imports and warningsfixes #3356f0945a2ca741ead2a435cf52ddae2217763cc092-------<p> reformat with google-java-formatrelnotesn/a7809097021927058b21523e7b4d24d1f7fdb91b8-------<p> add missing @override annotations8843b6ca39c8baddcf01991ea34ad91f87b30d82-------<p> document the retention of listeners added to guava implementations of listenablefuturerelnotesdocument the retention of listeners added to guava implementations of `listenablefuture`f6287e1b85eb4daf5678d252aaaf215a82f4fd2d-------<p> reformat with google-java-formatrelnotesn/a28cff42bc92b7685937c5771868167e0c03155d3-------<p> name the method parameter unused for immutablesortedsetreadobject(objectinputstream) (so the static analysis doesnt complain)0967c796d6e6be72b0d9e8d68af66d6a7b524b54-------<p> remove @beta from apis:collect- most collectors (aside from bloomfilter and immutablerange* as those whole classes are @beta (though i did remove the redundant @beta annotation from the collector-returning methods for clarity))- maps: asconverter immutableenummap- multimapbuilder- streams: stream(iterable) concatio- bytestreams: copy tobytearray- charstreams: copy tostring- files: as(char|byte)(source|sink)utilconcurrent- futures: addcallback getdone getunchecked immediatecancelledfuture immediatefailedfuture immediatefuture- listeningscheduledexecutorservice- uninterruptiblesother- htmlescapers- splittersplittolist- tickerfixes https://githubcom/google/guava/pull/3287fixes https://githubcom/google/guava/issues/3251 (aside from immutablerange* but those whole classes are @beta anyway)addresses the main concerns of https://githubcom/google/guava/issues/3285 but doesnt cover the broader requestfixes https://githubcom/google/guava/issues/3340partially addresses https://githubcom/google/guava/issues/3239relnotesremoved `@beta` from a number of frequently used apis068cb9005cc701ed98e31df9b56117b86df21d0f-------<p> add some known utf-8 hash values to murmur3_32 tests utf-8 is more comparable between platforms than relying on javas internal encodinge7ec53773bcf89533496de1611ac4dddd876fb54-------<p> remove @canignorereturnvalue from orderingsortedcopy() and immutablesortedcopy()relnotesremove `@canignorereturnvalue` from `orderingsortedcopy()` and `immutablesortedcopy()`da2895f5c3a55b84771488e0f8a38c67e0f63543-------<p> make a constructor private(im looking into enummap stuff for other reasons and i got to wondering if this was used outside the file nope)b1933ce7d8c8ff0fac90b494b33ab8af159e1906-------<p> delete wellbehavedmapthe bug it worked around was fixed in java 7:https://bugsjavacom/bugdatabase/view_bugdo?bug_id6312706and i dont believe it was ever present under android:https://androidgooglesourcecom/platform/libcore/+/fdb2704414a9ed92394ada0d1395e4db86889465/luni/src/main/java/java/util/enummapjava#146i havent looked for the absolute first version ever of gwt but the still very old gwt file doesnt have the bug eitherdeleting this class will simplify some work im doing around our enummap usage for j2cl2115c74c21ab47c3a41c2fb73a16aa6d051bf784-------<p> internal gwt change1d49ade94c3e7d2c056893a630739c8a6b897f66-------<p> automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66*** original change description ***internal gwt change***46a2123f4b077840b4b466fe6344579ac4b52bad-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapkeysetto prevent crashes on iostestedcreated a map inside a autorelease pool and saved a reference to thekeyset checked that the keyset functions correctly outside the autoreleasepool checked that both the keyset and the map are deallocated by theautorelease pool when not holding a reference to the keyset did this test withboth immutablemapof(<2 entries>) and immutablebimapof(<2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapkeyset()`76c954518752acb36256009840ed004eef412291-------<p> annotate checknotnulls input and output as @nonnullwe dont want to go down the road of annotating most things @nonnull as we eventually want to use tools that assume that thats the default however its pretty weird for checknotnull() to return a @nullable value in the minds of some tools so lets annotate just that method and see how it goesrelnotesannotated `checknotnull`s input and output as `@nonnull`63d0b31e62b4d4da33ec61a1d84d026391ffd126-------<p> document the jdk 9+ alternative to `maps#immutableentry`fixes #3385998858f9abd06b3774bf72a3b4f2fdaa18a88ceb-------<p> modernize book reference7eafede7552490351956e8038bb07596b227e3ef-------<p> create constants for the sourcemap headernone of the tests like this header name so each required some workaroundsrelnotesadd the sourcemap header to httpheaders81f191e80265001b3dc8b4544cd0bb277a05ba7b-------<p> internal gwt changedb6ada7b4f9db07b8de6ec549ca7e2ab6079b354-------<p> use j2objcs @retainedwith annotation instead of @weak on immutablemapvaluesto prevent crashes on iostestedcreated a map inside an autorelease pool and saved a reference to thevalues collection checked that the values collection functions correctlyoutside the autorelease pool checked that both the values collection and themap are deallocated by the autorelease pool when not holding a strong referenceto the values collection did this test with immutablemapof(<2 entries>) andimmutablemapcopyof(<enummap with 2 entries>)relnotesj2objc: fixes crashes from use of `immutablemapvalues()`05ac56322f6c3a4b0109aab2b46671716f109cb5-------<p> fix javadoc breakage under jdk11 canaryhttps://bugsopenjdkjavanet/browse/jdk-8212233https://bugsopenjdkjavanet/browse/jdk-8193030d8bdef58d54712286d86a9146778d25614fd3c9a-------<p> remove gwt emulations that are no longer needed as of gwt 282relnotesremoved gwt emulations that are no longer needed as of gwt 282 this means that gwt projects that use this version of guava must use gwt 282 or higherbe02df5ad4a530d5cb206a7042de8c2f5dbbff32 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3393) for more info**<!-- cla_yes --> || > annotate checknotnulls input and output as @nonnullhi just curious about the motivation behind this decision (well behind part of this decision) i totally agree that ""its pretty weird for checknotnull() to return a @nullable value in the minds of some tools"" and am in favor of `checknotnull()` returning a non-null valueim just unclear on why the input is considered `@nonnull` now instead of `@nullable` maybe im misusing it but i use `checknotnull()` as a fluent assertion on expressions where the compiler cant infer the nullability but i know its `@nonnull` for my uses the ideal signature would be:```java@canignorereturnvalue@nonnullpublic static <t> t checknotnull(@nullable t ref) {  }``` || "
1,0,0,0,0,1,1,1,0,0,0,"moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> fixed some linksthe comparisons to the android hash* classes havent been accurate since at least cl 81367572 so ive removed them entirelyfixes #33981dc514b56a0fa213baa242acf9e58163638abef8-------<p> migrate from assertthat(foo)named(""foo"") to assertwithmessage(""foo"")that(foo)(the exact change is slightly different in some cases like when using custom subjects or check() but its always a migration from named() to [assert]withmessage())named() is being removedthis cl may slightly modify the failure messages produced but all the old information will still be presente70a2f9e53583c1c508a0f7b16bdcad8c3f2f740-------<p> migrate from is(not)sameas to is(not)sameinstanceasthey behave identically and the old names are being removedopen-source note: the new methods are available in truth as of version 044c19256717b493127a355fabf1eeb827fd0c64973-------<p> a few more doc tweaks caught by @jbduncan in f2591b5c2a414084c20aeb4b74fb85eab5cf0a787d76234939-------<p> remove checkedfuture from guavarelnotesremoved deprecated `checkedfuture` and related utilitiescae1b9190e4bad3b6c01afbb08d9b0a366813c99-------<p> migrate from assertthat(foo)named(""foo"") to assertwithmessage(""foo"")that(foo)(the exact change is slightly different in some cases like when using custom subjects or check() but its always a migration from named() to [assert]withmessage())named() is being removedthis cl may slightly modify the failure messages produced but all the old information will still be present1f5c4780e522c32f9412e29cd2880124c81275e7 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3455) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3455) for more info**<!-- cla_yes --> ||"
1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> remove `@beta` from `setfuture`relnotesremoved `@beta` from `setfuture`2c717c0092ad5abbbe6a34d426e084623c651354-------<p> upgrade maven-gpg-plugin to 16fixes githubcom/google/guava/pull/3490c10a1647ffa968a96273d0961a6f9e0181a4fe70-------<p> clarify behavior of `immutablelist#copyof` for null argumentfixes #34856f655fb940809499719ba7679a425961e39a8feb-------<p> make the incidentedges() documentation a little bit more clearb0a05097900ab2decf17681d3dcd9154f225d91f-------<p> simplify implementation of graphsreachablenodes()b917492c31401a2e6092c8f3f6bc60040c1dcebe-------<p> make the adjacentnodes() documentation a little bit more clear7a5a43b66a4f0a22077918404fa95a165ede2811-------<p> delete deprecated callwithtimeout()fa13235f2c8edff9cd6c434f8a164250decf0249 so theres good news and bad news:thumbsup: the good news is that everyone that needs to sign a cla (the pull request submitter and all commit authors) have done so  everything is all good there:confused: the bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter  we need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that here in the pull request*note to project maintainer: this is a terminal state meaning the `cla/google` commit status will not change from this state its up to you to confirm consent of all the commit author(s) set the `cla` label to `yes` (if enabled on your project) and then merge this pull request when appropriate*ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3495) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3495) for more info**<!-- cla_yes --> ||
1,0,0,0,1,0,1,0,0,0,0,moe sync this code has been reviewed and submitted internally feel free to discuss on the pr and we can submit follow-up changes as necessarycommits:<p> check the array indexes in quantilesscaleandindexes is non emptyfixes #3210fixes #3211823a432ddaa2d274b539e12ed2bb46e5be0658ee-------<p> simplify some codefixes #3580e2362def3408478a4a74d24671aef39171a1e93f-------<p> document the jdk 9+ alternative to `iterators#forenumeration`fixes #3382e432be553038b4c67f22abb8c27f82ab6d480f3d-------<p> add a mime type mpeg-dash (mpd files)fixes #2677relnotes`net`: added the `mediatype` constant for mpeg-dash579ccf6c0181097be7b895ec145f04502234ef0e-------<p> fix the logic that decides whether to use currentrequestthreadfactory() under app enginewhile there also support thread renaming under app enginefixes https://githubcom/google/guava/issues/3598relevant to https://githubcom/google/guava/issues/3606(also the cl in which i experimented with https://githubcom/google/guava/issues/3569 before backing it out)7bd4b2351c1483f34e7192768b4f3e7a10447c33 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3635) for more info**<!-- cla_yes --> || all non-googler contributions are taken from prs ||
1,0,0,1,1,1,1,1,1,0,0,moe sync 2020-01-08 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add test case stable incidentedgeorder with a self loop to abstractstandard[un]directedgraphtestaee54682770a3166c231bbfecced91f31c55d32a-------<p> add test for stable incidentedgeorder support for mutable undirected valuegraphs in valuegraphtest0aba85dd247e254e10fcd84e7b2940fa0383e14e-------<p> fix off-by-one error in asciidigitsasciidigits initializationfixes #37612b27d9f906e18ae1105766d41e0940122ce686a0-------<p> disable gwt-rpc by default in the open-source releaserelnotes[guava types can no longer be sent over gwt-rpc](https://groupsgooglecom/d/msg/guava-announce/zhztfg7yf3o/rqnnwdheewaj) to _temporarily_ reenable support set the `guavagwtemergency_reenable_rpc` system property to `true`ff0cd947f82d24611e39fb3d86e3d19da4af801f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3765) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3765) for more info**<!-- cla_yes --> || adding cla:yes label because 2b27d9f906e18ae1105766d41e0940122ce686a0 comes from @perceptron8s pr #3761 ||
1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-01-08 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> add test case stable incidentedgeorder with a self loop to abstractstandard[un]directedgraphtestaee54682770a3166c231bbfecced91f31c55d32a-------<p> add test for stable incidentedgeorder support for mutable undirected valuegraphs in valuegraphtest0aba85dd247e254e10fcd84e7b2940fa0383e14e-------<p> fix off-by-one error in asciidigitsasciidigits initializationfixes #37612b27d9f906e18ae1105766d41e0940122ce686a0-------<p> disable gwt-rpc by default in the open-source releaserelnotes[guava types can no longer be sent over gwt-rpc](https://groupsgooglecom/d/msg/guava-announce/zhztfg7yf3o/rqnnwdheewaj) to _temporarily_ reenable support set the `guavagwtemergency_reenable_rpc` system property to `true`ff0cd947f82d24611e39fb3d86e3d19da4af801f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3765) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3765) for more info**<!-- cla_yes --> || adding cla:yes label because 2b27d9f906e18ae1105766d41e0940122ce686a0 comes from @perceptron8s pr #3761 ||
1,1,1,1,1,1,1,0,0,1,0,moe sync 2020-02-06 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> make abstractfuture compatible with forkjoinpool by catching exceptions from property retrievalfixes #3788 #3784relnotesmade it safe to load the `abstractfuture` class from a `forkjoinpool` thread under a security managere589b5c884a5996f7040ae38bdf02709f9e300da all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3796) for more info**<!-- need_author_consent --> || shut down computer - silence ||
1,0,1,1,1,1,0,0,0,0,0,moe sync 2020-04-10 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> remove `@beta` from `service` and `servicemanager`this leaves `abstractlisteningexecutorservice` as `@beta`fixes #3806 #3418relevant to #2966(i have tweaked jesses initial pr to leave `abstractexecutionthreadservicetriggershutdown` and `abstractservicedocancelstart` as `@beta` since we arent sure we like the locking behavior of the former and weve realized that `listenerstopping` _might_ be a reasonable substitute for both)relnotes`utilconcurrent`: removed `@beta` from `service` and related classes33574d771b099991822ed78a726df0eea4646eea all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3856) for more info**<!-- need_author_consent --> ||
1,0,0,0,0,1,1,1,0,0,0,moe sync 2020-05-04 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix powersetequals() when comparing to another powerset whose items are the same but in a different iteration orderrelnotes:  fix issue where powersetequals(powerset) would erroneously return  false if the powersets underlying sets were equal but in a different  iteration orderfixes #3891 #3890befd5ced9edc93a65c75201eb0698a571398005f all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3892) for more info**<!-- need_author_consent --> || cla:yes from #3891s acceptance || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3892) for more info**<!-- cla_yes --> ||
1,0,0,0,0,1,0,1,0,0,0,moe sync 2020-06-08 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> efficient unmodifiablemultimap foreachforeach can pass calls directly to the delegate protectedcollection because it is a read-only operationfixes #3911fixes #391298a616453df021b0792beb71c81b94d73e0cb69b-------<p> add comparatorsmin/maxrelnotes`collect`: added two-element min and max methods to comparatorsfc7433e647e82057ccc040885bf38dc503465d54-------<p> discourage orderingmin(e e) and max(e e) in favor of comparatorsmin(e e comparator) and max(e e comparator)relnotesdiscourage the use of orderingmin(e e) and max(e e)8bf31e175d0f103ade07a351ed6135496f635991 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3922) for more info**<!-- need_author_consent --> || a googler has manually verified that the clas look good(googler please make sure the reason for overriding the cla status is clearly documented in these comments)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f3922) for more info**<!-- cla_yes --> ||
1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-09-17 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix assertionerror from rangegapfixes #4007 #400488593a07f3a04163f2c68cf323a54cd8f8efdd03-------<p> fix random typos in guavafixes #40211102d11be3bbe534a5a569832aeb0099aa0eaa61-------<p> add back webapp to public suffix listd12e9833c5232032c8e9a0b51c9ea3b9ce5e2b9d-------<p> externally restore @donotmock to closingfuturecombiner and externally add @donotmock to closingfuture itselfthis implements an alternative workaround for https://bugsopenjdkjavanet/browse/jdk-7101822 replacing the one submitted in cl 3317704827b4c82f4e436311184cfb61cd6cfd8fb85a3dbe5 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4029) for more info**<!-- need_author_consent --> ||
1,0,0,0,0,1,0,0,0,0,0,moe sync 2020-09-18 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix unsupportedoperationexception from treerangesetsubrangeset()add()fixes #4019 #40023685507ce36e24f111cabb45c6d5c5dd26565aad-------<p> deal with class#isinstance checks which are guaranteed to be false2fa82f2cb6e1d2f6c29b7986be6e95063b65bf71-------<p> change `forwardingmapremove(object)` parameter name from `object` to `key` to match `mapremove(object key)`fixes https://githubcom/google/guava/issues/4028204904cbe79852e29aec2e461273f9b6112bd2f9 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4030) for more info**<!-- need_author_consent --> ||
1,0,0,0,0,1,0,0,0,0,0,moe sync 2020-09-18 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix unsupportedoperationexception from treerangesetsubrangeset()add()fixes #4019 #40023685507ce36e24f111cabb45c6d5c5dd26565aad-------<p> deal with class#isinstance checks which are guaranteed to be false2fa82f2cb6e1d2f6c29b7986be6e95063b65bf71-------<p> change `forwardingmapremove(object)` parameter name from `object` to `key` to match `mapremove(object key)`fixes https://githubcom/google/guava/issues/4028204904cbe79852e29aec2e461273f9b6112bd2f9 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4030) for more info**<!-- need_author_consent --> ||
1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-09-18 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> fix unsupportedoperationexception from treerangesetsubrangeset()add()fixes #4019 #40023685507ce36e24f111cabb45c6d5c5dd26565aad-------<p> deal with class#isinstance checks which are guaranteed to be false2fa82f2cb6e1d2f6c29b7986be6e95063b65bf71-------<p> change `forwardingmapremove(object)` parameter name from `object` to `key` to match `mapremove(object key)`fixes https://githubcom/google/guava/issues/4028204904cbe79852e29aec2e461273f9b6112bd2f9 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f4030) for more info**<!-- need_author_consent --> ||
1,0,0,0,1,0,1,0,0,0,0,moe sync 2020-10-09 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> clarify `hashmultimap` docs about concurrencycloses #5266fixes #3682e6b523481b34b2c2007046ea987bf62df92eb0f8-------<p> removed all references to now useless workaroundfixes #3679fixes #526526da0949c1cf54eb730578e75fe087f67110ee71 all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5268) for more info**<!-- need_author_consent --> || these commits were derived from the prs by @saucistophe so i am marking the cla as signed ||
1,0,0,0,1,0,1,0,0,0,0,"moe sync 2020-11-10 this code has been reviewed and submitted internally feel free to discuss onthe pr and we can submit follow-up changes as necessarycommits:<p> refactor classpath: replace scanner with location class75c2c543c6ac64943037630cfa40945feff10f42-------<p> fix documentation for hashcodetostring() that incorrectly claimed it returned in big-endian orderthe implementation of tostring() goes through the bytes in the same order that asbytes() returns so if the order of the underlying bytes is little-endian (as is the case for longhashcode) then the string will also be little-endian contradicting what the documentation says841129afbd77f8c78bb469de2ece758b418d322b-------<p> optimize hashingcrc32c() by eliminating two xors for every byte of inputbenchmarks suggest a modest speedup around 8%b685bf7068044cfef0c73163408a0ccebacef203-------<p> add constant for origin isolation headerspec: https://githubcom/wicg/origin-isolationrelnotesadds constant for the origin-isolation headerf3d79119d1e1f9937f332a8c73ed1690dfbb8ffb-------<p> remove outdated reference in docs3ac6e42a8622be4b122dfd4b9eef989148141148-------<p> add additional test for `crc32chashfunction`4f7e925397e6ca2b17ce3d563ba1968e94959bd1-------<p> verify maximumweight before settingthe maximumweight builder method is the only method that does the argument verification before the assignmentit looks like a typo and does not affect anyone in practice but it is still better to have the implementation uniformfixes #5298f1d40c3dd5243c5a29fe683fb42f7ff61b2a3068-------<p> do 16-byte strides in crc32c in cgchash resulting in roughly a 33x speedup to 15 gb/sthis is probably as good as it gets until java 11 when well have access to the intrinsics that use crc hardware when available6d9e9e33c6a784f86b51c3fac785532351374271-------<p> rollback*** original change description ***do 16-byte strides in crc32c in cgchash resulting in roughly a 33x speedup to 15 gb/sthis is probably as good as it gets until java 11 when well have access to the intrinsics that use crc hardware when available***916807371db167b99bb8b591a22c9ec07fe2bac2-------<p> backport `combine` to java7 for `immutablelist` & `immutableset`this is so that java8 code relying on the java7 branch of guava can still efficiently collect guava collectionsa275458c2601c33bfb5ba6ec54e2458feeeff06a-------<p> fix `loadingcache` minor documentation typofixes #550359a9556d82fc233acf8c0a3ad00de14e02384f75-------<p> added submitasync to closingfuturerelnotes""added `submitasync(asyncclosingcallable)` to `closingfuture`""187db6d240a896be6efb6fc98f014b9d4690fe30-------<p> add `x-request-id` to `httpheaders`fixes #5306relnotesadd `x-request-id` to `httpheaders`0f5a31bbc213f61404189d777b2039842210cab5-------<p> fix android test failure in classpathtestreproduced the error and verified that this change fixes itc1f6ac185f0e72998ed30ae72a0983804c5a4f5a all (the pull request submitter and all commit authors) clas are signed **but** one or more commits were authored or co-authored by someone other than the pull request submitterwe need to confirm that all authors are ok with their commits being contributed to this project  please have them confirm that by leaving a comment that contains only `@googlebot i consent` in this pull request*note to project maintainer:* there may be cases where the author cannot leave a comment or the comment is not properly detected as consent  in those cases you can manually confirm consent of the commit author(s) and set the `cla` label to `yes` (if enabled on your project)ℹ️ **googlers: [go here](https://gotogooglecom/prinfo/https%3a%2f%2fgithubcom%2fgoogle%2fguava%2fpull%2f5307) for more info**<!-- need_author_consent --> || setting `cla: yes` since all commits with different authors come directly from prs by those authors ||"
1,0,1,1,0,1,0,1,0,0,0,remove redundant `else` blocks remove redundant `else` blocksfixes #3974relnotesn/a  
