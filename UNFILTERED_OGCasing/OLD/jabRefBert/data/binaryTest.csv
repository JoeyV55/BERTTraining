Util,NLP,APM,Network,DB,Interpreter,Logging,DataStructure,i18n,DevOps,Logic,Microservices,Test,Search,IO,UI,Parser,Security,App,corpus
1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,"bugfix for bug ""#880 pubmed import broken"" found bug: pubmed/medline plain format recognized as ris formatprovided solution:    - modified ris importfilter now ris format is identified by looking for the ""ty"" tag (it is a mandatory tag in ris format and it is not conflictual with other filters)    - added new importfilter ""medlineplain"" this import filter parses medline files in plain format (not xml) the import filter has been produced referring to the official medline documentation (http://wwwnlmnihgov/bsd/mms/medlineelementshtml)    - updated the netsfjabrefcore pluginxml file in order to include the newly added medlineplain import filter  "
1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,"added special fields printed and read status added special fields printed and read status thereby implementing (at least partially):- feature #762 printed attribute- feature #692 marking of new entries and often read entries- feature #685 highlight new entries that were ""forgotten""- feature #602 could add the mark as read feature- feature #225 read? checkboxprinted is just a boolean toggle and for the read field currently the values skimmed and read are possible (if you have any suggestions for further possibilities im happy to implement them) the icons are taken from http://wwwsofticonscom/system-icons/crystal-project-icons-by-everaldo-coelho and should probably be replaced with icons from the same collection as the other currently used ones this feature is availale on jabref 210?what should i do to get them? || no it is not in 210 but in the current development version so you have to wait until 211 comes out or build the current version yourself how to do the latter is described here: https://githubcom/jabref/jabref#building-jabref-from-source || thank you very muchim could not install gradle on my laptop (ubuntu 1404)looking forward to the 211 release ||"
1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,"added special fields printed and read status added special fields printed and read status thereby implementing (at least partially):- feature #762 printed attribute- feature #692 marking of new entries and often read entries- feature #685 highlight new entries that were ""forgotten""- feature #602 could add the mark as read feature- feature #225 read? checkboxprinted is just a boolean toggle and for the read field currently the values skimmed and read are possible (if you have any suggestions for further possibilities im happy to implement them) the icons are taken from http://wwwsofticonscom/system-icons/crystal-project-icons-by-everaldo-coelho and should probably be replaced with icons from the same collection as the other currently used ones this feature is availale on jabref 210?what should i do to get them? || no it is not in 210 but in the current development version so you have to wait until 211 comes out or build the current version yourself how to do the latter is described here: https://githubcom/jabref/jabref#building-jabref-from-source || thank you very muchim could not install gradle on my laptop (ubuntu 1404)looking forward to the 211 release ||"
1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,"added special fields printed and read status added special fields printed and read status thereby implementing (at least partially):- feature #762 printed attribute- feature #692 marking of new entries and often read entries- feature #685 highlight new entries that were ""forgotten""- feature #602 could add the mark as read feature- feature #225 read? checkboxprinted is just a boolean toggle and for the read field currently the values skimmed and read are possible (if you have any suggestions for further possibilities im happy to implement them) the icons are taken from http://wwwsofticonscom/system-icons/crystal-project-icons-by-everaldo-coelho and should probably be replaced with icons from the same collection as the other currently used ones this feature is availale on jabref 210?what should i do to get them? || no it is not in 210 but in the current development version so you have to wait until 211 comes out or build the current version yourself how to do the latter is described here: https://githubcom/jabref/jabref#building-jabref-from-source || thank you very muchim could not install gradle on my laptop (ubuntu 1404)looking forward to the 211 release ||"
1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,1,"fix sf bug #1285 restores the cursor resp ""caret"" position when a field is store during editingthis fixes [sfnet bug #1285](http://sourceforgenet/p/jabref/bugs/1285/)to be done: - backport to dev_211- ask for confirmation on sfnet and close the issue there why does it lose focus anyway? this makes no sense to me saving should be a background process triggered by a key event || i think a backport to dev_211 is not necessary@stefan-kolb i agree very strange that the focus is changed ||  debugging this code is hell! :scream:the new fix fixes the problem where it is caused: method `updatefield` in `entryeditortab` re-sets the textfield which causes a loss of the current caret position || this looks way better and easier to maintain :blush: ||"
1,0,0,1,0,1,1,1,0,0,1,0,1,0,1,1,0,1,0,"doaj search search for directory of open access journals quite functional but the remaining things should (probably) be done- [x] ~~help page~~- [x] decide on where the bibjsonconverter class should be positioned (input?)- [x] more fields? ~~issn?~~- [x] ~~better/more error checking~~- [x] ~~handle search results with more than 100 entries properly~~- [x] ~~fill empty methods in doajfetcher~~- [x] ~~update status bar~~- [x] add test for bibjsonconverter- [x] ~~enable stopping search~~implements what is discussed in #208 i think im done there :-) || looks good to me  || one minor thing: the current title is ""doaj (directory of open source journals)"" which is much longer than the rest of the fetcher titles this introduces horizontal scrollbars in the fetcher sidebar when using the default width:![doaj-screenshot](https://cloudgithubusercontentcom/assets/676652/11044339/8ff615a2-8721-11e5-9a67-f2b1ca610747png)apart from this ""ready to go"" from my side too || there is no such property like [text-overflow](http://wwww3schoolscom/cssref/css3_pr_text-overflowasp) in swing is it? :star2:  || i think java actually does snip too long texts - if the component has a fixed size so this does not help hereill merge the current state but a potential improvement would be to define tooltips for the combobox to show some hints what the various abbreviations actually mean || "
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix #328: added more and better information with unsaved database ![capturedialog](https://cloudgithubusercontentcom/assets/8114497/11130895/e1dd1e66-8987-11e5-85f3-e268a193c68epng)(in this case it was a new database otherwise the full path is shown) @oscargus tooltip for screenshots: [grabndrop](http://wwwscyvde/gnd/) ||
0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,fix similar bug as #420 for the database properties dialog a similar bug as #420 happened when the encoding was changed in the database properties dialog this is now fixed in this pr sorry for introducing these bugs in the first place thanks for the fixup pr  ||
1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fix similar bug as #420 for the database properties dialog a similar bug as #420 happened when the encoding was changed in the database properties dialog this is now fixed in this pr sorry for introducing these bugs in the first place thanks for the fixup pr  ||
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix similar bug as #420 for the database properties dialog a similar bug as #420 happened when the encoding was changed in the database properties dialog this is now fixed in this pr sorry for introducing these bugs in the first place thanks for the fixup pr  ||
1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,cleanup tests and latexformatter instead of #427 (easier to start all over as some files were already moved)  
1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,cleanup tests and latexformatter instead of #427 (easier to start all over as some files were already moved)  
1,0,0,1,0,0,1,0,0,1,1,0,0,0,1,1,1,0,0,cleanup tests and latexformatter instead of #427 (easier to start all over as some files were already moved)  
1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,"revise maintable complete check and rewrite of maintable and related classesthis will fix and implement:- [x] #315 - [x] #384 - show tooltip for header columns- [x] #384 - show tooltip for contents which are too long for table columns- [x] #443 - [x] #445 - [x] add ability to drag and drop specialfield columns- ~~[ ] allow storing position of specialfield columns~~ postponed to another pr- [x] remove table column for ""pdf/ps"" which is obsolete (fixes #498)- [x] remove option ""show one letter heading for icon columns"" which is now obsolete- [x] changed default order in main table: # | all file based icons (file url/doi ) | all bibtex field based icons (bibtexkey entrytype author title ) | all special field icons- ~~[ ] #490~~ postponed- ~~[ ] think about ""must be implemented ""vernÃ¼nftig (matthias)"" ""entry table -> fit table horizontally """" from the minutes~~ postponed- [x] final cleanup + changelog awesome || before i invest much time to fix it@jabref/developers **are we dropping support for the ""pdf/ps"" column in the main table?**in this column potential contents of the ""legacy fields"" `pdf` and `ps` are shown in #251 the legacy tools are already droppedand we already have the abilility to define special columns based on a filetype (eg show a column for excel files) - so it would be possible to show specific columns for pdfs (stored in the `file` field) || yes support has been dropped for pdf/ps fields all over the place we should do this as well for the main table  || :+1: for removing these legacy columnscould someone create a faq entry (in htdocs) or send me a plain faq on how to mimic that behavior with the ""special columns""? || very nice pr with this we already have a 31 :) || @koppor: > q: the pdf/ps column in the main table is missing - how can i restore them?> a: as the bibtex fields `pdf` and `ps` are migrated to `file` the table column was obsolete however it is possible to define columns specifically for each file type in the preferences (see: preferences -> entry table columns -> show extra columns)> ![show-extra](https://cloudgithubusercontentcom/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115cpng)@simonharrer mhmm but this gui stuff is quite unnerving :wink: || and we already have issues with the pdf/ps columns which no longer seem to work correctly: #498this confirms the need for their removal || just rebased - from my point of view the current state is good enough to be merged into master || :+1: || "
1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,"revise maintable complete check and rewrite of maintable and related classesthis will fix and implement:- [x] #315 - [x] #384 - show tooltip for header columns- [x] #384 - show tooltip for contents which are too long for table columns- [x] #443 - [x] #445 - [x] add ability to drag and drop specialfield columns- ~~[ ] allow storing position of specialfield columns~~ postponed to another pr- [x] remove table column for ""pdf/ps"" which is obsolete (fixes #498)- [x] remove option ""show one letter heading for icon columns"" which is now obsolete- [x] changed default order in main table: # | all file based icons (file url/doi ) | all bibtex field based icons (bibtexkey entrytype author title ) | all special field icons- ~~[ ] #490~~ postponed- ~~[ ] think about ""must be implemented ""vernÃ¼nftig (matthias)"" ""entry table -> fit table horizontally """" from the minutes~~ postponed- [x] final cleanup + changelog awesome || before i invest much time to fix it@jabref/developers **are we dropping support for the ""pdf/ps"" column in the main table?**in this column potential contents of the ""legacy fields"" `pdf` and `ps` are shown in #251 the legacy tools are already droppedand we already have the abilility to define special columns based on a filetype (eg show a column for excel files) - so it would be possible to show specific columns for pdfs (stored in the `file` field) || yes support has been dropped for pdf/ps fields all over the place we should do this as well for the main table  || :+1: for removing these legacy columnscould someone create a faq entry (in htdocs) or send me a plain faq on how to mimic that behavior with the ""special columns""? || very nice pr with this we already have a 31 :) || @koppor: > q: the pdf/ps column in the main table is missing - how can i restore them?> a: as the bibtex fields `pdf` and `ps` are migrated to `file` the table column was obsolete however it is possible to define columns specifically for each file type in the preferences (see: preferences -> entry table columns -> show extra columns)> ![show-extra](https://cloudgithubusercontentcom/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115cpng)@simonharrer mhmm but this gui stuff is quite unnerving :wink: || and we already have issues with the pdf/ps columns which no longer seem to work correctly: #498this confirms the need for their removal || just rebased - from my point of view the current state is good enough to be merged into master || :+1: || "
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"revise maintable complete check and rewrite of maintable and related classesthis will fix and implement:- [x] #315 - [x] #384 - show tooltip for header columns- [x] #384 - show tooltip for contents which are too long for table columns- [x] #443 - [x] #445 - [x] add ability to drag and drop specialfield columns- ~~[ ] allow storing position of specialfield columns~~ postponed to another pr- [x] remove table column for ""pdf/ps"" which is obsolete (fixes #498)- [x] remove option ""show one letter heading for icon columns"" which is now obsolete- [x] changed default order in main table: # | all file based icons (file url/doi ) | all bibtex field based icons (bibtexkey entrytype author title ) | all special field icons- ~~[ ] #490~~ postponed- ~~[ ] think about ""must be implemented ""vernÃ¼nftig (matthias)"" ""entry table -> fit table horizontally """" from the minutes~~ postponed- [x] final cleanup + changelog awesome || before i invest much time to fix it@jabref/developers **are we dropping support for the ""pdf/ps"" column in the main table?**in this column potential contents of the ""legacy fields"" `pdf` and `ps` are shown in #251 the legacy tools are already droppedand we already have the abilility to define special columns based on a filetype (eg show a column for excel files) - so it would be possible to show specific columns for pdfs (stored in the `file` field) || yes support has been dropped for pdf/ps fields all over the place we should do this as well for the main table  || :+1: for removing these legacy columnscould someone create a faq entry (in htdocs) or send me a plain faq on how to mimic that behavior with the ""special columns""? || very nice pr with this we already have a 31 :) || @koppor: > q: the pdf/ps column in the main table is missing - how can i restore them?> a: as the bibtex fields `pdf` and `ps` are migrated to `file` the table column was obsolete however it is possible to define columns specifically for each file type in the preferences (see: preferences -> entry table columns -> show extra columns)> ![show-extra](https://cloudgithubusercontentcom/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115cpng)@simonharrer mhmm but this gui stuff is quite unnerving :wink: || and we already have issues with the pdf/ps columns which no longer seem to work correctly: #498this confirms the need for their removal || just rebased - from my point of view the current state is good enough to be merged into master || :+1: || "
1,0,0,1,0,1,1,1,1,0,1,1,0,0,1,1,0,1,0,"revise maintable complete check and rewrite of maintable and related classesthis will fix and implement:- [x] #315 - [x] #384 - show tooltip for header columns- [x] #384 - show tooltip for contents which are too long for table columns- [x] #443 - [x] #445 - [x] add ability to drag and drop specialfield columns- ~~[ ] allow storing position of specialfield columns~~ postponed to another pr- [x] remove table column for ""pdf/ps"" which is obsolete (fixes #498)- [x] remove option ""show one letter heading for icon columns"" which is now obsolete- [x] changed default order in main table: # | all file based icons (file url/doi ) | all bibtex field based icons (bibtexkey entrytype author title ) | all special field icons- ~~[ ] #490~~ postponed- ~~[ ] think about ""must be implemented ""vernÃ¼nftig (matthias)"" ""entry table -> fit table horizontally """" from the minutes~~ postponed- [x] final cleanup + changelog awesome || before i invest much time to fix it@jabref/developers **are we dropping support for the ""pdf/ps"" column in the main table?**in this column potential contents of the ""legacy fields"" `pdf` and `ps` are shown in #251 the legacy tools are already droppedand we already have the abilility to define special columns based on a filetype (eg show a column for excel files) - so it would be possible to show specific columns for pdfs (stored in the `file` field) || yes support has been dropped for pdf/ps fields all over the place we should do this as well for the main table  || :+1: for removing these legacy columnscould someone create a faq entry (in htdocs) or send me a plain faq on how to mimic that behavior with the ""special columns""? || very nice pr with this we already have a 31 :) || @koppor: > q: the pdf/ps column in the main table is missing - how can i restore them?> a: as the bibtex fields `pdf` and `ps` are migrated to `file` the table column was obsolete however it is possible to define columns specifically for each file type in the preferences (see: preferences -> entry table columns -> show extra columns)> ![show-extra](https://cloudgithubusercontentcom/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115cpng)@simonharrer mhmm but this gui stuff is quite unnerving :wink: || and we already have issues with the pdf/ps columns which no longer seem to work correctly: #498this confirms the need for their removal || just rebased - from my point of view the current state is good enough to be merged into master || :+1: || "
1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"show author/editor and journal/publisher in the main table by default implements #470 looks like follows:![grabbed_20151205-225839](https://cloudgithubusercontentcom/assets/1366654/11610469/bf3126ea-9ba3-11e5-8b8a-fc9b5d97a97dpng)""author/editor"" is okunsure if ""journal/publisher"" is confusing i think `booktitle/journal` would be the right correspondence we should replace the default ""journal"" column by `booktitle/journal` and maybe add the `publisher` column as default columnhow often is `inbook` used? consequently `title` should become `chapter/title` but that heading is confusing || id also vote for journal/booktitle (as that is what i use dealing primarily with journal and conference papers) on the other hand a good thing with this pr is that it indicates that these things are possible and how to do it || the journal says where an article is published similarly the publisher iswell the publisher of the book so i would advocate the proposed `journal/publisher` booktitle would probably only make sense for articles in conference proceedings i think articles and books are the most common types so we should focus on them@koppor: `inbook`s also have an author and title so there shouldnt be a problem || guess it depends on scientific area i would possibly argue that in general a publisher doesnt really add any important information even for books while in the case of conference papers the booktitle is crucial (i know that the publisher is important to create a valid reference but it doesnt really add any information when browsing a database) || in my discipline (computer science) id see the correspondence as follows (bibtex fields)| inproceedings | journal || --- | --- || title | title || author | author || booktitle | journal || publisher | publisher || year | year |for instance take an elsevier article (http://wwwsciencedirectcom/science/article/pii/s0268401215000808) the publisher is elsevier but the journal is ""international journal of information management"" elsevier publishes more than one journali read ""where something is published"" as the conference and the concrete journal the conference is stored in ""booktitle"" whereas the concrete journal is stored in ""journal"" both kinds of works are published by a publisheris it different in your discipline @tobiasdiez? || i do not think @tobiasdiez disagrees with that analysis but i got theimpression that he cites more books than conference papers in that case ican probably agree that publisher is the ""next"" field to add (mainlybecause of lack of others)journal/booktitle/publisher? (except for the very long heading) || ok apparently the majority is for booktitle hence i changed it accordingly my reasoning was indeed based on `book`s for which the publisher is the equivalent of a journal since books occur more often in my database i thought this addition was more valuable for `inproceedings` the booktitle indeed makes more sense || i suppose `journal/booktitle/publisher` is too confusing? i really agree that the column `journal/booktitle` is empty too often if many books are in the databaseill merge it and lets see what others say :sunflower:  || "
1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,"show author/editor and journal/publisher in the main table by default implements #470 looks like follows:![grabbed_20151205-225839](https://cloudgithubusercontentcom/assets/1366654/11610469/bf3126ea-9ba3-11e5-8b8a-fc9b5d97a97dpng)""author/editor"" is okunsure if ""journal/publisher"" is confusing i think `booktitle/journal` would be the right correspondence we should replace the default ""journal"" column by `booktitle/journal` and maybe add the `publisher` column as default columnhow often is `inbook` used? consequently `title` should become `chapter/title` but that heading is confusing || id also vote for journal/booktitle (as that is what i use dealing primarily with journal and conference papers) on the other hand a good thing with this pr is that it indicates that these things are possible and how to do it || the journal says where an article is published similarly the publisher iswell the publisher of the book so i would advocate the proposed `journal/publisher` booktitle would probably only make sense for articles in conference proceedings i think articles and books are the most common types so we should focus on them@koppor: `inbook`s also have an author and title so there shouldnt be a problem || guess it depends on scientific area i would possibly argue that in general a publisher doesnt really add any important information even for books while in the case of conference papers the booktitle is crucial (i know that the publisher is important to create a valid reference but it doesnt really add any information when browsing a database) || in my discipline (computer science) id see the correspondence as follows (bibtex fields)| inproceedings | journal || --- | --- || title | title || author | author || booktitle | journal || publisher | publisher || year | year |for instance take an elsevier article (http://wwwsciencedirectcom/science/article/pii/s0268401215000808) the publisher is elsevier but the journal is ""international journal of information management"" elsevier publishes more than one journali read ""where something is published"" as the conference and the concrete journal the conference is stored in ""booktitle"" whereas the concrete journal is stored in ""journal"" both kinds of works are published by a publisheris it different in your discipline @tobiasdiez? || i do not think @tobiasdiez disagrees with that analysis but i got theimpression that he cites more books than conference papers in that case ican probably agree that publisher is the ""next"" field to add (mainlybecause of lack of others)journal/booktitle/publisher? (except for the very long heading) || ok apparently the majority is for booktitle hence i changed it accordingly my reasoning was indeed based on `book`s for which the publisher is the equivalent of a journal since books occur more often in my database i thought this addition was more valuable for `inproceedings` the booktitle indeed makes more sense || i suppose `journal/booktitle/publisher` is too confusing? i really agree that the column `journal/booktitle` is empty too often if many books are in the databaseill merge it and lets see what others say :sunflower:  || "
1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,add close all/others/ in database tab menu see #314 changelog is missing otherwise :+1:  ||
1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,database type detection please see `bibdatabasetypedetectionjava`for reviewsome refactoring and a class for auto-detection of database types### algorithm- should we introduce a hard-coded field like encodings inside the bib file?- fast-enough?- what about false detection?### refactoring- bibtexdatabase -> bibdatabase- bibtexentry -> bibentryalso see #495 #167 the refactorings are fine from my point of viewthe detection is based on in-memory operations on collections so no need to worry about speed at the momentif i understand the algorithm correctly any database that contains a non-biblatex/non-bibtex type will be categorized as bibtex so a database with one biblatex entry and a customn entry would be detected as bibtex is that really the desired result? i would rather ignore all non-bibtex / non-biblatex types for the decision (customentry unkownentry ieeetranentry ) and do the decision solely on valid types with bibtex as the default result || @lenhard no it should always detect as biblatex if it finds one exclusive entry  || the algorithm looks good to me i would move the detection class into the logic package instead of model but that is your decisionstrangely the circleci test says there are still compilation errors due to the renamings as far as i can see locally all is fine ||
1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,database type detection please see `bibdatabasetypedetectionjava`for reviewsome refactoring and a class for auto-detection of database types### algorithm- should we introduce a hard-coded field like encodings inside the bib file?- fast-enough?- what about false detection?### refactoring- bibtexdatabase -> bibdatabase- bibtexentry -> bibentryalso see #495 #167 the refactorings are fine from my point of viewthe detection is based on in-memory operations on collections so no need to worry about speed at the momentif i understand the algorithm correctly any database that contains a non-biblatex/non-bibtex type will be categorized as bibtex so a database with one biblatex entry and a customn entry would be detected as bibtex is that really the desired result? i would rather ignore all non-bibtex / non-biblatex types for the decision (customentry unkownentry ieeetranentry ) and do the decision solely on valid types with bibtex as the default result || @lenhard no it should always detect as biblatex if it finds one exclusive entry  || the algorithm looks good to me i would move the detection class into the logic package instead of model but that is your decisionstrangely the circleci test says there are still compilation errors due to the renamings as far as i can see locally all is fine ||
1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,bibteximporter test added tests for bibteximporter depends on pr #514 (missing gradle test encoding special char Ã) i had a personal discussion with @bartsch-dev that the current bibteximporter is _not_ aware of the encoding header the reading of jabrefs encoding header is implemented in `opendatabaseaction` and not somewhere in the bibtexparsertherefore there is _no_ test of different encoding strings and it can imho only handle ascii encoded files || i would let this go through and handle the usage of the open method of `opendatabaseaction` in a separate issue || note that none of the files written at https://githubcom/jabref/jabref/wiki/bibtex are tested here || fixed all the mentioned issuesthe `git` part in the file was as already mentioned the title of the book which i took as an examplei also added some examples from https://githubcom/jabref/jabref/wiki/bibtex || i think this can be merged in || as discussed in https://githubcom/jabref/jabref/issues/558#issuecomment-195430095 it is not necessary to refactor `opendatabaseaction` because of this importer ||
1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,"write all field keys in lower case write all field keys in lower case no more camel casing of field names eg `title` is written instead of `title` `howpublished` instead of `howpublished` and `doi` instead of `doi` the configuration option `use camel case for field names (eg ""howpublished"" instead of ""howpublished"")` is gonerefs #116  maybe the ui also has to display lower case values or should it use the (currently removed) camelcase functionality? i dont like the current `entryutilcapitalizefirst` solution (found in maintablecolumnjava) || in my opinion it should use lower case since we are standardizing on that id say you are free to implement what you find more beautiful :) || :+1: on lower case  ||"
1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,"write all field keys in lower case write all field keys in lower case no more camel casing of field names eg `title` is written instead of `title` `howpublished` instead of `howpublished` and `doi` instead of `doi` the configuration option `use camel case for field names (eg ""howpublished"" instead of ""howpublished"")` is gonerefs #116  maybe the ui also has to display lower case values or should it use the (currently removed) camelcase functionality? i dont like the current `entryutilcapitalizefirst` solution (found in maintablecolumnjava) || in my opinion it should use lower case since we are standardizing on that id say you are free to implement what you find more beautiful :) || :+1: on lower case  ||"
1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,implements #565: highlighting matches works now also for regular exprâ¦ â¦essions in preview panel and entry editor  
1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,1,0,1,fixed #564: cite command changes are immediately reflected in the pusâ¦ â¦h-to-application actions and not only after restart :+1: ||
1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,remove field saving options as decided in #116 all field saving options should be removedthis pr purges the options from the gui and cleans up related reader and formatter classes this simplification greatly reduces the complexity of `bibentrywriter`  
1,0,0,1,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,"solved #593 and cleaned up the oo-code a bit hopefully solved #593try it out at http://buildsjabreforg/ooreferencelist/(also cleaned up the code a bit based on pmd the actual fix is on lines 76-90 in ooutiljava) looks good is it possible that the dependency on ""unoiljar"" can be removed? || unoiljar was in a separate directory before (changing the default paths to be the same for unoil and the other jars where jurtjar is the one searched for was the biggest change to get it to work with the most recent versions of oo and lo) || "
1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,add test for parsing accents i tried to replicate the problems of #650 but in the progress realized that the problem lied in the bib file provided there and not in the parser so the added test is rather useless but i figured it does not hurt to have more tests :)  
1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,add test for parsing accents i tried to replicate the problems of #650 but in the progress realized that the problem lied in the bib file provided there and not in the parser so the added test is rather useless but i figured it does not hurt to have more tests :)  
1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,make bibtex parser more robust against missing newlines as described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line) ie `% encoding: myencoding @article{}`actually as the tests reveal it was not a problem with the actual parser but within the file opening logic i dont view this pr as a complete fix for #669 and #621 since not just the parser but also the serialization should be improvedalso fix a bug that prevented the import of bibtex entries having only a key as its content :+1: (except my minor comment) || corrected for some reason the code style was not imported correctly in intellij || hm i just use the default intellij code style :) || @tobiasdiez: what do you think should be done to fix the above issues completely? || @lenhard in my opinion jabref should add new lines after the encoding and preamble im working on a solution right now (including a bit of refactoring to make testing easier) || @tobiasdiez ok good to hear! ill concentrate on other issues then ||
1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,"remove url sanitizer as it is malfunctioning and unclear where neededâ¦ also see #667@jabref/developers if someone knows a use case where this is needed and why we can try to reimplement it properly but this way it really makes no sense imho so then either `urldecoderdecode` or `uritoasciistring` converts `#` to `%23`? of course not impossible but seems like one has used the incorrect methods in that casei think the main things it does is replacing space with %20 in the urls and removing any `\url{}` commands there will probably be users that will run into problems but maybe one can add a url cleanup that does the corresponding thing?i think an alternative solution would just be to do a `replaceall(""%23""""#"")` at the end || the problem is that is really hard to correctly encode a url if we are not aware of its structure regardless of what methods we useso if we are not completely sure we need it we should probably not do this || :+1: sounds reasonable || @koppor what do you think about this? especially is it possible that users have a `url{\url{http://googlecom}}` in their bibfile? and what about escaping symbols for latex like `%`or `#`? || unsure the method comment states following:> make sure an url is ""portable"" in that it doesnt contain bad characters that break the open command in some  oses a call to this method will also remove \url{} enclosingsthat reads perfectly fineok i also read the following> // fixme: everything below is really flawed atmmaybe we should cleanup the url fields and not do the cleanup at the place of opening although i see the issue of malicious bib files which could have an url executing malicious code however that risk is so low that i would not count on itmeaning: :+1: and open a new issue for cleanup || "
1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix npe at saving does not reset save flag #741 fix #741 (and a lot of other null pointer exceptions) gettype and getstandardtype now return an optional instead of possible null values looks good to me! :+1:  || would be cool if we can increase the test coverage especially for the newly created branches otherwise lgtm :+1:  || i added tests for all uncovered branches in typedbibentry and after two lgtm will merge this in @oscargus have fun rebasing :smile:  ||
1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,mimetypedetector improvements see #824- added a http stubbing library- added a redirection test- added a mime type variation test- changed detection implementation to httpurlconnectionlooks like it works @koppor do you know how to host files and redirection on wwwjabreforg? || file hosting: even though it is possible to add files by adding them to https://githubcom/jabref/wwwjabreforg (gh-pages branch) i would propose to create a new url `testjabreforg` where we host such files we should not mix pagesredirections: they are possible at github using html redirects: https://helpgithubcom/articles/redirects-on-github-pages/ however these are not the redirects we are aiming for i can setup `testjabreforg` on my private server and create some redirects || ok we can mock the http request via wiremock should be way better than having an external dependency to our homepage ||
1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,fixed #492: all text is copied if nothing is marked and preview of paâ¦ fixed #492when nothing is selected the whole field is copied if the field is empty the right click copy item is disabledpreview of text to be pasted in tool tip now maximum 20 characters should it be longer?  
1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,fixed #492: all text is copied if nothing is marked and preview of paâ¦ fixed #492when nothing is selected the whole field is copied if the field is empty the right click copy item is disabledpreview of text to be pasted in tool tip now maximum 20 characters should it be longer?  
1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,"fixing openoffice citation with curly braces and manual connection browsing - [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests created for changes?- [x] tests green?fixed #856: clicking on browse for manual openoffice does now workfixed #815: curly braces in oo/lo citation no longer ignored- code cleanup: replaced actionlistener with lamdbasone point for discussion: defaultformbuilder (jgoodies) is deprecated is there already a replacement for the creation? i found this thread:http://stackoverflowcom/questions/33044573/jgoodies-what-is-the-nextline-equivalent-in-formbuilder@oscargus  @koppor regarding defaultformbuilder: there is an alternative jgoodies approach however it has been decided to leave it as is as a javax conversion is planned (any year now)i havent looked at the code carefully but what happens with {} around eg capitals? || ah thanks for your hint yeah it seems like it needs more checking for special cases i will try to come up with a solution to this i noticed that the authors name arp{\\i}rez then appears as arp{i}rez et al [2003]  || i tried some variants eg adding the curly braces ""manually"" before and end` if (stringutilisincurlybrackets(field)) { //braces at the start and the end of the string```        sbinsert(0 ""{"")        sbappend(""}"")        systemoutprintln(""in curly braces sb "" + sb)    }    return sbtostring()replace(""&dollar"" ""$"") // replace &dollar with $````this works well for authors however the problem is that i have no control over the field type this creates then a problem when you have an entry with curly braces around the title field those curly braces would then be printed in the generated bibliographyany ideas appreciated || i havent tried it but i think that oobibbasegetcitationmarkerfield is the place to try basically:1 check if there are surrounding braces2 format (using the old formatter that removes all braces)3 if there were surrounding  braces add them back before returning the formatted stringa potential problem is author lists which starts and ends with braces but are not enclosed say `{\aa}sa stor{\aa}` but there are methods for checking that in #863 (integritycheckbracketchecker) so as long as the basic mechanism is working one can always improve step 1 later || thanks for your tip i think i found a working solution in fact i copied the method and added a check for curly braces (code is based on the integrity checker) like you proposedthe copied method is manual tests look promising i will add some unit tests  || found a solution by enhancing the stringutil method and by adding a check for curly brackets in`getauthorcitationmarkerfield`the only thing which bothers me is that it is kind of ""double code"" i thought about this but did not come up with a nice solution maybe one of you has an idea || i think you can simply check if field is ""author"" or ""editor"" in the old method not 100% correct but there are other methods using similar logic(i guess ideally each field of the predefined entry types should have properties eg if it is a name field) || apart from that i think the pr looks good to go!(i believe that one probably can add a bit of code to handle escaped curly brackets for the rare cases that someone needs to put a single `\{` in a field but hardly anything important) || "
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fixed #883 should solve #883- [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests created for changes? no tests already passed this is a gui issue- [x] tests green? yes merging this as the changed visibility of the constructors prohibits a proper build at the moment || if you pass null to the database then getresolvedfield is invoked with a null database thus the crossref functionality is not supported in the rename pattern i think this is not a big deal but easy to fix (just pass the right db) || i think that at the moment null is always passed in the code(which also means that it the two one- and two-argument constructors areonly used in tests they can be removed and nulls passed which of course isthe current behaviour but seems to make more sense to provide alternativeconstructors if they are used in actual code) ||
1,0,0,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,"key bindings are now working in preview panel fixes #649until now the toolbar within the preview panel held the key bindings which werent active when the toolbar wasnt created now the preview panel itself carries the key bindings- [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [ ] tests created for changes?- [x] tests green? looks good to me :+1:  || looks good! :+1: || - please extract the setting of the key bindings as a method otherwise looks good to me too - for each action one has to register a string two times one at the input map and one in the action map eg ""print"" can you extract variables so that this is made more clear? a local variable for each of the blocks should suffice making it a constant moves it away from the code in question hence just create a local one  || extracted the key bindings and the actionmapkeys || :+1:  || "
1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,find unlinked files freezes when using for pdf 1 fixed #410 reason was an illegalargumentexception thrown by doi class when pasting the contents of the whole first pdf page to the constructor2 the doi class can only handle real dois and does not extract strings that might look like a doi from the text therefore the whole doi scraper was removed in https://githubcom/jabref/jabref/commit/acdcd829c304e03b9bfd92d6eba383b5a1d521083 the whole pdfimporter class is screwed and a monkeypatch it should be reimplemented from scratch 1/2: the usage of dois was requested by a user: if the pdf contains a doi string the data of the doi should be used and not the guessed content - with old jabref code that code worked do you have a proposal to bring that functionality back?3: the parsing results are better for springer and ieee papers than with other existing open source scrapers and mr dlib that fact has to be regarded too || the doi finding should work again now but the doi class has quite some redundant code now as i need to exclude spaces from the findintext regex i dont know if there are any dois out there that include spaces but theoretically it seems to be allowed || for me `src/test/resources/encryptedpdf`is not raising any exception also `importentries` is not throwing any `ioexception` which is propagated to other methods later on the functionality is really flawed || spaces should be encoded as %20 in a doi so i do not think it will be a problem see https://wwwdoiorg/doi_handbook/2_numberinghtml#2524i seem to recall that we changed the encoding of dois at some stage maybe this should be revisited? || so you mean we can replace the exact_doi pattern with the doi_pattern?! ||
1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,1,0,0,db properties layout and save order config changed - [x] change in changelogmd described?- [x] changes in pull request outlined? (what why )- [x] tests green?fixes  #957  and #958 fix height of the dialog and add spacing between ok/cancel button and  borderchanged jcomboxbox to editable and removed the unnecessary textfieldsadded jcombobox for selecting the fields to apply the selected formatter tochanged position of delete buttonremoved indexoutofbound exception when no item is selectededit// i just see this pr is #999 ) is it possible to write a simple ui test for it? :innocent:refs #507  || ui-test i will try to write one || added gui test und fixed checkbox label not displaying correclty || the code looks good so i give my :+1: for merging if you add a nice looking screenshot :smiley:  || @tobiasdiez  here you are:![dbproperties](https://cloudgithubusercontentcom/assets/320228/13907253/784b77ae-eeea-11e5-8a61-a72b953537acpng) || @oscargus  i tried to fix this but i could not get the damn jlist resized horizontally or vertically i tried around a lot the code for this is located in `fieldformatterscleanuppanel`from this one it sounded very simple:http://alvinalexandercom/java/edu/jgoodies-formlayout-grow-fill/3-fixing-jgoodies-formlayout-sizingshtmledit// this is how it scales after my fix![dbpropertiesresized](https://cloudgithubusercontentcom/assets/320228/13959063/c75f28cc-f052-11e5-94b2-016eb93417f8png) || my code did everything except horizontal sizing (and i also tried alot) so check there for possible hints i think that when spanningmultiple columns using a fourth alignment argument to xyw is one thing || @siedlerchr : i think it is good to go so please rebase and it can be merged(i reserve the right to fix/change(?) the scaling at some stage :-)) || @oscargus  okay otherwise i would have looked at the gui resizing in more detail the next days || @siedlerchr up to you i just wasnt sure what the status of the pr was and was thinking of merging it (if it was possible) feel free to look at the resizing :+1:  || @oscargus  as i just rebased it on the master i would suggest merging it for once now so that the biggest changes (eg the comboxes) are into itthe resizing are only some minor things  i will try to experiment with them in the next days and release it then as a new pr ||
1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,added initial tests for exportformat really trivial and early test but could maybe avoid bugs like #1001 to happen (and form a foundation to extend on) mhhi am missing an assertion in these tests ie reading the exported file and checking that it is empty  || i have changed the code based on all(?) comments major implications:- now all exporters returns an empty file for an empty set of entries and are tested for this earlier some heading information was generated- all exporters are now tested that they throw an npe with a null database or null entries list- the change that fixes #1001 is in practice reverted and solved such that the exportformat calls add all entries instead of null for all entries- the test disabled in #1005 is active again- i had to break the new guideline in #1012 to be able to test all exporters for npes in a simple way if theres a better way please let me know(this shows that adding a quite crappy initial test can lead to good things :-)) || as the export is now not performed for empty databases (entries lists) as a side effect the coverage is more accurate now as well earlier it increased quite a bit but no actual testing was done (well apart from that the code executed without any errors) || this looks way better then the initial pr good job! || not obvious that parameterized is executed before beforeclass but once i figured that out || lgtm || i think this is probably as far as we get right now and that the code is quite ok since it is rather general and only tests what is actually tested (or how to formulate it) ||
1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,write database type in lower case into the bib file this finally fixes #963 a quick fix has been introduced in 661eea007e555 but that does not cover the lower case writing of the type```@comment{jabref-meta: database_type:bibtex}```finally gets```@comment{jabref-meta: databasetype:bibtex}```- [ ] change in changelogmd described -> this has been introduced in the development versions after the last release thus no entry required- [x] tests created for changes -> tests have been adapted to match this new implementation is the parsing case insensitive? is that tested? || @oscargus the value is parsed case-insensitive ||
1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,"restructrued cleanup formatters dialog  #1038 reworked cleanup formatter dlg:- [x] description updates when and item is selected also on startup the field is now also multilane with auto resizing and word wrap- [x] after deleting a selected item in the list the next one (previous) is selected- [x] changed layout to be more consistent renamings to be more precise and moving in new packageadded tests- [ x] change in changelogmd described- [ x] tests created for changes- [ x] screenshots added (for bigger ui changes)![cleanupentriesdialog](https://cloudgithubusercontentcom/assets/320228/14066003/1fa8ac48-f43f-11e5-9d5c-782a027ad581png) looks good to me :+1: just a few small remarks which should be fixed then this can be merged in || @tobiasdiez  applied your proposed changesinstead of ""run selected field formatters"" it is now  ""run listed field formatters"" || i think this looks good @koppor what do you think? || why is this assigned to @koppor ? what is blocking this? ||  #1038 is my request and id like to have the example displayed for that i need #1159 to get throughmy aim to have the dialog understandable to usersfurther i need to test the thing for which i didnt have time yet :see_no_evil:  || <s>\- [ ] when changing the focus of the list the description does not update is it possible to update the description when the focus of the list changes?</s><s>\- [ ] when the formatters are disabled it is not clear where the description comes from maybe hide the field?</s>![grabbed_20160410-140135](https://cloudgithubusercontentcom/assets/1366654/14410050/ce3f2512-ff24-11e5-96a1-c60a92247b76png)- [ ] when i enable the formatting no formatter is selected could there the first formatter (if available) be enabled?change at the combobox works || @koppor  the focus of the description only updates when you select it in the combobox it would be otherwise too confusing if the combobox displays formatter a and you select formatter b in the list which one should be displayed then?from my point of view the workflow atm is: select the field eg abstract and select the formatter to add to the list therefore the description is referring to the current selected formatterthe other things regarding the enabling/disabling could be done easilyas tomorrow my new semester starts i dont know if i can get this whole thing done in time for v33 release on (friday?)  || @siedlerchr do you still have time? || yep wil look at it this evening or tomorrow morning || the thing is that a user might now what a specific formatter does when opening the dialog the first time as far as i remember we have some default formatters enabled and the user doesnt know what to do<s>therefore this quick suggestion note that i added the formatter string at the sketch at #1038 that was aimed to reduce confusion somehow :innocent: </s>decision from developers: tooltip on existing formatters is enough || decision: we merge as is @siedlerchr could you just resolve the conflicts? :innocent: thank you for working on it || @siedlerchr can you please rebase this so we can merge? || will do this today evening2016-04-13 10:51 gmt+02:00 stefan kolb notifications@githubcom:> @siedlerchr https://githubcom/siedlerchr can you please rebase this> so we can merge?> > â> you are receiving this because you were mentioned> reply to this email directly or view it on github> https://githubcom/jabref/jabref/pull/1050#issuecomment-209310723 || we decided to use the existing translation string instead of introducing new ones a few days before the release (refs #1128)""run_listed_field_formatters"" (wished) -> ""run field formatters"" (existing) || [![lgtm](http://lgtmin/p/4ebbdqgpn)](http://lgtmin/i/4ebbdqgpn) || "
1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,"restructrued cleanup formatters dialog  #1038 reworked cleanup formatter dlg:- [x] description updates when and item is selected also on startup the field is now also multilane with auto resizing and word wrap- [x] after deleting a selected item in the list the next one (previous) is selected- [x] changed layout to be more consistent renamings to be more precise and moving in new packageadded tests- [ x] change in changelogmd described- [ x] tests created for changes- [ x] screenshots added (for bigger ui changes)![cleanupentriesdialog](https://cloudgithubusercontentcom/assets/320228/14066003/1fa8ac48-f43f-11e5-9d5c-782a027ad581png) looks good to me :+1: just a few small remarks which should be fixed then this can be merged in || @tobiasdiez  applied your proposed changesinstead of ""run selected field formatters"" it is now  ""run listed field formatters"" || i think this looks good @koppor what do you think? || why is this assigned to @koppor ? what is blocking this? ||  #1038 is my request and id like to have the example displayed for that i need #1159 to get throughmy aim to have the dialog understandable to usersfurther i need to test the thing for which i didnt have time yet :see_no_evil:  || <s>\- [ ] when changing the focus of the list the description does not update is it possible to update the description when the focus of the list changes?</s><s>\- [ ] when the formatters are disabled it is not clear where the description comes from maybe hide the field?</s>![grabbed_20160410-140135](https://cloudgithubusercontentcom/assets/1366654/14410050/ce3f2512-ff24-11e5-96a1-c60a92247b76png)- [ ] when i enable the formatting no formatter is selected could there the first formatter (if available) be enabled?change at the combobox works || @koppor  the focus of the description only updates when you select it in the combobox it would be otherwise too confusing if the combobox displays formatter a and you select formatter b in the list which one should be displayed then?from my point of view the workflow atm is: select the field eg abstract and select the formatter to add to the list therefore the description is referring to the current selected formatterthe other things regarding the enabling/disabling could be done easilyas tomorrow my new semester starts i dont know if i can get this whole thing done in time for v33 release on (friday?)  || @siedlerchr do you still have time? || yep wil look at it this evening or tomorrow morning || the thing is that a user might now what a specific formatter does when opening the dialog the first time as far as i remember we have some default formatters enabled and the user doesnt know what to do<s>therefore this quick suggestion note that i added the formatter string at the sketch at #1038 that was aimed to reduce confusion somehow :innocent: </s>decision from developers: tooltip on existing formatters is enough || decision: we merge as is @siedlerchr could you just resolve the conflicts? :innocent: thank you for working on it || @siedlerchr can you please rebase this so we can merge? || will do this today evening2016-04-13 10:51 gmt+02:00 stefan kolb notifications@githubcom:> @siedlerchr https://githubcom/siedlerchr can you please rebase this> so we can merge?> > â> you are receiving this because you were mentioned> reply to this email directly or view it on github> https://githubcom/jabref/jabref/pull/1050#issuecomment-209310723 || we decided to use the existing translation string instead of introducing new ones a few days before the release (refs #1128)""run_listed_field_formatters"" (wished) -> ""run field formatters"" (existing) || [![lgtm](http://lgtmin/p/4ebbdqgpn)](http://lgtmin/i/4ebbdqgpn) || "
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,fix #1062 merge entry with doi information now also applies changes to entry type <describe the changes you have made here: what why >- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes) no test because a test requires an online connection? :innocent:other than that: lgtm :+1: || lgtm :+1: ||
1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,open jdk problems with look and feels see #393 #638still not 100% sure if this only applies to openjdk and gtk l&f or also to oracle jdk and gtk l&fmetal l&f seems to work but looks uglyidea is to try metal on openjdk and wait if more bug reports pop up even for oracle- [x] maybe we should close at least one of the two bug reports that seem to be related to openjdk and gtk #393 #638 or maybe even open a new one with possible solutionsalso see https://bugslaunchpadnet/ubuntu/+source/openjdk-8/+bug/1510009**especially see**https://bugsdebianorg/cgi-bin/bugreportcgi?bug813143maybe we can just ignore this and wait for it to be fixed in openjdk and add a hint to our faq and documentation? when merging this in please use squash merge to make it easy to revert this change when this is obsolete for openjdk later on || :+1:  || oh where did 4aa0d5b go? as far as i can see only ac0bae5 (which is very short in comparison to the changes shown above) has been cherry-picked? || #1145 : related? ||
0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,fix #1130 and re-enable gui test @koppor its just a simple if :smile: gui test seems to brake after a few runs they are really quite unstable :( ||
1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,importformatreader test added initial tests for importformatreader now seven different formats are imported without specifying the format and the number of imported entries is checked should avoid bugs like #1134i also removed unused methods and moved a totally unrelated method to a better home lgtm :+1: nice work ||
1,0,0,1,0,1,1,1,1,0,1,1,0,0,1,1,0,1,0,importformatreader test added initial tests for importformatreader now seven different formats are imported without specifying the format and the number of imported entries is checked should avoid bugs like #1134i also removed unused methods and moved a totally unrelated method to a better home lgtm :+1: nice work ||
1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,replace normalizenamesformatter by authorlist and so fix #318 - fixes #318 (and refs #950)- removes comma as delimiter of author names (in normalizenamesformatter)  the problem is that comma separated authors cannot be distingued from one author in bibtex format  for example `name della first` could be three names separated by commas or if interpreted as valid bibtex string it is one author with lastnamename jrpartdella firstnamefirst- add colon as delimiter of author names (in authorlistparser)thanks at all but especially @oscargus for creating many tests made implementing this pr way easier! ## - [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes) looks very nice! :+1:the md thing is a bit challenging and either way we will do it wrong for one of the cases if i were in medicine i would probably prefer not to expand md (especially) || lgtm  ||
1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,fix #1163 by removing the strange functionality which enabled sortingâ¦ we have some very strange logic in jabref which allows to handle years using only the two last numbers so we can detect that 68 means 1968 this causes a lot of issues i do not think that jabref should still support such strange logic and just use the value which is in the year field hence i removed it this also solves the issue of having that yearutil in the model package which duplicated a method in the stringutil class refs #1163 lgtm :+1: || lgtm :+1:  || should we readd yearutil as a cleanup to convert two digit years to four digit years? || if we add it we should make use of the java 8 functionality instead of the own ugly parsing:http://stackoverflowcom/questions/32505490/how-to-change-the-base-date-for-parsing-two-letter-years-with-java-8-datetimeforand this one:http://stackoverflowcom/questions/29490893/parsing-string-to-local-date-doesnt-use-desired-century ||
1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,fix #1091 apply and ensure correct import sort order see #1091 :+1: || lgtm :+1:  ||
1,0,0,1,1,1,1,1,0,0,1,0,1,1,1,1,1,0,1,"fixed #1245 this should fix #1245 so that it is possible to set empty strings is jstyle-files as `key""""` lgtm but can you please add a test for the fix || yes but not right now good point! || could you please add a test for it so we can merge this in :smile: ? we already closed the related issue || done! will merge when i see that the tests pass ||"
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"fixed #1245 this should fix #1245 so that it is possible to set empty strings is jstyle-files as `key""""` lgtm but can you please add a test for the fix || yes but not right now good point! || could you please add a test for it so we can merge this in :smile: ? we already closed the related issue || done! will merge when i see that the tests pass ||"
1,0,0,1,1,1,1,0,0,0,1,0,0,0,1,1,1,0,0,tried to fix #1251 but all tests pass will merge this in if the tests all pass on the ci server- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)  
1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,added option to copy version information in the about dialog added option to copy version information of jabref in the about dialog as described in #871 this will help with filing issues and bug reports as the version of jabref os and java will be copied - [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)![screen shot 2016-04-25 at 22 38 58](https://cloudgithubusercontentcom/assets/15340757/14798171/915a5bbc-0b36-11e6-8bbf-b01cb100b2cdpng) just one minor comment otherwise this looks good please rebase || ## [current coverage](https://codecovio/gh/jabref/jabref/pull/1298?srcpr) is **2749%**> merging [#1298](https://codecovio/gh/jabref/jabref/pull/1298?srcpr) into [master](https://codecovio/gh/jabref/jabref/branch/master?srcpr) will decrease coverage by **-<01%**``` diff@@             master      #1298   diff @@  files           694        696     +2     lines         46259      46419   +160     methods           0          0            messages          0          0            branches       7650       7677    +27   + hits          12755      12760     +5   - misses        32404      32555   +151   - partials       1100       1104     +4   ```1 3 files (not in diff) in `/net/sf/jabref/logic` were deleted [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f676963)2 1 files (not in diff) in `n/java/net/sf/jabref` were deleted [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a6162726566)3 2 files (not in diff) in `bref/logic/formatter` were created [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f6769632f666f726d6174746572)4 2 files (not in diff) in `jabref/logic/cleanup` were created [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f6769632f636c65616e7570)5 1 files (not in diff) in `n/java/net/sf/jabref` were created [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a6162726566)6 4 files (not in diff) in `f/jabref/model/entry` were modified [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6d6f64656c2f656e747279)    - misses `+8`    - hits `-12`7 5 files (not in diff) in `/jabref/logic/groups` were modified [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f6769632f67726f757073)    - misses `+22`    - partials `+3`    - hits `-1`8 3 files (not in diff) in `jabref/logic/cleanup` were modified [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f6769632f636c65616e7570)    - misses `+6`    - hits `+8`9 3 files (not in diff) in `/net/sf/jabref/logic` were modified [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f6c6f676963)    - misses `-2`    - partials `-2`    - hits `-2`10 3 files (not in diff) in `t/sf/jabref/importer` were modified [more](https://codecovio/gh/jabref/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632f6d61696e2f6a6176612f6e65742f73662f6a61627265662f696d706f72746572)     - misses `-5`     - partials `+1`     - hits `-1`> powered by [codecov](https://codecovio?srcpr) last updated by [7230a80941240f](https://codecovio/gh/jabref/jabref/compare/7230a809da3e138e362b56366043c4a18b267ca1941240f674c02e07a8aae88010b1c0f9dd4a3a6f) ||
1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,implemented jstyle file filter and opening in last dir filter filter for jstyle files #1294 extended browseaction to display file filterfixed npe when selecting invalid jstyle (prevented style dialog from opening)- [x ] change in changelogmd described lgtm || @simonharrer would you merge this in? ||
1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,fix #1295 npe when sorting tabs - selected tab might be null when sorting tabs- the logic is really strange in general so this fixes the problem but we need to rework the actions enabling in general imho  
1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,"fix #1347 open urls does not work with query strings this should work with query strings like`http://booksgooglede/books?id0yam63muqckc&lpgpa153&ots0h7eqpbm79&lr&hlde&pgpa153#vonepage&q&ffalse`and normal urlshowever the question is:does this impact the opening of any other file path or anything? we need to be careful as this is a generic open method maybe thats also the problem because it needs to handle any kind of uri@siedlerchr @tobiasdiez please take a look tested it works but requires for urls a http:// to be presenta simple `wwwgooglede` does not work but it also does not work with `explorer ""wwwgooglede""` from the start menu so i assume this is some windows behaviourit would be nice to have a cleanup for this then or maybe we should automatically do this || "
1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,fix #1313: remove ui as the checkbox is no longer backed by a config â¦ â¦optionsee #1313  
1,0,1,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,fix #1313: remove ui as the checkbox is no longer backed by a config â¦ â¦optionsee #1313  
1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,add fields for nbibimporter and add testfile regarding: [#1063](https://githubcom/jabref/jabref/issues/1063)the medlineplain importer doesnt have all fields that the nbib format has so i added the fields to the medlineplain format and added a test+ testfile for the nbib formata list of the elements that should be imported now can be found [here](https://wwwnlmnihgov/bsd/mms/medlineelementshtml)- [x ] tests created for changes you should also record your changes in the readme || lgtm || for somehow the travis-ci is failing because an integration test scrollingthroughentrylist fails || lgtm too just some minor remarks for readability  ||
1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix #1420 auto downloader should respect file pattern and propose correct filename ![image](https://cloudgithubusercontentcom/assets/2141507/15472274/898030a4-20fa-11e6-9a77-8cfac10688d5png) lgtm || lgtm :+1: ||
1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,fix #651: improve parsing of author names containing braces fixes #651- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes) lgtm ||
1,0,0,1,1,1,1,0,0,0,1,0,1,0,1,1,0,0,0,create update checker for the enduser implements #661the updater regularly checks if there is a new stable version of jabref available [via github api](https://apigithubcom/repos/jabref/jabref/releases/latest)if there is a dialog will popup:![newversion](https://cloudgithubusercontentcom/assets/15333371/15649011/86b17b5c-266e-11e6-97c4-e47cda603fa7png)- `download update` points directly to [fosshub](http://wwwfosshubcom/jabrefhtml)- `ignore this update` will ignore this specific version on automatic version checks- `remind me later` will inform the user on the next version check (automatic or manual) of this version- `view changelog` points directly to the changelog specific to this version (eg v33 would point to https://githubcom/jabref/jabref/blob/v33/changelogmd)under `help` there is another button to check for updates![updatetab](https://cloudgithubusercontentcom/assets/15333371/15649013/8e438c2a-266e-11e6-8cc6-07461176e8d1png)under preferences you can see:- the current version- when the version was last checked and a button to check it now- if theres a new version available and a download button- if a version was ignored and a button to unignore it- you can also define how often the automatic check should occur your tests mostly cover the `version` class did you also test (at least manually) if the new version dialog shows up as expected (on the start if newer version is available or not if you already pressed ignore this update)? i guess this is not easy to test with real data as you are already on the latest version when running this branch || good work ði have made a few minor comments but when they are addressed its fine by my side || cant this be done by a) mocking the current version (mocking prefs?!) andb) mocking http? we already did both somewhere else in the code || looks good to me too just some minor remarks and a bigger one for the handling of the dev version in isnewerthanfor testing: unittests are not really possible since its a gui thing (and mocking is not possible for ui tests right?) but you can change the version information in the gradle file build it and then run it (ie pretend that you have an older version) or for the sake of testing you can also modify the buildinfo class to return a hard-coded version || i should have considered all mentioned issuessome methods cant be extracted to another class (eg `jabrefgui#checkfornewversion()` to `version` b/c then they would violate the strict separation of the logic from the gui) || hm i am missing a changelog :( || hm i could swear i wrote oneshould i write it quickly and open another pr or do you push it directly onto the master? || i added it directly ||
1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,fix #1455 npe when retrieving bibtex data from doi see #1455 lgtm ||
1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fix #1434: static groups are now longer displayed as dynamic ones reason for this bug: explictegroup now derives from keywordgroup and thus was sometimes displayed as a keyword group- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes) why does it make sense that the explicit group extends the keyword group? i do not see any advantages from that despite making it more complex is really a lot of code saved? maybe duplicating a few lines of code (in explicit and keyword group) creates a simpler structure overall? || i think it makes sense that the explicit group derives from keyword group a keyword group allows to collect all entries which contain a given word in a specified field the explicit group does exactly the same thing except that only the `groups` field is of interest if you have a look at the [explicitgroup class](https://githubcom/jabref/jabref/blob/e13d7f10b23e3b03c9f6425704ad46a973c90023/src/main/java/net/sf/jabref/logic/groups/explicitgroupjava) you will notice that it contains absolutely no logic about how to determine the matched entries this is completely handled by the keyword group (it might even make sense to expand the class hierarchy chain and let `keywordgroup` derive from `searchgroup` since in the end it only a very specific search query is used)  || thanks for the detailed explanation - makes sense :)instead of relying on the class i would recommend to introduce an enum that differentiates the group types and which is returned through a method gettype which each class overwrites if necessary  ||
1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,"fixed #1264 i finally got around to understand the reasons for #1264 (and parts of #1464) it turned out that commands starting with c was handled in a special way and that `{\v{s}}` was for unknown reasons used as ""line tabulation set""as a result not only does jabref now render `\v{s}` and `\chi` correctly it also renders combining accents see screen shot<img width""291"" alt""capture4"" src""https://cloudgithubusercontentcom/assets/8114497/16817520/70ec1168-4943-11e6-86e0-2f9d55475e35png"">- [x] change in changelogmd described- [x] screenshots added (for bigger ui changes) @oscargus do the tests from #1464 pass in your branch? || @stefan-kolb as it was only `\chi` that was failing i would expect that yes the other two did already work (right?) || @oscargus it was only the \chi yes because \c is handled as special character if my test from the pr pass we can merge my test pr into your branch and then merge your fix :smile:  || in general i would like tests for this pr || my pr #1464  includes tests for the bug || @stefan-kolb there is a `\chi` first at the second row of the screen shot turned out all commands starting with c didnt work as c was hardcoded into globals as an accent so `\chi` was interpreted similar to if it had said `{\c{h}}i` and since `\c{h}` wasnt listed it was simply removed now `\c{h}` works as well giving hÌ§ @tobiasdiez: i was considering that however the main feature is adding support for accented unicode characters and they are a hassle to type properly nor will they make much sense except lots of comments for example spot the difference between Ã¤ and Ã¤ || @oscargus can you just cherry-pick my commit from the pr and you have your first test :smile: and then just close my pr afterwards :+1:  || i added some tests now@stefan-kolb im afraid that is a bit out of my comfort/knowledge zone my solution would be to almost simultaneously merge both prs :-)  || @oscargus then just copy my tests and close the pr :smile:  || @stefan-kolb that should be within grasp :-) || lgtm thanks for the quick solution! :) || lgtm :+1:  || lgtm :+1: just some minor remarks about naming variables and tests ||"
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,added layout dateformatter see #1249 added a configurable layout formatter for dates fixes #1249- [x] change in changelogmd described- [x] tests created for changes lgtm just merge after you removed the generated comment ||
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,added layout dateformatter see #1249 added a configurable layout formatter for dates fixes #1249- [x] change in changelogmd described- [x] tests created for changes lgtm just merge after you removed the generated comment ||
1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,resolves #1613 use jabref default icon for uninstaller for now using standard icon for now should be replaced by specific uninstaller icon after redesign #482 :+1: || lgtm can you add a changelog please? then just merge it ||
1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,keep @comment text in a bib file implements #1632 user comments marked by `@comment` are now kept in the bib file regardless of whether they use brackets or not- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref looks good!is it possible to comment multiple entries?```@comment{@article{}@book{}}```guess it is || great!and just to be sure i added another unit test for a `@comment` that contains multiple entries ||
1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"fixed name column rendering #1499 and #1531 fixed #1499 and #1531 better to format the author names before converting latex to unicode bah!<img width""368"" alt""capture17"" src""https://cloudgithubusercontentcom/assets/8114497/17715209/7202747c-6403-11e6-877b-723da18781fepng"">- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) good work simple change for fixing two issues at the same time lgtm :+1:  || lgtm :+1: please slightly rewrite the tests and then you can merge it ||"
1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,"fixed name column rendering #1499 and #1531 fixed #1499 and #1531 better to format the author names before converting latex to unicode bah!<img width""368"" alt""capture17"" src""https://cloudgithubusercontentcom/assets/8114497/17715209/7202747c-6403-11e6-877b-723da18781fepng"">- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) good work simple change for fixing two issues at the same time lgtm :+1:  || lgtm :+1: please slightly rewrite the tests and then you can merge it ||"
1,0,0,1,1,1,1,0,0,0,1,0,1,1,1,1,0,0,1,fix #1771 show all supported import types as default file filter little bit tricky to get this done would have preferred a cleaner option but i still need access to some jfilechooser methods @siedlerchr this is one for you to review :smile:  || generally a good solution but i would move the logic to the importfilefilter makes it a bit more clear ||
1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,1,"fix delete entry keybindings bug when using a different localization then english setting the keybindings does not work correctly (see here #1235 ) i figured out that the problem is that the `keyevent` returns localized key texts so you can not use this to set the `keybindings`(the jabref `keybindings` use english key texts) at the moment i only see two possibilities that do not end up in comparing tons of strings to manually get the english localization ~~first would be to change the locale to english so that the `keyevent` returns english key texts but i dont know what i might break with that and if the rest of the localization will still work~~ ~~second solution would be to change the `keybindings` so that they use `keycodes` instead of strings this would imho improve the `keybindings` system but it would mean a lot of changes in all the `keybinding` related code~~see the comment below for my approach https://githubcom/jabref/jabref/pull/1815#issuecomment-242346564- [x] manually tested changed features in running jabref i now found a way to fix it i am building a string with the english modifier key text using the triggered keyevents  `is-modifierkey-down` methods || please resolve conflicts and minor comments then its good to me ð || @boceckts can you test it on win and mac for me please? the meta key does not work on my linux system since there are os functions on it || @braunch windows uses the windows key for its own shortcuts same as with some linux distributions on mac it now does work to make shortcuts directly with the command(meta) keybut i just realized that if you create a shortcut with the control key eg ""ctrl + s"" it will automatically be replaced by ""command(meta) + s""so i guess the meta key doesnt have to be listened tosry for that || is this intended? why should the grabbed keys differ from the keys actually used by the user? i changed the behavior so that you can set the meta + key shortcut with the meta || any opinion on my solution with the meta key from the @jabref/developers ? || please merge `upstream/mater` and fix minor comments then it should be good to go || i addressed the small comments and resolved the conflicts || you commited with both your st university address and your normal development address please double check your git configplease merge upstream/master again can you make one commit as described at https://githubcom/jabref/jabref/wiki/tools#rebase-everything-as-one-commit-on-master? then i can resolve the conflicts by myself || i resolved the conflicts and squashed my commits should be good to go || please do not squash this makes reviewing very hard as we cannot see what has been adressed i added a `bump` on all my unaswered comments please fix/answeryou can see all comments at https://githubcom/jabref/jabref/pull/1815/files || i addressed your comments and merged the upstream/master i squashed following your comment https://githubcom/jabref/jabref/pull/1815#issuecomment-246499706 did i get that wrong? || "
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"fixed #1663 better multi-monitor support - [x] location of windows is keep also for multi-monitor setups- [x] location of window is only reverted when it is not displaybale (no multi-monitor anymore/wrong preferences)- [x] removed duplicate maximized state logic- [x] dialogs are centered as overlay over the main window not always on the main screen@jabref/developers please try on your multi-monitor setup @ work and or a @ home - the location of the windows should stay the same or should be adapted to a visible alternate location - also the maximized state should be remembered correctly on all monitors- do you see any dialogs that are not correctly centered in multi monitor scenario (jabref on 2nd screen dialog on main screen) i run a single x screen two monitor setup and i cannot tell the difference compared to before: if any dialog cover both monitors it is moved and resized to stay inside one of the monitors || is it really inside the boundaries of the screen rectangle? only then it can work sometimes the resolutions are different between monitors (see screenshot)![image](https://cloudgithubusercontentcom/assets/2141507/18007075/d0085914-6ba2-11e6-89ce-d0146a10e824png) || when closing the merge entries window:![screenshot-4](https://cloudgithubusercontentcom/assets/8114497/18007316/d38fae92-6ba3-11e6-8436-f9687797d429png)when opening it:![screenshot-5](https://cloudgithubusercontentcom/assets/8114497/18007331/e2acadd0-6ba3-11e6-96fa-2e13acbe0101png)(it may be that the size is kept better now that i didnt think of)same with the main window (which is adapted to the left monitor on both images) || with that said im sure that this pr solves some problems and im not sure that the behaviour i report really is a problem as such || no your example should work for me and my horizontal/horizontal setup it works it looks like for your horizontal/vertical it does not we have to test more settings to smooth this functionality || @oscargus i tried your use case on a similar setup on windows and it worked maybe a linux problem?![image](https://cloudgithubusercontentcom/assets/2141507/18008684/584e9b98-6ba9-11e6-8a96-9d06e0d3b6b0png) || could indeed be especially with the option to have more than one x-screen (which i dont but some people do) are you interested in any numbers from my setup (obtained from the code)? || sure maybe you can also take a look i simplified the code very much so it should be easy to debug if java/the os supports our case or if we cannot do anything about the problemits basically just ``` javaif(!isdisplayable(storedposition))```checking for the current location inside a virtual rectangle of all available screens (union) || lgtm || @stefan-kolb i will try to see why things go wrong on my office setup ""soon"" || "
1,0,0,1,1,1,1,0,0,0,1,1,1,0,1,1,0,0,0,"fix invalid bibtexkey freeze fixes #1882 reference: #1863- [x] change in changelogmd described- [x] manually tested changed features in running jabref please add label ""ready-for-review"" thanks || lgtm :+1:  i tested your changes and they are working good work!please resolve the merge conflicts and then we can merge it itto resolve the merge conflicts i recommend installing and setting up a merge tool for 3way merge (eg meld or kdiff3 or your favorite tool)then you do git checkout mastergit fetch upstreamgit merge upstream/mastergit push`git merge upstream/<yourbranch>`open git gui to see and resolve merge conflicts be careful with the changelog || well done :+1:  merged || "
1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,try around with xmlunit <!-- describe the changes you have made here: what why  -->see #1943 for details - [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) please fix the two comments and then directly merge it ||
1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,towards hierarchical keywords <!-- describe the changes you have made here: what why  -->this pr is the first step towards supporting hierarchical keywords #628 - [x] refactor the keyword-related code to use new classes `keywordlist` and `keyword` - [x] unified keyword delimiter to be a single character and in this way fixed the issues mentioned in #705 and #1877- [ ] move keyword delimiter from preferences to metadata (database properties) -> new pr- [ ] add hierarchical delimiter and change parsing logic in `keywordlist` accordingly -> new pr- [ ] change ui to support hierarchical keywords -> new prnote: i also moved the stringutil class to model (in some sense it is jabrefs own string class) and removed entryutil (only had methods related to strings (-> stringutil) or keywords (-> keywordlist) )- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,0,1,1,fix wrong path in error message fixes #1949 an error message directs to the wrong preference tab- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) please resolve conflicts then its ready to go || conflicts resolved || lgtm :+1:  ill merge it in ||
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,fixes #1958: verbatim url field is no longer checked for html encoded chars - [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref please adjust the javadoc comment and then its good to merge :+1:  ||
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,implemented integrity monthchecker monthchecker added #2012- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref pattern thing fixed || thanks for your contribution! looks good now :+1:  i will merge it in now  ||
1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,0,1,use parallel stream while searching with this the search should be much faster on platforms where multiple cores are available (#1993) could you please create one benchmark which uses the normal stream and one for the parallel one please also post the benchmark results so that we can see the improvement || the differences between parallel and normal stream will be only visible inlarge database there the parallel stream is more advanced because the jvmoptimizes it || ### stream```benchmark                             mode  cnt        score        error  unitsbenchmarkshtmltolatexconversion     thrpt   20     3430821 Â±     12570  ops/sbenchmarksinferbibdatabasemode      thrpt   20    12196397 Â±    250891  ops/sbenchmarkskeywordgroupcontains      thrpt   20     7367579 Â±    702650  ops/sbenchmarkskeywordgroupcontainsword  thrpt   20  8080932143 Â± 190154353  ops/sbenchmarkslatextohtmlconversion     thrpt   20    62292491 Â±   1375804  ops/sbenchmarkslatextounicodeconversion  thrpt   20    59849947 Â±    298067  ops/sbenchmarksparse                     thrpt   20       20002 Â±      0809  ops/sbenchmarkssearch                    thrpt   20       19986 Â±      0729  ops/sbenchmarkswrite                     thrpt   20       39440 Â±      0232  ops/s```### parallel stream```benchmark                             mode  cnt        score       error  unitsbenchmarkshtmltolatexconversion     thrpt   20     3478589 Â±    58752  ops/sbenchmarksinferbibdatabasemode      thrpt   20    12098187 Â±   235957  ops/sbenchmarkskeywordgroupcontains      thrpt   20     6694197 Â±    84251  ops/sbenchmarkskeywordgroupcontainsword  thrpt   20  7858681820 Â± 11459928  ops/sbenchmarkslatextohtmlconversion     thrpt   20    60325789 Â±  3041157  ops/sbenchmarkslatextounicodeconversion  thrpt   20    59671261 Â±   535001  ops/sbenchmarksparse                     thrpt   20       20349 Â±     0154  ops/sbenchmarkssearch                    thrpt   20       63016 Â±     0843  ops/sbenchmarkswrite``` || ok that are good numbers perfect could you please keep the original `@benchmark` with normal `stream` and add a new one for the parallel stream (just copy 1:1 the method) then this can be merged || created a separate benchmark || thanks :+1:  ||
1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,undo #2002 undo #2002 see #2064  
1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,0,"fix changing the font size not working when importing preferences i initialized the fontselectordialog with the variable that keeps changes made in the dialog instead of the current globals this seems to fix both issues named here #1808 - [x] change in changelogmd described- [x] manually tested changed features in running jabref i made the preferencedialog store the settings when preferences are exported so that the exported preferences are the same as the ones shown in the dialog i thought about doing the same when the ""show preferences"" button is pressed but i am not convinced that the user would expect that the changes made in the dialog are stored when he wants to show them maybe he just wants to compare stuff and then accidentally changes the settings  || the preference dialog now gets disposed when preferences has been imported this prevents that the user overrides the imported preferences || can this be merged? || "
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"other fields fix and changes these are the claimed improvements:- removed optional fields from `other fields` (bibtex)- removed deprecated fields from `other fields` (biblatex)see: #2064- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) im sorry but i am not sure if i get/understand your changes because what does ""otherfields"" refer to?i have the following tabs in bibtex:`required optional general abstract review source`and in biblatex:`required optional1 optional2 deprecated general abstract review source`deprecated fields exist for bibtex compatibility when you import an entry you often get in bibtex so these fields are somehow still required  || tab other fields shows the remaining fields:![otherfields](https://cloudgithubusercontentcom/assets/15456836/18884619/78865560-84e8-11e6-979b-fbd78f368062png) || i think i found the bug in #2064 it was not a regression a new entry editor was not instantiated on changing an entry of the same type so some ""other fields"" were not displayed || please set label ""ready-for-review"" thanks || the idea was originally to have a better performance so the entry editor is retained for the same type this is not a good idea the entry editor needs to be build completetely new in all cases because the new entry can have some additional (layout changing) other fields || so the whole `entryeditors` list can be deleted right? (because its sole purpose was to cache the entry editor for each type) moreover there is a similar code in the showentry method which differentiates between cached vs not-yet-cached || ```//to indicate which entry is currently shownprivate final map<string entryeditor> entryeditors  new hashmap<>()```i think `entryeditors` stores all the old entry editors and the new entry editor so im not sure that the sole purpose is to store an entry editor of each type the similar code in `showentry` should also be adjusted but there is currently no bug report for it || ive checked the code @tobiasdiez you are right the whole entry editor caching (for each type) can be removed i have no performance issues with my databases || i noticed a very small latency if you quickly switch from editing one entry to another (for example with the arrow keys) but as i dont think this is a big deal ill merge this pr now || yes fast scrolling of the entries causes a small latency and moderate cpu usage but i think this is no problem i have an idea for caching the entry editor: entry editor a -> b -> a a can be cached but this takes real effect only on heavy usage of the database || or cache based on the ""properties"" of the entry one could generate aunique id for each entry property -- property: entry type other fields(future: hadpdfattached) @braunch || the problem is generating the textfields so especially in biblatex mode there are around 80 fields which are generated every time i would not cache the whole editor but just generate the textboxes when the tab is focused  || the other field tab is optional (no field -> no tab) i would prefer to create the other fields tab always (no field -> empty tab) the advantage is that every entry editor has always the same layout of the tabs this preserves the active (other fields) tab on changing the entry || "
1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,[wip] rewrite mods exporter and add test follow up of #1989 and regarding #2078rewrites the mods exporter with a jaxb parser in comparison to the last pr i do not longer rely on the namespaceprefixmapper i added an annotation in the package-infojava which also does the namespace prefix mapping only problem is that this annotation cannot be automatically generated by a gradle or ant script thats why added the package-infojava to src/main/java/net//mods- [x] tests created for changes- [x] manually tested changed features in running jabref okay now all seems to be executed fine on travis and codecov is increased || yeah codecov was increased but the class `modsexportformattestfiles` was still not run so this issue still remains || codecov itself does not run any tests it relies on the results from travis:http://docscodecovio/docs/ci-service-relationshipmabye its a travis configuration thing no idea it would be nice if you could search for information about that  || yeah i will try to find a solution for this ||
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,make all files selectable in file chooser dialogs make all files selectable in filechooser fixed #2021- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? does this make the __ file filter the default file filter (selected)? (https://docsoraclecom/javase/7/docs/api/javax/swing/jfilechooserhtml#setacceptallfilefilterused(boolean)) || no the default one is still the specific one (eg xml) || great thanks christoph! ||
1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,0,crash after saving bibtex source with parsing error fixes #2104- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? i just tested your pr following the instructions stated in #2104 jabref does not crash anymore however no error message appears and the additional faulty comma is just not stored silently when i look into the error console i see the errorimho this is not quite the behavior we want it is fine to avoid storing the broken bibtex but there should be an error message (that does not crash jabref) otherwise a user might expect that the save worked and would be surprised to see that it did not this is critical since all changes made to the entry are lost not just the comma therefore we need the error message so that the user has a change to fix the mistakes || i get an error message:![parsingerror](https://cloudgithubusercontentcom/assets/15456836/19037291/c6320606-8975-11e6-86bf-fc95adab4f1cpng)i dont know why it does not work for you`edit` keeps the bibtex source (with parsing error) and gives the opportunity to correct the error`revert to original source` does not store the changes || you are correct my bad! i was hitting ctrl+s and not pressing the button in the toolbar your pr can be merged and apologies for not getting itdidnt we use to have a keyboard shortcut for saving? || ohh is this another bug? ctrl+s should also trigger the error message || @grimes2 for me it did not can you please double check? if you can reproduce it would you be willing to submit a second pull request?this could be a keybinding issue though not directly related to the saving logic || file > save database worksctrl+s failsstrange!ill open a new pr || thanks a lot! ||
1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,ctrl-s parsing error message fixes #2109 ctrl-s doesnt trigger parsing error messageproblem: conflict of local shortcut (of the entry editor) with the global shortcutsolution: local shortcut removed (the action assigned to local and global shortcut is essentially the same (save database))- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? i have tested it and can confirm that it works removing the local shortcut is fine this was certainly the relic of some migration since it is not too much in size there is no need for a second review and ill merge right away@grimes2 good job as always :-) ||
1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,fix failing ads test added missing fields fixes #2168 `#10` are really strange field values but this is a discussion for a post cleanup for now this hotfix is good ||
1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,fix memory leak in entry editor this is to fix #2166list of changes -- updated microba to latest version- unregister entryeditor as a listener to entry - implement searchqueryhighlightobservable using entrybus- make entryeditor unregister all fields that are listening on the global search bar lgtm ||
1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,0,0,1,0,fixes #2222 urldownload now resolves redirects by default   could you please also add a test for the arxiv entry which failed to download before the fix || a test for the entry would be no different it must be done for the urldownloader but im not entirely sure how right now ||
1,0,0,1,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,fix for #2218: reenable ads fetcher (see #2218)fetcher is now working again- ~~[ ] change in changelogmd described~~ affected search based fetcher still unreleased- [x] tests ~~created for changes~~ pass again- ~~[ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- ~~[ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- ~~[ ] if you changed the localization: did you run `gradle localizationupdate`?~~  
1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,0,0,"change log level to debug ""fixes"" a side aspects mentioned in #2249currently a search will throw errors if one types ""author"" as the search term is still incomplete - those exceptions should not be visible to the normal user  "
1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,fix local metadata synchronization (fixes: #2219) issue: https://githubcom/jabref/jabref/issues/2219this issue is fixed by overloading and using the `parse()` method in `metadataparser`the reason was a reset of the local field `metadata` in `dbmssynchronizer` this caused other instances containing this field not to be up-to-date- [x] change in changelogmd described- [x] manually tested changed features in running jabref i merged it because it is a hotfix @obraliar do you think it is possible to add a testcase for that? || i am testing postgresql using elephantsqlcom i am having autosave activated i restart jabref i get following exception:```20:56:15998 [awt-eventqueue-0] info  netsfjabreflogicimporteropendatabase - opening: c:\users\koppor\btsync\projects\2016-11 - dagstuhl-paper\dagstuhlbibnov 20 2016 8:56:22 pm comgooglecommoneventbuseventbus$logginghandler handleexceptionsevere: exception thrown by subscriber method listen(netsfjabrefmodelmetadataeventmetadatachangedevent) on subscriber netsfjabrefshareddbmssynchronizer@6695f8f3 when dispatching event: netsfjabrefmodelmetadataeventmetadatachangedevent@6f7e5617javalangnullpointerexception        at netsfjabrefsharedpostgresqlprocessornotifyclients(postgresqlprocessorjava:126)        at netsfjabrefshareddbmssynchronizerlisten(dbmssynchronizerjava:127)        at sunreflectnativemethodaccessorimplinvoke0(native method)at netsfjabrefmodelmetadatametadatapostchange(metadatajava:202)        at netsfjabrefmodelmetadatametadatasetmode(metadatajava:143)        at netsfjabreflogicimporterutilmetadataparserparse(metadataparserjava:69)        at netsfjabrefshareddbmssynchronizersynchronizelocalmetadata(dbmssynchronizerjava:264)        at netsfjabrefshareddbmssynchronizerinitializedatabases(dbmssynchronizerjava:157)        at netsfjabrefshareddbmssynchronizeropenshareddatabase(dbmssynchronizerjava:353)        at netsfjabrefshareddbmssynchronizeropenshareddatabase(dbmssynchronizerjava:358)        at netsfjabrefguisharedshareddatabaseuimanageropenshareddatabasefromparserresult(shareddatabaseuimanagerjava:140)        at netsfjabrefjabrefguiopenwindow(jabrefguijava:117)        at netsfjabrefjabrefgui<init>(jabrefguijava:63)        at netsfjabrefjabrefmainlambda$start$1(jabrefmainjava:136)``` || @koppor oh yes this now also fixed thanks for the objection ||
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"readd drop down content selectors first attempt at readding the code for #2221 refs #2068 code does not compile yet some adjustments need to be made regarding metadata stuff etc<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? @tobiasdiez  there are some things with the metadata to make it compile again could you please have a look? thanks! || how to handle the metadata is indeed a problem i remember that i removed the content selectors mainly because they were the last not-so-easy-to-convert-to-the-new-metadata item the next few days i will not find the time to assist you here sorry || still some language related errors  || the localization keys existed before the feature was removed i wonder why the revert did not restore them in the language files? || i did a manual revert because there were some more changes which would have led to conflicts otherwisewas somehow decided || as this was a rather old feature i suppose there were translations for most languages can you readd the translated values as well? or should i go  digging in the history? ð || so i re-implemented parsing and serialization of content selectors and added tests for it it is probably not the most beautiful fashion but i need to (want to) link to the old code and not have to re-write the gui speaking of the gui: the content selectors seem to be working fine if the metadata is in the bib file the gui in the entryeditor is not actually beautiful but i guess it has never been (does anybody feel like polishing the ui?) however i do not see options â> manage content selectors maybe that has not been ported from  #2068 yet? maybe someone who is more familiar with the menu than me can have a look? :)finally the test currently say:```netsfjabreflogichelphelpfiletest > refertovalidpage failed```although there seems to be a help page here: http://helpjabreforg/en/contentselector someone certainly has a pointer for that? || regarding the help file there is an enum called helpfiles or similar  forthe name of the help pagei can take a look at the dialog thing in the menuam 30112016 5:10 nachm schrieb ""jÃ¶rg lenhard"" <notifications@githubcom>:>> so i re-implemented parsing and serialization of content selectors andadded tests for it it is probably not the most beautiful fashion but ineed to (want to) link to the old code and not have to re-write the gui>> speaking of the gui: the content selectors seem to be working fine if themetadata is in the bib file the gui in the entryeditor is not actuallybeautiful but i guess it has never been (does anybody feel like polishingthe ui?) however i do not see options â> manage content selectors maybethat has not been ported from #2068 yet? maybe someone who is more familiarwith the menu than me can have a look? :)>> finally the test currently say:>> netsfjabreflogichelphelpfiletest > refertovalidpage failed>> although there seems to be a help page here:http://helpjabreforg/en/contentselector someone certainly has a pointerfor that?>> â> you are receiving this because you authored the thread> reply to this email directly view it on github or mute the thread || i pushed a commit which should take care of the menu item (hopefully i directly edited it on github) || @tobiasdiez indeed it does! nice :) that means the feature is back!regarding the help files there is `content_selector(""contentselector"")` in `netsfjabreflogichelphelpfile` so the test really should not fail should it? || ok seems we are back on track only the google scholar test is failing now which i hope is just a random connection problem on the side of travis the same might have applied for the help file testso now we can do some more code review and at a certain point have the users from #2221 try out the feature to make sure that it works || @tobiasdiez i addressed most of your comments i agree that ""content selectors"" is probably not the most appropriate name for the stuff this feature does but it is the name under which it has existed for a long time and is known at least by some people i would say that consistency in naming tops appropriateness of the namefurthermore i removed the entry editors update code as you asked for the updating of the content selectors did not even work with this code i tried to replace it with something else and failed so for now you have to restart jabref to get a change in the content selectors to work maybe someone from @jabref/developers can provide a hint on how the refresh of the entry editor should work?finally i will leave the problems in the localization for @siedlerchr to fix :) || closing and reopening of the entry editor does not work? (potentially with selecting another entry?) || @matthiasgeiger unfortunately not the changed data makes it into the metadata but the gui does not notice it is only up-to-date when the metadata is re-read from disk and the entryeditor is re-built closing and reopening the bib file does the trick or restarting jabref || so we would like to get this into v38 which hopefully can be released in december what is missing: - [ ] correct the language files - [ ] have selector keywords updated without reloading of the bib file - [ ] have the users play around with it to see if it really worksi was hoping that @siedlerchr could do the first two points and hopefully soon :-) @siedlerchr what is your opinion on that? || yeah i will try to work on it at least i tried to fix the language files yesterday i will continue working on it the weekend || "
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,follow up for #1323 batch fulltext downloader - 	rename menu item to plural for finding full texts- 	disable menu item when there are no documents selected for fulltext retrieval- 	fix layout of file dialog and increase size of file path significantlyold:![image](https://cloudgithubusercontentcom/assets/2141507/20975849/030bb4ce-bca1-11e6-9b2f-e0f30601d72dpng)new:![image](https://cloudgithubusercontentcom/assets/2141507/20975639/549853a2-bca0-11e6-8107-2742d7381258png)  
1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,"fix a few group related issues this pr fixes #2334 #1873 and #1681since i didnt understood the groups code i also refactored it main changes:- split `keywordgroup` class into `wordkeywordgroup` which splits field content into words and then matches them and `regexkeywordgroup` that uses a regular expression for this job- extract serialization of groups to `groupserializer` (previously every group decided about its own serialization via the `tostring` method)- move a few things from model and logic to gui since they mostly contained ui-related stuff (eg groupdesrciptions)---- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? the groups code is a mess :-( thanks for being willing to put up with this!unfortunately the amount of changes is too large for meaningful review and my knowledge on groups and the related code is too limited i would trust your ability and the amount of tests that you added here together with the working build cosmetic changes can be made on a later occasion i am sure this is not the last visit to the groups codesince this is on your private branch we have no build on buildsjabreforg if we had we could ask the people that reported the issues to try out this version any chance of getting a build for this? || decision: merge so that many people will be able to test it we can include code review comments later in a separate pri am very aware of the risk refs #1495 || - [ ] dragging an entry to a group does not refresh the main table (keyword-based group)- [ ] context menu shows ""remove group keep subgroups"" even though there are no subgroups- [ ] deletion of a static group does not remove the assignment of entries to it- [ ] clicking on a group and pressing <kbd>del</kbd> triggers the dialog ""do you want to remove the selcted entries"" if i press <kbd>cursor down</kbd> the next group is selected thus <kbd>del</kbd> should really apply to the current groupnothing important or me think this was also happening using the old groups code || "
0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,"rename ""xmp data"" to ""xmp-metadata"" i worked with the ""import inspection dialog"" which offers to offer entry-creation based on xmp meta data (refs #938) the dialog renders as follows:![grabbed_20161216-072757](https://cloudgithubusercontentcom/assets/1366654/21253754/34de5c92-c361-11e6-80dd-d987519a9405png)my issue is that is uses both ""xmp data"" and ""xmp-metadata"" for the same thing i wanted to rename ""xmp-metadata"" to ""xmp data"" but ""xmp-metadata"" appears in jabref much more often thus i decided to keep ""xmp-metadata"" and just adapt two other strings to that writingnew rendering:![grabbed_20161216-072851](https://cloudgithubusercontentcom/assets/1366654/21253772/5382e5f0-c361-11e6-95d1-2ac102723e59png)discussion: maybe we should use ""xmp metadata"" (without dash) or even ""xmp meta data""  "
1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,"datepicker fix fix for #2403 - and as i was just touching this stuff again: i replaced our custom `easydateformat` class with a standard `datetimeformatter`- [ ] change in changelogmd described- [ ] tests created for changes- ~~[ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- ~~[ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- ~~[ ] if you changed the localization: did you run `gradle localizationupdate`?~~ documentation at http://helpjabreforg/en/timestampdoes not work with master and v38 on my side v37 does not compile any more (""could not find deundercouch:citeproc-java:100-snapshot"") does also not work with v36 the solution is to reset the preferencessolution works for me @matthiasgeiger thank you for the fix || does not work for me even after resetting the preferences (jabref-381-dev--snapshot--2016-12-20--master--b655bfdjar) || @mlep: after resetting the preferences the timestamp field appears for me and the datepicker works as desired the dev version you mention in your comment is not the most recent one maybe it did not yet include the fix can you try again with jabref-381-dev--snapshot--2016-12-20--master--62d55e1jar || indeed the calendar is displayed nowhowever the `clear` function does not work as expected: the timestamp field is not cleared if i click on `today` then `clear` works || @mlep indeed! clear only works if a proper date is already in the field if you insert something else such as `abc` then clear does not work@matthiasgeiger can you please address this? since this pr is already merged i guess we need a follow-up pr || note: for me it does not clear even if the field content looks good like: ` timestamp      {2016-10-26}` || "
1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,switch to latex2unicode motivation is discussed in #2465 fixes many conversion problems such as those discussed in #2063 and #207- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref please remove the old latex2unicode formatter code otherwise good to go || since the build is passing and there are two approved reviews i will merge this into master now and close the related issues ||
1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,switch to latex2unicode motivation is discussed in #2465 fixes many conversion problems such as those discussed in #2063 and #207- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref please remove the old latex2unicode formatter code otherwise good to go || since the build is passing and there are two approved reviews i will merge this into master now and close the related issues ||
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,keyword - special field synchronization fixes #2580 synch should now work appropriatelyfew questions here @koppor and all others:- [x] if keyword sync is enabled there is the possibility that we have multiple `rank1 rank4` keywordsonly the first one is synched with the special field was this always like this? seems like a bug to me - [x] if we change the preferences from write special fields to file to keyword synchronization the data gets lost did i introduce this or was this a bug? @lenhard talked to @koppor this was always the case writable fields and keyword fields were never synchronized we have to defer this until a reimplementationsee #574 ||
1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,implement #1904: filter groups <!-- describe the changes you have made here: what why  -->add textbox add the bottom of the groups panel which allows for filtering the groups by name implements #1904![snipimage 002](https://cloudgithubusercontentcom/assets/5037600/23312248/551f4540-fab9-11e6-9a05-518080dfeb3ejpg)- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? great idea however i would place the search bar on top of the screen and not at the bottom or alternatively is there a way to reuse the existing search bar and add an option to search for groups? || maybe its indeed a good idea to move the search bar and button to the topas this is an easy change i would postpone it for the moment and see what kind of further user controls are necessary in the group pane  || on the bottom looks good to me || i think having the search box at the bottom is fine for now since we can also change it easilythe feature works nicely with normal-size bib files but i just checked it with the large bib file and there the feature scales very badly if i enter something into the search field it freezes and nothing happens for one or two minutes until the rearrangement of the groups appears (as desired) do you see a chance to speed this up? maybe some parallelism using `parallel()` in streams could help? || looks like other people see a group-related performance degradation: https://githubcom/jabref/jabref/issues/2561#issuecomment-283417338 so this is most likely not specific to this pr and you could go for a mergehowever we really need to follow up with a performance improvement pr || since as indicated in https://githubcom/jabref/jabref/issues/2561#issuecomment-283494292 the degraded performance for large bibs is expected at the moment and will be tackled separately i think this is ready for merge (which i am doing right away) || one suggestion as i just stumbled over it: i think the searching should be case insensitive (although this might further slow down the searching -)) || should the performance issue with the groups filtering (which is still massive) also be added to the 40 milestone? || @aegit i am not exactly sure which issue you are referring to but yes: we should try to improve performance before a final release so if there is an open issue that should be in 40 please point me to it! || @lenhard the performance issue im referring to happens with large databases (>10k entries ~1k static groups) in conjunction with the groups filtering when you try to find a group using the newly implemented groups search/filter you have to wait for several minutes for the search to complete during that time jabref behaves as if it had crashed you mentioned this problem yourself in this comment:https://githubcom/jabref/jabref/pull/2588#issuecomment-283042778should i open a new ticket for this? || @aegit yes please open a new ticket for this so that we do not forget it || done )https://githubcom/jabref/jabref/issues/2852 ||
1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,"fix title-related key patterns in bibtexkeypatternutil <!-- describe the changes you have made here: what why  -->related to [#2604](https://githubcom/jabref/jabref/issues/2604) and [#2589](https://githubcom/jabref/jabref/issues/2589)in the class bibtexkeypatternutil ive added cases for [title] and [camel] to try and make them conform to the [documentation](http://helpjabreforg/en/bibtexkeypatterns)@siedlerchr was also working on this issue [here](https://githubcom/jabref/jabref/pull/2597) i found out that  `caseformatlower_camelto(caseformatupper_camel entrygetfield(fieldnametitle)orelse("""")replaceall(""\\s+"" """"))`didnt work because to be able to transform the title into upper_camel this way the title has to be in  lower_camel case initially which is often not the caseive added some test cases and changed a few others to conform to the documentation i still need to take a look at the failing tests- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? codewise looks good! ð  thank you very much for your contribution would you please check the failing tets? (just click details on the red-marked travis build and you are able to see the log) from what i saw there is jut another unit test which tests key generation which has to be adapted!  || thanks! ill try to fix it tomorrow ð  || @siedlerchr ive taken a look at the failing tests and after making a small change to the code and to some tests its now workingsome tests failed because most of the formatter classes only work if the input is a non concatenated string || from my point of view it looks good  however another dev should take a look too if you could just add a changelog entry it would be nice otherwise we can create it on merge  || i wonder whether it would be possible to add test cases to makelabelwithdatabasetestjava with all patterns listed at http://helpjabreforg/en/bibtexkeypatternsi saw that you also added `[camel]` and added a test for that in bibtexkeypatternutiltestjava to test the ""user experience"" i would like to ask to add some tests for that in makelabelwithdatabaseteststrangely `camel""equals(val)` is not test covered even though it should?!![grabbed_20170305-212351](https://cloudgithubusercontentcom/assets/1366654/23591026/44dc023a-01ea-11e7-8f43-d82290a09587png)https://codecovio/gh/jabref/jabref/src/ee7445652023f95e7c623c75c93058b9f2f4adf9/src/main/java/org/jabref/logic/bibtexkeypattern/bibtexkeypatternutiljavaif it is too much effort we can just go ahead and merge! || i have added a test for the [camel] case to makelabelwithdatabasetestjavahope the `camel""equals(val)` is covered now :)are there any additional test cases i should add?edit: about checking all the patterns listed at http://helpjabreforg/en/bibtexkeypatterns i can work on that but im pretty busy the next couple of daysso id rather have this merged now and work on adding the additional test cases later || yeah its covered: https://codecovio/gh/jabref/jabref/src/6aa925b7ec6fc2e1deb497a898e076bc747630da/src/main/java/org/jabref/logic/bibtexkeypattern/bibtexkeypatternutiljavaill go ahead with the merge and look forward to other tests / general improvements we have a huge list of smaller tasks at https://githubcom/koppor/jabref/issuesthank you for the good work! || we just discovered that our documentation was wrong and that `camel` should be a modifier: `title:camel`it should work with `title:capitalize`see https://githubcom/koppor/jabref/issues/237 || hmm ok ive responded in the issue since it is not entirely clear to me what has to happen || "
1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,fix exception when parsing groups which contain a top level group fixes the import of #2600 the problem occurred when after the definition of a subgroup of level >0 a group definition with level 0 followed```2 explicitgroup:15\0\0 explicitgroup:16\0\2 explicitgroup:17\0\```<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes~~- [ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref~~- [ ] check documentation status (issue created for outdated help page at [helpjabreforg]~~(https://githubcom/jabref/helpjabreforg/issues)?)~~- [ ] if you changed the localization: did you run `gradle localizationupdate`?~~ failing test was google scholar ||
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,fixed wrong logger import fixes the first part of #2617  
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix2613 provided a macos specific routine for opening tex editors to import citations to fix #2613the solution has been tested with texstudio and texmaker- [x ] change in changelogmd described- [x ] manually tested changed features in running jabref looks good to me as a small fix in general i wondered if it isnt useful to integrate the pushtoapplication somewhere in the desktopos classes i mean there are already methods for opening a file/with an application for each os || lgtm ð would also love to see more os-specific stuff integrated in the desktop classes ||
1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"refactor oo connection also fixes #2484trying to simplify oo detection logic- removed cancel option in auto detection logic- removed some of the preferences variables for oo directories and try to keep only the root directory and search for the necessary files inside this directory- added two file finder helper methods inside fileutil- lots of variable method and class renamings- used javanio were possible- some graphical ui improvementstested on- [x] windows with libreoffice 5 and multiple installations- [ ] windows open office 4 (will only work with 32-bit jre!)```javalangunsatisfiedlinkerror: c:\program files (x86)\openoffice 4\program\jpipedll: cant load ia 32-bit dll on a amd 64-bit platform```- [x] linux libreoffice 5`unoiljar` is missing however it would even work without that jar not sure whats the problem here and why it is gone two other jars `java_uno` and `unoloader`are there looks like we can maybe include the uno libraries from gradle (https://mvnrepositorycom/artifact/orgopenoffice) rather than loading them from the classpath of the installation?! maybe a license problem @koppor ?for ubuntu you need to install the additional package:http://packagesubuntucom/de/xenial/libreoffice-java-common- [x] linux open office- [x] osx openoffice- [x] osx libreoffice @jabref/developers @chochreiner i think this has improved quite a bit now need your help on a few question (especially libreoffice 5 linux jar poblem) and your testing here! || i can test windows and ubuntu with libre office regarding the inclusion of jars arent the jars version depended on the installed version of open office/libre office? || open office works fine on macoslibreoffice cannot be detected automatically || @chochreiner great thanks! is libreoffice missing the `unoiljar` inside the `program/classes` folder probably?the logic basically is:1 look inside `/applications` for folder names that contain (case insensitive) `libreoffice | openoffice` folder names2 check for `sofficebin` executable mostly inside `program/`3 check for the uno jars `""unoiljar"" ""jurtjar"" ""juhjar"" ""ridljar""` mostly inside `/prgram/classes/` || libreoffice seems to have a new internal package structure compared to oothey have migrated to dylibs || hm im not sure what this means for our current logic as far as it is implemented right now every connection will fail if any of those libs are missing still it was perfectly fine for a few tests even without the `unoiljar` || libreoffice provides this libs: https://mvnrepositorycom/artifact/orglibreofficeaccording to his project https://githubcom/libreoffice/loeclipse the libs can be found:> search for the libreoffice jars unoiljar juhjar jurtjar ridljar unoloaderjar you find them here:> >     macos: /applications/libreofficeapp/contents/resources/java>     ubuntu: /usr/lib/libreoffice/program/classes>     windows: c:\program files\libreoffice 5\program\classes\>  || @siedlerchr i installed lo 5 on windows and ubuntu and the `unoiljar` is missing the rest is there || @stefan-kolb  under windows 10 lo 53 64bit  the unoiljar is there in `c:\program files\libreoffice 5\program\classes` for ubuntu you need to install the additional package:http://packagesubuntucom/de/xenial/libreoffice-java-common || @siedlerchr hm thats bad for us as the user needs to install that manuallyprobably there is an equal problem with osx || i can confirm that all jars are availalable in: /applications/libreofficeapp/contents/resources/java  || we then should add this at least for linux to the installation instructions that the -common-java package is required || @chochreiner hm ok then the automatic detection should work || @siedlerchr @tobiasdiez i have added a new directory chooser in the fx dialog service can you please take a look? one thing that i noticed is that all of these dialogs have no parent (ie not model) therefore hide in the background if the user clicks somewhere else dunno if we want them to behave like this || the openoffice provides both sofficebin and soffice libreoffice only provides soffice --> with this fix the automatic detection works for me || @chochreiner ah nice thanks so much christoph! || @jabref/developers otherwise im done with this thanks everybody for your help and input ð ð || i also added our finds to the documentation under __known issues__ || "
1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,"fix #2680 and fix #2667: swing errors are catched properly and without freezing hopefully fixes that the error console is not updated properly #2667 as well as that swing errors lead to frezzing #2680 at least for me it works now without problems @stefan-kolb @lynyus can you please also check itfor the error console i took the suggestion https://githubcom/jabref/jabref/issues/2667#issuecomment-288742546 by @matthiasgeiger the freezing after a swing message occurred since Ì`loggerwarn(""no localized message exception message defined falling back to getmessage()"")`lead to recursive calls (actually log4j has some logic to prevent deadlocks but these dont take effect since the original message is thrown in the swing thread while the above ""no localized messsage"" is posted in the javafx thread) i simply changed it to log level ""debug"" which effectively hides it in most cases as a positive side effect the scroll issue mentioned in https://githubcom/jabref/jabref/issues/2667#issuecomment-288714639 is also fixed<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? will look at it- [x] console update seems to be fixed #2667 - [x] unavailable fetcher results in normal console log again without ui freezes || @matthiasgeiger you are right my changes are more a workaround than a proper solution however since the deadlock only appears if an exception is logged in the swing thread and afterwards the guiappender also logs something i decided not to invest more time probably a application-wide lock for the appender is needed ||"
1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,"fix #2680 and fix #2667: swing errors are catched properly and without freezing hopefully fixes that the error console is not updated properly #2667 as well as that swing errors lead to frezzing #2680 at least for me it works now without problems @stefan-kolb @lynyus can you please also check itfor the error console i took the suggestion https://githubcom/jabref/jabref/issues/2667#issuecomment-288742546 by @matthiasgeiger the freezing after a swing message occurred since Ì`loggerwarn(""no localized message exception message defined falling back to getmessage()"")`lead to recursive calls (actually log4j has some logic to prevent deadlocks but these dont take effect since the original message is thrown in the swing thread while the above ""no localized messsage"" is posted in the javafx thread) i simply changed it to log level ""debug"" which effectively hides it in most cases as a positive side effect the scroll issue mentioned in https://githubcom/jabref/jabref/issues/2667#issuecomment-288714639 is also fixed<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? will look at it- [x] console update seems to be fixed #2667 - [x] unavailable fetcher results in normal console log again without ui freezes || @matthiasgeiger you are right my changes are more a workaround than a proper solution however since the deadlock only appears if an exception is logged in the swing thread and afterwards the guiappender also logs something i decided not to invest more time probably a application-wide lock for the appender is needed ||"
0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,"fix 2701 too may files found <!-- describe the changes you have made here: what why  -->i would like to offer my fix for the issue  2701: jabref would find too many files when they are search with the [year]_[auth]* pattern the reason seems to be a null database passed to the bibtexkeypatternutilmakelabel(bibentry string character bibdatabase) method and a null pointer exception is triggered as a result the [auth] part of the pattern was erased and ignored with the suggested fix jabref uses the [auth] part of the pattern and finds just the files with the matching author as expected a relevant unit test was added no other tests were broken- [ ] change in changelogmd described -- no functionality changes restored the previous state- [x ] tests created for changes -- 1 unit test added- [ ] screenshots added (for bigger ui changes) -- no gui changes- [ ] manually tested changed features in running jabref -- none- [x ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) -- the issue #2701 still open- [ ] if you changed the localization: did you run `gradle localizationupdate`? -- no localisation changes thank you very much for your contribution ð  codewise it looks very good to me if the test passes and another dev gives his okay we can merge it || thanks for the contribution @sauliusg  great when users find an issue and even fix it themselves (> the reason seems to be a null database passed to the bibtexkeypatternutilmakelabel(bibentry string character bibdatabase) method and a null pointer exception is triggeredi will investigate this tomorrow because im not entirely sure if your fix solves the symptoms or we should dig a bit deeper and eliminate the main problem which could be that bloody null database || dear  siedlerchr dear lynyusthank you for the instant reply!i have got feedback from codacy and fixed: removed an unused variable from the new unit test also i added another second unit test to cover the second if statement added by me sorry if it breaks the ""changes approved"" status> i will investigate this tomorrow because im not entirely sure if your fix solves the symptoms or we > should dig a bit deeper and eliminate the main problem which could be that bloody null databaseplease have a look it seems to me that the null can be traced to the explicit null argument passed to it from the private static list<file> findfile(bibentry entry file directory string file string extensionregexp character keyworddelimiter) method (line 250 string filenametolookfor  expandbrackets(filepart entry **null** keyworddelimiter)replaceall(ext_marker extensionregexp))regardssaulius || @lynyus your suggestions sounds reasonable we should try to not pass null as an argument moreover the label generation code probably needs a complete refactoring (especially get rid of the huge amount of static methods) but this will be probably a bigger project while i would welcome prs from you or @sauliusg in this direction i think the current pr is an acceptable workaround within the boundaries of the current code infrastructure || okay lgtm! i merge it in! thank you very much for your contribution! ð  feel free to take a look at other issues  || thanks! || "
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,fix #2806: date editor also accepts incomplete dates <!-- describe the changes you have made here: what why  -->should fix https://githubcom/jabref/jabref/issues/2806 and https://githubcom/jabref/jabref/pull/2781#issuecomment-296427732- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,fix export and import of ms office day/year/month acessed fields fix possible npe in date parsingfixes #2859 <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [x] tests created for changes~~- [ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- [ ] if you changed the localization: did you run `gradle localizationupdate`?~~ change the code to optionals merge it in now ||
1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,"implement #2785: resort groups using drag & drop <!-- describe the changes you have made here: what why  -->with this pr it is now possible to resort groups using drag and dropwhen the user drags a group over the center of another one then the target group is highlighted as follows![image](https://cloudgithubusercontentcom/assets/5037600/26400032/79f291e0-407f-11e7-8c5f-a4036e950f20png)and the source group is added as a child in contrast when the user hovers over the bottom or top part of a group then a line is added that indicates that the source group is added at this point (ie between test 1 and test 2 in this picture)![image](https://cloudgithubusercontentcom/assets/5037600/26400066/93205328-407f-11e7-9714-7f87f0158565png)there are still some problems with the selection status after a drag and drop- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? thanks for the positive feedbackill fix the ""not mark as dirty"" issue as part of #2787 as in my opinion the cleanest solution for this is a global listener (instead of manually calling `markaschanged` after every action) || "
1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,fix loading of preferencesservice the else part tried to instantiate the interface otherwisefix for #2881  <!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,open urls for recommneded articles in the browser added a generic hyperlinklistener which opens any hyperlink in a new browser windowby defeault javafx opens all urls in the same webview windowfix #2931 - [x] change in changelogmd described~~- [ ] tests created for changes~~~~- [ ] screenshots added (for bigger ui changes)~~- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~- [ ] if you changed the localization: did you run `gradle localizationupdate`?~~  
1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,add remove link context menu entry in file editor <!-- describe the changes you have made here: what why  -->fix for #2968 ![image](https://user-imagesgithubusercontentcom/320228/27868522-3995973e-619d-11e7-8911-c2c85ba29109png)- [ ] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,"fix keybinding in entry editor in localized installation check keycode to avoid localization problemsfollow up from #2853 <!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? alternative solution without using the deprecated function:```java    private optional<keycode> determinekeycodefromkeyevent(javaawteventkeyevent keyevent) {        // special treatment of localized keyevents        if (keyeventgetkeycode()  javaawteventkeyeventvk_delete) {            return optionalof(keycodedelete)        }                return arraysstream(keycodevalues())filter(k -> kgetname()equals(javaawteventkeyeventgetkeytext(keyeventgetkeycode())))findfirst()    }```but this only solves the problem for the ""delete"" key - so we still might have other yet unidentified problemsso we should decide which route to take -) || i would give a +1 for @siedlerchrs solution since we surely do not catch all possible keys and the maintable is our next target after the entry editor ð || "
1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,trigger group display update when grouping changes attempts to fix #1903makes the maintable update whenever grouping changes and not just when group selection changes- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,"increase size of file and keywords editors in the new entryeditor we have the problem that sometimes text in the textareas is hard to read because the areas are very narrow the reason for this is that java tries to fit them in the available display space examples: #3130 #3117 #2941this pr sets a minimum size for all textareas in the entryeditor the value of 70px is rather arbitrary and ill be happy to get some thoughts if this is good or if more or less is desirable with this minimum size all textareas are nicer to read even in the cramped up general tab the only ""problem"" is that you now need to scroll in the general tab most of the time all in all i think this should definitly go into 40!- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? to be honest im not a big fan of the increased size i prefer to have as much information on the screen as possible and not to have to scroll on the other hand i acknowledge that the current layout is also suboptimal as the text fields are not expanding on their own when they contain much information maybe it is already enough to increase the `prefered` height (instead of minimum)? also you should be able to increase the size of the files panel independently of the other fieldsfurthermore it is probably better to use scaling units (like `em`) instead of pixels || @tobiasdiez ok you have the same opinion as @koppor i guessincreasing the preferred height didnt help unfortunately we can leave most field editors as they are but we have to increase the size of the file and the the keywords editor those are the two editors in the cramped general tab where users could enter information with more than a single line that doesnt look good at all and really does annoy usersive tried to change just these two editors in code but failed whenever i call `setminwidth` in https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/fieldeditors/linkedfileseditorjava or change the `minheight` in the related fxml file the min height of all field editors in the tab increase any hint? || the problem is probably https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/fieldseditortabjava#l166 where the rows are set to have the same height || quick idea: if the row constraints are the problem it might be an option to use two rows for the file/keyword editors || @matthiasgeiger not sure if thats easily possible the best solution is probably to write new subclass of entryeditortab || or extend the `fxfieldeditor` by a `getweight` method which you can use in https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/fieldseditortabjava#l114maybe it is already sufficient to remove these row constraints (although there was probably a reason why i added them in the first place) || ok ive implemented a hack that assigns twice the space of normal rows to the keyword and file field editorsas i said this is a hack but before i turn this into something more acceptable (along your suggestion @tobiasdiez ) i would like to get confirmation from the team that this is a solution that we can live with visually in the jabref ui if not than i am just wasting my time with gui hacking || and now i refactored it anyway jabref continues to ruin my lunch time || i tried out the new solution locally and it looks good enough on two-column tabs the things shrink too much but we discussed in the devcall that it is difficult to determine the right ""min-height"" (screen resolution etc)so good to merge || as discussed in the dev call i am merging this now || "
1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,"export pdf/linked files fixes #2539 followup from #2706  because somehow my new changes did not update the pr correctly![grafik](https://user-imagesgithubusercontentcom/320228/31773816-3ef12f96-b4e4-11e7-800f-90413d074280png)<!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [x] if you changed the localization: did you run `gradle localizationupdate`? is it possible to add this to the context menu? i once added ""send as email"" to the menu as i also needed a similar functionality for sending entries as email:![grafik](https://user-imagesgithubusercontentcom/1366654/29908597-676fbb74-8e22-11e7-8a09-dc6e0ea79d15png) || @siedlerchr your pr did not update as you named the branches differently: `exportpdf` vs  `exportpdf` the letters `d` and `f` are cased differently thus these are different branches ð  || current accessibility:![grafik](https://user-imagesgithubusercontentcom/1366654/29908807-4a1879e8-8e23-11e7-84c5-d26b312bc4f3png)reading https://githubcom/jabref/jabref/pull/2706#issuecomment-292110772 and the following comments i do not like the word ""export"" in the tools menu it took me 5 minutes to find the functionality1 context menu: no entry for that2 file menu: no entry for that3 file -> export: cannot select ""pdfs"" somehowsuggestion:rename to ""copy attached files to folder""further minor issues- [x] progress always shows ""exporting file 0 of x""  ![grafik](https://user-imagesgithubusercontentcom/1366654/29908896-be2f2dd6-8e23-11e7-9ea2-e8ee5a230e69png)- [x] last chosen folder is not remembered the browse-dialog always starts in `%home`- [x] pressing ""cancel"" when choosing the folder also triggers the export || added devcall label to discuss milestone || stays at v41 milestone as v41 will be our pdf feature release || i think i fixed all issues raised by @koppor  and i also create a log file in the export dir || @tobiasdiez  i followed your idea and added a tableview showing the log messages and the filei plan to replace the true/false values with icons: (green checkmark and red x)![grafik](https://user-imagesgithubusercontentcom/320228/31765002-3b12623a-b4c3-11e7-99a8-f85dc6da83f4png) || looks good! do you want to display this dialog everytime even through everything went fine and all files were exported successfully? or just when an error occurs? im unsure but would tend to the latter || from my point of view all remaining issues should be resolved and this can be merged || the result dialog is displayed way too small on my display![screen shot 2017-10-25 at 18 24 34](https://user-imagesgithubusercontentcom/1254003/32010460-28889a8c-b9b2-11e7-837d-e1081c96f654png)when i try to resize it a magical fourth column appears![screen shot 2017-10-25 at 18 29 19](https://user-imagesgithubusercontentcom/1254003/32010567-8248dd66-b9b2-11e7-988b-de409d1c0d3epng) || @lynyus  i changed the column size and there is also a tooltip for the file column || "
1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,add preference to disable validation in the entry editor by default adds a preference option for enabling/disabling validation in the entry editor: #3100 (but not the ui)the reason is because the validation is simply broken at the moment #3145the preference option is set to false by default and there is no ui to change it so this turns off validation in the entry editor we can add the ui to turn it on later when the display bug in controlsfx has been fixedwhen this is merged the related issues can be removed from the 40 milestone- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? since the review comments have been addressed and for the sake of getting things done i am merging this now ||
1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,fix unparseable fileannotation dates this should be the last aspect for being able to close #3130 @hviethen85 should consider using another pdf annotation tool ( however the fault is of course on our side since we didnt validate the date format before- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref  
1,0,0,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,allow removal of online links from entry dont call pathsget on http link to prevent an exceptionfix #3165 <!-- describe the changes you have made here: what why  -->- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,open statistics dialog from correct thread the dialog to ask for collecting anonymous statistics needs to be created inthe swing edt do so using swingutilitiesinvokelater()this is a follow-up on 7ef2b3a and should finally fix #2955<!-- describe the changes you have made here: what why  -->no addition to changelogmd as 7ef2b3a already included a corresponding entry- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,fix npe when calling with bib file as cmd argument fixes #3342 follow up issue from #3325 use toabsolutepath before calling of getparent<!-- describe the changes you have made here: what why  -->- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,added checking integrity dialog this change is related to #3358 jabref looked like it is hanging during long integrity checks i added a dialog with a progress bar to show that it is working![checkingintegrity](https://user-imagesgithubusercontentcom/4533745/32270624-aa9fe0d4-bf07-11e7-933a-57b392fd4750png)- [x] change in changelogmd described- [ ] tests created for changes- [x] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? thanks for fast response i fixed the problems || thanks for your contribution! i tested the changes locally and it works fine! feel free to look at other issues as well! ||
1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,fix removal of special fields when syncing them via keywords fixes a bug where jabref special fields (such as printed relevant ) were not cleared (eg removing the printed flag) when using synchronization of special fields via the bibtex keywords field- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabrefsee #3432 for more details made the requested changes || thanks @tobiasdiez for pointing that out - fixed it ||
1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,fix threading issues fixes #3485 and #3435 <!-- describe the changes you have made here: what why  -->----- [x] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? this should be fixed now i reverted to my initial idea i heavily clicked around and switched tabs in the entry editor and randomly selected things in the main table and in the integrity check table no longer exception || i have tested it locally and can confirm that it is working now ||
1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,fixes #3505: another try to fix the npe in the search bar fiexes #3505<!-- describe the changes you have made here: what why  -->i think i managed to locate the problem of the npe and the missing search bar apparently in some conditions the syntax `/` to access the parent in a path does not work for resources thus the css file is not found resulting in a npe----- [ ] change in changelogmd described (bug introduced in 41dev)- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`? search bar appears here i think @j0hannes  should run the build at his system currently one has to checkout the code and execute `/gradlew run` as we currently have issues with our code signing certificate || @koppor i just rebuilt the package from git and the search bar is still not there || @j0hannes did you checked-out the branch `fix3505` or still used the master? since this pr is not yet merged the fix is not included in the master branch if you used the correct branch to build is the same error message still there? || anyway i merge this now since the code still works under normal conditions and might help in others so a new checkout of the master branch should work now || @tobiasdiez now its back the package will certainly only use the master branch i though it was already merged there || @j0hannes thanks for the feedback and your help debugging this issue! much appreciated  ||
1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,add exporter desc to enum analog to import fixes #3605follow up from #3576 <!-- describe the changes you have made here: what why  -->![jabrefextension](https://user-imagesgithubusercontentcom/320228/34617477-df47f5b2-f23b-11e7-907e-a0d1e595406epng)----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)- [ ] if you changed the localization: did you run `gradle localizationupdate`?  
1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,"[wip] file link deletion dialog improvements this pull request fixes the following issues:* when a file link in a bibliography entry is deleted by the user a dialog is displayed previously the default (first) dialog option deleted the linked file from disk the default behaviour has been changed to just removing the file link from the entry  this is a fix to issue #3679 fixes #3679 * when clicking the ""cancel"" button in the file link deletion dialog the file  was being deleted from the list this behaviour has been fixed by changing the return value of the `delete()` method when the ""cancel"" button is chosen## example screenshot:![2018-02-04-001057_477x142_scrot](https://user-imagesgithubusercontentcom/20418176/35773368-0191977e-0950-11e8-90cb-ba778105f3e3png)## checklist:- [x] change in changelogmd described- [x] tests created for changes- [x] screenshots added- [x] manually tested changed features in running jabref- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)---i am unsure whether the remaining checklist items are applicable to this pull requesti would be willing to provide tests for the `delete()` method however the `dialogservice` member cannot be stubbed-in/mocked as it is (as it is marked `final`) and therefore i cant control the returned chosen option from inside the unit testi would appreciate any pointers and suggestions thanks for your contribution! i have tested the changes locally and it works as expecteda little step for you a great step for ~~humanity~~ jabref users )just add the suggestions by  @tobiasdiez  and we can merge it in ps: if you include the word  `fixes #xxxx` then the corresponding issue will be closed automatically when the pr is merged  || thank you for your pointers! i have locally added `buttondatayes` and now i will attempt to prepare a test suite for the `remove()` method at least and push everything out when its ready :smile:  || okay i pushed out the changes adding the button data restored the original button order (at least on linux) but the remove button is now clearly the default and as far as i can tell from [javafx docs](https://docsoraclecom/javase/8/javafx/api/javafx/scene/control/buttonbarhtml) this is the desired behaviourthe test code im not too proud of -- theres some weird hacking going on there to get the tests running and i had to balance between not making them brittle and not worsening the implementations readability just for tests sake if you have ideas for improvements id be happy to go back and fix the ugliness || well if im this close might as well try and make this pr as good as possible!ive added the suggested changes however i did leave some of the parentheses as they were -- near those long mock setup calls to be precise because i couldnt make them look decent otherwise || nice thanks again for your contributions we are looking forward to see more prs from you ð  ||"
1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,differentiate inbooks with different chapters this is my simple solution for #3344 issue ive added statement that checks authors titles and chapters of two inbooks what do you think?i have several questions:1 im not sure about using `comparesinglefield` function for comparing chapters because sometimes they are very similar but different for instance: chapter 1 and chapter 2 any idea? my is to remove chapter word from strings and then make the comparison 2 should i also add test for incollections?3 what about pages? as i noticed they can be a replacement for chapters should i consider them in the code?4 can i add another commits with some cleanup and refactor for the files ive touched? i mean adding some finals to make code less error prone etc thanks for your contribution!regarding your questions i can only answer some of them 1 i currently are on my mobile so i cant dig into that much but sounds like an idea you could look what the biblatex manual says about the possibile contents of the field thats our reference when in doubt about a field 2 maybe also a good idea3 could make sense if the same 4 sure code improvement is always good if its within the scope of the implementation regarding of finals you can omit  them in parametersregarding test you could migrate them to junit 5 if not already done for examples you can look at the fetcher tests just a bit different syntax  || ok so i added some more tests and pages field checks nevertheless i dont know how to upgrade tests to junit5 (i mean that there is something more to to than import beforeeach instead of before and i have no idea what it is) any tips?@tobiasdiez - in that case comparesinglefield would return for example empty_in_one constant where my if statement require not_equal so there is no problem :) anyway ive added test to cover that casealso ive made some cleanup and refactor i know a lot of finals but imo it prevents silly mistakes like reassigning values to function parameters (especially error prone in constructors)and ive merge master into my branchso how about now?----------------edit: codacy/pr quality review yells that there is something wrong but when i click details there is website with request error: missing parameter: prid message :/ || thank you for your contribution ð ð  ||
1,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,0,1,"add parser for german months (#3536) changed the month parse that it can also parse german months now this should solve issue #3536have i missed something?(for pe1718: name: johannes preÃmar)----- [x] change in changelogmd described- [x] tests created for changes- [ ] screenshots added (for bigger ui changes)- [ ] manually tested changed features in running jabref- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) please merge jabrefs branch `master` (should be available at `upstream/master`) to resolve conflicts in changelogmd || the tests are still failing from looking at the code i think that ""mÃ¤r"" is not parsed correctly could you please investigate this?once all tests are passing on travis i think we can merge this || ill merge into `wip` finish the pr and merge it into `master` || i fixed the issues at https://githubcom/jabref/jabref/pull/37421 the java files had the wrong encoding (utf8 was not used)2 the implementation for ""mÃ¤r"" and ""mÃ¤rz"" was missing || "
1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,show dialog when copy files did not found file follow up from #3818 fixes #3818 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->![grafik](https://user-imagesgithubusercontentcom/320228/37219766-b6707a96-23c4-11e8-830f-0e7f8756eba8png)----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,fix ieee fetcher by enabling cookie support fixes #3966 apparently when in vpn network of university ieee fulltext fetcher needs cookie support enabled<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,"[wip] add text file export for ""find unlinked files"" this is to add the feature which allows exporting of the list of files found in ""find unlinked files"" to a text filecloses issue #3341im not sure if it is exactly what you are looking for but i thought i would give it a shot hopefully you will be kind though i welcome constructive feedback of course im not sure it really even needs the progress bar for the exporting because it is so fast but i left it in for now since the importing has one one change i didnt make is changing the list of files to path type from file type i left a note about that above let me know what you think || @jssander  please pull before you continue to work on it i merged master to fix conflicts due to our release today || how do i pull correctly? in idea when i go to pull i think im pulling from my forked master || i made some changes but there is a conflict now in the changelog im not sure how to resolve it || @jssander just keep both lines i did it for you using the github web ui just pull and you are fine at your side too || great! thank you so much ||"
1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix ieee preview does not display month fix issue [#3239](https://githubcom/jabref/jabref/issues/3239) on [maintable-beta](https://githubcom/jabref/jabref/tree/maintable-beta) branchon month change from combobox on optionalfieldstab month was not appear on ieee stylethe issue get fixed<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) please have a look at the travis output regarding the checkstyle there is still some error  || thank you its nice to work with all of you i learn a lot ||
1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,"add rfc entry generator id-type option <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#3971](https://githubcom/jabref/jabref/issues/3971) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes #3971 [ui image of entry type in dropdown](https://githubcom/jacksonrya/helpjabreforg/blob/81c1795cfd3b9defc64fd61b71eb85e9e34e7442/en/images/newentrychoosetype-idgeneratorhighlighted-rfcpng)rfc an additional id-based entry generator id type has been added in order to fetch more complete bibtex data compared to doi fetches of rfc typefollowing the diva id type classes as template an rfc fetcher class and fetcher test has been addedi added rfc to the id-based entry generator list within webfetchers so it is an option in the dialogs dropdowncurrently the rfc fetcher class accepts search requests with or without the ""rfc"" prefix--is this an okay feature?additionally help in finding the best [rfc bibtex api](https://wwwrfc-editororg/retrieve/) i am using the api referenced in [#3971](https://githubcom/jabref/jabref/issues/3971)ps this is my first ever contribution to open source so thanks for your patience ð ----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) ive merged your help file change and restarted the travis build so the help pages related error should be gone now!thanks again for your contribution ð¥  || all set thanks for all of your help! ive learned a lot about the process and hopefully wont be as needy next time :) || thank you for your contribution :smile: ! hope to see more from you in the future! ||"
1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix look and feel related issues enabled the change of the l&f for macremove gtk l&f fix migration of old jgoodies l&ffixes #3986 fixes #3995 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i merge this now and i will create a pr to remove that l&f stuff completely in maintable-beta ||
1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,reimplement tooltips for file and identifier columns this fixes #3973reimplements tooltips for file- url-/doi- and eprint-column in the maintable-beta----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks again for your contribution! ||
1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,do not trim or remove whitespace from the title based id fetcher fixes #4014 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i now moved trimming down to the concrete fetcher classes and added tests  ||
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix #4041 to make push to application work again on osx for unknown reasons it seems no longer possible to give the commandas one single string i created a test class and not even simple commandscan be executed im not sure when this changed but giving the commandas a list of arguments works as expected<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
1,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,"dont report journal name as abbreviated when full name  abbreviated name <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes #4115 ----- [x] change in changelogmd described- [x] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for the feedback your solution was my initial idea but then went on to modify the `journalrepository` because other (potential) callers of the repository also profit from the change i wouldnt consider ""bioinformatics"" abbreviated when its also the full journal name (which is of course a question of definition)in the end its almost a question of taste and im also fine changing it to your solution (if you think the additional work is worth it -) ) || that was exactly my thought too (that bioinformatics is no abbreviation of bioinformatics) but then we should rather cleanup the list than the code?! but then i thought ok they want to have this journal in there || "
1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,fix style issues in about dialog <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes #4202 and a few other small style related issues i also created a little new app that make it simple to test the display of javafx controls as of now i only added a lot of buttons in different styles and states:![image](https://user-imagesgithubusercontentcom/5037600/43546917-155834c2-95da-11e8-89d8-485544d0cd45png)please merge instead of squashing the commits----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) lgtm  || i am merging this now ||
1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,"fix for issue 3959: migrate all tests to junit 5 <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->hi im trying to fix the issue #3959  and i have some problems here can someone help me?**1 some tests dont seem to have a parameter source**such as  `bibtexmlexportertestjava` `msbibexportformattestfilesjava` `modsexportformattestfilesjava` and so on since i cant get feedback from both travis ci and my ide i couldnt do anything at the moment![image](https://user-imagesgithubusercontentcom/25541992/43997706-ee482a88-9e15-11e8-9b43-9b9f9853c150png)**2 something about the external libraries**for `mainarchitecturetestswitharchunitjava` `testcompile comtngtecharchunit:archunit-junit:083` **isnt enough for migrate this test to junit 5**just a few days ago `archunit` just supported tests with only junit 5 package but this feature needs a `testcompile comtngtecharchunit:archunit-junit:090` and as far as i know this version has not been released yetfor `citekeybasedfilefindertestjava` i havent found an extension in junit 5 for the `mockitojunitrunnerclass` in junit 4 and it seems that their (mock) official version hasnt been release yet too**3 the database test**as i can see those tests have already been migrated partly to junit 5 but the rest of it is the problemive tried to migrate `dbmsprocessortestjava`  but the code is no longer concise after thatfor example ![image](https://user-imagesgithubusercontentcom/25541992/43997780-26078368-9e18-11e8-9fce-43d293fedf88png)this is the old version and![image](https://user-imagesgithubusercontentcom/25541992/43997784-3e0ae356-9e18-11e8-8073-d43eeb12f0d5png)that is the new version and that is only part of itthe reason is that i couldnt pass the parameters to the `@beforeeach` method in junit 5 but junit 4 can use those local variable to pass the parameters i think this is where the difference occurred**4 the gui test**i just change the `@category` annotation to `@tag` annotation as i have known that those tests are mostly obsolete**5 about cleanupworkertest**this test is not hard to migrate from junit 4 to 5 but when i finish and run the tests on my ide two tests failed and the error message is quite weird it seems that the worker doesnt work in junit 5 tests![image](https://user-imagesgithubusercontentcom/25541992/43997847-be8c685a-9e19-11e8-9c3a-a911d9daeafepng)and if there are any errors or something can be improved in other tests that i didnt mention please let me know! thanks!----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for your work! most of the conversion looks good concerning your questions:1 the exporter and importer tests use a filename-based convention to find and check the tests for example https://githubcom/jabref/jabref/blob/57126659b4f8ff58c9403af0f4d6aabccf77058c/src/test/java/org/jabref/logic/exporter/modsexportformattestfilesjava#l59-l66finds all files that start with `mods` there are usually two files with the same name: one with `bib` ending and one with `xml` the tests then should test that exporting the content of the bib file using the mods-exporter give the contents of the `xml` file2 yes there is not yet a release of the new archunit so for now the architecture tests can stay using junit 4the mockito runner is not really needed its only purpose is to support the `@mock` annotation but you can always use `variable  mock()` 3 currently there is no neat way to handle this problem (see the open https://githubcom/junit-team/junit5/issues/878)4 looks good5 i think the problem is the setup in https://githubcom/jabref/jabref/pull/4260/files#diff-2e1fadfb1af8461d9d830981c338f225r64 the bib file should reside on the same level as the pdf folder (and not within) || @tobiasdiez  thanks for your answer! ill have a try soon || @tobiasdiez hi! ive done some improments but i still have some questions1 i understand what you say but when i try to enable this line `streamforeach(n -> systemoutprintln(n))` with no other code changed i still get nothing looks like therere no such files on my laptop i suspect that it is the cause of this problem2 done3 ill keep those tests for the time being as that kind of code is just frustrating and of course if you have any requirements ill use the ""complicated"" way to handle it 4 done5 i have a try the `cleanuprelativepathsconvertabsolutetorelativepath()` test passed but the `cleanuprenamepdfrenamesrelativefile()` test still failed so i was wondering if you can give me a further guide about this? it can be a big help![image](https://user-imagesgithubusercontentcom/25541992/44014458-9f8d8aca-9efe-11e8-9a5b-64a50af1756fpng)btw the tests in `fileutiltestjava` use `create()` method which is totally not recommended in the api guide so when migrating it to junit 5 i name a folder manually to imitate the original tests and you can see this in the new version of `fileutiltestjava` if i do something wrong tell me and ill do my best to fix them soon || the failing architecture test is one thing i already experienced a  while ago its because it checks for public class  i was so free to create a  simple patch which fixes thissimply remove the txt extension after download and execute ` git am < 0001-fix-architecture-test-by-removing-check-for-publicpatch`[0001-fix-architecture-test-by-removing-check-for-publicpatchtxt](https://githubcom/jabref/jabref/files/2283533/0001-fix-architecture-test-by-removing-check-for-publicpatchtxt) || the files are in `src\test\resources\org\jabref\logic\exporter` but for some reason the tests dont find them (even on travis) and thus fail  || @tobiasdiez thanks for the previous comment! ive got a little bit about the ""cannot find test files"" problem and ive fixed them in 2 commits the first uses the origin junit 4 the second uses junit 5but some tests in `modsexportformattestfilesjava` and `msbibexportformattestfilesjava` failed they failed both in the origin junit 4 and the version i write junit 5 here is an example for `msbibexportformattestfilesjava` ![image](https://user-imagesgithubusercontentcom/25541992/44089397-320a7a34-9ff9-11e8-8002-8034da799d37png)![image](https://user-imagesgithubusercontentcom/25541992/44089412-46064ae0-9ff9-11e8-8e95-43068246a88fpng)so is that ok just for the migrate task? is there something else i can do to improve that?and also a big thank for @siedlerchr s patch )----------------------------------------------------------hmmm looks like i still got the wrong path || i remember that we had problems with this before that some resources were not int he right folder i will take a look at that || that now some of the exporter tests fail were my fear this probably needs further investigations and fixes for the exporter thus it goes beyond the current pr thus i propose to mark the tests as ignored/disabled for now and we will come back later to fix them  || i am just investigating this and i think i found the issue with the paths || its a classpath issue for exmaple:```        path path  pathsget(msbibexportformattestfilesclassgetresource("""")touri()) > returns e:\workspace\jabref\jabref\bin\main\org\jabref\logic\exporter``` although it should be bin/test || okay i found the issue with the paths i really wondered if it ever worked but well now it does the key is to point to one existing resource the rest can be found dynamically and this leads us actually to some failing tests but i would ignore that for the moment that is a difference @metatronwings  you can use this patch as a start for all the related importer/exporter tests[0001-fix-resolving-of-paths-in-msbibexporterpathpatchtxt](https://githubcom/jabref/jabref/files/2287509/0001-fix-resolving-of-paths-in-msbibexporterpathpatchtxt) || im very glad to see this issue will be resolved by us soon only a few more small questions: **1 some tests have not been migrated yet**the `dbmssynchronizertestjava` and `synchronizationtestsimulatorjava` have not been migrated yet as there is no good way to handle chaos code after migration (see example in `dbmsprocessortestjava`)do i need to migrate them?the `mainarchitecturetestswitharchunitjava` have not too as there is not yet a release of the new archunit**2 since i didnt migrate them how should i write the** `changelogmd` **?**and thanks for all of you! ð || @metatronwings  its okay we will sure find a way for them in the long run not that importantyou dont need to add a changelog entry as this is only a code-quality issue which will not have any impact on the normal jabref user we hope you enjoyed it and if you want you can also further contribute looking to see more from you ) || i just converted the two other classes with the legacy file methods to use the nio stuff[0001-include-main-java-in-resources-as-wellpatchtxt](https://githubcom/jabref/jabref/files/2290800/0001-include-main-java-in-resources-as-wellpatchtxt) || sorry but i must do that tomorrow morning because its 12:00pm in my timezone thanks for the patch!  || "
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fix npe in merge entries dialog fixes #4233fix fx thread errorconvert file to path<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) changed that ||
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,0,0,fix freeze on import into current library execute import inspetion dialog in swing threadfixes #4296<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,save sort order column of main table fixes  #4224fixes #3850i tired to fix the above issue but i have the problem that the column sort listener is never fired when the sort order is descending edit// i also fixed an fx threading error  when opening a new library (the snackbar output was not onfx thread)@tobiasdiez  any idea if i did sth wrong oder have to set the value somewhere else?<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) sorry no idea would also need to debug this to see whats going on || hm this is odd i created a simple test application based on the code here https://codemakerych/blog/javafx-8-tableview-sorting-filtering/and i experience the same behaviour || apparently the sortorder alone was not sufficient: https://stackoverflowcom/a/52255643/3450689it works now || i will try if i can store the sortorder as well  || i now managed to save the whole sort oder for multiple columns  ||
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,auto trim url field <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->fixes [#4288]created a formatter to auto trim all kinds of whitespace defined by java----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes) _no need_- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,change latex command handling only for xml chars refs #3838 ----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabreftried to solve this issue in pr #4108this approach is now more dedicated to the xml docbook export and not applied to all fields as the first pr wasi am also not sure if this issue is related to #3781 #3644? @bernhard-kleine: i exported your provided bib entry via docbooks exporter into xml please check the result and let us know if there is something missing[testbracesresultxmltxt](https://githubcom/jabref/jabref/files/2487123/testbracesresultxmltxt)[testbracesbibtxt](https://githubcom/jabref/jabref/files/2487124/testbracesbibtxt)i will write tests based on your files if the export is now correct || thank you @johannes-manner this looks good to me for the testcase maybe we could skip those entries where there are no latex braces in the title || this is a separate item from the docbook5 export #4319 where i am waiting for feedback || added two test cases for (1) removed words based on an error during the latex command processing and for (2) unicode problems based on the same error || ping what is the status @johannes-manner? || oversee the comments and the ping sorry for that :) ||
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,show dialog before creating entry #4360 now when you click new entry in a right toolbar it open an extra dialog where user can select a entry type change tooltip to new article ||
1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix arrayindexoutofboundsexception on second pdf import fixes #4422 the variable formally known as i is a global variable which had -1 after the first run and therefore threw an exception<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) added tests ||
1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,fixed radiobuttons in preference menu (#4409) previously multiple radiobuttons in preference menu belonging to the same group were selectable simultaneously this issue is now fixed on multiple occasions allowing only one option per group to be selected at the same time issue: [#4409](https://githubcom/jabref/jabref/issues/4409)  
1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,fixes that renaming a group did not change the group name in the interface fixes #3189  
1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,"group and reorder the main menu (tabs & icons) group and reorder the main menu (file edit library quality tools and view tabs & icons) now it looks like on the @martinkarims prototypes![1_file](https://user-imagesgithubusercontentcom/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5png)![2_edit](https://user-imagesgithubusercontentcom/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11acpng)![3_library](https://user-imagesgithubusercontentcom/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfabpng)![4_quality](https://user-imagesgithubusercontentcom/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41png)![5_tools](https://user-imagesgithubusercontentcom/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7apng)![6_view](https://user-imagesgithubusercontentcom/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60apng)this pr fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your work on this the code changes look good to me i believe that removing the three tools ""opening a folder file or url/doi apply"" disables the associated shortcuts (eg f4 to open a file) can you please make sure the shortcuts work as expected and if not add some code for this here:https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l315 ive a few questions for @martinkarim why he proposed certain changes (some of which are not too intuitive for me):- ""replace string"" from edit to tools & ""set/clear/rename/append fields"" from edit to library (#4669): both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the ""manage keywords"" feature (which is essentially a special version of ""set fields"") moreover all these three features dont involve any magic on jabrefs part (in contrast to ""tools"") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one -) ) im fine with moving all three to ""tools"" although i feel this menu gets overloaded a bitmoreover i would suggest t rename ""replace string"" by ""find and replace""- ""find unlinked files"" from quality to tools: for me this feature is connected to the ""set file link"" feature because once you linked a file to an entry that it is no longer reported under ""unlinked files"" and vice versa the ""find unliked files"" dialog allows to link files to entries so personally i would group them together - ""new sublibrary based on aux file"" from tools to library with the reasoning that ""adding a sublibrary has a global effect on the library"" however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools || yes you are right now those shortcuts are disabled although ctrl + a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects (tools > web search groups interface) is not synchronized with it side paneli will deal with it in a while! || the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown/not shown in the openoffice panel i had to explicitly set the preferences to new values || i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you! || you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors  || yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time || no problem take your time  || @siedlerchr what about the coverage test? do i need to get an equal or greather percent? || you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives (eg marking functions as unused but does not take into account that these are defined in fxml)we are generally not so focused on code coverage but prefer tests for the most important model/logic functionality  || by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu || @tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items/features you mentioned:1 _replace string_: i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs2 _set/clear/rename/append fields_: i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the ""rename"" part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate3 _find unlinked files_: while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it4 _new sublibrary based on aux file_: i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like ""export entries cited in aux file"" however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore ""depends"" on it (and an aux file)i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion || thanks @martinkarim for your detailed explanation! that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to- rename ""replace string"" to ""find and replace""- move ""new sublibrary based on aux file"" to ""tools""as part of this pr and then merge @davidemdot could you please implement these changes? thanks!then as a second step we should discuss in the devcall:- set/clear/rename/append fields: edit library or tools?- new sublibrary based on aux file: library tools export?- how to improve telemetry collection? || @tobiasdiez i think it is done now! || "
1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,"group and reorder the main menu (tabs & icons) group and reorder the main menu (file edit library quality tools and view tabs & icons) now it looks like on the @martinkarims prototypes![1_file](https://user-imagesgithubusercontentcom/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5png)![2_edit](https://user-imagesgithubusercontentcom/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11acpng)![3_library](https://user-imagesgithubusercontentcom/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfabpng)![4_quality](https://user-imagesgithubusercontentcom/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41png)![5_tools](https://user-imagesgithubusercontentcom/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7apng)![6_view](https://user-imagesgithubusercontentcom/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60apng)this pr fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your work on this the code changes look good to me i believe that removing the three tools ""opening a folder file or url/doi apply"" disables the associated shortcuts (eg f4 to open a file) can you please make sure the shortcuts work as expected and if not add some code for this here:https://githubcom/jabref/jabref/blob/master/src/main/java/org/jabref/gui/jabrefframejava#l315 ive a few questions for @martinkarim why he proposed certain changes (some of which are not too intuitive for me):- ""replace string"" from edit to tools & ""set/clear/rename/append fields"" from edit to library (#4669): both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the ""manage keywords"" feature (which is essentially a special version of ""set fields"") moreover all these three features dont involve any magic on jabrefs part (in contrast to ""tools"") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one -) ) im fine with moving all three to ""tools"" although i feel this menu gets overloaded a bitmoreover i would suggest t rename ""replace string"" by ""find and replace""- ""find unlinked files"" from quality to tools: for me this feature is connected to the ""set file link"" feature because once you linked a file to an entry that it is no longer reported under ""unlinked files"" and vice versa the ""find unliked files"" dialog allows to link files to entries so personally i would group them together - ""new sublibrary based on aux file"" from tools to library with the reasoning that ""adding a sublibrary has a global effect on the library"" however this feature does not add entries to the current library but uses the aux file to select certain entries and then creates a new library containing only these entries so in some sense it is a certain kind of export thus for me it should go to the export menu under file or stay in tools || yes you are right now those shortcuts are disabled although ctrl + a for selecting all is still workingin addition i just realized that sometimes the check symbol of the checkitem objects (tools > web search groups interface) is not synchronized with it side paneli will deal with it in a while! || the check synchronization might be a problem with setting the values correctly in the preferences i remember having similar issues with shown/not shown in the openoffice panel i had to explicitly set the preferences to new values || i hope the check synchronization is solved now also i have recovered the previous entry preview elements and behaviorplease tell me if it is ok thank you! || you seem to have a compile error now probably because of the parameter removal in the check menu stuffyou can click on the travis failed icon and will see the jobs that failed you then can expand them and will see the errors  || yes my fault i am so busy these days and cannot focus on it properly i will solve this asapsorry for wasting your time || no problem take your time  || @siedlerchr what about the coverage test? do i need to get an equal or greather percent? || you can ignore the code coverage and the dependency update testcodacy is sometimes a bit difficult as for some fxml stuff it is generating false positives (eg marking functions as unused but does not take into account that these are defined in fxml)we are generally not so focused on code coverage but prefer tests for the most important model/logic functionality  || by the way i have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu || @tobiasdiez i am sorry for being late in answering your questions here are my thoughts on why i moved the items/features you mentioned:1 _replace string_: i do think that the the main difference between this feature and _manage keywords_ is the possibility to change a string in all entries and not just selected ones meaning the scope of the function separates it from the other items in _edit_additionally replacing a string is not bound to a field like _mangage keywords_ or _rank entry_ therefore it has a more general purpose i would arguehowever i agree that it does not completely fit into the _tools_ tab as well moving it there was a try to give the function more exposure because many users did not know about the _tools_ tab is a central part of the users workflow which is why i chose that tabthe name change for the feature is great i think because it matches the name of the same feature in other programs2 _set/clear/rename/append fields_: i proposed to move this feature to library because i thought that the four functions it contains had a global effect on all entries i have noticed that this was a misunderstanding on my part so i will have another look at the featurebut i still think that the feature as a whole does not fit the _edit_ tab because of the ""rename"" part renaming is not really a content change and it has more complex implications for an entry if the renaming function was split from the rest keeping it in _edit_ seems appropriate3 _find unlinked files_: while _set file links_ does only improve the quality of existing entries by associating a file this feature is a bit more versatile it can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a pdf i think that the ways of using this feature go beyond qa measures which is why i proposed to move it4 _new sublibrary based on aux file_: i think that you are right in regard to this function being an export function and that it could be moved to _export_ as well then it would have to be renamed though into something like ""export entries cited in aux file"" however export has the connotation of some change in the data format which is not really the case with this feature because it only creates a subset of the current bibliography i found the _library_ tab appropriate because the feature is bound to the active library and therefore ""depends"" on it (and an aux file)i think all four points are up to discussion and depend on the view of the individual this is why i think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion || thanks @martinkarim for your detailed explanation! that clarifies a lot for me and im fine with these changes for the sake of moving forward with this pr i would propose to- rename ""replace string"" to ""find and replace""- move ""new sublibrary based on aux file"" to ""tools""as part of this pr and then merge @davidemdot could you please implement these changes? thanks!then as a second step we should discuss in the devcall:- set/clear/rename/append fields: edit library or tools?- new sublibrary based on aux file: library tools export?- how to improve telemetry collection? || @tobiasdiez i think it is done now! || "
1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,improve remote messaging fixes #4023 (multiple instances possible) and should fix #4481 by reducing the timeout (thus jabref does no longer waits seconds if a proxy prevents us from connecting to localhast) surpasses #4460<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) does not work: still possible to start a second instance from within eclipse```20:40:59400 [javafx application thread] debug orgjabreflogicremoteclientremoteclient - could not ping server at port 6050 - javanetsockettimeoutexception: connect timed out	at javanetdualstackplainsocketimplwaitforconnect(native method)	at javanetdualstackplainsocketimplsocketconnect(dualstackplainsocketimpljava:85)	at javanetabstractplainsocketimpldoconnect(abstractplainsocketimpljava:350)	at javanetabstractplainsocketimplconnecttoaddress(abstractplainsocketimpljava:206) ``` || this sounds like the first instance failed to respond did you made sure that both instances run from the new code? do you get an error message in the first instance? || yes i started both instances in eclipse waited until the first instance finished starting i only passed the debug parameter as command line argument the logged error is from the first instance at startup same happens when the second instance is starting the second instance starts normally no other errors  || tested again today seems to work now ||
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix removing entries when source-code-field is out of focus fixes #4764the issue was `storesource()` method is called when entry is out of focus however if another entry is selected then `currententry` is updated to that and `storesource()` is called with the previous `codearea` but updating it in the second entry thus causing a duplicationfix was to pass the entry as another argument to `storesource()` <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
1,0,0,1,0,1,1,0,1,0,1,0,1,0,1,1,0,0,0,enhanced message log worked on  [#4805](https://githubcom/jabref/jabref/issues/4805)  removed jabrefframeoutput in favor of fxdialogservicenotify and refactored calling codeadded logging to fxdialogservicenotifylogs seemed to be duplicated afterwards however this was another issue with log4j because logevent-objects are reused they were copied in logmessagesadd  but at that point it was too late resulting in different log messages being overwritten i therefore moved the copying to guiappenderappend and this resolves the issue of seemingly duplicated log messages this is probably also the reason for [#4811](https://githubcom/jabref/jabref/issues/4811)closes #4805 closes #4811----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @siedlerchr @tobiasdiez i thought while im at this anyway i could also do it properly and checked all calls to dialogservicenotify i refactored all places where the method was called from a background thread so that i could remove `defaulttaskexecutorruninjavafxthread` from dialogservicenotifyat two points however it was not as easy see the review abovewhat do you think? || thanks for the update the `backgroundtask` has `updateprogress` and `updatemessage` for these cases however an implementation along these lines needs further refactoring i guess in my opinion we can leave it like that for the moment and merge || ok so maybe a follow-up issue could then be to improve the identifier lookup and maybe also the fulltext lookup using `updateprogress` and `updatemessage` ?this is ready for merge then i guess || yes to change the identifer lookkup and the other would be a good followup issue ||
1,0,0,1,0,1,1,0,0,1,1,0,0,0,1,1,0,0,0,convert autolinkfilesaction to javafx fixes #4819also convert a few other message boxes to javafx<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) lgt build failing is due to previous problematic pr with cleanup ||
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,remove deprecated awt apple extension fixes #3905<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @linusdietz  @halirutan  could you please test if this removal breaks anything related to mac? the only thing from the code might be the file handling eg double? click on a bib file in the finder  || tested it for a day no issues appeared ||
1,0,0,0,1,1,1,0,0,0,1,1,0,0,1,1,0,1,0,fixed closing of the shared database login dialog if the user enters wrong authentication details - #4857 fix for the issue -  dialog close after pressing ok button #4857 - fixed closing of the shared database login dialog if the user enters wrong authentication details----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,store column widths as integer fixes #4579store column widths as integer <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,throw bibentrynotfound exception in case entry is no longer present fixes #4932 when an entry got removed a npe complaining about an empty database was thrown because of some weird unkownbibtexentry thingnow the correct bibentrynotfound  exception is thrown showing the problematic reference mark<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,fix threading issue with opening from recent libraries fixes #4940on windows 10 i could not reproduce the original exception but im very convinced that i found the threading culprit<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)  
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,adding doi to test entry - fixes #5013 one liner to have also a doi available in the entry to test the preview function@nomicrosoftbuhtz any more suggestions what should be added?----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a loti would like to have some `comments` (in the past it was `notes` wasnt it?) and `groups` and `keywords`how could we handle `issue`? as i understand biblatex `issue` is used when `number` and `volume` does not exists and vis-a-vis i also know that some journals or import/export mechanism generates entries with all three attributesif we are still in wish-modewhat is about the `gettestentrybook()` is it still used?beside an `@article` i would like to see a testentry for `@incollection` (of course combined with a `@collection` entry || only three wishes! -) i also added `issue` `keywords` and `comment` to the test entry `groups` in general would also be possible - but as there are different ways to configure groups (eg based on keywords etc) its hard to configure a preview to show all possibilitiesthe `gettestentrybook()` method is used in the libreoffice settings - but not in the entry preview preferences ||
1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,"select push app in preferences as asked by @tobiasdiez here is my alternative proposal this closes #4991 by mergingfixes #674 closes #3942 and closes #4368<img width""242"" alt""prefpushtoapp"" src""https://user-imagesgithubusercontentcom/50491877/58768088-a9637680-8595-11e9-95cb-5a7f2ac16342png"">this branch is build up on the other branch including the other commits this time by intentioni hope you like it have a good night!----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [x] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) what i really hate is the hardcoding of applicationnames in pushtoapplicationsettingsclass but before there was only some cryptic numbering scheme depending on the order the push-applications were created in the first place at least its a little bit more readable yet i saw no other way without a larger refactoring of this codeready to review || i added some eye-candy you will be charmed -)<img width""330"" alt""select push application"" src""https://user-imagesgithubusercontentcom/50491877/58866242-7a91f100-86b8-11e9-8b9a-7ef0d28385cfpng""> || looks good to me! || ok should be ready again there are still a lot of things that could be done eg refactoring of the preferences-dialog and changing the single tabs to mvvc but i dont want to interfere with the other rework towards 50 and the fate of swing || looks good please check if you can select the push to application multiple times after each other without closing the prefs dialogselect lyx and then again select texstudio for example if it works all is good  || works fine at least if i understood you right i hope so || looks very good to me now thanks again! || you are welcome this was fun - again! lets push jabraf forward towards 50 -) || "
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,add search for citations in latex files (back-end and gui) here is a **latex parser tool** that reads each file line by line parses and analyzes them for detecting different citation formatsits user interface consists of a first dialog box that will **ask the user for a directory** to search tex files then the user could **select specific files** after that the tool parses these files and **shows all the bibliographic entries found** in a new dialog box![latex_parser](https://user-imagesgithubusercontentcom/12954316/61177635-9ef7bc00-a5da-11e9-9f4d-b3cfc45d96c4gif)related issue: [#5002](https://githubcom/jabref/jabref/issues/5002)----- [x] change in changelogmd described- [x] tests created for changes- [x] manually tested changed features in running jabref- [x] screenshots added in pr description (for bigger ui changes)- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot!  ||
1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix double paste on different os fixes #4845 fixes #4699 fixes #4836 upon pasting macos calls the system paste as well as jabrefframeeditaction#execute() this caused a duplicate call of the paste working in linux as well! ||
1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,"revert ""[wip] get jabref running in eclipse"" reverts jabref/jabref#5264  "
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"fix various copy to clipboard issues pt 1: fixing #5263 by only using the text content to be added in the right-click-copy functionality in the preview (see https://githubcom/jabref/jabref/pull/5340/files#diff-b84aeae22f7f719bc60f1ae34ecb39f6)pt 2: right click option in maintable: additionally store content also in string format that can be accessed then with simple text editorspt 3: improve also functionality in ""export to clipboard"" dialogcurrently all ""exporters"" are used for ""export to clipboard"" - however the ones which are creating files like pdfs cannot be used for copying to clipboard - thus they are filtered out now additionally in case rtf or html content is exported the specific clipboardcontent has been used----- [x] change in changelogmd described- [x] tests ~~created~~ adjusted for changes - [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @tobiasdiez if you dont have further objections i would merge it to master ð  ||"
1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,show more than one group color bar shows multiple colored bars if the entry belongs to more than one group (with color) implements #4574![image](https://user-imagesgithubusercontentcom/5037600/65716295-25cb1980-e09f-11e9-9e94-e4a0f3a324cbpng)<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described- [ ] tests created for changes- [ ] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) +1 for left-aligned if one does not know the feature this looks better to meanything else left? || ok left aligned it is ready to merge from my pov ||
1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix for #5369 - fallback to 0 in case stored preview cycle pos does no longer exist fix for #5369problem should in theory not happen as always a correct size should be stored - however if for example csl styles are not loaded properly the mentioned exception in #5369 might occurto prevent this upon creating the preview prefs now the stored cycle position is now compared to the actual list of previews before being set <!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [ ] change in changelogmd described - i think as this is not a common problem can be omitted?- ~~[ ] tests created for changes~~- [x] manually tested changed features in running jabref- ~~[ ] screenshots added in pr description (for bigger ui changes)~~- [x] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- ~~[ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~  
1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,fix exception when merging entries the problem was that `sourcechanged` was invoked asynchronous and thus the information in the change event could be obsolete if another thread changed the underlying list in the meantime solution: run `sourcechanged` on the javafx thread but synchronouslyfixes #5169<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i merged to keep things moving however it would be nice if my code questions would lead no another pr adding comments on the code ||
1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,fix cursor jump fixes #5084 the entry editor was very aggressive and stole the focus from the search bar or from the main table this lead to problems like #5084 where users overwrite the contents of the entry while doing a search moreover it made it impossible to navigate between entries using the arrow keys in the main table both of these issues are fixed now<!-- describe the changes you have made here: what why       link issues by using the following pattern: [#333](https://githubcom/jabref/jabref/issues/333) or [koppor#49](https://githubcom/koppor/jabref/issues/47)     the title of the pr must not reference an issue because github does not support autolinking there -->----- [x] change in changelogmd described- [ ] tests created for changes- [x] manually tested changed features in running jabref- [ ] screenshots added in pr description (for bigger ui changes)- [ ] ensured that [the git commit message is a good one](https://githubcom/joelparkerhenderson/git_commit_message)- [ ] check documentation status (issue created for outdated help page at [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) when you create a new entry the focus should be in the first field does this still hold true?  || @siedlerchr thats a good suggestion but does not even work in the current master something for another pr maybe ||
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,improve change scanner if a file is changed externally jabref is doing a 3-way merge between the last saved value vs current value in jabref vs new value in filethe way this is done is by first comparing the last saved file with the current (changed) file and then trying to find additional/other changes in the currently open database this is really complex and i believe there is some subtle bug in the logic leading to #5257with this pr the change scanner is changed to a to simple 2-way merge between the current value in jabref vs new value in file this is way simpler and i hope this pr fixes #5257in a few edge cases the 2-way merge has a small disadvantage for example consider the following steps:- user a opens file- user a changes field `author` to `user a` and adds field `title` with value `new`- user b opens file- user b changes field `author` to `user b`- user b saves fileat this point user a gets a message that the file changed with the following changes:- field `author` changed from `user a` to `user b`- field `title` was removedthe 3-way merge could detect that `title` was newly added and thus could automatically reapply this change  this is no longer possible with the simple 2-way merge<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> we have to be careful how this works together with a shared database || the shared databases have their own update/sync mechanism but i do agree that this should be made consistent at some point || i am making it consistent <s>in my local dev branch</s> at https://githubcom/jabref/jabref/pull/5669 that one uses the merge entries dialog as it is the case in the shared database dialog does also cover the edge case by @tobiasdiez || is the reference file updated after the conflicts are reported? (is it necessary? i would guess: yes because changes reported should not be reported again - and the reference file is not the bib file on disk)is it possible to add some test cases? || i removed the reference file completely || how hard is it to embed the [merge entries dialog](https://docsjabreforg/finding-sorting-and-cleaning-entries/mergeentries) at the yellow place below?![grafik](https://user-imagesgithubusercontentcom/1366654/69784577-61c14e80-11b6-11ea-9e10-7c782218e908png) || @koppor the merge entries dialog is already consisting of a borderpane called `mergeentries` which can be embedded easily see the `mergeentriesdialog` || minor wish: <kbd>esc</kbd> should be enabled for closing the dialog(refs https://githubcom/jabref/jabref/issues/2949) || @siedlerchr great! may i ask whether you could do it? || i if can wait until this evening or afternoon i can try to add it || improved the pr based on the comments didnt change anything to the ui as this was not the subject of this pr so we are going ahead with this pr and further work on https://githubcom/jabref/jabref/pull/5669 after the release of 50? || this pr has the advantage that its finished and seems to work ð maybe we will offer both possibilities:- transparent merge of changes (#5669)- explicit merge of changes (this pr)@siedlerchr can you do the integration of the merge entries dialog in a separate pr? - this evening is still long and i am really looking forward to it meanwhile ill work on the other pr ||
1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"rename ""lookup fulltext"" to ""download fulltext"" closes #3874 and surpasses #5216does not addresses the follow-up issues mentioned in https://githubcom/jabref/jabref/pull/5216#issuecomment-557589116<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  "
1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,"fix multiple entries allowed in crossref (issue #5284) fixed issue #5284 where multiple entries were allowed in crossref field whereas only one should be allowed https://githubcom/jabref/jabref/issues/5284 i merge even though the co-authored-by-strings are not correct```co-authored-by: julien bÃ©nardco-authored-by: lucas berettico-authored-by: venceslas roullier```source from https://helpgithubcom/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors![grafik](https://user-imagesgithubusercontentcom/1366654/70868277-7015b580-1f7f-11ea-9c54-d6148a87ec51png) || for follow-up: please ensure that ""checkstyle"" runs through there was a wrong import order@julien29121998 did you configure your ide correctly? || nevertheless thank you for putting effort into this looking forward to more contributions! || "
1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,fix for multiple error messages in messed up source editor fixes #5820jabref created a new instance of codearea everytime an entry was selected and bound multiple listeners to the codearea and to the validationstatus in bindtoentry refactored it a little bit so the codearea stays persistent and the error messages are only displayed oncedid some minor refactorings to the other validators and to modulesinfo too to avoid warning messages from the ide and fixed a minor mistake from a previous pr in darkcss no screenshot as there is no visual change- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> thanks for the fix i dont know exactly what  but i remember we had issues with the code area when going up and down in the main table with an open entry editor and also when importing? i know that there was a reason why it was created new every time maybe @tobiasdiez remembers || this should do the trick now apparently javafx fires the focus event after loading the next entry and registering a listener does not mean it is also runwhat i dont understand is the failing gui test it fails somehow during setting the test up trying to call getsourcestring with an empty bibentryit does not fail with a real entry open in jabref but only with the test should i modify the test? || the new fix looks good to!i guess the test fails as `currententry` is null in https://githubcom/jabref/jabref/pull/5823/files#diff-e6eac13930d81c3c9c3ddc47d1b354a9r223you can change https://githubcom/jabref/jabref/blob/master/src/test/java/org/jabref/gui/entryeditor/sourcetabtestjava#l81 to `notifyaboutfocus` ||
1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,"fixes making paths of linked files relative (web urls will not be touched anymore) fixes #5861description:- cleaning up entries with ""make paths of linked files relative (if possible)"" broke web urls and resulted in various other issues subsequently this pr fixes this issueit has been tested for local files and web urls- [x] change in changelogmd described (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> thank you very much for your contribution!fix looks good!  || is there still something i need to do or is everything fine because one check failed? || you can ignore the failing check its just the upload of the binaries which sometimes failsour code quality policy requires a review from a second reviewer for external developers before it can be mergedi think you also should add a changelog entry since its at least an error from the beta/previous version || would a proper implementation of rfc 3986 be an overkill? maybe this could be achieved with a proper regex?https://toolsietforg/html/rfc3986spotted thishttps://stackoverflowcom/questions/30847/regex-to-validate-uris#30858 || @calixtus checking a path as follows could be a simple alternative https://wwwgeeksforgeeksorg/check-if-url-is-valid-or-not-in-java/ but nevertheless i also see advantages with the current approach since it also detects urls as web urls even if they are potentially broken in some way this was the reason why i created it like that i think the main goal is to identify a web url rather than checking its validity || @systemoperator  that should work using new url() in practice and i think should be sufficient for most cases as an indicator || i eg think about the following scenario: given are broken web urls like:- https://www googleat/ <- mind the unintended space character- https://wwwgoogleat/ <- mind the unintended second period- i think in this screnario it is more important to identify whether it is a web url or not rather than making it more strict saying checking whether it is a valid web url because in the case that it would be a invalid web url (as eg shown above) then in this scenario the url would again get cleaned up and thus it will become even more ""destoryed"" as it would be interpreted as a local file url again and many other issues would again show upon the other hand if a broken url gets identified as a web url then it will be processed properly and everything will work out but when opening the url it just cannot be loadedin my opinion this method is all about identifying a web url not validating one (thats why it is called isonlinelink() rather than isvalidonlinelink()) || somewhere i think youre some kind of right too on the other hand where do we want to decide whats still a acceptable and what not? what about ""file://"" (im aware that normally a file path is printed without this here but it still could happen) we also had a few months ago someone here using jabref as database for genetics stuff and not for books (proofing the mutability of jabref)please dont misunderstand me i get your point and i dont exactly know the right answer || before implementing it i thought about many of those things with the current implementation a file link starting with ""file://"" will not be interpreted as a web url anyway so this would be fine as well || at least the javadoc should then be adapted -) || of course i would like to hear @tobiasdiezs recommendation about that as well then i will implement it as desired :) || i think the current implementation is a good compromise in the ideal world the url is valid and a proper validation as @calixtus would be preferable however the data quality we get from some fetchers is suboptimal so that it is a good idea to error on the save side (eg better identify to many paths as web urls) i suggest to merge now and come back to it later if users complain / provide problematic use cases || "
1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,"fix properly resolves orfields of required fields addresses: #5859 and partially #5853this fix adds all entries of orfields of the required fields of entrytypedefinitions to the list of required fields for the tab ""required fields"" of the entry editor- [x] change in changelogmd described (if applicable)- [x] manually tested changed features in running jabref (always required) please resolve the conflicts and fix the checkstyle issue than we can merge || @siedlerchr is there still something i need to do? which checkstyle issue do you mean? || see https://githubcom/jabref/jabref/pull/5903/checks?check_run_id422021255ive fixed it for you and will merge now thanks again for another great pr! ||"
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,try to fix linux pdf opening again fixes #5942  and fixes probably #5882<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> could you please try again with the newest version from this branch?i forgot one method  ||
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,small improvements in preferences dialog changes:- reduces the size of the rarely used import/export/show/reset-preferences buttons to icon buttons to free space to display all of the tabs in the list ( fixes #6038 )- the font size is now controlled by a spinner (a text field with arrows on the right side)- the comboboxes now have valuefactories to properly display the real name of the languages the charsets and the bibdatabasemode which incorrectly displayed `biblatex` instead of `biblatex`- some keyboard events are added to the add-textfields in nameformattertab etc to make usage more intuitive- removed obsolete and non functional `open pdf` settings  ( closes #5529 )![preferences_polish](https://user-imagesgithubusercontentcom/50491877/76712228-efe62400-6716-11ea-84ad-9b331ea046a4png)- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> # [codecov](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&elh1) report> :exclamation: no coverage uploaded for pull request base (`master@10f5468`) [click here to learn what that means](https://docscodecovio/docs/error-reference#section-missing-base-commit)> the diff coverage is `408%`[![impacted file tree graph](https://codecovio/gh/jabref/jabref/pull/6130/graphs/treesvg?width650&tokengocyt97xqp&height150&srcpr)](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&eltree)```diff@@            coverage diff            @@##             master    #6130   +/-   ##  coverage          ?   4162%             complexity        ?     6888             files             ?     1090             lines             ?    46233             branches          ?     5554             hits              ?    19243             misses            ?    25547             partials          ?     1443```| [impacted files](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&eltree) | coverage Î´ | complexity Î´ | ||---|---|---|---|| [/java/org/jabref/gui/desktop/os/nativedesktopjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl05hdgl2zurlc2t0b3auamf2yq) | `0% <Ã¸> (Ã¸)` | `0 <0> (?)` | || [java/org/jabref/gui/desktop/os/defaultdesktopjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl0rlzmf1bhrezxnrdg9wlmphdme) | `0% <Ã¸> (Ã¸)` | `0 <0> (?)` | || [src/main/java/org/jabref/gui/desktop/os/linuxjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl0xpbnv4lmphdme) | `576% <Ã¸> (Ã¸)` | `3 <0> (?)` | || [g/jabref/gui/preferences/externaltabviewmodeljava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9fehrlcm5hbfrhylzpzxdnb2rlbc5qyxzh) | `0% <Ã¸> (Ã¸)` | `0 <0> (?)` | || [/java/org/jabref/preferences/newlineseparatorjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml3byzwzlcmvuy2vzl05ld0xpbmvtzxbhcmf0b3iuamf2yq) | `0% <Ã¸> (Ã¸)` | `0 <0> (?)` | || [src/main/java/org/jabref/gui/desktop/os/osxjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl09twc5qyxzh) | `0% <Ã¸> (Ã¸)` | `0 <0> (?)` | || [c/main/java/org/jabref/gui/desktop/os/windowsjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9kzxnrdg9wl29zl1dpbmrvd3muamf2yq) | `0% <Ã¸> (Ã¸)` | `0 <0> (?)` | || [va/org/jabref/gui/preferences/externaltabviewjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9fehrlcm5hbfrhylzpzxcuamf2yq) | `0% <Ã¸> (Ã¸)` | `0 <0> (?)` | || [/org/jabref/gui/preferences/appearancetabviewjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9bchblyxjhbmnlvgfivmlldy5qyxzh) | `0% <0%> (Ã¸)` | `0 <0> (?)` | || [/org/jabref/gui/preferences/xmpprivacytabviewjava](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree#diff-c3jjl21haw4vamf2ys9vcmcvamficmvml2d1as9wcmvmzxjlbmnlcy9ybxbqcml2ywn5vgfivmlldy5qyxzh) | `0% <0%> (Ã¸)` | `0 <0> (?)` | ||  and [9 more](https://codecovio/gh/jabref/jabref/pull/6130/diff?srcpr&eltree-more) | |------[continue to review full report at codecov](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&elcontinue)> **legend** - [click here to learn more](https://docscodecovio/docs/codecov-delta)> `Î´  absolute <relative> (impact)` `Ã¸  not affected` `?  missing data`> powered by [codecov](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&elfooter) last update [10f5468c015a82](https://codecovio/gh/jabref/jabref/pull/6130?srcpr&ellastupdated) read the [comment docs](https://docscodecovio/docs/pull-request-comments) || lgtm just one minor issue: its called biblatex (all lowercase not biblatexwe had the confirmation from the official authors that its should be all lowercase  || > lgtm just one minor issue: its called biblatex (all lowercase not biblatex> we had the confirmation from the official authors that its should be all lowercasedoh || could you please fix the checkstyle issue (introduced from another commit but so we can merge)[ant:checkstyle] [error] /home/runner/work/jabref/jabref/src/main/java/org/jabref/gui/exporter/saveactionjava:14:28: { is not followed by whitespace [whitespacearound] ||
1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"allow reordering of custom entry types fields additionally restore the old multiline property and make it configurablecurrent status:- adding/removing/reordering works- removing standard entry types has no effect (they are always readded if deleted- sort fields alphabetically? would that effect the order? needs investigation> cannot sort it influences the save order refs #5230 and #4373fixes  #6338<!-- describe the changes you have made here: what why  link issues by using the following pattern: #333if you fixed a koppor issue link it with following pattern: [koppor#47](https://githubcom/koppor/jabref/issues/47)the title of the pr must not reference an issue because github does not support autolinking there--><!-- - all items with `[ ]` are still a todo- all items checked with `[x]` are done- remove items not applicable-->- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues> linkedhashset is no solution either as the standard fields are always inserted firsttodo check it again || @tobiasdiez i currently have the problems that in my hashmap which contains entry types with their corresponding fields the fields order is not updated if i change them via drag and drop in the main tablethis is logical because the fieldswithtypes  is not an observableany idea how i can do this with some binding foo? can i add some observabelist to that map?https://githubcom/jabref/jabref/pull/6152/files#diff-8313b29670cb7c9bc50c020e1b2b5f17l80-r101 || im not sure what exactly you mean a `map<entrytype observablelist<field>>` does not work? || i tired it but its a bit more complicated i think (or maybe i am thinking too complicated)i would need to bind a listproperty to the values collection of my mapand then i would need to change that listproperty (fieldsfortype) content based on my selected entry types currently i am doing this more or less manually```    private final listproperty<fieldviewmodel> fieldsfortype    private final observablelist<fieldviewmodel> allfieldsfortype  fxcollectionsobservablearraylist(extractor -> new observable[] {extractorfieldname() extractorfieldtype()})      for (bibentrytype entrytype : alltypes) {            list<fieldviewmodel> fields  entrytypegetallfields()stream()map(bibfield -> new fieldviewmodel(bibfieldgetfield() entrytypeisrequired(bibfieldgetfield()) bibfieldgetpriority() entrytype))collect(collectorstolist())            typeswithfieldsput(entrytype fxcollectionsobservablearraylist(fields))        }                thisfieldsfortype  new simplelistproperty<>(allfieldsfortype)        easybindsubscribe(selectedentrytypes type -> {            if (type ! null) {                allfieldsfortypesetall(typeswithfieldsget(type))            }        })``` || i guess the following might work:- create your `map<entrytype observablelist<fields>> entrytypeswithfields` - when the user selects an `entrytype` then set `fieldsfortype` to `entrytypeswithfieldsget(entrytype)` it is important that you set really the observable list and not the contents of the list (ie not `setall`)by the way the whole map construction seems to be overly complicated why not create a `entrytypeviewmodel` that wraps a given entry type and also contains an observable list of fields then you can have a simple observable list of entrytypeviewmodels which you can bind to the list and then bind the contents of the field list to the observable list of the current entry type || @tobiasdiez  sometimes when i go up and down in the dialog and switch between the entry types suddenly the fields are empty any idea what this means or why this occurs?  || the issue with the delete on change is fixednow i think i encountered a bug with the entrytypesmanager parsing if a custom entry type has only required or optional fields (eg one of the fields array is empty) a ""ghost"" bib field is createdneed to invesitgate this ![grafik](https://user-imagesgithubusercontentcom/320228/84420329-2b12c900-ac1a-11ea-938b-4c9fb3a55598png) || todo: 1 modify type article add field langid2 make optional 3 move after number4 save5 reopen dialog> langid field is no longer after number it has moved to a different positionproblem possible: in bibentrytypesmanager```   public sortedset<bibentrytype> getalltypes() {            sortedset<bibentrytype> alltypes  new treeset<>(customormodifiedtype)            alltypesaddall(standardtypes)            return alltypes        }``` || yeah! i found the bug:custom entry types order is now correctly stored and also applied to entry editor!![grafik](https://user-imagesgithubusercontentcom/320228/85931460-d41d1d00-b8c4-11ea-9f22-56a42ee58aadpng) || "
1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,"include ""append"" functionality in the ""import entries dialog"" needs testing @stefan-kolb maybe? ð fixes #6049co-authored-by: christoph <siedlerkiller@gmailcom>co-authored-by: tobias diez <tobiasdiez@gmxde>co-authored-by: carl christian snethlage <50491877+calixtus@usersnoreplygithubcom>  "
1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,"add tooltips for all entry types for #6074 the pull request refers to issue #6074 by @systemoperator change: add tooltips in the ""select entry type"" dialog you can see the tooltip when hovering a button of an entry typeremaining: add those tooltips in the left side of the entry editor and in the main table when clicking ""change entry type""fixes #6074 still havent figured it out yet how to implement the remaining stuff so any help would be much appreciated!and please let me know what you think of my implementation so far! @dimitra-karadima right clicking an entry in the main table callshttps://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l50which further callshttps://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l57-l58 || @siedlerchr i have noticed that the entry types `patent` and `periodical` as well as the type alias `electronic` do not exist in `standardentrytypejava` but `suppperiodical` exists and other type aliases as well (acutally all other types except those three exist) is there a special reason for that? || > > > @siedlerchr i have noticed that the entry types `patent` and `periodical` as well as the type alias `electronic` do not exist in `standardentrytypejava` but `suppperiodical` exists and other type aliases as well (acutally all other types except those three exist) is there a special reason for that?some of those types eg patent were from the ieetran package but are now also in the official biblatex package i dont know if those package is still in use but i guess it was just historical reasons why they are there maybe @koppor  can enlighten ushttps://ctanorg/pkg/ieeetran?langde || > @systemoperator check my latest commit! and if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful! i am new to the project and open source in general so i am a little bit lost!@dimitra-karadima you can add the tooltips by adapting the methodhttps://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l33-l42to something like the following minimal working example:```java    public static menuitem createmenuitem(entrytype type bibentry entry undomanager undomanager) {        custommenuitem menuitem  new custommenuitem(new label(typegetdisplayname()))        menuitemsetonaction(event -> {            namedcompound compound  new namedcompound(localizationlang(""change entry type""))            entrysettype(type)                 ifpresent(change -> compoundaddedit(new undoablechangetype(change)))            undomanageraddedit(compound)        })        tooltip tooltip  new tooltip(""descriptional tooltip"")        tooltipinstall(menuitemgetcontent() tooltip)        return menuitem    }```so you basically replace `menuitem` with `custommenuitem` and configure it as shown abovethe good thing is that this will set the tooltips for both pending cases:- when changing the entry type in the entry editor (left side of the entry editor)- when right clicking a reference in the main table and clicking `change entry type`:smile: || > > > > @systemoperator check my latest commit! and if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful! i am new to the project and open source in general so i am a little bit lost!> > @dimitra-karadima you can add the tooltips by adapting the method> > https://githubcom/jabref/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/changeentrytypemenujava#l33-l42> > to something like the following minimal working example:> > ```java>     public static menuitem createmenuitem(entrytype type bibentry entry undomanager undomanager) {>         custommenuitem menuitem  new custommenuitem(new label(typegetdisplayname()))>         menuitemsetonaction(event -> {>             namedcompound compound  new namedcompound(localizationlang(""change entry type""))>             entrysettype(type)>                  ifpresent(change -> compoundaddedit(new undoablechangetype(change)))>             undomanageraddedit(compound)>         })>         tooltip tooltip  new tooltip(""descriptional tooltip"")>         tooltipinstall(menuitemgetcontent() tooltip)>         return menuitem>     }> ```> > so you basically replace `menuitem` with `custommenuitem` and configure it as shown above> > the good thing is that this will set the tooltips for both pending cases:> >     * when changing the entry type in the entry editor (left side of the entry editor)> >     * when right clicking a reference in the main table and clicking `change entry type`> > > ð@systemoperator thanks for your help! i have added the tooltips and in the change entry type please take a look and let me know what you think! || @dimitra-karadima i wanted to merge but some tests are still failing can you please have a look at them thanks! || > > > @dimitra-karadima i wanted to merge but some tests are still failing can you please have a look at them thanks!@tobiasdiez i tried to solve some issues but it is not very clear to me what to do in order to pass the failing checks if you could help me in any way would be much appreciated! || @dimitra-karadima try to merge in the latest upstream/master branch in your branch taht shoudl resolve most problems || > > > @dimitra-karadima try to merge in the latest upstream/master branch in your branch taht shoudl resolve most problems@siedlerchr thanks for your input but unfortunately it didnt work i dont know what to do because my master branch also fails these tests is it possible that i have done any mistake while building the project in eclipse? || hm this is odd  i will test it locally || @dimitra-karadima  the issue was the checkstyle configuration which has still some issues with jdk14 features (the switch expression for example) i merged your pr and updated the config to exclude your file || > > > @dimitra-karadima the issue was the checkstyle configuration which has still some issues with jdk14 features (the switch expression for example) i merged your pr and updated the config to exclude your file@siedlerchr thank you so much for your help! || "
1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,"add disable/enable calculation of items in group fixes #6042 this is my first pull request to a project (new java developer) **add:** disable/enable calculation of items in groupi realized that groupnodeviewmodeljava class uses method ""calculatenumberofmatches"" to get number of items looks like it uploads full database from disk every time you need to calculate no of items in group therefore if you have 1 thousand groups it will read the entire database 1 thousand times ui changes:- added new checkbox in preferences/groups - ""display quantity of items in group""- added new property display_group_quantity to jabrefpreferencesjava file- connected new checkbox with jabrefpreferencesjava i used another preferences as a samplelogic changes:- i added link to jabrefpreferences in grouptreeview class if user wants to display groups quantity a panel with quantity will be shown quantity is calculated when groupnodeviewmodel class is initialized so i decided to wrap a panel into an ""if"" statementtests passed  thanks for your contribution and thanks for investigating:>looks like it uploads full database from disk every time you need to calculate no of items in group therefore if you have 1 thousand groups it will read the entire database 1 thousand timescould you add some details on this problem so maybe we are able to fix the underlying issue as well || good dayi was working on this issue: [https://githubcom/jabref/jabref/issues/6042](url)it says jabref starts slowly if you have a lot of groups proposed improvement: disable calculation of items quantity in groupkind regardsgennadiy || oh i was a bit quick with merging just saw that the code only influences the display of the hit number but the cost intensive process is the actual calculation of this number which still happenscould you please open a follow-up pr which makes sure that the calculation is also not done thankshttps://githubcom/jabref/jabref/blob/b5d5ed00e075e66fcbd34a1ac0cac37d1ee7d9ce/src/main/java/org/jabref/gui/groups/groupnodeviewmodeljava#l228-l236 || hisorry my bad i saw this last week and forgot today in the morning would you mind if i add preferencesservice to groupnodeviewmodel?`@inject private preferencesservice preferencesservice`in this case my ""if"" statement goes from grouptreeview to groupnodeviewmodel (calculatenumberofmatches() method) like this: ```    private void calculatenumberofmatches() {        // we calculate the new hit value        // we could be more intelligent and try to figure out the new number of hits based on the entry change        // for example a previously matched entry gets removed -> hits  hits - 1        if (preferencesservicegetdisplaygroupcount()) {            backgroundtask                    wrap(() -> groupnodecalculatenumberofmatches(databasecontextgetdatabase()))                    onsuccess(hits::setvalue)                    executewith(taskexecutor)        }    }```ok? || we can also remove calculatenumberofmatches() from groupnodeviewmodel constructor and have 2 options:option no 1- insert calculatenumberofmatches() into gethits() method before returning a value to grouptreeviewoptions no 2- create a public method gethitsfromdatabase() (having calculatenumberofmatches inside) and call it from grouptreeview before calling gethits() but only if count of if tems in groups is enabled || i think the solution you proposed in https://githubcom/jabref/jabref/pull/6233#issuecomment-609422615 is perfect! || "
1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,number of items found in importentriesdialog this pr finishes the abandoned pr from cloudfenrir (closes #5740)![grafik](https://user-imagesgithubusercontentcom/50491877/78508642-ab373100-7788-11ea-951e-27c1687aeb80png)- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for bigger ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not: issue created at <https://githubcom/jabref/user-documentation/issues>  
1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"showing correct icon on main table linked files column <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6169 hello i have fixed the bugs that appear in the icon of the linked file column i create a draft pull request if there are breaking any contribution rules please let me know if everything is ok i will create a pull request then i have tested to import some format of doc just a simple test of docx pptx and pdf format files![image](https://user-imagesgithubusercontentcom/31007740/78802067-f30bc180-79ef-11ea-87bc-d6859b2c77b4png)about the source code i have a question: i found the wrong icon still shows in the general -> files list which only shows pdf icon no matter what format of files attached then i found orgjabrefguifieldeditorslinkedfileviewmodel#gettypeicon() which directly indicate the icon to pdf which seems like the source of the bug there is a todo comment above which seems like this bug has already discovered then i went through the issue list and tried to find some relevant thing to this bug (todo) but nothing found i would be happy if you can provide more info about it thanks ^_^![image](https://user-imagesgithubusercontentcom/31007740/78802219-28181400-79f0-11ea-8ca8-c025b8515d8bpng)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for your instructions! im not very familiar with the code in fact really appreciate that you can indicate the source of the problem i will try again for the addition bug (i think) i will try to work on it and thanks for your tips || nice to hear! you can also reuse this pr if you want (just push your updates to the same branch)  || please be aware that a ""linkedfile"" can also be a http url or link i dont know if this is actually considered in the file type || ok i will reuse this pr next time i want to commit some code@siedlerchr thanks for your additional tips which i have not considered yet i will review the source code carefully || <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6169 and finish the todo additional feature which has mentioned beforehello i have fixed the bugs that appear in the icon of the linked file column and finish the additional feature i create a draft pull request if there are breaking any contribution rules please let me know if everything is ok i will create a pull request then i have tested to import some format of doc just a simple test of docx pptx and pdf format files![image](https://user-imagesgithubusercontentcom/31007740/78802067-f30bc180-79ef-11ea-87bc-d6859b2c77b4png)![image](https://user-imagesgithubusercontentcom/31007740/79324610-707c8800-7f42-11ea-8153-e9bca13888d5png)for the bugs i found that is coming from the wrong filter i think it should be a mistakefor the additional features i was using the same method in: https://githubcom/jabref/jabref/blob/8968ccfd5d39d66a080ef0b6c6bbd4e8b0a7d543/src/main/java/org/jabref/gui/maintable/maintablecolumnfactoryjava#l412-l416i think the modification wont do any harm to other code<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository || i have finished the changing of changelogmd and the deletion of todo comments thanks for your instructions! @tobiasdiez @siedlerchr  || perfect! thanks again for your contribution and hope to see the next pr from you soon! || > perfect! thanks again for your contribution and hope to see the next pr from you soon!im searching for our next target issue ^_^ || "
1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,"make wrap fields also visible in entry editor fixes #4373i simple reused the fieldformatterpreferences wrapfieldlist more like a hackthe original multiline property got removed in #5230a more elegant solution would be to maybe add this to the custom entry types dialog?<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i would leave a proper implementation for the future this depends also a bit on #6152  || pinghow do we proceed here? || i m merge this now and will work on a more clean solution ||"
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix various dark theme issues related issues: #5522  #5699 - [x] dragndrop text![image](https://user-imagesgithubusercontentcom/34676841/80455105-72275200-892b-11ea-92d5-a8a60c088b20png)- [x] dialogs![image](https://user-imagesgithubusercontentcom/34676841/80455194-9f740000-892b-11ea-8beb-06059c51ee7bpng)![image](https://user-imagesgithubusercontentcom/34676841/80455257-b6b2ed80-892b-11ea-843c-a1caa061e781png)![image](https://user-imagesgithubusercontentcom/34676841/80455353-dcd88d80-892b-11ea-95b6-513272c9530epng)the issue is that i dont find the dialogs graphics (eg the confirmation image) adequate so maybe create custom ones for the dark theme (or remove them)?- [x] scroll panethe scroll pane is quite visible (at least on my side) so i dont know if that issue has been considered as resolved or not?![image](https://user-imagesgithubusercontentcom/34676841/80455595-596b6c00-892c-11ea-8280-945f800426b8png)- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository changes regarding the scroll bar:![image](https://user-imagesgithubusercontentcom/34676841/80480932-d0672b80-8951-11ea-93e2-dd1c155db64bpng)on hover:![image](https://user-imagesgithubusercontentcom/34676841/80480942-d52bdf80-8951-11ea-9b2c-f4abe967501bpng) || perfect thank you again! ||
1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,disable the generate button if the id field is empty fixes #6370 - [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks looks good to me!ps: if you write `fixes #12345`  in the body (fixes followed by issue nunber without the code tags) github will close the issue automatically on merge || thanks again for your contribution! ||
1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,fix underscore character being omitted from file name in recent libraries list fixes: #6383 ![image](https://user-imagesgithubusercontentcom/34676841/80824286-6b743580-8bde-11ea-8555-20569278d326png)- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository perfect thanks for the quick follow-up! ||
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,"fix autocomplete thread fixes #6453the autcomplete binding was triggered when a cleanup called setbibentry from a background thread<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,enable users to simultaneously search all searchbasedfetchers this pr enables users can send queries to all e-libraries simultaneously through the `websearchpane` ref [#369](https://githubcom/koppor/jabref/issues/369)it adds a new `searchbasedfetcher` called `compositesearchbasedfetcher` that delegates the query to all of the fetchers it is composed of and merges the fetched results in  `webfetchersgetsearchbasedfetchers`  a `compositesearchbasedfetcher` is added that contains all `searchbasedfetchers` if this pr gets approved an additional [documentation entry](https://docsjabreforg/finding-sorting-and-cleaning-entries) has to be added- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository > it would be nice if you could some more fetchers to your test and also test what happens when one fetcher returns an errori replaced the tests with parameterized tests || > thanks for your contribution i like the idea!im happy about that!> for now only a initial impression after scrolling through the code: did you test it in a running jabref?i tested it with a few queries and it worked so far ^^  > im somewhat afraid that this quickly leads to jabref being blocked by some databases since it issues quite a lot of requests  moreover if i understand the implementation correctly then every fetcher is always asked which should lead to quite a huge list of returned entries (probably with perhaps many duplicates)one option might be to offer the user a way to configure which fetchers to include?in my current implementation i do not offer any post-processing yet i think doing post-processing in the fetcher is not a great design idea what do you think? :) where should i implement the post-processing of the fetched entries? || jaxb refs #6350  and https://githubcom/jabref/jabref/issues/6302 ||
1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,"return true in action helper if file is online link otherwise it will be interpreted as path which obiously failsfixes #6507<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->~~- [ ] change in changelogmd described (if applicable)~~ dev version only- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,"fix exception for unlinked files <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #5815 exception when importing certain unlinked local files1 for some certain files they have metadata but cannot find start or end tag so cause exception i added statements to check if can find start or end tag and if the position of start tag before end tag in metadata2 original `private list<path> getfilelistfromnode(checkboxtreeitem<filenodewrapper> node) ` method just can find children nodes so causes that files under subfolder cannot be found then cannot be imported i modified this method to iterate find all selected leaf nodes<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository just another wish it would be really cool if you could a test for the fix in the xmputilreader as well see  `xmputilreadertest` || ok ill try || done || done || thanks for the quick follow up! ||"
1,0,0,1,0,1,1,0,1,0,1,1,1,1,1,1,0,0,1,"validates the file path of a texgroup and fixes texgroups ""library has been modified by another program"" fixes #6420fixes #6585- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i dont know where to put `import orgapachelogginglog4jcoreutilfileutils` wherever i put it checkstyle fails || @systemoperator  we have our own fileutil class in model or logic beware of the import  || checkstyle is failing because of now unused import iofile || apparently this pr also fixes #6394 at least i could not reproduce it so far i will test it onwards || > just to make sure that i understand the changes correctly: the issue is fixed by parsing the groups last?yes because the groups access data which need to be defined beforehand depending on the sequence in the entry set this may work once but not every time || now without stream^^any suggestion how to test the case mentioned at https://githubcom/jabref/jabref/pull/6586#pullrequestreview-425395135? || the code looks good to me! for the test it should be similar to the following:https://githubcom/jabref/jabref/blob/7cc57474b7aa991ef6ea148d4030d4bb68ee69bf/src/test/java/org/jabref/logic/importer/fileformat/bibtexparsertestjava#l1369-l1389create the string by hand (with groups before the other setting that makes troubles) and then verify that the groups in the parsed metadata has the valid data || the test was a bit tricky (access real file relative user name hostname ) but it works now ||"
1,0,0,1,0,1,1,0,1,0,1,1,1,1,1,1,0,0,1,"validates the file path of a texgroup and fixes texgroups ""library has been modified by another program"" fixes #6420fixes #6585- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository i dont know where to put `import orgapachelogginglog4jcoreutilfileutils` wherever i put it checkstyle fails || @systemoperator  we have our own fileutil class in model or logic beware of the import  || checkstyle is failing because of now unused import iofile || apparently this pr also fixes #6394 at least i could not reproduce it so far i will test it onwards || > just to make sure that i understand the changes correctly: the issue is fixed by parsing the groups last?yes because the groups access data which need to be defined beforehand depending on the sequence in the entry set this may work once but not every time || now without stream^^any suggestion how to test the case mentioned at https://githubcom/jabref/jabref/pull/6586#pullrequestreview-425395135? || the code looks good to me! for the test it should be similar to the following:https://githubcom/jabref/jabref/blob/7cc57474b7aa991ef6ea148d4030d4bb68ee69bf/src/test/java/org/jabref/logic/importer/fileformat/bibtexparsertestjava#l1369-l1389create the string by hand (with groups before the other setting that makes troubles) and then verify that the groups in the parsed metadata has the valid data || the test was a bit tricky (access real file relative user name hostname ) but it works now ||"
1,0,0,1,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,"medra doi fetcher implementation fixes #6602 i added the possibility to retrieve doi metadata from medra agency some dois return 500 code even if they are correctly registered at medra im waiting for the medra team to answer on that- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository in general looks already good! ð it would also be nice if you could add a/some tests for the new feature || looks good so far i only noticed one failing test you have to add the medra fetcher to the test array in orgjabreflogicimporterwebfetcherstest could you also please add one test case to the existing doi fetcher to check that it returns the correct value from medra? || ok i added a test case to doifetcher passedregarding the test array in orgjabreflogicimporterwebfetcherstest if ive correctly understood the logic i think i should remove medra fetcher in the below method instead of adding in this way tests are passed``` @test    void getsearchbasedfetchersreturnsallfetcherderivingfromsearchbasedfetcher() throws exception {        set<searchbasedfetcher> searchbasedfetchers  webfetchersgetsearchbasedfetchers(importformatpreferences)        try (scanresult scanresult  classgraphscan()) {            classinfolist controlclasses  scanresultgetclassesimplementing(searchbasedfetcherclassgetcanonicalname())            set<class<?>> expected  new hashset<>(controlclassesloadclasses())            expectedremove(searchbasedparserfetcherclass)            // remove acm because it doesnt work currently            expectedremove(acmportalfetcherclass)            // remove grobid because we dont want to show this to the user            expectedremove(grobidcitationfetcherclass)            // remove medra because it only works for id based search            expectedremove(medraclass)            assertequals(expected getclasses(searchbasedfetchers))        }    }```if you think this could be a proper approach i will commit || still checkstyle issues ill work on that || are you using intellij? then you can import the style and let the ide format your changes and organize the imports || nope eclipse || for the imports you can use ctr+ shift +o will organize the imports || i believe this has been a really great lesson for me since ive gone through several never encountered issues i hope this will be released at the end so i can move forward to another issuethanks a lot for your patience and guiding advices  || once your pr is merged in master it will be available in the next automatic build of development version https://buildsjabreforg/master/ || i think something went wrong with the merge of master into this branch need to investigate manually before merginggeneral remark: the discussion in this pr seems to be long?- are respective code comments added?- might it be necessary to add an [adr](https://adrgithubio/madr/)? || hi @koppor thanks for the feedbackone of the last commit was rejected with non-fast-forwarding error so i tried to pull the medra-fretcher branch back to local and then push back only the last changes could this have messed up something? and most important is there anything i should/could do for example creating new branch and work the implementation there?about comments i inserted a few lines in the code where i thought they could have help is this you are referring to?about adr probably i need some more instructions is it something i should do on my own?thanks again || live update: this commit is ok: https://githubcom/jabref/jabref/commit/81d5cc395b8704e17015659ec9d1b3065922ecc9 this one is not: https://githubcom/jabref/jabref/pull/6641/commits/85fc98f2305cb4c32074270bd3f1ef1d6adb216b have to think longer of how to solve itregarding the adr: the adr is something signifcat which cannot be put into a javadoc / comment alone i think your doi regsitry thing is something like that -- maybe its engough to have it in the javadoc / comment in this case - as its not such a significant thing such as selecting a build tool see https://githubcom/jabref/jabref/tree/master/docs/adr for adr examples || last commit https://githubcom/jabref/jabref/pull/6641/commits/a1089743739ddf9a1df58018028ab90e7267088b with some git magic i created 4f96aab which should revert all wrongly added changesnow im going to review || @mind000 why did you close this pr? did you delete the branch? i think it should only be necessary that you pull your branch hope i did not confuse you that i updated your branch! || i havenât done anything  || i was just moving through the comment in the github app form mobile itâs strange i didnât close it or i havenât done it intentionally what should i do? should i reopen it? || just clicked on ""reopen pr"" and everything is back to normal - hopefully ð with a ""git pull"" you should get the fixes in locally || i must thank you for the time you spent on this really i do sincerely appreciate your comments because thatâs what i need and i understand  your point i will work on them  || thanks for your contribution @mind000 and the quick follow up! we hope you werent frightened by our reviews ) and we hope you will continue contributing!  || shit saw this only after merge:orgopentest4jassertionfailederror: the following classes are not allowed to depend on orgjabreflogic > expected: <[]> but was: <[src/main/java/org/jabref/model/entry/identifier/doijava]> || > shit saw this only after merge:> orgopentest4jassertionfailederror: the following classes are not allowed to depend on orgjabreflogic > expected: <[]> but was: <[src/main/java/org/jabref/model/entry/identifier/doijava]>anything i should do?this happened when i moved the `getagency` from `doifetcher` to `doi` || the idea behind our [high-level architcutre](https://devdocsjabreforg/getting-into-the-code/high-level-documentation) is to have the model as model package we are aware this leads to an [anemic domain model](https://wwwmartinfowlercom/bliki/anemicdomainmodelhtml)not sure whether downloading things should be part of a **model**think this is a devcall thing we should discuss whether we want to ""undo"" the seperation of model and logic what are our ""limits"" in model? @stefan-kolb  || as the build is broken now i would vote to simply change it back to the original eg move the agency fetching back to the fetcher || what should i do now?  || @mind000  just create a new pr where you move the doi agency getting back to the doifetcher class that is the simplest solution and this would not destroy our architecture constraints || so if i got it right i have to push the same files as the last commit i made changing only the getagency location  || as the code is already merged into masteryou fetch and pull the upstream master in your local masterthen you create a new branch and then you just move the getagency back todoifetcherthen you commit your changes and push your new branch and create a new pram mo 13 juli 2020 um 09:02 uhr schrieb giovanni caldarola <notifications@githubcom>:> so if i got it right i have to push the same files as the last commit i> made changing only the getagency location>> â> you are receiving this because you modified the open/close state> reply to this email directly view it on github> <https://githubcom/jabref/jabref/pull/6641#issuecomment-657392947> or> unsubscribe> <https://githubcom/notifications/unsubscribe-auth/aacofzb6kfry2ywrd7kqbytr3kwrrancnfsm4ojdhzda>> > || for internal referencre: follow-up pr is https://githubcom/jabref/jabref/pull/6683thus everyhting should be fine now || "
1,0,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,add collection of comp sci bibliographies fetcher fixes #6638- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for your contribution! it would be nice if you could add some short documentation for the new formatters and the new fetcher to the help pages  || help page for formatters: https://githubcom/jabref/user-documentation/blob/master/en/finding-sorting-and-cleaning-entries/cleanupentriesmd --> https://githubcom/jabref/user-documentation/blob/master/en/advanced/saveactionsmdhelp page for fetchers: https://githubcom/jabref/user-documentation/tree/master/en/collect/import-using-online-bibliographic-database || yep ill add to the documentation! ||
1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,fixed issue 6692 fixes #6692 renamed listbind to bindcontent where it was used  
1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,"delete link after download fixes #6588<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository replaced `optional<integer>` by `int` as we directly operate on the list and do not use the full power of `optiona` || i dont really think that the new version is much more readable but ok || @koppor please test 1 pre-condition: entry with link (in the file field)2 right-click: download3 link should be replaced || tried it out locally works![grafik](https://user-imagesgithubusercontentcom/1366654/89350528-7f817480-d6b0-11ea-889a-7fe3532ebf21png) ||"
1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,merge identical group color indicators fixes #6175 this pr finishes the prs of @wangaooa (see #6566 ) and does some cleanup in the maintablecolumnfactory: linkedidentifiercolumn filecolumn and specialfieldcolumn is now extracted in separate classes- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```wangaooa``` || the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```marcel luethiwangaooa``` || the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```marcel luethiqingshiqingliuwangaooa``` || checkstyle is happy again so i am merging ||
1,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,fix more fetchers this pr fixes fetchers (refs #6369):- add cleanup for library of congress- springerlink now uses the springernature api key (same key can be used) - refs #6729- add url logger for ieee (and other fetchers)---- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,"fixes #6705  added icon for multiple identifiers added icon for multiple identifiersand modified behaviour to open eprint when clicked without opening menuissue 1 :  icon for linked identifiers does not change when more than one entry is linkedthe web material design glyphicon did not have a ""plural"" variant so thought will change to this for singular variant![screenshot from 2020-08-30 11-34-19](https://user-imagesgithubusercontentcom/13389954/91652449-1a554f00-eab5-11ea-910e-9ca7c7943b6epng)and for the plural variant used this :smile:  can change this to something else too ![screenshot from 2020-08-30 11-34-46](https://user-imagesgithubusercontentcom/13389954/91652464-4244b280-eab5-11ea-8b8e-aec0dd54c7c2png)issue 2 :made changes so that when only one entry is available the link is opened immediately without the menu- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository hi @hemantgs  thanks for your work i will look at it the next days || > thanks a lot for your contribution!> @tobiasdiez  :+1: glad to help > the code looks good to me and ive only a few very minor remarks concerning the icon im also not sure what to choose there doesnt seem to be a good icon for multiple links the database icon is already used in a few places (groups and shared database) so im a bit hesitant to use it here as well what about using the `link` and `link-variant`? other solution would be to keep the current `www` and use `earth` for multiple links?yeah my initial thoughts too  database icon is common this is `link`![screenshot from 2020-08-31 21-55-10](https://user-imagesgithubusercontentcom/13389954/91743118-f4bf6700-ebd4-11ea-967c-5a9b9190144dpng)and this is `link-variant `![screenshot from 2020-08-31 21-55-32](https://user-imagesgithubusercontentcom/13389954/91743168-06087380-ebd5-11ea-8b8f-1802296cf668png)and `earth` below does not look like indicating multiple entries  i feel![screenshot from 2020-08-31 22-02-15](https://user-imagesgithubusercontentcom/13389954/91743585-aa8ab580-ebd5-11ea-8362-c19a18b531afpng) || > greetings from the jabcon2020!was wondering what this was :smile:  google was not helpful || thanks for your work @hemantgs  we took the liberty to fix some small merge errors ||"
1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,doi matching in duplicate check fixes #6707 follow up from #6756<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the [authors file](https://githubcom/jabref/jabref/blob/master/contributingmd#author-credits) in case you want to use a different one please comment here and [adjust your name in your git configuration](https://docsgithubcom/en/github/using-git/setting-your-username-in-git) for future commits```andrewandrew kuncevich``` || @ku drew your problems probably came from the fact that your repos master branch is behind the naster branch of jabref1 on the commandlne check that git remote -v has listed sth like `upstream git@githubcom:jabref/jabrefgit` (can also the https link)if not then do:` git remote add upstream git@githubcom:jabref/jabrefgit `(if you use ssh otherwise use the https link)2 git checkout master3 git merge upstream/masterthen you master branch should be even with jabrefs upstream branch so creating a new branch and creating a pr wont poroduce any conflicts ||
1,0,0,1,0,1,1,0,1,0,1,0,1,1,1,1,0,0,1,"fixed incorrect color of identity column header fixes #6796 added style for identity column header see column with ""#"" previously it had different colour <img width""561"" alt""screenshot 2020-10-05 at 09 16 04"" src""https://user-imagesgithubusercontentcom/20572030/95049286-1b038580-06f2-11eb-88a2-3f453d475d37png""><img width""561"" alt""screenshot 2020-10-05 at 09 21 34"" src""https://user-imagesgithubusercontentcom/20572030/95049299-1fc83980-06f2-11eb-90dd-a4e81ad412afpng"">- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,"fixes exception in preview using regexp search and regexp search without specified field <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6777  the issue originates in how the javascript regexp is created in `previewviewer#highlightsearchpattern`1 fixes the use of regexp while searching for one term (eg `liu*`)2 fixes exception in the preview when forward slash is used in the regexp<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] ~change in changelogmd described (if applicable)~- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] ~screenshots added in pr description (for ui changes)~- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository is there a good spot to put test cases for this issue? || this pr can be made better by some larger reformatting but there might not be a point to doing it given that the code should be completely replaced by lucene || i think its not too important to have the highlighting that accurate for each complicated regex and yeah in the longterm we plan to use/convert to lucence and thanks for finding the issue with the grammar based search + the regex!  || as you are at the search code and as you also worked on the unicode normalization can you maybe check that issue here as well? https://githubcom/jabref/jabref/issues/6815 || > as you are at the search code and as you also worked on the unicode normalization can you maybe check that issue here as well? #6815sure will do ! || > i think its not too important to have the highlighting that accurate for each complicated regex and yeah in the longterm we plan to use/convert to lucencei agree and i havent really looked into this in enough detail to contribute there are definitively still going to be other issues after this pr it just aims to address the most obvious cases of the `/` exception> and thanks for finding the issue with the grammar based search + the regex!thank you for the sanity check and help it is both appreciated and saves me time ^^ || > may i ask whether its possible to add a test case for the fixed functionality?ill look into it tomorrow i dont have any experience writing tests for this type of code but there should be some ""template"" i can use elsewhere || regarding tests you are lucky as there is already one: https://githubcom/jabref/jabref/blob/master/src/test/java/org/jabref/model/search/rules/containbasedsearchruletestjava(please also refactor the bibentry to ""withfield"" ) || i keep running into the same issue with creating a `previewviewertest````javabibdatabasecontext databasecontext  new bibdatabasecontext()statemanager statemanager  new statemanager()statemanagersetsearchquery(new searchquery(""test"" false false))previewviewer pw  new previewviewer(databasecontext null statemanager)```as soon as i call the constructor i get a javalangexceptionininitializererror (ie before it enters the constructor) || if you want to test something on the javafx thread you need to use the testfx extensions and declare it as gui test:see as an example the sourcetabtest under guientryeditorbut that is complicated i would rather merge this one as it is now feel free to create another pr with a gui test || @siedlerchr @koppor thank you both for your reviews! they are very appreciated!---> if you want to test something on the javafx thread you need to use the testfx extensions and declare it as gui test:> see as an example the sourcetabtest under guientryeditor> but that is complicated i would rather merge this one as it is now feel free to create another pr with a gui testgreat! in that case ill put adding a test case for this issue on my todo-list for laterthank you for linking sourcetabtest now i know where to start digging ð i suspect ill have opportunities to practice writing gui tests soon x) || "
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"fix document viewer not showing first page turned out it was an off by one error<img width""746"" alt""bildschirmfoto 2020-11-27 um 20 43 23"" src""https://user-imagesgithubusercontentcom/320228/100480364-4ce10900-30f1-11eb-8061-65fbd688e9f7png"">fixes #7108 <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository failing unit test is not related ||"
1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,fix short doi error fixes #7127 in issue #6920 the detection of exact short dois was improved this was relevant where short dois were misplaced under the wrong field of an entry this did not affect the method `public static optional<doi> findintext(string text)` which looks for dois _within_ text (not exact matches) with this commit i have carried the improvements over to the _within-text_ detection i had to make the detection more stringent to avoid mis-detections for cases like _bla bla 10:30 bla bla_ or _bli blubb 10/12/2020 blibb blabb_ etc short dois within text will now only be detected if there is any _doi_ or _urn_ within the substring eg any of the following will be detected:- doi:10/12ab- /urn:doi:10/12ab- doiorg/10/1234- doiorg/ab123 (shortcut doi)- etci also introduced the concept of _shortcut dois_ to the in-text detection (eg _doiorg/xyz123_)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository were just having a (light) mob programming session and will take over ð  || github shows too much changed files maybe due to database errors at github - see https://githubcom/jabref/jabref/compare/masterpremkolar:shortdoiexceptionsfix_issue7127 || when opening the diff:![grafik](https://user-imagesgithubusercontentcom/1366654/102138930-6a3a0500-3e5d-11eb-8e45-2a31de873456png)wrong github output:![grafik](https://user-imagesgithubusercontentcom/1366654/102138995-876ed380-3e5d-11eb-9f01-1a98edb700fcpng) || oh wow :) thank you for doing all the hard work!! :) || @premkolar  we have to thank you for impoving and fixing the regex we just moved the tests to paramterized ones || thank you all ð  || @premkolar  as you recently adapted the doi find in text i just stumbled upon an issue which results in an error when the method finds a doi with a dot at the end:this results in a not found error from doiorg **doi:101007/s10549-018-4743-9**it would be cool if you could add a replacement at the endthe following text is coming from the pdf content importer it extracts the text content of the first page and then calls `doifindintext(firstpagecontents)````hhs public accessauthor manuscriptbreast cancer res treat author manuscript available in pmc 2019 july 01published in final edited form as:breast cancer res treat 2018 july  170(1): 77â87 doi:101007/s10549-018-4743-9acupuncture for breast cancer-related lymphedema: a randomized controlled trial``` || hi yes i would love to look into it im not sure its the `` but we will seemaybe the 25th ill find the time ð || thanks in advance! no hurry happy holidays! || > > > @premkolar as you recently adapted the doi find in text i just stumbled upon an issue which results in an error when the method finds a doi with a dot at the end:> this results in a not found error from doiorg> > **doi:101007/s10549-018-4743-9**> it would be cool if you could add a replacement at the end> > the following text is coming from the pdf content importer it extracts the text content of the first page and then calls> `doifindintext(firstpagecontents)`> > ```> hhs public access> author manuscript> breast cancer res treat author manuscript available in pmc 2019 july 01> > published in final edited form as:> breast cancer res treat 2018 july  170(1): 77â87 doi:101007/s10549-018-4743-9> > acupuncture for breast cancer-related lymphedema: a > randomized controlled trial> ```i was going to report the same error but i wanted to check whether dois could syntactically (validly) end in periods before i did so ||
1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,"updates to institution citation keys <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #6942 fixes #7199#### tldrauthors only having a last name are abbreviated #6942 is miss-abbreviated because name parts containing `uni` are assumed to be universities eg `united airlines` #7199 is triggers the abbreviation method because from bibtexÂ´s point-of-view the author only has a last name the name is later removed because java does not classify the first character as an uppercase letter hence the heuristic assumes it is an insignificant word eg `{ebay}` gets removed `{jabref}` doesnt#### backgroundauthors that are institutions can have very lengthy citation keys unless they are abbreviated in some fashion the abbreviations are generated inhttps://githubcom/jabref/jabref/blob/6718c08cf5ace13365da2ce4c1509e4817eb34bc/src/main/java/org/jabref/logic/citationkeypattern/bracketedpatternjava#l1243which is based on a heuristic that tries to determine a suitable abbreviation based on the content of the specific authorissue #6942 is due to a regexp being overly broad when determining if an author is a universityissue #7199 was created from #6706 where i changed how a company/institute is identified in previous versions of jabref an author is an institute if it is enclosed in curly brackets (eg `{jabref}`) and i changed it to also include authors who only have a last name (eg `jabref`) which means that the author in issue #7199 is treated as an institutionthis would not have been an issue if it wasnt because the heuristic for creating a citation key identifies words starting with a lowercase letter in the authors name as an invalid part of an institute abbreviation think of the ""and"" in ""national aeronautics and space administration"") since the authors name only consist of one ""word"" it is removed (this is why the workaround @tobiasdiez mentioned does not work even if it should)#### changes for#69421 identifying universities in the authors names is arbitrary the new regexp matches `^uni(v|b|$)*` instead of `^uni` there are other suggestions in #6706 that can be implemented instead2 the inline institute abbreviation should now work again (eg `{jabref ({jb})}` should produce `jb`)3 i am ignoring the `shortauthor` field because i find it unclear how and when to use the field (eg for multiple authors)#7199 1 ill change how institutes are identified so that the `author` must only have a last name and that last name must contain a space this should only happen if the `author` originally were enclosed in brackets in all other cases id argue it is acceptable to not abbreviate the author since the name is only one word    1 drawbacks to this approach is that i am using the latextounicodeadapter to remove braces and it doesnt like unbalanced ones<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->#### todo- [x] log a warning for unbalanced brackets in `author`s- [x] change in changelogmd described (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository except for logging when latextounicodeadapter fails (otherwise names such as ""{link{\""{o}}ping university}**}**"" will generate only `uni` due to the unbalanced brackets and no warning i dont intend any more code changesthere will be some updates to the documentation change log etc || wait i cant check for failed parsing?https://githubcom/tomtung/latex2unicode/blob/71979d6904fcf7efade786297983b881a1b019d4/src/main/scala/com/github/tomtung/latex2unicode/latex2unicodescala#l139-l146 || i guess you can use `parse` directly? is this ready for review? || @tobiasdiez except for javadoc and changelog yes it is ready for reviewwhich `parse`? || @tobiasdiez sorry i missed to push 1 local commit || https://githubcom/tomtung/latex2unicode/blob/71979d6904fcf7efade786297983b881a1b019d4/src/main/scala/com/github/tomtung/latex2unicode/latex2unicodescala#l126this one? || oothat would indeed work should i put this pr back in draft then? ~i am not sure how to go about this one should i create a `latextounicodeparseadapter` that throws an exception so that the rest of the code in `latextounicodeadapter` is not repeated?~ **edit** i were thinking about the formatter classes which `latextounicodeadapter` is not || i have to admit i had not yet looked at your pr it was just in response to your question what do you want to do? || @tobiasdiez good then :)in my opinion it is better if the generation warns if there is incorrect latex but i am not sure how to do it in practice i dont have experience with scala <-> java but if i am not misreading the `latex2unicode#parse` i am going to have to check if the result is `instanceof fastparsesuccess` in which case we need to add fastparse as a dependency? || i dont know the drawbacks/advantages of that approach but if this is the only part of the jabref code that needs this perhaps it is better to leave the code as-is? || we already have farstparse as a dependency so thats not a problem i agree it would be nice to check for parsing errors so i support you here (sadly only morally since i dont have any scala experience too) || ~fastparse is an indirect dependency from latex2unicode?the issue i am having is that `latex2unicode#parse` returns a `fastparsecoreparsed` instance unless i am missing something it means i must be able to import `fastparsecore` which i cannot right nowshould i add `fastparse` to `module-infojava`?~i am missing something in the jabref building process ill see if i can figure out || yes in principle importing it should work however there could be problems since fastparse is not yet modularized and we have a workaround in place: https://githubcom/jabref/jabref/blob/fd60d8394352f2cbfc9de2e70e3525d8bac1780e/buildgradle#l49-l50so dont spend too much time trying to make it work || @tobiasdiez you were right for some reason my first attempt did not work || i need to check one more thing (`{european union {\""{a}}viation safety agency}` -> `euaesa`) but i cant right now so i am putting this back in draft thank you for your help @tobiasdiez ! â¤ï¸  || i removed one test case because i believe is out of scope for this pr how to deal with restricting the number of characters between the bracketedpattern/citationkey is a different issue (eg a bracketed pattern that should only have one character Ã¶ can by accident turn into two characters oe in the citation key generation) || iâll be looking at it shortly (dinner)on december 22 2020 at 17:29:07 christoph (notifications@githubcom(mailto:notifications@githubcom)) wrote:>  > @siedlerchr commented on this pull request>  >  > in src/main/java/org/jabref/model/strings/latextounicodeadapterjava(https://githubcom/jabref/jabref/pull/7210#discussion_r547537724):>  > > + * @return a string with latex resolved into unicode + * @throws illegalargumentexception if the latex could not be parsed + */ + public static optional<string> parse(string infield) throws illegalargumentexception { + objectsrequirenonnull(infield) + string toformat  underscore_matchermatcher(infield)replaceall(replacement_char) + try { + var parsingresult  latex2unicodeparse(toformat) + if (parsingresult instanceof parsedsuccess) { + string text  parsingresultget()value() + toformat  normalizernormalize(text normalizerformnfc) + return optionalof(underscore_placeholder_matchermatcher(toformat)replaceall(""_"")) + } else { + return optionalempty() + } + } catch (throwable throwable) {  >  > the try and catch can now be removed>  >  > â> you are receiving this because you authored the thread> reply to this email directly view it on github(https://githubcom/jabref/jabref/pull/7210#pullrequestreview-557403186) or unsubscribe(https://githubcom/notifications/unsubscribe-auth/aat2nz3t6f3igy5gr7tbesdswemthancnfsm4vdlj7nq)>  >  >   || is this ready for review? (i think it looks good) || > is this ready for review? (i think it looks good)yup it is ready || @tobiasdiez good catch apparently i did not examine my assumptions enough my concerns regarding including it is#### 1based on https://githubcom/jabref/jabref/pull/6706#issuecomment-682179624 and others> (i) when using in the bibtex key generator the non-ascii characters are converted to a ""good"" representation (as in your example: gÃ¶d -> goe)> >  because the bibtex tooling is not fully utf8 (biblatex+biber is but not the more commonly used bibtex tool)my thoughts were that to the largest extent possible bibtex citation keys should be ascii/ansi only in which case #7199 should not be added as a test case if `{ebay}` is successful it is likely that #7199 will be as well (from bibtex/javaÂ´s point-of-view both contain only a last name that starts with a lowercase letter and it was the institute abbreviation method that removed æ¨ç§ç¾¤)#### 2i am not convinced that the currently generated citation key is correct but you seem to know more about this particular issue than i so feel free to correct me ð i based my decision on @xiaodongcenturys comment > ""æ¨ ç§ç¾¤"" but not ""æ¨ç§ç¾¤"" the former has a space between last name and first name of a chinese namein my opinion the ""correct"" citation key should be either æ¨ or ç§ç¾¤ (ie based on the documentation the citation key shoul be the last name) with `ebay` i know the citation key is correct---however all of that being said (and my apologies about the rather lengthy reading) if this is how jabref is used perhaps the test case should be added anyway? || as we have quite a lot of chinese users it would be good to support this as far as possible thus if the user enters chinese authors then i would say we should generate a key with chinese characters in the best case one would actually replace the chinese character by their romanization but im not sure if there exist a convenient library for thisfor now i would say we simply add `æ¨ç§ç¾¤` as a test (with whatever result it currently produces) || > for now i would say we simply add `æ¨ç§ç¾¤` as a test (with whatever result it currently produces)sure!> in the best case one would actually replace the chinese character by their romanization but im not sure if there exist a convenient library for this[pinyin4j](http://pinyin4jsourceforgenet/) seem to be the most popular java alternative however given that there isnt a need of high performance (clean up operation?) [there are more popular javascript libraries](https://githubcom/hotoo/pinyin/blob/master/readme-us_enmd) i dont know if there is an interest for this? || thanks also for the research concerning pinyin libraries lets see if users report this as a feature request || @siedlerchr @tobiasdiez thank you both for your time reviews and suggestions they are appreciated! || thank you all!the jabref 53--2020-12-28--78b08b5 works perfectly with chinese namesthanks again || "
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"add traditional chinese fixes #7237https://wwworaclecom/java/technologies/javase/jdk8-jre8-suported-localeshtmlneed to look into crowdin how to map it<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--><!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"fix typo in conversion for small pi <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #7291 there is a typo in the unicode <-> latex <-> html conversion<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] ~change in changelogmd described (if applicable)~- [x] ~tests created for changes (if applicable)~- [x] manually tested changed features in running jabref (always required)    - [x] enter ""$\pi$ in abstract field    - [x] convert -> ""unicode to latex"" in context menu- [x] ~screenshots added in pr description (for ui changes)~- [x] ~[checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository~  "
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,"added keyboard shortcuts (clear/set read status) <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there--> added keyboard shortcuts with defaults for  - clear read status (alt+c) - set read status to read (alt+r) - set read status to skimmed (alt+s)fixes #7264<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in changelogmd described (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository ups thought i had to close the pull request but i think i have to wait until you merge it || if everybody is happy ill think i merge thanks! ð  ||"
1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,"improve user friendliness of automatically linked files <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->we have implemented a new textfield for files that are automatically detected by jabref and listed as files in the general tab of the entry editor we also changed the icon for automatically linked files from a briefcase_check to link_plus since we found it more intuitive this fixes #3607<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repositorywe thought that creating an issue would be redundant if our changes werent accepted so we have not completed the documentation task the [documentation](https://docsjabreforg/finding-sorting-and-cleaning-entries/filelinks#auto-linking-files) refers to the icon as a ""suitcase"" which would not be accurate were these changes to be accepted instead it should be referred to as a link with a plus sign## screenshots### before changes#### file not linked![before changes file not added](https://user-imagesgithubusercontentcom/64270456/109797452-cb31d780-7c19-11eb-9143-c0ab53921b53png)#### file linked![before changes file added](https://user-imagesgithubusercontentcom/64270456/109797517-e0a70180-7c19-11eb-8c1e-bcdf35ceca05png)### after changes#### file not linked![after changes file not added](https://user-imagesgithubusercontentcom/64270456/109797681-0f24dc80-7c1a-11eb-8197-2f3c91235bb6png)#### file linked![after changes file added](https://user-imagesgithubusercontentcom/64270456/109797708-18ae4480-7c1a-11eb-9fc7-ae7138b2cba7png) hi folks thanks for your contribution at very first sight i like this ideaabout the icon: this seems ok just a few days ago we switched our iconset to iconli the previous iconset was very limited so the briefcase icon was just a workaround the new icon seem reasonableabout the label: im not really sure if we should display an icon or a label maybe the other @jabref/developers have a preference but if we use a label it needs to be localized (see https://devdocsjabreforg/getting-into-the-code/code-howtos#using-localization-correctly ) || hello @calixtus @tobiasdiez recommended an implementation with a description that says (auto) in issue #3607 we agreed that it would make the display clearer and chose to implement it as a separate text field in the hbox as the description is currently bound to the linked files description property we estimated that too much refactoring would be required to initially set the description to (auto) and then change it to be bound to the files description property if the user chooses to link the file we also thought that it made more sense to display the text prior to the file name well await feedback from another dev about the icon vs text dilemma || thank you for your quick response i did not see the discussion with tobias diez earlier sorry but if thats what you both agreed on than its perfectly fine || well try out a few solutions and update the thread with screenshots of the different results then you can give feedback and well go with whatever looks best to you guys || ## after pressing button![screenshot from 2021-03-05 10-48-46](https://user-imagesgithubusercontentcom/17311691/110101167-89cd3380-7da3-11eb-900c-3c6e651f6da2png)## button to the left![screenshot from 2021-03-05 10-49-15](https://user-imagesgithubusercontentcom/17311691/110101175-8c2f8d80-7da3-11eb-9a05-f55702dd25d9png)## button where (auto) was![screenshot from 2021-03-05 10-55-34](https://user-imagesgithubusercontentcom/17311691/110101177-8d60ba80-7da3-11eb-80c6-4603668e862cpng)## with opacity![screenshot from 2021-03-05 11-10-53](https://user-imagesgithubusercontentcom/17311691/110101181-8e91e780-7da3-11eb-8a67-4b960557754bpng)@calixtus @tobiasdiez here are some examples of the possible implementations that you suggested earliertell us what you think we can of course make further changes if you want || thanks a lot! i like the ""button to the left"" solution the most and would say it should be sufficiently clear that this is not a normally-linked file so if there is a short description as a tooltip for the link button i would say this is fine @jabref/developers what do you think? || the tooltip is unchanged since the earlier button as we thought it was well formulated and descriptive || im really not sure what would be the best solution on one hand it shows now symbols to the left and to the right and its hard to guess what means what on the other hand it really should stand out if there is an autolinked file guess there is no right solutionwhat if there are more than one linked files listed? || @calixtus different entries are handled separately we simply make use of the isautomaticallyfound property to make changes## several automatically found![screenshot from 2021-03-08 09-11-12](https://user-imagesgithubusercontentcom/17311691/110293356-c17beb80-7fee-11eb-91e4-a5138a1059e9png)## one added![screenshot from 2021-03-08 09-11-28](https://user-imagesgithubusercontentcom/17311691/110293384-ca6cbd00-7fee-11eb-8165-863db571fc96png) || > @calixtus different entries are handled separatelyof course its just about the look and feel if several different list entries are shown thanks for testing out i personally like the variant ""icon on the very left"" || do we use opacity and what percentage would you like? currently we use 70% for automatically found files and 100% for files that have been added || its just fine as it is if you use opacity please also check out if it shows up right in the dark theme || it works for dark mode ill push the latest changes![screenshot from 2021-03-08 09-58-35](https://user-imagesgithubusercontentcom/17311691/110298522-f8550000-7ff4-11eb-8338-ca6ffa682eabpng) || i realized that opacity was set way too low and that the correct images should be:![screenshot from 2021-03-08 10-43-58](https://user-imagesgithubusercontentcom/17311691/110304580-0e19f380-7ffc-11eb-94be-1bcd41f89996png)![screenshot from 2021-03-08 10-44-14](https://user-imagesgithubusercontentcom/17311691/110304592-1114e400-7ffc-11eb-9e3c-1eb140270e60png)this is how it looked in the first set of images with opacity || we will write some tests for this as well || if you like one more more idea on this: the ""kÃ¶nigsweg"" would be to assign a css pseudostate so the opacity would be addressable in the stylesheet and be customizable || see for example importentriesdialog::initialize() (lines 105 and 145)this way you could subscribe in the view (easybind) changes of isautomaticallyfoundproperty() to the pseudo class and remove the opacityproperty which is some kind of a rule breaker of the mvvm design pattern || kings trail has a different meaning in sweden: https://enwikipediaorg/wiki/kungsleden (highly recommended hike!) ð  otherwise i agree! || wouldnt say so both the kungsleden and using psuedo classes for opacity are distinguished by special beauty ð ð  || we did not manage to figure out how to use easybind but the program now makes use of css to change the opacity when the text is generated and when the button is pressed || @calixtus @tobiasdiez thank you for your time and engagement we appreciate all the help and advice you have given us  || i have just tested it: nice!thank you! || "
1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,add simple unit tests i have added some simple unit tests that will increase code coverage / branch coverage they contribute to issue #6207 - [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository hey @davfon  great to see someone takes a look at our test suite!at first glance the tests themselves look good but i think you could also convert these tests to parameterized tests (there are some examples in our test suite) if you like its pretty easy you could also use the builder pattern for the creation of bibentries for testing (`new bibentry()withfield()`) || hi there @calixtus !thanks for the quick feedback! i willl look into it and will try to convert them to parameterized tests wherever possible ||
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,add ability to insert arxivid #2292  pasted `arxivid` creates new bibentry <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks again for your contribution! thats very useful! ||
1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,"fix for issue 6487: opening bibtex file (doubleclick) from folder with spaces not working fixes #6487- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repositoryvideo:https://user-imagesgithubusercontentcom/57553691/111628111-ce88ae00-882a-11eb-9dee-9dfe3087437fmp4use `d:\test\test whitespacebib` as an exampledouble-click it and i got errors in console as the following:```error opening file d:\test\test: could not find a suitable import formaterror opening file whitespacebib: could not find a suitable import format21:41:53032 [jabref - remote listener server on port 6050] error orgjabreflogicimporteropendatabase - error: file not found```therefore the path was regarded as two files: `d:\test\test` and `whitespacebib`start from `orgjabreflogicimporteropendatabase` to backtrack the dataflow:|         class          |            method            |      variable      || :--------------------: | :--------------------------: | :----------------: ||     `opendatabase`     |        `loaddatabase`        |    `filetoopen`    ||  `argumentprocessor`   |     `importandopenfiles`     |    `aleftover`     ||      `jabrefcli`       |         constructor          |       `args`       ||  `argumentprocessor`   |         constructor          |       `args`       || `jabrefmessagehandler` | `handlecommandlinearguments` |     `message`      || `remotelistenerserver` |       `handlemessage`        |     `argument`     || `remotelistenerserver` |            `run`             | `inputgetvalue()` ||       `protocol`       |       `receivemessage`       |     `argument`     |use logger to print the variable `argument`:```javaif (argument instanceof string[]) {    loggerinfo(arraystostring((string[]) argument))}```and i got:```21:41:53024 [jabref - remote listener server on port 6050] info  orgjabreflogicremotesharedprotocol - [d:\test\test whitespacebib]```so i think the problem is that when passing the argument `d:\test\test whitespacebib` it will be considered as two arguments because there is a whitespace that serves as a delimiteri noticed that @zongxian said that a path containing chinese characters would cause the same error so the problem is not just related to delimiter probably about text encodingtherefore i encoded the arguments in `remoteclientsendcommandlinearguments` and decoded them in `protocolreceivemessage`then i created a binary and tested now it works well on my computer (windows 10 1909) thanks for your acknowledgement!i moved it to `protocolsendmessage` and added some commentsbesides i created a new test case in `remotecommunicationtest`---as @rickvandoorne mentioned:> * if i double click on a bib file while jabref is not running then jabref opens (it no longer gives me the error message) however it does not open the file which i double clicked> * if i double click on a bib file while jabref is running it opens a new library called ""untitled"" but not the file i double clicked> * if i open jabref first and then open a file using ""file"" â ""open library"" it works finei tested these three ways to open a `bib` file got no errordouble click while jabref not running:https://user-imagesgithubusercontentcom/57553691/111728161-47c5e680-88a7-11eb-81d2-ddd56253b3damp4double click while jabref running:video above""open library"":https://user-imagesgithubusercontentcom/57553691/111728322-983d4400-88a7-11eb-983d-74ee3d45354cmp4 || "
1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,custom doi base address fix as mentioned in fixes #7337 the option to choose custom doi base address did not propagate to `librarytab` and this pr aims to solve exactly that in the process i refactored `linkedidentifiercolumn` so that it uses `openurlaction` as well- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,add unit tests for orgjabrefgui classes test coverage for orgjabrefgui package is rather low (8%) this pull request adds unit tests to 3 classes under the gui package increasing their respective line coverage from 0% to 100% they contribute to issue #6207tests added:1 appendpersonnamesstrategytest2 personnamestringconvertertest3 replacestringviewmodeltest<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository two approvals  mergablethanks for the tests! ||
1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,refactoring and addition of unit tests this pull request includes new unit tests for three classes which increases their line/statement coverage they contribute to issue #6207further i have also refactored existing unit tests to make them more readable understandable and maintanable  in this sense i focused more on test smells described in the paper _refactoring test code (van deursen et al)_  and also on the code howtos (test cases) in the development documentation<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository hi @koppor thanks for reviewing!i finally adjusted the code accoring to your comments and suggestions :) ||
1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,"fix numberformatexception in bracketedpattern <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #7590 the error occurs because the size of the integer is too large to be contained in an `int` the suggested changes use `biginteger` and `stream` instead of `int` and for-loopsthis is mostly an excuse to verify my setup after the `master` -> `main` branch name change<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] ~screenshots added in pr description (for ui changes)~- [x] ~[checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository~  "
1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,"fix#7195 partly opacity of disabled icon-buttons fixes #7195 opacity of disabled icon-buttons<!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->add the disabled icon style in `basecss`- no tabs opened:![i1](https://user-imagesgithubusercontentcom/48386227/115385506-cc8b8380-a20a-11eb-9cd6-bb2b9adbf331png)- open a tab and do not select any entry:![i2](https://user-imagesgithubusercontentcom/48386227/115385596-e3ca7100-a20a-11eb-9e88-391a824a0e80png)- select an entry in the opened tab:![i3](https://user-imagesgithubusercontentcom/48386227/115385630-edec6f80-a20a-11eb-95b5-a15a8deeddd6png)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,"migration of timestamp this pr moves the migration of the timestamp field from a postopenmigration to mutually exclusive cleanup actionsas this cleanup action migrates the timestamp field to the creationdate or modificationdate fields the modificationdate of a bibentry is not updated when this cleanup is conductedif the original timestamp field could not be parsed the cleanup does not modify the bibentry in any way to not lose datafixes #7351modified cleanup dialog:![image](https://user-imagesgithubusercontentcom/43381984/116080557-82d2eb00-a699-11eb-9285-4d7b64e5a9b8png)- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository on a first look this looks good to me a few observations though:- the ui is a bit too complicated for my taste and i think the ""do not convert timestamp"" option is not really required instead i would propose to only have to checkboxes (convert to creation date / modification date) and if the user selects one of them the other one is deselected (that would be btw also a nice improvement for the biblatex/bibtex conversion which are also mutable exclusive)- now running cleanup ops doesnt change the modification date anymore right? maybe use a more fine-grained notification channel and only do this for the timestamp cleanup?- can you maybe explore a bit on why you choose a cleanup op over a migration? thanks || > on a first look this looks good to me a few observations though:> > * the ui is a bit too complicated for my taste and i think the ""do not convert timestamp"" option is not really required instead i would propose to only have to checkboxes (convert to creation date / modification date) and if the user selects one of them the other one is deselected (that would be btw also a nice improvement for the biblatex/bibtex conversion which are also mutable exclusive)i addressed the first point by adding checkboxes for the corresponding cleanup actions> * now running cleanup ops doesnt change the modification date anymore right? maybe use a more fine-grained notification channel and only do this for the timestamp cleanup?this is only true for the timestamp migrations and is implemented exactly that way ^^> * can you maybe explore a bit on why you choose a cleanup op over a migration? thanksas an adr or just as a comment here?it boils down to the discussion lead here: #7351 || > > > > on a first look this looks good to me a few observations though:> > > > * the ui is a bit too complicated for my taste and i think the ""do not convert timestamp"" option is not really required instead i would propose to only have to checkboxes (convert to creation date / modification date) and if the user selects one of them the other one is deselected (that would be btw also a nice improvement for the biblatex/bibtex conversion which are also mutable exclusive)> > i addressed the first point by adding checkboxes for the corresponding cleanup actions> thanks that looks good to me!> > * now running cleanup ops doesnt change the modification date anymore right? maybe use a more fine-grained notification channel and only do this for the timestamp cleanup?> > this is only true for the timestamp migrations and is implemented exactly that way ^^ohh you are right sorry i misread the code > > > * can you maybe explore a bit on why you choose a cleanup op over a migration? thanks> > as an adr or just as a comment here?> it boils down to the discussion lead here: #7351as a comment is more than enough for me (maybe directly in the pr description though) as far as i see it the advantage of cleanup ops is that they are only run once and thus dont make the db load process slower on the other hand the migration had the advantage that users dont need to run something manually || the reason for making it a cleanup is that some users use the timestamp field in other waysadditionally this makes the database load process fastermigrating the timestamp field this way leads to negative ux see #7351 || ok thanks!i dont have the time for a through-out review but scrolling over the code i couldnt find anything so from my side this is good to go  || "
1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,"add and extend unit tests <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->this pull request contributes to issue #6207 which is to add more unit tests to the projecttests added:validcitationkeycheckertesttests extended (added boundary cases):addbracesformattertestnormalizepagesformattertest<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,"refactoring existing unit tests <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->this pull request contributes to issue #6207 which is to add more unit tests or improve existing onesi therefore have refactored three classes (converted to parameterized tests) and extended one by adding a boundary casetests refactored:lastpagetestnospacebetweenabbreviationswrapcontenttest extendedunprotecttermsformatter (added empty string boundary case)<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  "
1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,added doiduplicationcheckertest to increase coverage this pull request contributes to issue #6207 which is to add more unit tests or improve existing ones i used pitest to compute the line and mutation coverage since doiduplicationchecker did not have its unit test (its method was being tested in other test classes) i added the test to increase both coverages before:                                                                            ![image](https://user-imagesgithubusercontentcom/3387698/116928883-f064b580-ac5d-11eb-9f8d-c7fa80a31c90png)after:![image](https://user-imagesgithubusercontentcom/3387698/116928941-ffe3fe80-ac5d-11eb-819b-7663ad6043a1png)- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository  
1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,refactoring existing unit tests into parametrized tests this pull request contributes to issue #6207 which is to add more unit tests or improve existing onestests refactored:doistriptestdefaulttest (paramlayoutformatter)touppercasetestifpluraltesthtmlparagraphstestentrytypeformattertestauthororgscitestauthornatbibtestauthorfirstlastcommastest- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [ ] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for your contribution we took the liberty to finish it ourselves ||
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,"select the entry which has smaller dictonary order when merge <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->changed the selected entry when merge two entries:if two entrys citation key are empty the above one will be selectedif only one entry has citation key then it will be selectedif two entries both have citation key the one who has smaller dictionary order will be selectedfixes #7395 <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->the screenshot shows that the ""2021a"" is selected although it is below ""2021b""![test-for-7395](https://user-imagesgithubusercontentcom/54058357/117312265-7d567b80-aeb7-11eb-8a45-ea8edaa23cc8png)- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [x] screenshots added in pr description (for ui changes)- [ ] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository see checkstyle ore reviewdog and please give your pr a better title || thank you for your suggestions i have used entrycomparator and added two test cases to test the behavior of entrycomparator || i like the idea of having a default order when merging but isnt this a problem when one citation key is empty (`""""` not null) and the other one is not? can that happen and is it worth worrying about? || yes i think the real problem may be how to define a valid citation key for example ""  "" should not be a valid one || an empty citation key is totally valid  i would expect to have the empty one as ""lower"" on the left in the dialogminimum valid bibtex: ```@article{}``` || yes that make sense too it seems some checks were not successful so what should i do?  || you should merge in the latest main from upstream jabref then most tests should be working againcheckstyle + unit tests must be green  || > i like the idea of having a default order when merging but isnt this a problem when one citation key is empty (`""""` not null) and the other one is not? can that happen and is it worth worrying about?this should be handled by the `entrycomparator` too test cases should cover this  @suxichangzhen please add this test case to `entrycomparatortest` || > yes i think the real problem may be how to define a valid citation key for example "" "" should not be a valid onesince `bib` is a text file where users can input (nearly) arbitrary things we have to be relaxed in as many places as possiblewe have the `orgjabreflogicintegritycitationkeychecker` which checks for the empty key || i am not that up to date with the merging and i might have sown some accidental confusion sorry ð based on how jabref generates duplicate keys some cases are ""easier"" to deal withif the generated citation key is `2021` duplicated citation keys will be `2021a` `2021b` etc and it is indeed correct that `2021a` should be preferred over `2021b` just as `2021` should be preferred over `2021a` (this might be a good test-case as well)but if you are merging ` ` and `2021` ` ` should in my opinion not be sorted above `2021`as i said this might very well not be worth worrying about || > but if you are merging ` ` and `2021` ` ` should in my opinion not be sorted above `2021`fair! i did not ""see"" that casethen this is a call for `citationkeycomparator` in the package `orgjabreflogicbibtexcomparator` this comparator works as initially implemented by @suxichangzhen  and handles this case tooi would re-use comparison code of `entrycomparator` but not call `entrycomparator` because the empty string handling is different || ok nvm ignore me and my apologies for the confusion ill have to read up a bit more about merging || it seems that jabref will not produce a citation key like """" since if the citation key is """" then key_field does not exist but key_field does allow something like "" ""(one blank) should i consider this case? || i notice that in the `bibentry` the method `getcitationkey` indicates what is a valid ciatation key so i use it in the `entrycomparator` now the blanked citation key will be replaced when merge two entries || thank you for your suggestion i have used orelse || "
1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,"fix: make more fields fomatters ids and languages sorted by alphabetical order <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #7716we fix that more fields fomatters ids and languages sorted by alphabetical order solving them by either adding sort to relative property or using a `sortedlist` to wrapper the observablelist<!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [ ] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [ ] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository thanks for the quick follow up lgtm to me now for external contributors a second developer needs to review and approve || i merged too early forgot the check for `changelogmd` fixed in https://githubcom/jabref/jabref/commit/428239437882ed9d0cc8dc497e1851abc7dcaec4@dateri please remember the changelogmd for your next pr ð  || @koppor  i wanted to check on this but in https://buildsjabreforg/main/ the files are dating back to may 8 a problem with the automatic build process? || happens from time to time most often the mac build fails due to notarization somehow not working at apples side you can then downlod the artifact from the runhttps://githubcom/jabref/jabref/actions/runs/829332567  ||"
1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,"fix for issue 5804: rewrite acm fetcher <!-- describe the changes you have made here: what why  link issues that are fixed eg ""fixes #333""if you fixed a koppor issue link it eg ""fixes https://githubcom/koppor/jabref/issues/47""the title of the pr must not reference an issue because github does not support autolinking there-->fixes #5804 <!-- - go through the list below if a task has been completed mark it done by using `[x]`- please dont remove any items just leave them unchecked if they are not applicable-->- [x] change in `changelogmd` described in a way that is understandable for the average user (if applicable)- [x] tests created for changes (if applicable)- [x] manually tested changed features in running jabref (always required)- [ ] screenshots added in pr description (for ui changes)- [x] [checked documentation](https://docsjabreforg/): is the information available and up to date? if not created an issue at <https://githubcom/jabref/user-documentation/issues> or even better submitted a pull request to the documentation repository<br>from issue #5804 acm fetcher needs to be rewritten because of acm website changesone solution is to get the doi from the html results of the search page then use the export interface to get the json format data and finally parse themsearch api: https://dlacmorg/action/dosearch?allfield<query_string\>export api: https://dlacmorg/action/exportciteproccitation?targetfilecustom-bibtex&formatbibtex&dois<doi\><doi\>what did i do:1 rewrited acmportalfetcher added acmportalparser2 added modified acmportalfetchertest and acmportalparsertestsuccessfully get data from amc fetcher:![acm-portal](https://user-imagesgithubusercontentcom/47767371/117985875-ad949300-b36b-11eb-9f90-d0da10ade6eapng)![acm-portal-3-imported](https://user-imagesgithubusercontentcom/47767371/117985880-af5e5680-b36b-11eb-938d-4b259eed7a1cpng) @siedlerchr  @koppor thank you very much for your help and suggestionsthe above problem has been fixed and i also updated some codes || thank you for working on it! this brings jabref a step forward! ||"
