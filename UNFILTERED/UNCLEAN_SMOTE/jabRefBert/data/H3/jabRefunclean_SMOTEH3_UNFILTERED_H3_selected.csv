prNumber,Util,NLP,APM,Network,DB,Interpreter,Logging,Data.Structure,i18n,DevOps,Logic,Microservices,Test,Search,IO,UI,Parser,Security,App,corpus
11,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,BugFix for bug "#880 PubMed Import broken" Found bug: PubMed/Medline PLAIN format recognized as RIS format. Provided solution:     - Modified RIS ImportFilter. Now RIS format is identified by looking for the "TY" tag (it is a mandatory tag in RIS format and it is not conflictual with other filters)     - Added new ImportFilter "MedlinePlain". This import filter parses Medline files in plain format (not XML). The import filter has been produced referring to the official Medline documentation (http://www.nlm.nih.gov/bsd/mms/medlineelements.html)     - Updated the net.sf.jabref.core plugin.xml file in order to include the newly added MedlinePlain import filter  
11,1,0,1,1,1,1,1,0,0,0,1,1,1,0,1,1,0,0,0,BugFix for bug "#880 PubMed Import broken" Found bug: PubMed/Medline PLAIN format recognized as RIS format. Provided solution:     - Modified RIS ImportFilter. Now RIS format is identified by looking for the "TY" tag (it is a mandatory tag in RIS format and it is not conflictual with other filters)     - Added new ImportFilter "MedlinePlain". This import filter parses Medline files in plain format (not XML). The import filter has been produced referring to the official Medline documentation (http://www.nlm.nih.gov/bsd/mms/medlineelements.html)     - Updated the net.sf.jabref.core plugin.xml file in order to include the newly added MedlinePlain import filter  
11,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,BugFix for bug "#880 PubMed Import broken" Found bug: PubMed/Medline PLAIN format recognized as RIS format. Provided solution:     - Modified RIS ImportFilter. Now RIS format is identified by looking for the "TY" tag (it is a mandatory tag in RIS format and it is not conflictual with other filters)     - Added new ImportFilter "MedlinePlain". This import filter parses Medline files in plain format (not XML). The import filter has been produced referring to the official Medline documentation (http://www.nlm.nih.gov/bsd/mms/medlineelements.html)     - Updated the net.sf.jabref.core plugin.xml file in order to include the newly added MedlinePlain import filter  
28,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Added special fields Printed and Read status Added special fields Printed and Read status  thereby implementing (at least partially): - Feature #762 Printed attribute - Feature #692 Marking of new entries and often read entries - Feature #685 Highlight new entries that were "forgotten" - Feature #602 could add the mark as read feature - Feature #225 read? checkbox  Printed is just a boolean toggle and for the read field currently the values Skimmed and Read are possible (if you have any suggestions for further possibilities  Im happy to implement them). The icons are taken from http://www.softicons.com/system-icons/crystal-project-icons-by-everaldo-coelho and should probably be replaced with icons from the same collection as the other currently used ones. This feature is availale on JabRef 2.10? What should I do to get them?  || No it is not in 2.10 but in the current development version. So you have to wait until 2.11 comes out or build the current version yourself. How to do the latter is described here: https://github.com/JabRef/jabref#building-jabref-from-source  || Thank you very much. Im could not install gradle on my laptop (ubuntu 14.04). Looking forward to the 2.11 release.  ||
28,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Added special fields Printed and Read status Added special fields Printed and Read status  thereby implementing (at least partially): - Feature #762 Printed attribute - Feature #692 Marking of new entries and often read entries - Feature #685 Highlight new entries that were "forgotten" - Feature #602 could add the mark as read feature - Feature #225 read? checkbox  Printed is just a boolean toggle and for the read field currently the values Skimmed and Read are possible (if you have any suggestions for further possibilities  Im happy to implement them). The icons are taken from http://www.softicons.com/system-icons/crystal-project-icons-by-everaldo-coelho and should probably be replaced with icons from the same collection as the other currently used ones. This feature is availale on JabRef 2.10? What should I do to get them?  || No it is not in 2.10 but in the current development version. So you have to wait until 2.11 comes out or build the current version yourself. How to do the latter is described here: https://github.com/JabRef/jabref#building-jabref-from-source  || Thank you very much. Im could not install gradle on my laptop (ubuntu 14.04). Looking forward to the 2.11 release.  ||
28,1,0,0,1,0,0,1,0,0,1,1,0,0,0,1,1,1,0,0,Added special fields Printed and Read status Added special fields Printed and Read status  thereby implementing (at least partially): - Feature #762 Printed attribute - Feature #692 Marking of new entries and often read entries - Feature #685 Highlight new entries that were "forgotten" - Feature #602 could add the mark as read feature - Feature #225 read? checkbox  Printed is just a boolean toggle and for the read field currently the values Skimmed and Read are possible (if you have any suggestions for further possibilities  Im happy to implement them). The icons are taken from http://www.softicons.com/system-icons/crystal-project-icons-by-everaldo-coelho and should probably be replaced with icons from the same collection as the other currently used ones. This feature is availale on JabRef 2.10? What should I do to get them?  || No it is not in 2.10 but in the current development version. So you have to wait until 2.11 comes out or build the current version yourself. How to do the latter is described here: https://github.com/JabRef/jabref#building-jabref-from-source  || Thank you very much. Im could not install gradle on my laptop (ubuntu 14.04). Looking forward to the 2.11 release.  ||
28,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Added special fields Printed and Read status Added special fields Printed and Read status  thereby implementing (at least partially): - Feature #762 Printed attribute - Feature #692 Marking of new entries and often read entries - Feature #685 Highlight new entries that were "forgotten" - Feature #602 could add the mark as read feature - Feature #225 read? checkbox  Printed is just a boolean toggle and for the read field currently the values Skimmed and Read are possible (if you have any suggestions for further possibilities  Im happy to implement them). The icons are taken from http://www.softicons.com/system-icons/crystal-project-icons-by-everaldo-coelho and should probably be replaced with icons from the same collection as the other currently used ones. This feature is availale on JabRef 2.10? What should I do to get them?  || No it is not in 2.10 but in the current development version. So you have to wait until 2.11 comes out or build the current version yourself. How to do the latter is described here: https://github.com/JabRef/jabref#building-jabref-from-source  || Thank you very much. Im could not install gradle on my laptop (ubuntu 14.04). Looking forward to the 2.11 release.  ||
28,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Added special fields Printed and Read status Added special fields Printed and Read status  thereby implementing (at least partially): - Feature #762 Printed attribute - Feature #692 Marking of new entries and often read entries - Feature #685 Highlight new entries that were "forgotten" - Feature #602 could add the mark as read feature - Feature #225 read? checkbox  Printed is just a boolean toggle and for the read field currently the values Skimmed and Read are possible (if you have any suggestions for further possibilities  Im happy to implement them). The icons are taken from http://www.softicons.com/system-icons/crystal-project-icons-by-everaldo-coelho and should probably be replaced with icons from the same collection as the other currently used ones. This feature is availale on JabRef 2.10? What should I do to get them?  || No it is not in 2.10 but in the current development version. So you have to wait until 2.11 comes out or build the current version yourself. How to do the latter is described here: https://github.com/JabRef/jabref#building-jabref-from-source  || Thank you very much. Im could not install gradle on my laptop (ubuntu 14.04). Looking forward to the 2.11 release.  ||
28,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Added special fields Printed and Read status Added special fields Printed and Read status  thereby implementing (at least partially): - Feature #762 Printed attribute - Feature #692 Marking of new entries and often read entries - Feature #685 Highlight new entries that were "forgotten" - Feature #602 could add the mark as read feature - Feature #225 read? checkbox  Printed is just a boolean toggle and for the read field currently the values Skimmed and Read are possible (if you have any suggestions for further possibilities  Im happy to implement them). The icons are taken from http://www.softicons.com/system-icons/crystal-project-icons-by-everaldo-coelho and should probably be replaced with icons from the same collection as the other currently used ones. This feature is availale on JabRef 2.10? What should I do to get them?  || No it is not in 2.10 but in the current development version. So you have to wait until 2.11 comes out or build the current version yourself. How to do the latter is described here: https://github.com/JabRef/jabref#building-jabref-from-source  || Thank you very much. Im could not install gradle on my laptop (ubuntu 14.04). Looking forward to the 2.11 release.  ||
137,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Unify and simplify GUI actions - Using lambdas for the simpler actions - Some code cleanup - Extract String commands as String constants to Actions.java and use the constants in JabRefFrame  BasePanel and RightClickMenu - Use the constants already defined in KeyBinds to get KeyStrokes for the Actions (in JabRefFrame  BasePanel  EntryEditor and RightClickMenu) - 8e3ad9d: Remove Quickfix for [SF.net Bug #1277](https://sourceforge.net/p/jabref/bugs/1277/) and implement feature properly: Instead of Deactivating "Show/Hide Toolbar" when no database is open  the action has been move to JabRefFrame and works now even if no database is open.  see also #136  I propose to merge the current status into master. The changes described above cover the changes possible without restructuring the whole Action architecture in the GUI.  || LGTM :+1:   || Ah... answered just here: https://github.com/matthiasgeiger/jabref/commit/8e3ad9d9804be70cf47f6e20191efcaae2ddfe23#commitcomment-13044544  ||
137,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Unify and simplify GUI actions - Using lambdas for the simpler actions - Some code cleanup - Extract String commands as String constants to Actions.java and use the constants in JabRefFrame  BasePanel and RightClickMenu - Use the constants already defined in KeyBinds to get KeyStrokes for the Actions (in JabRefFrame  BasePanel  EntryEditor and RightClickMenu) - 8e3ad9d: Remove Quickfix for [SF.net Bug #1277](https://sourceforge.net/p/jabref/bugs/1277/) and implement feature properly: Instead of Deactivating "Show/Hide Toolbar" when no database is open  the action has been move to JabRefFrame and works now even if no database is open.  see also #136  I propose to merge the current status into master. The changes described above cover the changes possible without restructuring the whole Action architecture in the GUI.  || LGTM :+1:   || Ah... answered just here: https://github.com/matthiasgeiger/jabref/commit/8e3ad9d9804be70cf47f6e20191efcaae2ddfe23#commitcomment-13044544  ||
137,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Unify and simplify GUI actions - Using lambdas for the simpler actions - Some code cleanup - Extract String commands as String constants to Actions.java and use the constants in JabRefFrame  BasePanel and RightClickMenu - Use the constants already defined in KeyBinds to get KeyStrokes for the Actions (in JabRefFrame  BasePanel  EntryEditor and RightClickMenu) - 8e3ad9d: Remove Quickfix for [SF.net Bug #1277](https://sourceforge.net/p/jabref/bugs/1277/) and implement feature properly: Instead of Deactivating "Show/Hide Toolbar" when no database is open  the action has been move to JabRefFrame and works now even if no database is open.  see also #136  I propose to merge the current status into master. The changes described above cover the changes possible without restructuring the whole Action architecture in the GUI.  || LGTM :+1:   || Ah... answered just here: https://github.com/matthiasgeiger/jabref/commit/8e3ad9d9804be70cf47f6e20191efcaae2ddfe23#commitcomment-13044544  ||
143,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix SF Bug #1285 Restores the cursor resp. "caret" position when a field is store during editing. This fixes [SF.net bug #1285](http://sourceforge.net/p/jabref/bugs/1285/).  To be done:  - Backport to dev_2.11 - Ask for confirmation on SF.net and close the issue there. Why does it lose focus anyway? This makes no sense to me. Saving should be a background process triggered by a key event.  || I think  a backport to dev_2.11 is not necessary.  @stefan-kolb I agree. Very strange that the focus is changed.  || ... debugging this code is hell! :scream:  The new fix fixes the problem where it is caused: Method `updateField` in `EntryEditorTab` re-sets the textfield which causes a loss of the current caret position...  || This looks way better and easier to maintain :blush:  ||
143,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Fix SF Bug #1285 Restores the cursor resp. "caret" position when a field is store during editing. This fixes [SF.net bug #1285](http://sourceforge.net/p/jabref/bugs/1285/).  To be done:  - Backport to dev_2.11 - Ask for confirmation on SF.net and close the issue there. Why does it lose focus anyway? This makes no sense to me. Saving should be a background process triggered by a key event.  || I think  a backport to dev_2.11 is not necessary.  @stefan-kolb I agree. Very strange that the focus is changed.  || ... debugging this code is hell! :scream:  The new fix fixes the problem where it is caused: Method `updateField` in `EntryEditorTab` re-sets the textfield which causes a loss of the current caret position...  || This looks way better and easier to maintain :blush:  ||
143,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,Fix SF Bug #1285 Restores the cursor resp. "caret" position when a field is store during editing. This fixes [SF.net bug #1285](http://sourceforge.net/p/jabref/bugs/1285/).  To be done:  - Backport to dev_2.11 - Ask for confirmation on SF.net and close the issue there. Why does it lose focus anyway? This makes no sense to me. Saving should be a background process triggered by a key event.  || I think  a backport to dev_2.11 is not necessary.  @stefan-kolb I agree. Very strange that the focus is changed.  || ... debugging this code is hell! :scream:  The new fix fixes the problem where it is caused: Method `updateField` in `EntryEditorTab` re-sets the textfield which causes a loss of the current caret position...  || This looks way better and easier to maintain :blush:  ||
175,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Increase saving speed Intended to fix #122  this PR turned into a major API change. It replaces `String[]` in the return types of `BibtexEntryType` with `List<String>`. This allows to return immutable lists instead of mutable arrays and improves the stability of the program. Additionally  the rewrite allowed to replace a lot of duplicate object creation with instance variables.  With respect to #122  the immutability of the new lists removes the necessity to create defensive copies and therefore avoids a lot of cloning. Are there further improvements to be made? Otherwise  this PR is ready to merge.  ||
175,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,0,0,1,1,Increase saving speed Intended to fix #122  this PR turned into a major API change. It replaces `String[]` in the return types of `BibtexEntryType` with `List<String>`. This allows to return immutable lists instead of mutable arrays and improves the stability of the program. Additionally  the rewrite allowed to replace a lot of duplicate object creation with instance variables.  With respect to #122  the immutability of the new lists removes the necessity to create defensive copies and therefore avoids a lot of cloning. Are there further improvements to be made? Otherwise  this PR is ready to merge.  ||
175,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Increase saving speed Intended to fix #122  this PR turned into a major API change. It replaces `String[]` in the return types of `BibtexEntryType` with `List<String>`. This allows to return immutable lists instead of mutable arrays and improves the stability of the program. Additionally  the rewrite allowed to replace a lot of duplicate object creation with instance variables.  With respect to #122  the immutability of the new lists removes the necessity to create defensive copies and therefore avoids a lot of cloning. Are there further improvements to be made? Otherwise  this PR is ready to merge.  ||
187,1,0,1,1,1,1,1,0,0,0,1,1,1,0,1,1,0,0,0,[WIP] Fix linebreaking Evaluating the usage and problems of #114. What is FieldContentParser really doing? What is JabRef style formatting? The remaining code of `FileContentParser.format` is a complete mess of one-off hacks. I am very much for deleting it and rewriting the parsing logic to just remove newlines for non-multiline fields and ignore tabs or spaces completely. If we document that with tests  at least we know what the code is doing...   || 859274e54af0948108ff16fa697dabb595768c12 replaces the weird code in `FieldContentParser` with a single (and simple) regex. Now the tests pass and  as far as I can tell  #114 and #186 are fixed. Could someone else please double check? (Note: Parsing is only done when loading the file. So if you add faulty text to a field  you can save it as such. On restart  the errors should be fixed by the parser).   If something is not quite right  please add the faulty behavior as a test!  || thanks @stefan-kolb! the "file" field is now ignored from parsing.  || Ok I think we are good to go. You can also close all other mentioned issues for now!  || Works great here :+1:   || 
187,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,1,0,0,0,[WIP] Fix linebreaking Evaluating the usage and problems of #114. What is FieldContentParser really doing? What is JabRef style formatting? The remaining code of `FileContentParser.format` is a complete mess of one-off hacks. I am very much for deleting it and rewriting the parsing logic to just remove newlines for non-multiline fields and ignore tabs or spaces completely. If we document that with tests  at least we know what the code is doing...   || 859274e54af0948108ff16fa697dabb595768c12 replaces the weird code in `FieldContentParser` with a single (and simple) regex. Now the tests pass and  as far as I can tell  #114 and #186 are fixed. Could someone else please double check? (Note: Parsing is only done when loading the file. So if you add faulty text to a field  you can save it as such. On restart  the errors should be fixed by the parser).   If something is not quite right  please add the faulty behavior as a test!  || thanks @stefan-kolb! the "file" field is now ignored from parsing.  || Ok I think we are good to go. You can also close all other mentioned issues for now!  || Works great here :+1:   || 
187,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,[WIP] Fix linebreaking Evaluating the usage and problems of #114. What is FieldContentParser really doing? What is JabRef style formatting? The remaining code of `FileContentParser.format` is a complete mess of one-off hacks. I am very much for deleting it and rewriting the parsing logic to just remove newlines for non-multiline fields and ignore tabs or spaces completely. If we document that with tests  at least we know what the code is doing...   || 859274e54af0948108ff16fa697dabb595768c12 replaces the weird code in `FieldContentParser` with a single (and simple) regex. Now the tests pass and  as far as I can tell  #114 and #186 are fixed. Could someone else please double check? (Note: Parsing is only done when loading the file. So if you add faulty text to a field  you can save it as such. On restart  the errors should be fixed by the parser).   If something is not quite right  please add the faulty behavior as a test!  || thanks @stefan-kolb! the "file" field is now ignored from parsing.  || Ok I think we are good to go. You can also close all other mentioned issues for now!  || Works great here :+1:   || 
204,1,0,0,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,Added pushing citations to Texmaker Implements SourceForge feature requests #318 and #582. Looks good. Minor comments above. The abstract class `AbstractPushToApplication` could be left as future work. :smiley:  || Thanks.  I agree. There are changes to the other PushToXXX classes in the FormBuilder pull request  so I would prefer to base the `AbstractPushToApplication` on the unified source. :-) (Especially with my still improvable git wizardry).  || OK  I let this go through  we will work on https://github.com/JabRef/jabref/pull/205 and possibly finally with another PR.  ||
204,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,Added pushing citations to Texmaker Implements SourceForge feature requests #318 and #582. Looks good. Minor comments above. The abstract class `AbstractPushToApplication` could be left as future work. :smiley:  || Thanks.  I agree. There are changes to the other PushToXXX classes in the FormBuilder pull request  so I would prefer to base the `AbstractPushToApplication` on the unified source. :-) (Especially with my still improvable git wizardry).  || OK  I let this go through  we will work on https://github.com/JabRef/jabref/pull/205 and possibly finally with another PR.  ||
204,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,Added pushing citations to Texmaker Implements SourceForge feature requests #318 and #582. Looks good. Minor comments above. The abstract class `AbstractPushToApplication` could be left as future work. :smiley:  || Thanks.  I agree. There are changes to the other PushToXXX classes in the FormBuilder pull request  so I would prefer to base the `AbstractPushToApplication` on the unified source. :-) (Especially with my still improvable git wizardry).  || OK  I let this go through  we will work on https://github.com/JabRef/jabref/pull/205 and possibly finally with another PR.  ||
219,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,IEEE journal abbreviations Why? - See #173   What is does: - bugfix: correct abbreviations are loaded when storing preferences through the advanced tab - IEEE abbreviations are either plain (text) or in latex (code) form. For each of them  a separate file exist now. The config option `USE_IEEE` loads the latex one if it is true  and the plain one otherwise.  
219,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,IEEE journal abbreviations Why? - See #173   What is does: - bugfix: correct abbreviations are loaded when storing preferences through the advanced tab - IEEE abbreviations are either plain (text) or in latex (code) form. For each of them  a separate file exist now. The config option `USE_IEEE` loads the latex one if it is true  and the plain one otherwise.  
219,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,IEEE journal abbreviations Why? - See #173   What is does: - bugfix: correct abbreviations are loaded when storing preferences through the advanced tab - IEEE abbreviations are either plain (text) or in latex (code) form. For each of them  a separate file exist now. The config option `USE_IEEE` loads the latex one if it is true  and the plain one otherwise.  
287,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,DOAJ search Search for Directory of Open Access Journals. Quite functional  but the remaining things should (probably) be done - [x] ~~Help page~~ - [x] Decide on where the BibJSONConverter class should be positioned (input?) - [x] More fields? ~~ISSN?~~ - [x] ~~Better/more error checking~~ - [x] ~~Handle search results with more than 100 entries properly~~ - [x] ~~Fill empty methods in DOAJFetcher~~ - [x] ~~Update status bar~~ - [x] Add test for BibJSONConverter - [x] ~~Enable stopping search~~  Implements what is discussed in #208 I think Im done there. :-)  || Looks good to me.   || One minor thing: The current title is "DOAJ (Directory of Open Source Journals)" which is much longer than the rest of the fetcher titles. This introduces horizontal scrollbars in the fetcher sidebar when using the default width:  ![doaj-screenshot](https://cloud.githubusercontent.com/assets/676652/11044339/8ff615a2-8721-11e5-9a67-f2b1ca610747.png)  Apart from this  "ready to go" from my side  too.  || There is no such property like [text-overflow](http://www.w3schools.com/cssref/css3_pr_text-overflow.asp) in SWING  is it? :star2:   || I think Java actually does snip too long texts - if the component has a fixed size. So this does not help here.  Ill merge the current state  but a potential improvement would be to define tooltips for the combobox to show some hints what the various abbreviations actually mean...  || 
287,1,0,0,1,0,1,1,1,0,0,1,0,1,0,1,1,0,1,0,DOAJ search Search for Directory of Open Access Journals. Quite functional  but the remaining things should (probably) be done - [x] ~~Help page~~ - [x] Decide on where the BibJSONConverter class should be positioned (input?) - [x] More fields? ~~ISSN?~~ - [x] ~~Better/more error checking~~ - [x] ~~Handle search results with more than 100 entries properly~~ - [x] ~~Fill empty methods in DOAJFetcher~~ - [x] ~~Update status bar~~ - [x] Add test for BibJSONConverter - [x] ~~Enable stopping search~~  Implements what is discussed in #208 I think Im done there. :-)  || Looks good to me.   || One minor thing: The current title is "DOAJ (Directory of Open Source Journals)" which is much longer than the rest of the fetcher titles. This introduces horizontal scrollbars in the fetcher sidebar when using the default width:  ![doaj-screenshot](https://cloud.githubusercontent.com/assets/676652/11044339/8ff615a2-8721-11e5-9a67-f2b1ca610747.png)  Apart from this  "ready to go" from my side  too.  || There is no such property like [text-overflow](http://www.w3schools.com/cssref/css3_pr_text-overflow.asp) in SWING  is it? :star2:   || I think Java actually does snip too long texts - if the component has a fixed size. So this does not help here.  Ill merge the current state  but a potential improvement would be to define tooltips for the combobox to show some hints what the various abbreviations actually mean...  || 
287,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,DOAJ search Search for Directory of Open Access Journals. Quite functional  but the remaining things should (probably) be done - [x] ~~Help page~~ - [x] Decide on where the BibJSONConverter class should be positioned (input?) - [x] More fields? ~~ISSN?~~ - [x] ~~Better/more error checking~~ - [x] ~~Handle search results with more than 100 entries properly~~ - [x] ~~Fill empty methods in DOAJFetcher~~ - [x] ~~Update status bar~~ - [x] Add test for BibJSONConverter - [x] ~~Enable stopping search~~  Implements what is discussed in #208 I think Im done there. :-)  || Looks good to me.   || One minor thing: The current title is "DOAJ (Directory of Open Source Journals)" which is much longer than the rest of the fetcher titles. This introduces horizontal scrollbars in the fetcher sidebar when using the default width:  ![doaj-screenshot](https://cloud.githubusercontent.com/assets/676652/11044339/8ff615a2-8721-11e5-9a67-f2b1ca610747.png)  Apart from this  "ready to go" from my side  too.  || There is no such property like [text-overflow](http://www.w3schools.com/cssref/css3_pr_text-overflow.asp) in SWING  is it? :star2:   || I think Java actually does snip too long texts - if the component has a fixed size. So this does not help here.  Ill merge the current state  but a potential improvement would be to define tooltips for the combobox to show some hints what the various abbreviations actually mean...  || 
330,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix #328: Added more and better information with unsaved database ![capturedialog](https://cloud.githubusercontent.com/assets/8114497/11130895/e1dd1e66-8987-11e5-85f3-e268a193c68e.PNG)  (In this case it was a new database  otherwise the full path is shown.) @oscargus Tooltip for screenshots: [GrabNDrop](http://www.scyv.de/gnd/).  ||
330,1,0,0,1,0,1,1,1,1,0,1,1,0,0,1,1,0,1,0,Fix #328: Added more and better information with unsaved database ![capturedialog](https://cloud.githubusercontent.com/assets/8114497/11130895/e1dd1e66-8987-11e5-85f3-e268a193c68e.PNG)  (In this case it was a new database  otherwise the full path is shown.) @oscargus Tooltip for screenshots: [GrabNDrop](http://www.scyv.de/gnd/).  ||
330,1,0,0,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,Fix #328: Added more and better information with unsaved database ![capturedialog](https://cloud.githubusercontent.com/assets/8114497/11130895/e1dd1e66-8987-11e5-85f3-e268a193c68e.PNG)  (In this case it was a new database  otherwise the full path is shown.) @oscargus Tooltip for screenshots: [GrabNDrop](http://www.scyv.de/gnd/).  ||
370,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Add compatibility check for UTF8 This PR attempts to fix #367  We have a bit of a problem. `UTF8` came from these lines  ``` java         try (InputStreamReader reader  openFile(fileToOpen  suppliedEncoding  fallbackEncoding)) {             BibtexParser bp  new BibtexParser(reader)               ParserResult pr  bp.parse()              pr.setEncoding(reader.getEncoding())  ```  It is set in [this method call](https://docs.oracle.com/javase/8/docs/api/java/io/InputStreamReader.html#getEncoding--). Thats the Java API. The `InputStreamReader` says that the proper name of the encoding is `UTF8`.   My solution is an ugly compatibility hack in which we just insert the `-` manually. Ugly  but works... What do you think? What about replacing all string representation of encodings by [`Charset`](https://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html)? Then on export `getEncoding.name()` returns the correct description "UTF-8".  || Sounds like a good idea! We should give it a try.  || @tobiasdiez great advice! `Charset` already implements the correct encoding name translation. All we have to do is through it into `Charset` and read it our again and we can skip the hack:  ``` java pr.setEncoding(Charset.forName(reader.getEncoding()).name())  ```  || Please merge master: We did a mayor overhaul of the OpenDatabaseAction: Deleted code etc.   || @lenhard Glad this was helpful. I think the code would even further improve if the ParserResult (and maybe some other classes) does not hold the encoding as a string but as a `Charset`  i.e. `public Charset getEncoding()` and similarly for `setEncoding`.  || @koppor Done! @tobiasdiez Sure. But I think this should be part of a new PR  since this PR just attempts to fix one particular issue.  || 
370,1,0,0,1,0,1,1,1,1,0,1,1,0,0,1,1,0,1,0,Add compatibility check for UTF8 This PR attempts to fix #367  We have a bit of a problem. `UTF8` came from these lines  ``` java         try (InputStreamReader reader  openFile(fileToOpen  suppliedEncoding  fallbackEncoding)) {             BibtexParser bp  new BibtexParser(reader)               ParserResult pr  bp.parse()              pr.setEncoding(reader.getEncoding())  ```  It is set in [this method call](https://docs.oracle.com/javase/8/docs/api/java/io/InputStreamReader.html#getEncoding--). Thats the Java API. The `InputStreamReader` says that the proper name of the encoding is `UTF8`.   My solution is an ugly compatibility hack in which we just insert the `-` manually. Ugly  but works... What do you think? What about replacing all string representation of encodings by [`Charset`](https://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html)? Then on export `getEncoding.name()` returns the correct description "UTF-8".  || Sounds like a good idea! We should give it a try.  || @tobiasdiez great advice! `Charset` already implements the correct encoding name translation. All we have to do is through it into `Charset` and read it our again and we can skip the hack:  ``` java pr.setEncoding(Charset.forName(reader.getEncoding()).name())  ```  || Please merge master: We did a mayor overhaul of the OpenDatabaseAction: Deleted code etc.   || @lenhard Glad this was helpful. I think the code would even further improve if the ParserResult (and maybe some other classes) does not hold the encoding as a string but as a `Charset`  i.e. `public Charset getEncoding()` and similarly for `setEncoding`.  || @koppor Done! @tobiasdiez Sure. But I think this should be part of a new PR  since this PR just attempts to fix one particular issue.  || 
370,1,0,0,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Add compatibility check for UTF8 This PR attempts to fix #367  We have a bit of a problem. `UTF8` came from these lines  ``` java         try (InputStreamReader reader  openFile(fileToOpen  suppliedEncoding  fallbackEncoding)) {             BibtexParser bp  new BibtexParser(reader)               ParserResult pr  bp.parse()              pr.setEncoding(reader.getEncoding())  ```  It is set in [this method call](https://docs.oracle.com/javase/8/docs/api/java/io/InputStreamReader.html#getEncoding--). Thats the Java API. The `InputStreamReader` says that the proper name of the encoding is `UTF8`.   My solution is an ugly compatibility hack in which we just insert the `-` manually. Ugly  but works... What do you think? What about replacing all string representation of encodings by [`Charset`](https://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html)? Then on export `getEncoding.name()` returns the correct description "UTF-8".  || Sounds like a good idea! We should give it a try.  || @tobiasdiez great advice! `Charset` already implements the correct encoding name translation. All we have to do is through it into `Charset` and read it our again and we can skip the hack:  ``` java pr.setEncoding(Charset.forName(reader.getEncoding()).name())  ```  || Please merge master: We did a mayor overhaul of the OpenDatabaseAction: Deleted code etc.   || @lenhard Glad this was helpful. I think the code would even further improve if the ParserResult (and maybe some other classes) does not hold the encoding as a string but as a `Charset`  i.e. `public Charset getEncoding()` and similarly for `setEncoding`.  || @koppor Done! @tobiasdiez Sure. But I think this should be part of a new PR  since this PR just attempts to fix one particular issue.  || 
418,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,proxy authentication support (feature #388) This pull request enables support for proxy authentication via command line arguments (`-D..`) and JabRef preferences (Network tab). BTW: The tests in `net.sf.jabref.logic.fetcher` and the `URLDownloadTest` still fails because the Authenticator is not initialized in unit tests.  || Why is the codecov/project check marked as failed but shows passed on details?  || Is marked as fail as you added code which is not covered by a JUnit test  reducing code coverage. But we do not have a GUI strategy yet. And you added mostly GUI code  hence  no problem there.   || I forgot to create a special branch for this PR... Hmmm.  || This is not a big problem - as long as you do not start working on another issue in your master branch :wink:  || Hmm  if I change the proxy settings  a restart is required.  || We have other settings which upon change indicate to the user that JabRef has to be restarted for the settings to be applied. See the remote preferences under AdvancedTab. Maybe reuse the code from there.   || Hmm  looking for config changes in six values looks quite ugly with `if` conditions. I can create a HashMap or StringBuilder out of these values and later on just compare the hash values. Or do you have any other suggestion?  || You just need to compute the final proxy string `username:password@hostname:port` which you can easily compare and then the two remaining boolean variables.   || Thats what I have implemented with a StringBuilder. Comparing the hashCode is much faster than comparing the string.  -)  || Okay  please check my PR.  || Thank you for the PR. Nice and clean implementation! We would gladly accept more PRs from you.  )  ||
418,1,0,1,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,proxy authentication support (feature #388) This pull request enables support for proxy authentication via command line arguments (`-D..`) and JabRef preferences (Network tab). BTW: The tests in `net.sf.jabref.logic.fetcher` and the `URLDownloadTest` still fails because the Authenticator is not initialized in unit tests.  || Why is the codecov/project check marked as failed but shows passed on details?  || Is marked as fail as you added code which is not covered by a JUnit test  reducing code coverage. But we do not have a GUI strategy yet. And you added mostly GUI code  hence  no problem there.   || I forgot to create a special branch for this PR... Hmmm.  || This is not a big problem - as long as you do not start working on another issue in your master branch :wink:  || Hmm  if I change the proxy settings  a restart is required.  || We have other settings which upon change indicate to the user that JabRef has to be restarted for the settings to be applied. See the remote preferences under AdvancedTab. Maybe reuse the code from there.   || Hmm  looking for config changes in six values looks quite ugly with `if` conditions. I can create a HashMap or StringBuilder out of these values and later on just compare the hash values. Or do you have any other suggestion?  || You just need to compute the final proxy string `username:password@hostname:port` which you can easily compare and then the two remaining boolean variables.   || Thats what I have implemented with a StringBuilder. Comparing the hashCode is much faster than comparing the string.  -)  || Okay  please check my PR.  || Thank you for the PR. Nice and clean implementation! We would gladly accept more PRs from you.  )  ||
418,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,proxy authentication support (feature #388) This pull request enables support for proxy authentication via command line arguments (`-D..`) and JabRef preferences (Network tab). BTW: The tests in `net.sf.jabref.logic.fetcher` and the `URLDownloadTest` still fails because the Authenticator is not initialized in unit tests.  || Why is the codecov/project check marked as failed but shows passed on details?  || Is marked as fail as you added code which is not covered by a JUnit test  reducing code coverage. But we do not have a GUI strategy yet. And you added mostly GUI code  hence  no problem there.   || I forgot to create a special branch for this PR... Hmmm.  || This is not a big problem - as long as you do not start working on another issue in your master branch :wink:  || Hmm  if I change the proxy settings  a restart is required.  || We have other settings which upon change indicate to the user that JabRef has to be restarted for the settings to be applied. See the remote preferences under AdvancedTab. Maybe reuse the code from there.   || Hmm  looking for config changes in six values looks quite ugly with `if` conditions. I can create a HashMap or StringBuilder out of these values and later on just compare the hash values. Or do you have any other suggestion?  || You just need to compute the final proxy string `username:password@hostname:port` which you can easily compare and then the two remaining boolean variables.   || Thats what I have implemented with a StringBuilder. Comparing the hashCode is much faster than comparing the string.  -)  || Okay  please check my PR.  || Thank you for the PR. Nice and clean implementation! We would gladly accept more PRs from you.  )  ||
429,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,Fix similar bug as #420 for the database properties dialog A similar bug as #420 happened when the encoding was changed in the database properties dialog. This is now fixed in this PR.   Sorry for introducing these bugs in the first place. Thanks for the fixup PR.   ||
429,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Fix similar bug as #420 for the database properties dialog A similar bug as #420 happened when the encoding was changed in the database properties dialog. This is now fixed in this PR.   Sorry for introducing these bugs in the first place. Thanks for the fixup PR.   ||
429,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,0,Fix similar bug as #420 for the database properties dialog A similar bug as #420 happened when the encoding was changed in the database properties dialog. This is now fixed in this PR.   Sorry for introducing these bugs in the first place. Thanks for the fixup PR.   ||
440,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,Cleanup tests and LatexFormatter Instead of #427 (easier to start all over as some files were already moved).  
440,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Cleanup tests and LatexFormatter Instead of #427 (easier to start all over as some files were already moved).  
440,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,1,0,Cleanup tests and LatexFormatter Instead of #427 (easier to start all over as some files were already moved).  
452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
452,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,1,0,0,Revise maintable Complete check and rewrite of MainTable and related classes  This will fix and implement: - [x] #315  - [x] #384 - show tooltip for header columns - [x] #384 - show tooltip for contents which are too long for table columns - [x] #443  - [x] #445  - [x] Add ability to drag and drop specialfield columns - ~~[ ] Allow storing position of specialfield columns~~ postponed to another PR - [x] remove table column for "PDF/PS" which is obsolete (fixes #498) - [x] remove option "Show one letter heading for icon columns" which is now obsolete - [x] Changed default order in main table: # | all file based icons (file  URL/DOI  ...) | all bibtex field based icons (bibtexkey  entrytype  author  title  ...) | all special field icons - ~~[ ] #490~~ postponed - ~~[ ] Think about "must be implemented "vernünftig (matthias)" "Entry table -> fit table horizontally ...."" from the minutes~~ postponed - [x] final cleanup + CHANGELOG Awesome.  || Before I invest much time to fix it...  @JabRef/developers **Are we dropping support for the "PDF/PS" column in the main table?**  In this column potential contents of the "legacy fields" `pdf` and `ps` are shown...  In #251 the legacy tools are already dropped... And we already have the abilility to define special columns based on a filetype (e.g. show a column for Excel files) - so it would be possible to show specific columns for PDFs (stored in the `file` field).  || Yes  support has been dropped for pdf/ps fields all over the place  we should do this as well for the main table.   || :+1: for removing these legacy columns.  Could someone create a FAQ entry (in htdocs) or send me a plain FAQ on how to mimic that behavior with the "special columns"?  || Very nice PR. With this  we already have a 3.1 :)  || @koppor:   > Q: The PDF/PS column in the main table is missing - how can I restore them? > A: As the BibTeX fields `pdf` and `ps` are migrated to `file` the table column was obsolete. However  it is possible to define columns specifically for each file type in the preferences. (See: Preferences -> Entry Table Columns -> Show extra columns) > ![show-extra](https://cloud.githubusercontent.com/assets/676652/11607936/60b0f44e-9b5b-11e5-9f8f-06abf035115c.png)  @simonharrer Mhmm... but this gui stuff is quite unnerving :wink:  || And we already have issues with the pdf/ps columns  which no longer seem to work correctly: #498 This confirms the need for their removal.  || Just rebased - from my point of view the current state is good enough to be merged into master.  || :+1:  || 
459,1,0,0,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,Use default directory when adding files to an entry See #458. - The current implementation is hard to understand. I do not get how these three existing folder preferences are used.  - Also  the method itself should be simplified and return a List After going through the documentation  I found it. JabRef can have a directory per database. But what if you and me have different directories? Do we have to agree to one? Normally  its simply the directory of the .bib file (meaning `.` is used as database directory). But what if the users somehow share a bibliography and use different directories? Then  this feature comes in. I can set another directory then you do. Both settings are serialized in the `bib` file. With `-<loginname>` as suffix in the `jabref-meta` field. If JabRef saves a file and my loginname matches the name stored in the `bib` file  it chooses that directory. If no match is found  it uses the "General file directory" of the bib file. If that is not found  it uses the one configured at "Options -> Preferences -> External programs" ("Main file directory").  Here some text from the documentation and mailing lists  but I think  the documentation has to be improved. :sunrise:   When thinking of it  we should offer the users a button "use current directory" next to "General file directory" and add a little help text that "." denotes that. Or render `.` as `<directory of the bib file is used>`. Then  hopefully  the "User-specific file directory" can be dropped. - I do not see any other use case. Why would I share a bib file and not share the PDFs? If I share the PDFs together with the bib file  a relative directory can be put in "General file directory".  Possibly  the "General file directory" should be stored _relatively_ from the current directory of the bib file.  ## FAQ   http://jabref.sourceforge.net/faq.php: "Then at the field “General file directory” choose the directory specific for the database. If you want to set a directory for you only and other users should use the default directory  use the field “User-specific file directory”"  ## File help  http://jabref.sourceforge.net/help/FileLinks.php: "Finally  in the Database properties dialog you can set a user-specific file directory  which will be valid only when you are the one working on the bib file."  ## Mail from the mailing list  (by @ThomasA) https://sourceforge.net/p/jabref/mailman/message/27008930/ "As of revision 3449  JabRef supports an  option to specify a user- and host-specific file directory in the  database properties. This allows each user of a particular database to  store her/his personal path setting in the database. It furthermore  allows the same user to specify different paths on different computers  (must have different host names)."  || Thanks @koppor for this detailed clarification! I think we might simplify this somehow :smile:   || We need a better internal datastructure.  || 
459,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Use default directory when adding files to an entry See #458. - The current implementation is hard to understand. I do not get how these three existing folder preferences are used.  - Also  the method itself should be simplified and return a List After going through the documentation  I found it. JabRef can have a directory per database. But what if you and me have different directories? Do we have to agree to one? Normally  its simply the directory of the .bib file (meaning `.` is used as database directory). But what if the users somehow share a bibliography and use different directories? Then  this feature comes in. I can set another directory then you do. Both settings are serialized in the `bib` file. With `-<loginname>` as suffix in the `jabref-meta` field. If JabRef saves a file and my loginname matches the name stored in the `bib` file  it chooses that directory. If no match is found  it uses the "General file directory" of the bib file. If that is not found  it uses the one configured at "Options -> Preferences -> External programs" ("Main file directory").  Here some text from the documentation and mailing lists  but I think  the documentation has to be improved. :sunrise:   When thinking of it  we should offer the users a button "use current directory" next to "General file directory" and add a little help text that "." denotes that. Or render `.` as `<directory of the bib file is used>`. Then  hopefully  the "User-specific file directory" can be dropped. - I do not see any other use case. Why would I share a bib file and not share the PDFs? If I share the PDFs together with the bib file  a relative directory can be put in "General file directory".  Possibly  the "General file directory" should be stored _relatively_ from the current directory of the bib file.  ## FAQ   http://jabref.sourceforge.net/faq.php: "Then at the field “General file directory” choose the directory specific for the database. If you want to set a directory for you only and other users should use the default directory  use the field “User-specific file directory”"  ## File help  http://jabref.sourceforge.net/help/FileLinks.php: "Finally  in the Database properties dialog you can set a user-specific file directory  which will be valid only when you are the one working on the bib file."  ## Mail from the mailing list  (by @ThomasA) https://sourceforge.net/p/jabref/mailman/message/27008930/ "As of revision 3449  JabRef supports an  option to specify a user- and host-specific file directory in the  database properties. This allows each user of a particular database to  store her/his personal path setting in the database. It furthermore  allows the same user to specify different paths on different computers  (must have different host names)."  || Thanks @koppor for this detailed clarification! I think we might simplify this somehow :smile:   || We need a better internal datastructure.  || 
459,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,1,0,0,Use default directory when adding files to an entry See #458. - The current implementation is hard to understand. I do not get how these three existing folder preferences are used.  - Also  the method itself should be simplified and return a List After going through the documentation  I found it. JabRef can have a directory per database. But what if you and me have different directories? Do we have to agree to one? Normally  its simply the directory of the .bib file (meaning `.` is used as database directory). But what if the users somehow share a bibliography and use different directories? Then  this feature comes in. I can set another directory then you do. Both settings are serialized in the `bib` file. With `-<loginname>` as suffix in the `jabref-meta` field. If JabRef saves a file and my loginname matches the name stored in the `bib` file  it chooses that directory. If no match is found  it uses the "General file directory" of the bib file. If that is not found  it uses the one configured at "Options -> Preferences -> External programs" ("Main file directory").  Here some text from the documentation and mailing lists  but I think  the documentation has to be improved. :sunrise:   When thinking of it  we should offer the users a button "use current directory" next to "General file directory" and add a little help text that "." denotes that. Or render `.` as `<directory of the bib file is used>`. Then  hopefully  the "User-specific file directory" can be dropped. - I do not see any other use case. Why would I share a bib file and not share the PDFs? If I share the PDFs together with the bib file  a relative directory can be put in "General file directory".  Possibly  the "General file directory" should be stored _relatively_ from the current directory of the bib file.  ## FAQ   http://jabref.sourceforge.net/faq.php: "Then at the field “General file directory” choose the directory specific for the database. If you want to set a directory for you only and other users should use the default directory  use the field “User-specific file directory”"  ## File help  http://jabref.sourceforge.net/help/FileLinks.php: "Finally  in the Database properties dialog you can set a user-specific file directory  which will be valid only when you are the one working on the bib file."  ## Mail from the mailing list  (by @ThomasA) https://sourceforge.net/p/jabref/mailman/message/27008930/ "As of revision 3449  JabRef supports an  option to specify a user- and host-specific file directory in the  database properties. This allows each user of a particular database to  store her/his personal path setting in the database. It furthermore  allows the same user to specify different paths on different computers  (must have different host names)."  || Thanks @koppor for this detailed clarification! I think we might simplify this somehow :smile:   || We need a better internal datastructure.  || 
472,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Show author/editor and journal/publisher in the main table by default Implements #470. Looks like follows:  ![grabbed_20151205-225839](https://cloud.githubusercontent.com/assets/1366654/11610469/bf3126ea-9ba3-11e5-8b8a-fc9b5d97a97d.png)  "Author/Editor" is OK.  Unsure if "Journal/Publisher" is confusing. I think  `booktitle/journal` would be the right correspondence. We should replace the default "journal" column by `booktitle/journal` and maybe add the `publisher` column as default column.  How often is `InBook` used? Consequently  `title` should become `chapter/title`  but that heading is confusing.  || Id also vote for journal/booktitle (as that is what I use  dealing primarily with journal and conference papers). On the other hand  a good thing with this PR is that it indicates that these things are possible and how to do it.  || The journal says where an article is published. Similarly  the publisher is...well... the publisher of the book. So I would advocate the proposed `journal/publisher`. Booktitle would probably only make sense for articles in conference proceedings. I think articles and books are the most common types  so we should focus on them.  @koppor: `InBook`s also have an author and title  so there shouldnt be a problem.  || Guess it depends on scientific area. I would possibly argue that in general  a publisher does not really add any important information  even for books  while in the case of conference papers  the booktitle is crucial. (I know that the publisher is important to create a valid reference  but it does not really add any information when browsing a database.)  || In my discipline (computer science)  Id see the correspondence as follows (bibtex fields)  | inproceedings | journal | | --- | --- | | title | title | | author | author | | booktitle | journal | | publisher | publisher | | year | year |  For instance  take an Elsevier article (http://www.sciencedirect.com/science/article/pii/S0268401215000808). The publisher is Elsevier  but the Journal is "International Journal of Information Management". Elsevier publishes more than one journal.  I read "where something is published" as the conference and the concrete journal. The conference is stored in "booktitle"  whereas the concrete journal is stored in "journal". Both kinds of works are published by a publisher.  Is it different in your discipline @tobiasdiez?  || I do not think @tobiasdiez disagrees with that analysis  but I got the impression that he cites more books than conference papers. In that case I can probably agree that publisher is the "next" field to add (mainly because of lack of others).  Journal/booktitle/publisher? (Except for the very long heading...)  || Ok apparently the majority is for booktitle. Hence I changed it accordingly.   My reasoning was indeed based on `book`s for which the publisher is the equivalent of a journal. Since books occur more often in my database  I thought this addition was more valuable. For `InProceedings` the booktitle indeed makes more sense.  || I suppose  `journal/booktitle/publisher` is too confusing? I really agree that the column `journal/booktitle` is empty too often if many books are in the database.  Ill merge it and lets see what others say. :sunflower:   || 
472,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,Show author/editor and journal/publisher in the main table by default Implements #470. Looks like follows:  ![grabbed_20151205-225839](https://cloud.githubusercontent.com/assets/1366654/11610469/bf3126ea-9ba3-11e5-8b8a-fc9b5d97a97d.png)  "Author/Editor" is OK.  Unsure if "Journal/Publisher" is confusing. I think  `booktitle/journal` would be the right correspondence. We should replace the default "journal" column by `booktitle/journal` and maybe add the `publisher` column as default column.  How often is `InBook` used? Consequently  `title` should become `chapter/title`  but that heading is confusing.  || Id also vote for journal/booktitle (as that is what I use  dealing primarily with journal and conference papers). On the other hand  a good thing with this PR is that it indicates that these things are possible and how to do it.  || The journal says where an article is published. Similarly  the publisher is...well... the publisher of the book. So I would advocate the proposed `journal/publisher`. Booktitle would probably only make sense for articles in conference proceedings. I think articles and books are the most common types  so we should focus on them.  @koppor: `InBook`s also have an author and title  so there shouldnt be a problem.  || Guess it depends on scientific area. I would possibly argue that in general  a publisher does not really add any important information  even for books  while in the case of conference papers  the booktitle is crucial. (I know that the publisher is important to create a valid reference  but it does not really add any information when browsing a database.)  || In my discipline (computer science)  Id see the correspondence as follows (bibtex fields)  | inproceedings | journal | | --- | --- | | title | title | | author | author | | booktitle | journal | | publisher | publisher | | year | year |  For instance  take an Elsevier article (http://www.sciencedirect.com/science/article/pii/S0268401215000808). The publisher is Elsevier  but the Journal is "International Journal of Information Management". Elsevier publishes more than one journal.  I read "where something is published" as the conference and the concrete journal. The conference is stored in "booktitle"  whereas the concrete journal is stored in "journal". Both kinds of works are published by a publisher.  Is it different in your discipline @tobiasdiez?  || I do not think @tobiasdiez disagrees with that analysis  but I got the impression that he cites more books than conference papers. In that case I can probably agree that publisher is the "next" field to add (mainly because of lack of others).  Journal/booktitle/publisher? (Except for the very long heading...)  || Ok apparently the majority is for booktitle. Hence I changed it accordingly.   My reasoning was indeed based on `book`s for which the publisher is the equivalent of a journal. Since books occur more often in my database  I thought this addition was more valuable. For `InProceedings` the booktitle indeed makes more sense.  || I suppose  `journal/booktitle/publisher` is too confusing? I really agree that the column `journal/booktitle` is empty too often if many books are in the database.  Ill merge it and lets see what others say. :sunflower:   || 
472,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Show author/editor and journal/publisher in the main table by default Implements #470. Looks like follows:  ![grabbed_20151205-225839](https://cloud.githubusercontent.com/assets/1366654/11610469/bf3126ea-9ba3-11e5-8b8a-fc9b5d97a97d.png)  "Author/Editor" is OK.  Unsure if "Journal/Publisher" is confusing. I think  `booktitle/journal` would be the right correspondence. We should replace the default "journal" column by `booktitle/journal` and maybe add the `publisher` column as default column.  How often is `InBook` used? Consequently  `title` should become `chapter/title`  but that heading is confusing.  || Id also vote for journal/booktitle (as that is what I use  dealing primarily with journal and conference papers). On the other hand  a good thing with this PR is that it indicates that these things are possible and how to do it.  || The journal says where an article is published. Similarly  the publisher is...well... the publisher of the book. So I would advocate the proposed `journal/publisher`. Booktitle would probably only make sense for articles in conference proceedings. I think articles and books are the most common types  so we should focus on them.  @koppor: `InBook`s also have an author and title  so there shouldnt be a problem.  || Guess it depends on scientific area. I would possibly argue that in general  a publisher does not really add any important information  even for books  while in the case of conference papers  the booktitle is crucial. (I know that the publisher is important to create a valid reference  but it does not really add any information when browsing a database.)  || In my discipline (computer science)  Id see the correspondence as follows (bibtex fields)  | inproceedings | journal | | --- | --- | | title | title | | author | author | | booktitle | journal | | publisher | publisher | | year | year |  For instance  take an Elsevier article (http://www.sciencedirect.com/science/article/pii/S0268401215000808). The publisher is Elsevier  but the Journal is "International Journal of Information Management". Elsevier publishes more than one journal.  I read "where something is published" as the conference and the concrete journal. The conference is stored in "booktitle"  whereas the concrete journal is stored in "journal". Both kinds of works are published by a publisher.  Is it different in your discipline @tobiasdiez?  || I do not think @tobiasdiez disagrees with that analysis  but I got the impression that he cites more books than conference papers. In that case I can probably agree that publisher is the "next" field to add (mainly because of lack of others).  Journal/booktitle/publisher? (Except for the very long heading...)  || Ok apparently the majority is for booktitle. Hence I changed it accordingly.   My reasoning was indeed based on `book`s for which the publisher is the equivalent of a journal. Since books occur more often in my database  I thought this addition was more valuable. For `InProceedings` the booktitle indeed makes more sense.  || I suppose  `journal/booktitle/publisher` is too confusing? I really agree that the column `journal/booktitle` is empty too often if many books are in the database.  Ill merge it and lets see what others say. :sunflower:   || 
491,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Add close all/others/... in Database Tab menu See #314 Changelog is missing. Otherwise :+1:   ||
491,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Add close all/others/... in Database Tab menu See #314 Changelog is missing. Otherwise :+1:   ||
491,1,0,0,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,Add close all/others/... in Database Tab menu See #314 Changelog is missing. Otherwise :+1:   ||
500,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Database type detection Please see `BibDatabaseTypeDetection.java`for review.  Some refactoring and a class for auto-detection of database types. ### Algorithm - should we introduce a hard-coded field like encodings inside the bib file? - fast-enough? - what about false detection? ### Refactoring - Bibtexdatabase -> BibDatabase - BibtexEntry -> BibEntry  also see #495  #167 The refactorings are fine  from my point of view.  The detection is based on in-memory operations on collections  so no need to worry about speed at the moment.  If I understand the algorithm correctly  any database that contains a non-Biblatex/non-Bibtex type will be categorized as Bibtex. So  a database with one BibLatex entry and a customn entry would be detected as Bibtex. Is that really the desired result? I would rather ignore all non-Bibtex / non-Biblatex types for the decision (CustomEntry  UnkownEntry  IEEETranEntry  ...) and do the decision solely on valid types with Bibtex as the default result.  || @lenhard No it should always detect as Biblatex if it finds one exclusive entry.   || The algorithm looks good to me. I would move the detection class into the logic package instead of model  but that is your decision.  Strangely  the CircleCi test says there are still compilation errors due to the renamings. As far as I can see locally  all is fine.  ||
500,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Database type detection Please see `BibDatabaseTypeDetection.java`for review.  Some refactoring and a class for auto-detection of database types. ### Algorithm - should we introduce a hard-coded field like encodings inside the bib file? - fast-enough? - what about false detection? ### Refactoring - Bibtexdatabase -> BibDatabase - BibtexEntry -> BibEntry  also see #495  #167 The refactorings are fine  from my point of view.  The detection is based on in-memory operations on collections  so no need to worry about speed at the moment.  If I understand the algorithm correctly  any database that contains a non-Biblatex/non-Bibtex type will be categorized as Bibtex. So  a database with one BibLatex entry and a customn entry would be detected as Bibtex. Is that really the desired result? I would rather ignore all non-Bibtex / non-Biblatex types for the decision (CustomEntry  UnkownEntry  IEEETranEntry  ...) and do the decision solely on valid types with Bibtex as the default result.  || @lenhard No it should always detect as Biblatex if it finds one exclusive entry.   || The algorithm looks good to me. I would move the detection class into the logic package instead of model  but that is your decision.  Strangely  the CircleCi test says there are still compilation errors due to the renamings. As far as I can see locally  all is fine.  ||
500,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,Database type detection Please see `BibDatabaseTypeDetection.java`for review.  Some refactoring and a class for auto-detection of database types. ### Algorithm - should we introduce a hard-coded field like encodings inside the bib file? - fast-enough? - what about false detection? ### Refactoring - Bibtexdatabase -> BibDatabase - BibtexEntry -> BibEntry  also see #495  #167 The refactorings are fine  from my point of view.  The detection is based on in-memory operations on collections  so no need to worry about speed at the moment.  If I understand the algorithm correctly  any database that contains a non-Biblatex/non-Bibtex type will be categorized as Bibtex. So  a database with one BibLatex entry and a customn entry would be detected as Bibtex. Is that really the desired result? I would rather ignore all non-Bibtex / non-Biblatex types for the decision (CustomEntry  UnkownEntry  IEEETranEntry  ...) and do the decision solely on valid types with Bibtex as the default result.  || @lenhard No it should always detect as Biblatex if it finds one exclusive entry.   || The algorithm looks good to me. I would move the detection class into the logic package instead of model  but that is your decision.  Strangely  the CircleCi test says there are still compilation errors due to the renamings. As far as I can see locally  all is fine.  ||
515,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,BibtexImporter test Added tests for BibtexImporter  depends on PR #514 (missing Gradle test encoding  special char ß) I had a personal discussion with @bartsch-dev  that the current BibtexImporter is _not_ aware of the encoding header. The reading of JabRefs encoding header is implemented in `OpenDatabaseAction` and not somewhere in the BibtexParser.  Therefore  there is _no_ test of different encoding strings and it can IMHO only handle ASCII encoded files.  || I would let this go through and handle the usage of the open method of `OpenDatabaseAction` in a separate issue.  || Note that none of the files written at https://github.com/JabRef/jabref/wiki/BibTeX are tested here.  || Fixed all the mentioned issues. The `git` part in the file was  as already mentioned  the title of the book which i took as an example. I also added some examples from https://github.com/JabRef/jabref/wiki/BibTeX.  || I think this can be merged in.  || As discussed in https://github.com/JabRef/jabref/issues/558#issuecomment-195430095  it is not necessary to refactor `OpenDatabaseAction` because of this importer.  ||
515,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,0,1,1,BibtexImporter test Added tests for BibtexImporter  depends on PR #514 (missing Gradle test encoding  special char ß) I had a personal discussion with @bartsch-dev  that the current BibtexImporter is _not_ aware of the encoding header. The reading of JabRefs encoding header is implemented in `OpenDatabaseAction` and not somewhere in the BibtexParser.  Therefore  there is _no_ test of different encoding strings and it can IMHO only handle ASCII encoded files.  || I would let this go through and handle the usage of the open method of `OpenDatabaseAction` in a separate issue.  || Note that none of the files written at https://github.com/JabRef/jabref/wiki/BibTeX are tested here.  || Fixed all the mentioned issues. The `git` part in the file was  as already mentioned  the title of the book which i took as an example. I also added some examples from https://github.com/JabRef/jabref/wiki/BibTeX.  || I think this can be merged in.  || As discussed in https://github.com/JabRef/jabref/issues/558#issuecomment-195430095  it is not necessary to refactor `OpenDatabaseAction` because of this importer.  ||
515,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,BibtexImporter test Added tests for BibtexImporter  depends on PR #514 (missing Gradle test encoding  special char ß) I had a personal discussion with @bartsch-dev  that the current BibtexImporter is _not_ aware of the encoding header. The reading of JabRefs encoding header is implemented in `OpenDatabaseAction` and not somewhere in the BibtexParser.  Therefore  there is _no_ test of different encoding strings and it can IMHO only handle ASCII encoded files.  || I would let this go through and handle the usage of the open method of `OpenDatabaseAction` in a separate issue.  || Note that none of the files written at https://github.com/JabRef/jabref/wiki/BibTeX are tested here.  || Fixed all the mentioned issues. The `git` part in the file was  as already mentioned  the title of the book which i took as an example. I also added some examples from https://github.com/JabRef/jabref/wiki/BibTeX.  || I think this can be merged in.  || As discussed in https://github.com/JabRef/jabref/issues/558#issuecomment-195430095  it is not necessary to refactor `OpenDatabaseAction` because of this importer.  ||
560,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,Write all field keys in lower case Write all field keys in lower case. No more camel casing of field names. E.g.  `title` is written instead of `Title`  `howpublished` instead of `HowPublished`  and `doi` instead of `DOI`. The configuration option `Use camel case for field names (e.g.  "HowPublished" instead of "howpublished")` is gone.  Refs #116  Maybe  the UI also has to display lower case values or should it use the (currently removed) CamelCase functionality? I do not like the current `EntryUtil.capitalizeFirst` solution (found in MainTableColumn.java).  || In my opinion  it should use lower case  since we are standardizing on that. Id say you are free to implement what you find more beautiful :)  || :+1: on lower case.   ||
560,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,Write all field keys in lower case Write all field keys in lower case. No more camel casing of field names. E.g.  `title` is written instead of `Title`  `howpublished` instead of `HowPublished`  and `doi` instead of `DOI`. The configuration option `Use camel case for field names (e.g.  "HowPublished" instead of "howpublished")` is gone.  Refs #116  Maybe  the UI also has to display lower case values or should it use the (currently removed) CamelCase functionality? I do not like the current `EntryUtil.capitalizeFirst` solution (found in MainTableColumn.java).  || In my opinion  it should use lower case  since we are standardizing on that. Id say you are free to implement what you find more beautiful :)  || :+1: on lower case.   ||
560,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Write all field keys in lower case Write all field keys in lower case. No more camel casing of field names. E.g.  `title` is written instead of `Title`  `howpublished` instead of `HowPublished`  and `doi` instead of `DOI`. The configuration option `Use camel case for field names (e.g.  "HowPublished" instead of "howpublished")` is gone.  Refs #116  Maybe  the UI also has to display lower case values or should it use the (currently removed) CamelCase functionality? I do not like the current `EntryUtil.capitalizeFirst` solution (found in MainTableColumn.java).  || In my opinion  it should use lower case  since we are standardizing on that. Id say you are free to implement what you find more beautiful :)  || :+1: on lower case.   ||
567,1,0,0,0,0,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Implements #565: Highlighting matches works now also for regular expr… …essions in preview panel and entry editor  
567,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,Implements #565: Highlighting matches works now also for regular expr… …essions in preview panel and entry editor  
567,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,Implements #565: Highlighting matches works now also for regular expr… …essions in preview panel and entry editor  
568,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixed #564: Cite command changes are immediately reflected in the pus… …h-to-application actions  and not only after restart :+1:  ||
568,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,1,0,1,Fixed #564: Cite command changes are immediately reflected in the pus… …h-to-application actions  and not only after restart :+1:  ||
568,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,0,Fixed #564: Cite command changes are immediately reflected in the pus… …h-to-application actions  and not only after restart :+1:  ||
569,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Remove field saving options As decided in #116 all field saving options should be removed.  This PR purges the options from the GUI and cleans up related reader and formatter classes. This simplification greatly reduces the complexity of `BibEntryWriter`.  
569,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,0,0,1,0,Remove field saving options As decided in #116 all field saving options should be removed.  This PR purges the options from the GUI and cleans up related reader and formatter classes. This simplification greatly reduces the complexity of `BibEntryWriter`.  
569,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Remove field saving options As decided in #116 all field saving options should be removed.  This PR purges the options from the GUI and cleans up related reader and formatter classes. This simplification greatly reduces the complexity of `BibEntryWriter`.  
594,1,0,0,1,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Solved #593 and cleaned up the OO-code a bit Hopefully solved #593.  Try it out at http://builds.jabref.org/ooreferencelist/  (Also cleaned up the code a bit based on PMD. The actual fix is on lines 76-90 in OOUtil.java.) Looks good. Is it possible  that the dependency on "unoil.jar" can be removed?  || unOil.jar was in a separate directory before (changing the default paths to be the same for unOil and the other jars  where jurt.jar is the one searched for  was the biggest change to get it to work with the most recent versions of OO and LO).  || 
594,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Solved #593 and cleaned up the OO-code a bit Hopefully solved #593.  Try it out at http://builds.jabref.org/ooreferencelist/  (Also cleaned up the code a bit based on PMD. The actual fix is on lines 76-90 in OOUtil.java.) Looks good. Is it possible  that the dependency on "unoil.jar" can be removed?  || unOil.jar was in a separate directory before (changing the default paths to be the same for unOil and the other jars  where jurt.jar is the one searched for  was the biggest change to get it to work with the most recent versions of OO and LO).  || 
594,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Solved #593 and cleaned up the OO-code a bit Hopefully solved #593.  Try it out at http://builds.jabref.org/ooreferencelist/  (Also cleaned up the code a bit based on PMD. The actual fix is on lines 76-90 in OOUtil.java.) Looks good. Is it possible  that the dependency on "unoil.jar" can be removed?  || unOil.jar was in a separate directory before (changing the default paths to be the same for unOil and the other jars  where jurt.jar is the one searched for  was the biggest change to get it to work with the most recent versions of OO and LO).  || 
595,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,Fixed #545 - ACM fetcher works again Fixed #545 and some PMD cleanup. I just tried to check if this is fixed  but I am still getting the error:  ``` java.io.IOException: Cannot parse number of hits     at net.sf.jabref.importer.fetcher.ACMPortalFetcher.getNumberOfHits(ACMPortalFetcher.java:400)     at net.sf.jabref.importer.fetcher.ACMPortalFetcher.processQueryGetPreview(ACMPortalFetcher.java:134)     at net.sf.jabref.importer.fetcher.GeneralFetcher$3.run(GeneralFetcher.java:241)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:744) ```  The exception is thrown  since the matcher seems to find no match. Maybe `getNumberOfHits` should return zero in this case instead of throwing the exception?  || Ahh  thats right. Final fix: "lets remove all the checking as I have much better regexps now...". Not sure it Ill start up Eclipse again today  but Ill take care of it. :-)  || Sounds good :smile: And no need to hurry  there are enough other pull requests to review.  || Should be good to go now.  || Confirmed  works for me as well. Thanks a lot!  || 
595,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Fixed #545 - ACM fetcher works again Fixed #545 and some PMD cleanup. I just tried to check if this is fixed  but I am still getting the error:  ``` java.io.IOException: Cannot parse number of hits     at net.sf.jabref.importer.fetcher.ACMPortalFetcher.getNumberOfHits(ACMPortalFetcher.java:400)     at net.sf.jabref.importer.fetcher.ACMPortalFetcher.processQueryGetPreview(ACMPortalFetcher.java:134)     at net.sf.jabref.importer.fetcher.GeneralFetcher$3.run(GeneralFetcher.java:241)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:744) ```  The exception is thrown  since the matcher seems to find no match. Maybe `getNumberOfHits` should return zero in this case instead of throwing the exception?  || Ahh  thats right. Final fix: "lets remove all the checking as I have much better regexps now...". Not sure it Ill start up Eclipse again today  but Ill take care of it. :-)  || Sounds good :smile: And no need to hurry  there are enough other pull requests to review.  || Should be good to go now.  || Confirmed  works for me as well. Thanks a lot!  || 
595,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixed #545 - ACM fetcher works again Fixed #545 and some PMD cleanup. I just tried to check if this is fixed  but I am still getting the error:  ``` java.io.IOException: Cannot parse number of hits     at net.sf.jabref.importer.fetcher.ACMPortalFetcher.getNumberOfHits(ACMPortalFetcher.java:400)     at net.sf.jabref.importer.fetcher.ACMPortalFetcher.processQueryGetPreview(ACMPortalFetcher.java:134)     at net.sf.jabref.importer.fetcher.GeneralFetcher$3.run(GeneralFetcher.java:241)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:744) ```  The exception is thrown  since the matcher seems to find no match. Maybe `getNumberOfHits` should return zero in this case instead of throwing the exception?  || Ahh  thats right. Final fix: "lets remove all the checking as I have much better regexps now...". Not sure it Ill start up Eclipse again today  but Ill take care of it. :-)  || Sounds good :smile: And no need to hurry  there are enough other pull requests to review.  || Should be good to go now.  || Confirmed  works for me as well. Thanks a lot!  || 
605,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,Change EntryType to String in BibEntry This PR tries to resolve the issues discussed in #337 and #495.  Right now the entry type is converted from a string representation (in the bibtex file) to an EntryType by the parser. The problem with this approach is that the parser has to know about the bibtex vs biblatex mode. The idea was to just store the string in the BibEntry and only get the corresponding EntryType whenever it is really necessary. Oh  that change surely was much effort. Unfortunately  I find the old way more fitting even though the bibtex / biblatex mode switching was difficult. Why not using `EntryType`  but only as "proxy" to the real type dependent on the bibtex/biblatex mode? (I currently do not know the GoF pattern name for that :see_no_evil:)  All entries should have a (non-abstract) `EntryType` and there should be (abstract) `BibtexEntryType` and `BiblatexEntryType`. All of them should implement `IEntryType` offering `hasAllRequiredFields`etc. `EntryType`and `*EntryType` should not be in a inheritance relation. `EntryType` should proxy to the appropriate Bib(la)texType depending on the mode.  || Thanks Olly for your feedback.   Let me elaborate a little about why Ive chosen to store the entry type as a String.  The type of the entry is per se a state-less information. `@article{}` signifies an article in the bib file independent on any preferences in JabRef. I think it it thus a good idea to also have a state-independent representation of the same information in JabRef. In other words  I prefer a system where the type is stored in the `BibEntry` class independent on anything else (much like the `author` field is also stored as a string and not as a `AuthorList` object). Then in a latter step this data can be enriched by the preference-dependent information about optional and required fields. This reflects more or less the impression I got from #495 that we came to the conclusion to see the `BibEntry` class only as a data object without any logic.   Now you can think about implementing such a system in Java. The easiest way and the one I have chosen in this PR is to store the type as a String variable. One can also store the type information as an enum (as I have suggested in #501)  but this feels over-engineered (especially since there is no code checking whether a entry is an article or a book).  The second step is to augment this information by optional/required fields. I have chosen a constructor-based approach  but maybe your idea about using the proxy pattern is better. I have to think about it more.  || Regarding `String` vs `AuthorList`: I would have preferred that BibEntry uses `AuthorList`. Possibly calculated on demand and not during creation of the object. Similar for the `files` field.  Unsure whether Im wrong. I would pack as much "interpreted" data in BibEntry and get rid of Strings as much as possible... Maybe  we then reimplement an in-memory relational database system. For instance  if we store the "crossref" as reference and not as string. What if the referenced entry is deleted and then recreated etc.  || Ok  as requested here a short summary in bullet list form.  _Status quo_: Parser converts the string "article" to a BibType class instance and saves this in the entry. - (--) Makes changing from BibTex to BibLatex mode hard as the type stored in every entry has to be changed. - (-) Adds additional dependency in the parser (BibTypes class). - (-) The parser has to know whether we are in BibLatexMode or in BibTexMode. However  a priori this information is not necessary to parse a bib file. - (+) Does not store the type information as a String  _PR_: Parser stores the type information as a plain string in the entry. This string will be converted to BibType class when needed - (+) Changing from BibTex to BibLatex mode is easier since the required/optional fields are used only in a few places.  - (+) Makes dependencies clearer (which class needs to know the BibType or BibTex/BibLatex mode). - (+) Parser does not depend on BibType class and on BibLatexMode. - (0-) Stores the type information as a string. However  this is in my opinion no real caveat. The previous code also contains something like `if(entry.getType().getName()  "article") which is now replaced by`if(entry.getType()  "article")`. So often the name of the BibType is used  which somehow destroys the advantage.   _Alternative solution_: Store type information as an enum in the entry and convert this enum to a BibType when needed. This approach keeps all the advantages but does not have the "stringy problem". It feels however a little bit overengineered (mainly because there are "unknown" types which are not covered by a simple enum)  || Refs #551   || - TypedBibEntry as a wrapper around BibEntry  TypedBibEntry has high level API  BibEntry has low level API - TypedBibEntry -> BibEntry  BibEntry -> RawBibEntry  || Rebased (not sure why there is a merge commit....) and introduced TypedBibEntry aka GoodEasyGodBibEntry (is this the correct way to implement it?).   Todo (other PR): BibDatabase.getResolvedField should accept Optional database.  || 
605,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Change EntryType to String in BibEntry This PR tries to resolve the issues discussed in #337 and #495.  Right now the entry type is converted from a string representation (in the bibtex file) to an EntryType by the parser. The problem with this approach is that the parser has to know about the bibtex vs biblatex mode. The idea was to just store the string in the BibEntry and only get the corresponding EntryType whenever it is really necessary. Oh  that change surely was much effort. Unfortunately  I find the old way more fitting even though the bibtex / biblatex mode switching was difficult. Why not using `EntryType`  but only as "proxy" to the real type dependent on the bibtex/biblatex mode? (I currently do not know the GoF pattern name for that :see_no_evil:)  All entries should have a (non-abstract) `EntryType` and there should be (abstract) `BibtexEntryType` and `BiblatexEntryType`. All of them should implement `IEntryType` offering `hasAllRequiredFields`etc. `EntryType`and `*EntryType` should not be in a inheritance relation. `EntryType` should proxy to the appropriate Bib(la)texType depending on the mode.  || Thanks Olly for your feedback.   Let me elaborate a little about why Ive chosen to store the entry type as a String.  The type of the entry is per se a state-less information. `@article{}` signifies an article in the bib file independent on any preferences in JabRef. I think it it thus a good idea to also have a state-independent representation of the same information in JabRef. In other words  I prefer a system where the type is stored in the `BibEntry` class independent on anything else (much like the `author` field is also stored as a string and not as a `AuthorList` object). Then in a latter step this data can be enriched by the preference-dependent information about optional and required fields. This reflects more or less the impression I got from #495 that we came to the conclusion to see the `BibEntry` class only as a data object without any logic.   Now you can think about implementing such a system in Java. The easiest way and the one I have chosen in this PR is to store the type as a String variable. One can also store the type information as an enum (as I have suggested in #501)  but this feels over-engineered (especially since there is no code checking whether a entry is an article or a book).  The second step is to augment this information by optional/required fields. I have chosen a constructor-based approach  but maybe your idea about using the proxy pattern is better. I have to think about it more.  || Regarding `String` vs `AuthorList`: I would have preferred that BibEntry uses `AuthorList`. Possibly calculated on demand and not during creation of the object. Similar for the `files` field.  Unsure whether Im wrong. I would pack as much "interpreted" data in BibEntry and get rid of Strings as much as possible... Maybe  we then reimplement an in-memory relational database system. For instance  if we store the "crossref" as reference and not as string. What if the referenced entry is deleted and then recreated etc.  || Ok  as requested here a short summary in bullet list form.  _Status quo_: Parser converts the string "article" to a BibType class instance and saves this in the entry. - (--) Makes changing from BibTex to BibLatex mode hard as the type stored in every entry has to be changed. - (-) Adds additional dependency in the parser (BibTypes class). - (-) The parser has to know whether we are in BibLatexMode or in BibTexMode. However  a priori this information is not necessary to parse a bib file. - (+) Does not store the type information as a String  _PR_: Parser stores the type information as a plain string in the entry. This string will be converted to BibType class when needed - (+) Changing from BibTex to BibLatex mode is easier since the required/optional fields are used only in a few places.  - (+) Makes dependencies clearer (which class needs to know the BibType or BibTex/BibLatex mode). - (+) Parser does not depend on BibType class and on BibLatexMode. - (0-) Stores the type information as a string. However  this is in my opinion no real caveat. The previous code also contains something like `if(entry.getType().getName()  "article") which is now replaced by`if(entry.getType()  "article")`. So often the name of the BibType is used  which somehow destroys the advantage.   _Alternative solution_: Store type information as an enum in the entry and convert this enum to a BibType when needed. This approach keeps all the advantages but does not have the "stringy problem". It feels however a little bit overengineered (mainly because there are "unknown" types which are not covered by a simple enum)  || Refs #551   || - TypedBibEntry as a wrapper around BibEntry  TypedBibEntry has high level API  BibEntry has low level API - TypedBibEntry -> BibEntry  BibEntry -> RawBibEntry  || Rebased (not sure why there is a merge commit....) and introduced TypedBibEntry aka GoodEasyGodBibEntry (is this the correct way to implement it?).   Todo (other PR): BibDatabase.getResolvedField should accept Optional database.  || 
605,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,0,Change EntryType to String in BibEntry This PR tries to resolve the issues discussed in #337 and #495.  Right now the entry type is converted from a string representation (in the bibtex file) to an EntryType by the parser. The problem with this approach is that the parser has to know about the bibtex vs biblatex mode. The idea was to just store the string in the BibEntry and only get the corresponding EntryType whenever it is really necessary. Oh  that change surely was much effort. Unfortunately  I find the old way more fitting even though the bibtex / biblatex mode switching was difficult. Why not using `EntryType`  but only as "proxy" to the real type dependent on the bibtex/biblatex mode? (I currently do not know the GoF pattern name for that :see_no_evil:)  All entries should have a (non-abstract) `EntryType` and there should be (abstract) `BibtexEntryType` and `BiblatexEntryType`. All of them should implement `IEntryType` offering `hasAllRequiredFields`etc. `EntryType`and `*EntryType` should not be in a inheritance relation. `EntryType` should proxy to the appropriate Bib(la)texType depending on the mode.  || Thanks Olly for your feedback.   Let me elaborate a little about why Ive chosen to store the entry type as a String.  The type of the entry is per se a state-less information. `@article{}` signifies an article in the bib file independent on any preferences in JabRef. I think it it thus a good idea to also have a state-independent representation of the same information in JabRef. In other words  I prefer a system where the type is stored in the `BibEntry` class independent on anything else (much like the `author` field is also stored as a string and not as a `AuthorList` object). Then in a latter step this data can be enriched by the preference-dependent information about optional and required fields. This reflects more or less the impression I got from #495 that we came to the conclusion to see the `BibEntry` class only as a data object without any logic.   Now you can think about implementing such a system in Java. The easiest way and the one I have chosen in this PR is to store the type as a String variable. One can also store the type information as an enum (as I have suggested in #501)  but this feels over-engineered (especially since there is no code checking whether a entry is an article or a book).  The second step is to augment this information by optional/required fields. I have chosen a constructor-based approach  but maybe your idea about using the proxy pattern is better. I have to think about it more.  || Regarding `String` vs `AuthorList`: I would have preferred that BibEntry uses `AuthorList`. Possibly calculated on demand and not during creation of the object. Similar for the `files` field.  Unsure whether Im wrong. I would pack as much "interpreted" data in BibEntry and get rid of Strings as much as possible... Maybe  we then reimplement an in-memory relational database system. For instance  if we store the "crossref" as reference and not as string. What if the referenced entry is deleted and then recreated etc.  || Ok  as requested here a short summary in bullet list form.  _Status quo_: Parser converts the string "article" to a BibType class instance and saves this in the entry. - (--) Makes changing from BibTex to BibLatex mode hard as the type stored in every entry has to be changed. - (-) Adds additional dependency in the parser (BibTypes class). - (-) The parser has to know whether we are in BibLatexMode or in BibTexMode. However  a priori this information is not necessary to parse a bib file. - (+) Does not store the type information as a String  _PR_: Parser stores the type information as a plain string in the entry. This string will be converted to BibType class when needed - (+) Changing from BibTex to BibLatex mode is easier since the required/optional fields are used only in a few places.  - (+) Makes dependencies clearer (which class needs to know the BibType or BibTex/BibLatex mode). - (+) Parser does not depend on BibType class and on BibLatexMode. - (0-) Stores the type information as a string. However  this is in my opinion no real caveat. The previous code also contains something like `if(entry.getType().getName()  "article") which is now replaced by`if(entry.getType()  "article")`. So often the name of the BibType is used  which somehow destroys the advantage.   _Alternative solution_: Store type information as an enum in the entry and convert this enum to a BibType when needed. This approach keeps all the advantages but does not have the "stringy problem". It feels however a little bit overengineered (mainly because there are "unknown" types which are not covered by a simple enum)  || Refs #551   || - TypedBibEntry as a wrapper around BibEntry  TypedBibEntry has high level API  BibEntry has low level API - TypedBibEntry -> BibEntry  BibEntry -> RawBibEntry  || Rebased (not sure why there is a merge commit....) and introduced TypedBibEntry aka GoodEasyGodBibEntry (is this the correct way to implement it?).   Todo (other PR): BibDatabase.getResolvedField should accept Optional database.  || 
605,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,Change EntryType to String in BibEntry This PR tries to resolve the issues discussed in #337 and #495.  Right now the entry type is converted from a string representation (in the bibtex file) to an EntryType by the parser. The problem with this approach is that the parser has to know about the bibtex vs biblatex mode. The idea was to just store the string in the BibEntry and only get the corresponding EntryType whenever it is really necessary. Oh  that change surely was much effort. Unfortunately  I find the old way more fitting even though the bibtex / biblatex mode switching was difficult. Why not using `EntryType`  but only as "proxy" to the real type dependent on the bibtex/biblatex mode? (I currently do not know the GoF pattern name for that :see_no_evil:)  All entries should have a (non-abstract) `EntryType` and there should be (abstract) `BibtexEntryType` and `BiblatexEntryType`. All of them should implement `IEntryType` offering `hasAllRequiredFields`etc. `EntryType`and `*EntryType` should not be in a inheritance relation. `EntryType` should proxy to the appropriate Bib(la)texType depending on the mode.  || Thanks Olly for your feedback.   Let me elaborate a little about why Ive chosen to store the entry type as a String.  The type of the entry is per se a state-less information. `@article{}` signifies an article in the bib file independent on any preferences in JabRef. I think it it thus a good idea to also have a state-independent representation of the same information in JabRef. In other words  I prefer a system where the type is stored in the `BibEntry` class independent on anything else (much like the `author` field is also stored as a string and not as a `AuthorList` object). Then in a latter step this data can be enriched by the preference-dependent information about optional and required fields. This reflects more or less the impression I got from #495 that we came to the conclusion to see the `BibEntry` class only as a data object without any logic.   Now you can think about implementing such a system in Java. The easiest way and the one I have chosen in this PR is to store the type as a String variable. One can also store the type information as an enum (as I have suggested in #501)  but this feels over-engineered (especially since there is no code checking whether a entry is an article or a book).  The second step is to augment this information by optional/required fields. I have chosen a constructor-based approach  but maybe your idea about using the proxy pattern is better. I have to think about it more.  || Regarding `String` vs `AuthorList`: I would have preferred that BibEntry uses `AuthorList`. Possibly calculated on demand and not during creation of the object. Similar for the `files` field.  Unsure whether Im wrong. I would pack as much "interpreted" data in BibEntry and get rid of Strings as much as possible... Maybe  we then reimplement an in-memory relational database system. For instance  if we store the "crossref" as reference and not as string. What if the referenced entry is deleted and then recreated etc.  || Ok  as requested here a short summary in bullet list form.  _Status quo_: Parser converts the string "article" to a BibType class instance and saves this in the entry. - (--) Makes changing from BibTex to BibLatex mode hard as the type stored in every entry has to be changed. - (-) Adds additional dependency in the parser (BibTypes class). - (-) The parser has to know whether we are in BibLatexMode or in BibTexMode. However  a priori this information is not necessary to parse a bib file. - (+) Does not store the type information as a String  _PR_: Parser stores the type information as a plain string in the entry. This string will be converted to BibType class when needed - (+) Changing from BibTex to BibLatex mode is easier since the required/optional fields are used only in a few places.  - (+) Makes dependencies clearer (which class needs to know the BibType or BibTex/BibLatex mode). - (+) Parser does not depend on BibType class and on BibLatexMode. - (0-) Stores the type information as a string. However  this is in my opinion no real caveat. The previous code also contains something like `if(entry.getType().getName()  "article") which is now replaced by`if(entry.getType()  "article")`. So often the name of the BibType is used  which somehow destroys the advantage.   _Alternative solution_: Store type information as an enum in the entry and convert this enum to a BibType when needed. This approach keeps all the advantages but does not have the "stringy problem". It feels however a little bit overengineered (mainly because there are "unknown" types which are not covered by a simple enum)  || Refs #551   || - TypedBibEntry as a wrapper around BibEntry  TypedBibEntry has high level API  BibEntry has low level API - TypedBibEntry -> BibEntry  BibEntry -> RawBibEntry  || Rebased (not sure why there is a merge commit....) and introduced TypedBibEntry aka GoodEasyGodBibEntry (is this the correct way to implement it?).   Todo (other PR): BibDatabase.getResolvedField should accept Optional database.  || 
605,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Change EntryType to String in BibEntry This PR tries to resolve the issues discussed in #337 and #495.  Right now the entry type is converted from a string representation (in the bibtex file) to an EntryType by the parser. The problem with this approach is that the parser has to know about the bibtex vs biblatex mode. The idea was to just store the string in the BibEntry and only get the corresponding EntryType whenever it is really necessary. Oh  that change surely was much effort. Unfortunately  I find the old way more fitting even though the bibtex / biblatex mode switching was difficult. Why not using `EntryType`  but only as "proxy" to the real type dependent on the bibtex/biblatex mode? (I currently do not know the GoF pattern name for that :see_no_evil:)  All entries should have a (non-abstract) `EntryType` and there should be (abstract) `BibtexEntryType` and `BiblatexEntryType`. All of them should implement `IEntryType` offering `hasAllRequiredFields`etc. `EntryType`and `*EntryType` should not be in a inheritance relation. `EntryType` should proxy to the appropriate Bib(la)texType depending on the mode.  || Thanks Olly for your feedback.   Let me elaborate a little about why Ive chosen to store the entry type as a String.  The type of the entry is per se a state-less information. `@article{}` signifies an article in the bib file independent on any preferences in JabRef. I think it it thus a good idea to also have a state-independent representation of the same information in JabRef. In other words  I prefer a system where the type is stored in the `BibEntry` class independent on anything else (much like the `author` field is also stored as a string and not as a `AuthorList` object). Then in a latter step this data can be enriched by the preference-dependent information about optional and required fields. This reflects more or less the impression I got from #495 that we came to the conclusion to see the `BibEntry` class only as a data object without any logic.   Now you can think about implementing such a system in Java. The easiest way and the one I have chosen in this PR is to store the type as a String variable. One can also store the type information as an enum (as I have suggested in #501)  but this feels over-engineered (especially since there is no code checking whether a entry is an article or a book).  The second step is to augment this information by optional/required fields. I have chosen a constructor-based approach  but maybe your idea about using the proxy pattern is better. I have to think about it more.  || Regarding `String` vs `AuthorList`: I would have preferred that BibEntry uses `AuthorList`. Possibly calculated on demand and not during creation of the object. Similar for the `files` field.  Unsure whether Im wrong. I would pack as much "interpreted" data in BibEntry and get rid of Strings as much as possible... Maybe  we then reimplement an in-memory relational database system. For instance  if we store the "crossref" as reference and not as string. What if the referenced entry is deleted and then recreated etc.  || Ok  as requested here a short summary in bullet list form.  _Status quo_: Parser converts the string "article" to a BibType class instance and saves this in the entry. - (--) Makes changing from BibTex to BibLatex mode hard as the type stored in every entry has to be changed. - (-) Adds additional dependency in the parser (BibTypes class). - (-) The parser has to know whether we are in BibLatexMode or in BibTexMode. However  a priori this information is not necessary to parse a bib file. - (+) Does not store the type information as a String  _PR_: Parser stores the type information as a plain string in the entry. This string will be converted to BibType class when needed - (+) Changing from BibTex to BibLatex mode is easier since the required/optional fields are used only in a few places.  - (+) Makes dependencies clearer (which class needs to know the BibType or BibTex/BibLatex mode). - (+) Parser does not depend on BibType class and on BibLatexMode. - (0-) Stores the type information as a string. However  this is in my opinion no real caveat. The previous code also contains something like `if(entry.getType().getName()  "article") which is now replaced by`if(entry.getType()  "article")`. So often the name of the BibType is used  which somehow destroys the advantage.   _Alternative solution_: Store type information as an enum in the entry and convert this enum to a BibType when needed. This approach keeps all the advantages but does not have the "stringy problem". It feels however a little bit overengineered (mainly because there are "unknown" types which are not covered by a simple enum)  || Refs #551   || - TypedBibEntry as a wrapper around BibEntry  TypedBibEntry has high level API  BibEntry has low level API - TypedBibEntry -> BibEntry  BibEntry -> RawBibEntry  || Rebased (not sure why there is a merge commit....) and introduced TypedBibEntry aka GoodEasyGodBibEntry (is this the correct way to implement it?).   Todo (other PR): BibDatabase.getResolvedField should accept Optional database.  || 
605,1,0,0,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Change EntryType to String in BibEntry This PR tries to resolve the issues discussed in #337 and #495.  Right now the entry type is converted from a string representation (in the bibtex file) to an EntryType by the parser. The problem with this approach is that the parser has to know about the bibtex vs biblatex mode. The idea was to just store the string in the BibEntry and only get the corresponding EntryType whenever it is really necessary. Oh  that change surely was much effort. Unfortunately  I find the old way more fitting even though the bibtex / biblatex mode switching was difficult. Why not using `EntryType`  but only as "proxy" to the real type dependent on the bibtex/biblatex mode? (I currently do not know the GoF pattern name for that :see_no_evil:)  All entries should have a (non-abstract) `EntryType` and there should be (abstract) `BibtexEntryType` and `BiblatexEntryType`. All of them should implement `IEntryType` offering `hasAllRequiredFields`etc. `EntryType`and `*EntryType` should not be in a inheritance relation. `EntryType` should proxy to the appropriate Bib(la)texType depending on the mode.  || Thanks Olly for your feedback.   Let me elaborate a little about why Ive chosen to store the entry type as a String.  The type of the entry is per se a state-less information. `@article{}` signifies an article in the bib file independent on any preferences in JabRef. I think it it thus a good idea to also have a state-independent representation of the same information in JabRef. In other words  I prefer a system where the type is stored in the `BibEntry` class independent on anything else (much like the `author` field is also stored as a string and not as a `AuthorList` object). Then in a latter step this data can be enriched by the preference-dependent information about optional and required fields. This reflects more or less the impression I got from #495 that we came to the conclusion to see the `BibEntry` class only as a data object without any logic.   Now you can think about implementing such a system in Java. The easiest way and the one I have chosen in this PR is to store the type as a String variable. One can also store the type information as an enum (as I have suggested in #501)  but this feels over-engineered (especially since there is no code checking whether a entry is an article or a book).  The second step is to augment this information by optional/required fields. I have chosen a constructor-based approach  but maybe your idea about using the proxy pattern is better. I have to think about it more.  || Regarding `String` vs `AuthorList`: I would have preferred that BibEntry uses `AuthorList`. Possibly calculated on demand and not during creation of the object. Similar for the `files` field.  Unsure whether Im wrong. I would pack as much "interpreted" data in BibEntry and get rid of Strings as much as possible... Maybe  we then reimplement an in-memory relational database system. For instance  if we store the "crossref" as reference and not as string. What if the referenced entry is deleted and then recreated etc.  || Ok  as requested here a short summary in bullet list form.  _Status quo_: Parser converts the string "article" to a BibType class instance and saves this in the entry. - (--) Makes changing from BibTex to BibLatex mode hard as the type stored in every entry has to be changed. - (-) Adds additional dependency in the parser (BibTypes class). - (-) The parser has to know whether we are in BibLatexMode or in BibTexMode. However  a priori this information is not necessary to parse a bib file. - (+) Does not store the type information as a String  _PR_: Parser stores the type information as a plain string in the entry. This string will be converted to BibType class when needed - (+) Changing from BibTex to BibLatex mode is easier since the required/optional fields are used only in a few places.  - (+) Makes dependencies clearer (which class needs to know the BibType or BibTex/BibLatex mode). - (+) Parser does not depend on BibType class and on BibLatexMode. - (0-) Stores the type information as a string. However  this is in my opinion no real caveat. The previous code also contains something like `if(entry.getType().getName()  "article") which is now replaced by`if(entry.getType()  "article")`. So often the name of the BibType is used  which somehow destroys the advantage.   _Alternative solution_: Store type information as an enum in the entry and convert this enum to a BibType when needed. This approach keeps all the advantages but does not have the "stringy problem". It feels however a little bit overengineered (mainly because there are "unknown" types which are not covered by a simple enum)  || Refs #551   || - TypedBibEntry as a wrapper around BibEntry  TypedBibEntry has high level API  BibEntry has low level API - TypedBibEntry -> BibEntry  BibEntry -> RawBibEntry  || Rebased (not sure why there is a merge commit....) and introduced TypedBibEntry aka GoodEasyGodBibEntry (is this the correct way to implement it?).   Todo (other PR): BibDatabase.getResolvedField should accept Optional database.  || 
648,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Partly implemented #647 Added the possibility to copy the preview panel text. Not exactly what is requested in #647  but probably quite useful.  Note that the key binding is not working (nor is the print preview key working) so Ill open an issue for that. I would change the changelog entry to just describe the added functionality without refering to the other issue as it suggest another approach in my opinion.  || LGTM :+1:   || Please rebase  then this can be merged in.   || Fixed and rebased  ||
648,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Partly implemented #647 Added the possibility to copy the preview panel text. Not exactly what is requested in #647  but probably quite useful.  Note that the key binding is not working (nor is the print preview key working) so Ill open an issue for that. I would change the changelog entry to just describe the added functionality without refering to the other issue as it suggest another approach in my opinion.  || LGTM :+1:   || Please rebase  then this can be merged in.   || Fixed and rebased  ||
648,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Partly implemented #647 Added the possibility to copy the preview panel text. Not exactly what is requested in #647  but probably quite useful.  Note that the key binding is not working (nor is the print preview key working) so Ill open an issue for that. I would change the changelog entry to just describe the added functionality without refering to the other issue as it suggest another approach in my opinion.  || LGTM :+1:   || Please rebase  then this can be merged in.   || Fixed and rebased  ||
660,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Add test for parsing accents I tried to replicate the problems of #650 but in the progress realized that the problem lied in the bib file provided there and not in the parser.  So the added test is rather useless but I figured it does not hurt to have more tests :)  
660,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,Add test for parsing accents I tried to replicate the problems of #650 but in the progress realized that the problem lied in the bib file provided there and not in the parser.  So the added test is rather useless but I figured it does not hurt to have more tests :)  
660,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Add test for parsing accents I tried to replicate the problems of #650 but in the progress realized that the problem lied in the bib file provided there and not in the parser.  So the added test is rather useless but I figured it does not hurt to have more tests :)  
677,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Make BibTex parser more robust against missing newlines As described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line)  i.e.  `% Encoding: myEncoding @article{...}`. Actually  as the tests reveal it was not a problem with the actual parser but within the file opening logic.  I do not view this PR as a complete fix for #669 and #621 since not just the parser but also the serialization should be improved.  Also fix a bug that prevented the import of BibTex entries having only a key as its content. :+1: (except my minor comment)  || Corrected... for some reason the code style was not imported correctly in Intellij.  || Hm  I just use the default Intellij code style. :)  || @tobiasdiez: what do you think should be done to fix the above issues completely?  || @lenhard In my opinion JabRef should add new lines after the encoding and preamble. Im working on a solution right now (including a bit of refactoring to make testing easier).  || @tobiasdiez Ok  good to hear! Ill concentrate on other issues then.  ||
677,1,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,0,1,Make BibTex parser more robust against missing newlines As described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line)  i.e.  `% Encoding: myEncoding @article{...}`. Actually  as the tests reveal it was not a problem with the actual parser but within the file opening logic.  I do not view this PR as a complete fix for #669 and #621 since not just the parser but also the serialization should be improved.  Also fix a bug that prevented the import of BibTex entries having only a key as its content. :+1: (except my minor comment)  || Corrected... for some reason the code style was not imported correctly in Intellij.  || Hm  I just use the default Intellij code style. :)  || @tobiasdiez: what do you think should be done to fix the above issues completely?  || @lenhard In my opinion JabRef should add new lines after the encoding and preamble. Im working on a solution right now (including a bit of refactoring to make testing easier).  || @tobiasdiez Ok  good to hear! Ill concentrate on other issues then.  ||
677,1,0,0,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Make BibTex parser more robust against missing newlines As described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line)  i.e.  `% Encoding: myEncoding @article{...}`. Actually  as the tests reveal it was not a problem with the actual parser but within the file opening logic.  I do not view this PR as a complete fix for #669 and #621 since not just the parser but also the serialization should be improved.  Also fix a bug that prevented the import of BibTex entries having only a key as its content. :+1: (except my minor comment)  || Corrected... for some reason the code style was not imported correctly in Intellij.  || Hm  I just use the default Intellij code style. :)  || @tobiasdiez: what do you think should be done to fix the above issues completely?  || @lenhard In my opinion JabRef should add new lines after the encoding and preamble. Im working on a solution right now (including a bit of refactoring to make testing easier).  || @tobiasdiez Ok  good to hear! Ill concentrate on other issues then.  ||
677,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Make BibTex parser more robust against missing newlines As described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line)  i.e.  `% Encoding: myEncoding @article{...}`. Actually  as the tests reveal it was not a problem with the actual parser but within the file opening logic.  I do not view this PR as a complete fix for #669 and #621 since not just the parser but also the serialization should be improved.  Also fix a bug that prevented the import of BibTex entries having only a key as its content. :+1: (except my minor comment)  || Corrected... for some reason the code style was not imported correctly in Intellij.  || Hm  I just use the default Intellij code style. :)  || @tobiasdiez: what do you think should be done to fix the above issues completely?  || @lenhard In my opinion JabRef should add new lines after the encoding and preamble. Im working on a solution right now (including a bit of refactoring to make testing easier).  || @tobiasdiez Ok  good to hear! Ill concentrate on other issues then.  ||
677,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,Make BibTex parser more robust against missing newlines As described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line)  i.e.  `% Encoding: myEncoding @article{...}`. Actually  as the tests reveal it was not a problem with the actual parser but within the file opening logic.  I do not view this PR as a complete fix for #669 and #621 since not just the parser but also the serialization should be improved.  Also fix a bug that prevented the import of BibTex entries having only a key as its content. :+1: (except my minor comment)  || Corrected... for some reason the code style was not imported correctly in Intellij.  || Hm  I just use the default Intellij code style. :)  || @tobiasdiez: what do you think should be done to fix the above issues completely?  || @lenhard In my opinion JabRef should add new lines after the encoding and preamble. Im working on a solution right now (including a bit of refactoring to make testing easier).  || @tobiasdiez Ok  good to hear! Ill concentrate on other issues then.  ||
677,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Make BibTex parser more robust against missing newlines As described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line)  i.e.  `% Encoding: myEncoding @article{...}`. Actually  as the tests reveal it was not a problem with the actual parser but within the file opening logic.  I do not view this PR as a complete fix for #669 and #621 since not just the parser but also the serialization should be improved.  Also fix a bug that prevented the import of BibTex entries having only a key as its content. :+1: (except my minor comment)  || Corrected... for some reason the code style was not imported correctly in Intellij.  || Hm  I just use the default Intellij code style. :)  || @tobiasdiez: what do you think should be done to fix the above issues completely?  || @lenhard In my opinion JabRef should add new lines after the encoding and preamble. Im working on a solution right now (including a bit of refactoring to make testing easier).  || @tobiasdiez Ok  good to hear! Ill concentrate on other issues then.  ||
683,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,0,Remove URL sanitizer as it is malfunctioning and unclear where needed… Also see #667.  @JabRef/developers If someone knows a use case where this is needed and why we can try to reimplement it properly. But this way it really makes no sense IMHO. So then either `URLDecoder.decode` or `URI.toASCIIstring` converts `#` to `%23`? Of course not impossible  but seems like one has used the incorrect methods in that case.  I think the main things it does is replacing space with %20 in the URLs and removing any `\url{...}` commands. There will probably be users that will run into problems  but maybe one can add a URL cleanup that does the corresponding thing?  I think an alternative solution would just be to do a `replaceAll("%23" "#")` at the end.  || The problem is that is really hard to correctly encode a URL if we are not aware of its structure. Regardless of what methods we use. So if we are not completely sure we need it  we should probably not do this.  || :+1: sounds reasonable.  || @koppor what do you think about this? Especially is it possible that users have a `url{\url{http://google.com}}` in their bibfile? And what about escaping symbols for latex like `%`or `#`?  || Unsure. The method comment states following:  > make sure an URL is "portable"  in that it does not contain bad characters that break the open command in some  OSes. A call to this method will also remove \url{} enclosings.  That reads perfectly fine.  OK  I also read the following  > // FIXME: everything below is really flawed atm  Maybe  we should cleanup the URL fields and not do the cleanup at the place of opening. Although I see the issue of malicious bib files which could have an URL executing malicious code. However  that risk is so low that I would not count on it.  Meaning: :+1: and open a new issue for CleanUp.  || 
683,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,Remove URL sanitizer as it is malfunctioning and unclear where needed… Also see #667.  @JabRef/developers If someone knows a use case where this is needed and why we can try to reimplement it properly. But this way it really makes no sense IMHO. So then either `URLDecoder.decode` or `URI.toASCIIstring` converts `#` to `%23`? Of course not impossible  but seems like one has used the incorrect methods in that case.  I think the main things it does is replacing space with %20 in the URLs and removing any `\url{...}` commands. There will probably be users that will run into problems  but maybe one can add a URL cleanup that does the corresponding thing?  I think an alternative solution would just be to do a `replaceAll("%23" "#")` at the end.  || The problem is that is really hard to correctly encode a URL if we are not aware of its structure. Regardless of what methods we use. So if we are not completely sure we need it  we should probably not do this.  || :+1: sounds reasonable.  || @koppor what do you think about this? Especially is it possible that users have a `url{\url{http://google.com}}` in their bibfile? And what about escaping symbols for latex like `%`or `#`?  || Unsure. The method comment states following:  > make sure an URL is "portable"  in that it does not contain bad characters that break the open command in some  OSes. A call to this method will also remove \url{} enclosings.  That reads perfectly fine.  OK  I also read the following  > // FIXME: everything below is really flawed atm  Maybe  we should cleanup the URL fields and not do the cleanup at the place of opening. Although I see the issue of malicious bib files which could have an URL executing malicious code. However  that risk is so low that I would not count on it.  Meaning: :+1: and open a new issue for CleanUp.  || 
683,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Remove URL sanitizer as it is malfunctioning and unclear where needed… Also see #667.  @JabRef/developers If someone knows a use case where this is needed and why we can try to reimplement it properly. But this way it really makes no sense IMHO. So then either `URLDecoder.decode` or `URI.toASCIIstring` converts `#` to `%23`? Of course not impossible  but seems like one has used the incorrect methods in that case.  I think the main things it does is replacing space with %20 in the URLs and removing any `\url{...}` commands. There will probably be users that will run into problems  but maybe one can add a URL cleanup that does the corresponding thing?  I think an alternative solution would just be to do a `replaceAll("%23" "#")` at the end.  || The problem is that is really hard to correctly encode a URL if we are not aware of its structure. Regardless of what methods we use. So if we are not completely sure we need it  we should probably not do this.  || :+1: sounds reasonable.  || @koppor what do you think about this? Especially is it possible that users have a `url{\url{http://google.com}}` in their bibfile? And what about escaping symbols for latex like `%`or `#`?  || Unsure. The method comment states following:  > make sure an URL is "portable"  in that it does not contain bad characters that break the open command in some  OSes. A call to this method will also remove \url{} enclosings.  That reads perfectly fine.  OK  I also read the following  > // FIXME: everything below is really flawed atm  Maybe  we should cleanup the URL fields and not do the cleanup at the place of opening. Although I see the issue of malicious bib files which could have an URL executing malicious code. However  that risk is so low that I would not count on it.  Meaning: :+1: and open a new issue for CleanUp.  || 
690,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Simplify matching complexity of unlinked file finder Reenables functionality #410   Important point: - Removed one file.exists check in FileUtil.java expandPath   I think one check after replacing / and \ is enough  without checking the expanded path with directory in front. - Cache is filled at initial creation for bibdatabase  therefore no checks against the whole database are done for each file entry - Parse logic for file field should moved from the FileListTableModel to FileField.java.  We could still improve quite a lot here but maybe its GOOD ENOUGH :tm: for now.  
690,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,Simplify matching complexity of unlinked file finder Reenables functionality #410   Important point: - Removed one file.exists check in FileUtil.java expandPath   I think one check after replacing / and \ is enough  without checking the expanded path with directory in front. - Cache is filled at initial creation for bibdatabase  therefore no checks against the whole database are done for each file entry - Parse logic for file field should moved from the FileListTableModel to FileField.java.  We could still improve quite a lot here but maybe its GOOD ENOUGH :tm: for now.  
690,1,0,0,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Simplify matching complexity of unlinked file finder Reenables functionality #410   Important point: - Removed one file.exists check in FileUtil.java expandPath   I think one check after replacing / and \ is enough  without checking the expanded path with directory in front. - Cache is filled at initial creation for bibdatabase  therefore no checks against the whole database are done for each file entry - Parse logic for file field should moved from the FileListTableModel to FileField.java.  We could still improve quite a lot here but maybe its GOOD ENOUGH :tm: for now.  
711,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,Remove global sorting functionality Refs #520   Global file sorting options are removed. Sort functionality is still available but no localized to every file and the file sorting options are stored in the file. @lenhard: I have already implemented the other half of #520 (Make sorting configurable in database properties & write it to file). Code is coming soon...  || @tobiasdiez: that feature has always been available :)  ||
711,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,Remove global sorting functionality Refs #520   Global file sorting options are removed. Sort functionality is still available but no localized to every file and the file sorting options are stored in the file. @lenhard: I have already implemented the other half of #520 (Make sorting configurable in database properties & write it to file). Code is coming soon...  || @tobiasdiez: that feature has always been available :)  ||
711,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Remove global sorting functionality Refs #520   Global file sorting options are removed. Sort functionality is still available but no localized to every file and the file sorting options are stored in the file. @lenhard: I have already implemented the other half of #520 (Make sorting configurable in database properties & write it to file). Code is coming soon...  || @tobiasdiez: that feature has always been available :)  ||
715,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,1,0,0,1,File based bibtex mode See #706  Changes - file based setting of Bibtex/Biblatex mode which is stored as a metadata in the .bib file - if no metadata is found  JabRef tries to detect the mode by checking if there are biblatex entry types which results in biblatex mode  and otherwise in bibtex mode (except one has set the biblatex mode setting in the global preferences  in that case it would use the biblatex mode) - UI changes completely  no restart necessary  Please provide feedback. Very  very nice! :+1:   || Any last comments @JabRef/developers? I plan to merge this in soon as the effort to keep this PR up-to-date with master is really high due to the high amount of changes.   || LGTM :+1:   || I cannot launch JabRef at this branch:  ``` Exception in thread "AWT-EventQueue-0" java.util.NoSuchElementException: No value present         at java.util.Optional.get(Optional.java:135)         at net.sf.jabref.specialfields.SpecialFieldValue.getAction(SpecialFieldValue.java:108)         at net.sf.jabref.gui.BasePanel.setupActions(BasePanel.java:1084)         at net.sf.jabref.gui.BasePanel.<init>(BasePanel.java:198)         at net.sf.jabref.gui.JabRefFrame.addTab(JabRefFrame.java:1599)         at net.sf.jabref.gui.JabRefFrame.addParserResult(JabRefFrame.java:1402)         at net.sf.jabref.JabRef.openWindow(JabRef.java:682)         at net.sf.jabref.JabRef.lambda$start$24(JabRef.java:133) ```  It works well on master.  || My above issue was #751  which now has been fixed by Oscar in master.  || 
715,1,0,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,File based bibtex mode See #706  Changes - file based setting of Bibtex/Biblatex mode which is stored as a metadata in the .bib file - if no metadata is found  JabRef tries to detect the mode by checking if there are biblatex entry types which results in biblatex mode  and otherwise in bibtex mode (except one has set the biblatex mode setting in the global preferences  in that case it would use the biblatex mode) - UI changes completely  no restart necessary  Please provide feedback. Very  very nice! :+1:   || Any last comments @JabRef/developers? I plan to merge this in soon as the effort to keep this PR up-to-date with master is really high due to the high amount of changes.   || LGTM :+1:   || I cannot launch JabRef at this branch:  ``` Exception in thread "AWT-EventQueue-0" java.util.NoSuchElementException: No value present         at java.util.Optional.get(Optional.java:135)         at net.sf.jabref.specialfields.SpecialFieldValue.getAction(SpecialFieldValue.java:108)         at net.sf.jabref.gui.BasePanel.setupActions(BasePanel.java:1084)         at net.sf.jabref.gui.BasePanel.<init>(BasePanel.java:198)         at net.sf.jabref.gui.JabRefFrame.addTab(JabRefFrame.java:1599)         at net.sf.jabref.gui.JabRefFrame.addParserResult(JabRefFrame.java:1402)         at net.sf.jabref.JabRef.openWindow(JabRef.java:682)         at net.sf.jabref.JabRef.lambda$start$24(JabRef.java:133) ```  It works well on master.  || My above issue was #751  which now has been fixed by Oscar in master.  || 
715,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,0,File based bibtex mode See #706  Changes - file based setting of Bibtex/Biblatex mode which is stored as a metadata in the .bib file - if no metadata is found  JabRef tries to detect the mode by checking if there are biblatex entry types which results in biblatex mode  and otherwise in bibtex mode (except one has set the biblatex mode setting in the global preferences  in that case it would use the biblatex mode) - UI changes completely  no restart necessary  Please provide feedback. Very  very nice! :+1:   || Any last comments @JabRef/developers? I plan to merge this in soon as the effort to keep this PR up-to-date with master is really high due to the high amount of changes.   || LGTM :+1:   || I cannot launch JabRef at this branch:  ``` Exception in thread "AWT-EventQueue-0" java.util.NoSuchElementException: No value present         at java.util.Optional.get(Optional.java:135)         at net.sf.jabref.specialfields.SpecialFieldValue.getAction(SpecialFieldValue.java:108)         at net.sf.jabref.gui.BasePanel.setupActions(BasePanel.java:1084)         at net.sf.jabref.gui.BasePanel.<init>(BasePanel.java:198)         at net.sf.jabref.gui.JabRefFrame.addTab(JabRefFrame.java:1599)         at net.sf.jabref.gui.JabRefFrame.addParserResult(JabRefFrame.java:1402)         at net.sf.jabref.JabRef.openWindow(JabRef.java:682)         at net.sf.jabref.JabRef.lambda$start$24(JabRef.java:133) ```  It works well on master.  || My above issue was #751  which now has been fixed by Oscar in master.  || 
716,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Introduce save actions This PR introduces the save actions feature described in #116   It is possible to configure a `net.sf.jabref.logic.formatter.Formatter` to be applied for the content of a specific field. All formatters in `net.sf.jabref.logic.formatter` are available.   To support file sharing  the save actions are configured in the meta data of a file as a comment  in the following syntax:  ``` @comment{jabref-meta: saveActions:title LowerCaseChanger } ```  This above save action applies the LowerCaseChanger for the content of every title field on save.  In the future  we need to enable the configuration of save actions via the UI in the database properties.  
716,1,1,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Introduce save actions This PR introduces the save actions feature described in #116   It is possible to configure a `net.sf.jabref.logic.formatter.Formatter` to be applied for the content of a specific field. All formatters in `net.sf.jabref.logic.formatter` are available.   To support file sharing  the save actions are configured in the meta data of a file as a comment  in the following syntax:  ``` @comment{jabref-meta: saveActions:title LowerCaseChanger } ```  This above save action applies the LowerCaseChanger for the content of every title field on save.  In the future  we need to enable the configuration of save actions via the UI in the database properties.  
716,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Introduce save actions This PR introduces the save actions feature described in #116   It is possible to configure a `net.sf.jabref.logic.formatter.Formatter` to be applied for the content of a specific field. All formatters in `net.sf.jabref.logic.formatter` are available.   To support file sharing  the save actions are configured in the meta data of a file as a comment  in the following syntax:  ``` @comment{jabref-meta: saveActions:title LowerCaseChanger } ```  This above save action applies the LowerCaseChanger for the content of every title field on save.  In the future  we need to enable the configuration of save actions via the UI in the database properties.  
718,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Improve database writer The aim of this PR is to improve the database writer  in particular fix #621 and #669.  Also add tests to the writer and parser (and do some refactorings to make test writing easier).  Changes (to serialization): - Fix #621 and #669 by adding new lines after encoding and preamble. The idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry.  - Comments and preamble are serialized with capitalized first letter  i.e. `@Comment` instead of `@comment` and `@Preamble` instead of `@PREAMBLE`. This should follow the convention for entries. - There is no space anymore between `@String` and the bracket and after the bracket  i.e. `@String{name  {string}}` instead of `@String { name  {string} }` - Implemented [#756](https://github.com/JabRef/jabref/issues/756): Add possibility to reformat all entries on save (under Preferences  File)  Refactorings: - Renamed FileActions to BibDatabaseWriter - Merged code for export and save in BibDatabaseWriter - Extracted SaveSettings class from FileActions to own file and extended it (& renamed to SavePreferences). Note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden.  - Change usage of arrays to list in many places - Remove unused boolean parameters checkSearch  checkGroup - Moved writing of metadata and CustomEntryTypesManager to BibDatabaseWriter - Extracted and reused gui code for displaying and editing sort preferences (SaveOrderConfigDisplay) Could you rebase this on master as both pre-requisite PRs are already merged in. So this could be completed now.   || One question: currently the save methods take parameters `boolean checkSearch  boolean checkGroup` which specify that only entries satisfying the active search / group selection are exported or saved. As far as I can see  these boolean parameters are always set to false (which means all entries are exported). Should I remove both parameters?  || I guess that if this is merged in first  it should be quite OK to rebase #762 (although many changes are redundant).  Regarding your question: it would be nice to be able to save like this  but I guess it is another of JabRefs almost finished/commented out and then removed features... Considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection  Id say remove.  || I think the code is now mature enough to be reviewed. I added some notes above in the first post. Sorry that this PR is rather big.  || I also pushed it to the branch [JabRef/databaseWriter](https://github.com/JabRef/jabref/tree/databaseWriter) so that a build should be available under http://builds.jabref.org/.   || Do we have the "only update if it changed" functionality for the preamble  strings and comments as well?  || For strings and the epilogue yes  for the preamble kind of (the text in the preamble is stored and exactly rewritten  but the preamble tag and newlines around it are not stored). For the metadata there is no such functionality.  || @tobiasdiez Regarding the two parameters (https://github.com/JabRef/jabref/pull/718#issuecomment-178262570): Arent they used for "Save selected as plain BibTeX..."?  || @koppor No it is not used for this function. "Save selected..." gets all the selected items and pass them to the save function. The code in question reads  ``` java if (selectedOnly) {                 session  FileActions.savePartOfDatabase(                         panel.getBibDatabaseContext()                          file  Globals.prefs                          panel.getSelectedEntries()  encoding  FileActions.DatabaseSaveType.DEFAULT)              } else {                 session  FileActions.saveDatabase(panel.getBibDatabaseContext()                          file  Globals.prefs  false  false  encoding  false)              } ```  || Please rebase. I think this should be merged.   One suggestion regarding the SavePreferences: You could create a new instance after the call of a setter. This would result in the benefits of having final variables and it still allows to create derivations of this.   ``` SavePreferences prefs  new SavePreferences(Globals.prefs)  SavePreferences otherInstance  prefs.withEncoding("utf8")  assert prefs ! otherInstance && !prefs.equals(otherInstance) ```  || Rebased and implemented the `withEncoding` suggestion (i.e. removed all setters in the preferences...you really do not like them  right? :smile: )  || In my case (JabRef 3.2 on 32- and 64-bit Windows the problem is not fixed. Original lines % Encoding: windows-1250  @PREAMBLE{{\providecommand{\noopsort}[1]{}}}   (or @Preamble ...)  are always changed to % Encoding: windows-1250@PREAMBLE{{\providecommand{\noopsort}[1]{}}}  after saving changed bib file.  Kind regards  Janez Komelj  || @jkomelj You have to use the [latest development version](http://builds.jabref.org/master/) or wait for the release of 3.3 (probably in 1-2 weeks)  || Thank you  || 
718,1,0,1,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,0,Improve database writer The aim of this PR is to improve the database writer  in particular fix #621 and #669.  Also add tests to the writer and parser (and do some refactorings to make test writing easier).  Changes (to serialization): - Fix #621 and #669 by adding new lines after encoding and preamble. The idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry.  - Comments and preamble are serialized with capitalized first letter  i.e. `@Comment` instead of `@comment` and `@Preamble` instead of `@PREAMBLE`. This should follow the convention for entries. - There is no space anymore between `@String` and the bracket and after the bracket  i.e. `@String{name  {string}}` instead of `@String { name  {string} }` - Implemented [#756](https://github.com/JabRef/jabref/issues/756): Add possibility to reformat all entries on save (under Preferences  File)  Refactorings: - Renamed FileActions to BibDatabaseWriter - Merged code for export and save in BibDatabaseWriter - Extracted SaveSettings class from FileActions to own file and extended it (& renamed to SavePreferences). Note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden.  - Change usage of arrays to list in many places - Remove unused boolean parameters checkSearch  checkGroup - Moved writing of metadata and CustomEntryTypesManager to BibDatabaseWriter - Extracted and reused gui code for displaying and editing sort preferences (SaveOrderConfigDisplay) Could you rebase this on master as both pre-requisite PRs are already merged in. So this could be completed now.   || One question: currently the save methods take parameters `boolean checkSearch  boolean checkGroup` which specify that only entries satisfying the active search / group selection are exported or saved. As far as I can see  these boolean parameters are always set to false (which means all entries are exported). Should I remove both parameters?  || I guess that if this is merged in first  it should be quite OK to rebase #762 (although many changes are redundant).  Regarding your question: it would be nice to be able to save like this  but I guess it is another of JabRefs almost finished/commented out and then removed features... Considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection  Id say remove.  || I think the code is now mature enough to be reviewed. I added some notes above in the first post. Sorry that this PR is rather big.  || I also pushed it to the branch [JabRef/databaseWriter](https://github.com/JabRef/jabref/tree/databaseWriter) so that a build should be available under http://builds.jabref.org/.   || Do we have the "only update if it changed" functionality for the preamble  strings and comments as well?  || For strings and the epilogue yes  for the preamble kind of (the text in the preamble is stored and exactly rewritten  but the preamble tag and newlines around it are not stored). For the metadata there is no such functionality.  || @tobiasdiez Regarding the two parameters (https://github.com/JabRef/jabref/pull/718#issuecomment-178262570): Arent they used for "Save selected as plain BibTeX..."?  || @koppor No it is not used for this function. "Save selected..." gets all the selected items and pass them to the save function. The code in question reads  ``` java if (selectedOnly) {                 session  FileActions.savePartOfDatabase(                         panel.getBibDatabaseContext()                          file  Globals.prefs                          panel.getSelectedEntries()  encoding  FileActions.DatabaseSaveType.DEFAULT)              } else {                 session  FileActions.saveDatabase(panel.getBibDatabaseContext()                          file  Globals.prefs  false  false  encoding  false)              } ```  || Please rebase. I think this should be merged.   One suggestion regarding the SavePreferences: You could create a new instance after the call of a setter. This would result in the benefits of having final variables and it still allows to create derivations of this.   ``` SavePreferences prefs  new SavePreferences(Globals.prefs)  SavePreferences otherInstance  prefs.withEncoding("utf8")  assert prefs ! otherInstance && !prefs.equals(otherInstance) ```  || Rebased and implemented the `withEncoding` suggestion (i.e. removed all setters in the preferences...you really do not like them  right? :smile: )  || In my case (JabRef 3.2 on 32- and 64-bit Windows the problem is not fixed. Original lines % Encoding: windows-1250  @PREAMBLE{{\providecommand{\noopsort}[1]{}}}   (or @Preamble ...)  are always changed to % Encoding: windows-1250@PREAMBLE{{\providecommand{\noopsort}[1]{}}}  after saving changed bib file.  Kind regards  Janez Komelj  || @jkomelj You have to use the [latest development version](http://builds.jabref.org/master/) or wait for the release of 3.3 (probably in 1-2 weeks)  || Thank you  || 
718,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Improve database writer The aim of this PR is to improve the database writer  in particular fix #621 and #669.  Also add tests to the writer and parser (and do some refactorings to make test writing easier).  Changes (to serialization): - Fix #621 and #669 by adding new lines after encoding and preamble. The idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry.  - Comments and preamble are serialized with capitalized first letter  i.e. `@Comment` instead of `@comment` and `@Preamble` instead of `@PREAMBLE`. This should follow the convention for entries. - There is no space anymore between `@String` and the bracket and after the bracket  i.e. `@String{name  {string}}` instead of `@String { name  {string} }` - Implemented [#756](https://github.com/JabRef/jabref/issues/756): Add possibility to reformat all entries on save (under Preferences  File)  Refactorings: - Renamed FileActions to BibDatabaseWriter - Merged code for export and save in BibDatabaseWriter - Extracted SaveSettings class from FileActions to own file and extended it (& renamed to SavePreferences). Note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden.  - Change usage of arrays to list in many places - Remove unused boolean parameters checkSearch  checkGroup - Moved writing of metadata and CustomEntryTypesManager to BibDatabaseWriter - Extracted and reused gui code for displaying and editing sort preferences (SaveOrderConfigDisplay) Could you rebase this on master as both pre-requisite PRs are already merged in. So this could be completed now.   || One question: currently the save methods take parameters `boolean checkSearch  boolean checkGroup` which specify that only entries satisfying the active search / group selection are exported or saved. As far as I can see  these boolean parameters are always set to false (which means all entries are exported). Should I remove both parameters?  || I guess that if this is merged in first  it should be quite OK to rebase #762 (although many changes are redundant).  Regarding your question: it would be nice to be able to save like this  but I guess it is another of JabRefs almost finished/commented out and then removed features... Considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection  Id say remove.  || I think the code is now mature enough to be reviewed. I added some notes above in the first post. Sorry that this PR is rather big.  || I also pushed it to the branch [JabRef/databaseWriter](https://github.com/JabRef/jabref/tree/databaseWriter) so that a build should be available under http://builds.jabref.org/.   || Do we have the "only update if it changed" functionality for the preamble  strings and comments as well?  || For strings and the epilogue yes  for the preamble kind of (the text in the preamble is stored and exactly rewritten  but the preamble tag and newlines around it are not stored). For the metadata there is no such functionality.  || @tobiasdiez Regarding the two parameters (https://github.com/JabRef/jabref/pull/718#issuecomment-178262570): Arent they used for "Save selected as plain BibTeX..."?  || @koppor No it is not used for this function. "Save selected..." gets all the selected items and pass them to the save function. The code in question reads  ``` java if (selectedOnly) {                 session  FileActions.savePartOfDatabase(                         panel.getBibDatabaseContext()                          file  Globals.prefs                          panel.getSelectedEntries()  encoding  FileActions.DatabaseSaveType.DEFAULT)              } else {                 session  FileActions.saveDatabase(panel.getBibDatabaseContext()                          file  Globals.prefs  false  false  encoding  false)              } ```  || Please rebase. I think this should be merged.   One suggestion regarding the SavePreferences: You could create a new instance after the call of a setter. This would result in the benefits of having final variables and it still allows to create derivations of this.   ``` SavePreferences prefs  new SavePreferences(Globals.prefs)  SavePreferences otherInstance  prefs.withEncoding("utf8")  assert prefs ! otherInstance && !prefs.equals(otherInstance) ```  || Rebased and implemented the `withEncoding` suggestion (i.e. removed all setters in the preferences...you really do not like them  right? :smile: )  || In my case (JabRef 3.2 on 32- and 64-bit Windows the problem is not fixed. Original lines % Encoding: windows-1250  @PREAMBLE{{\providecommand{\noopsort}[1]{}}}   (or @Preamble ...)  are always changed to % Encoding: windows-1250@PREAMBLE{{\providecommand{\noopsort}[1]{}}}  after saving changed bib file.  Kind regards  Janez Komelj  || @jkomelj You have to use the [latest development version](http://builds.jabref.org/master/) or wait for the release of 3.3 (probably in 1-2 weeks)  || Thank you  || 
718,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Improve database writer The aim of this PR is to improve the database writer  in particular fix #621 and #669.  Also add tests to the writer and parser (and do some refactorings to make test writing easier).  Changes (to serialization): - Fix #621 and #669 by adding new lines after encoding and preamble. The idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry.  - Comments and preamble are serialized with capitalized first letter  i.e. `@Comment` instead of `@comment` and `@Preamble` instead of `@PREAMBLE`. This should follow the convention for entries. - There is no space anymore between `@String` and the bracket and after the bracket  i.e. `@String{name  {string}}` instead of `@String { name  {string} }` - Implemented [#756](https://github.com/JabRef/jabref/issues/756): Add possibility to reformat all entries on save (under Preferences  File)  Refactorings: - Renamed FileActions to BibDatabaseWriter - Merged code for export and save in BibDatabaseWriter - Extracted SaveSettings class from FileActions to own file and extended it (& renamed to SavePreferences). Note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden.  - Change usage of arrays to list in many places - Remove unused boolean parameters checkSearch  checkGroup - Moved writing of metadata and CustomEntryTypesManager to BibDatabaseWriter - Extracted and reused gui code for displaying and editing sort preferences (SaveOrderConfigDisplay) Could you rebase this on master as both pre-requisite PRs are already merged in. So this could be completed now.   || One question: currently the save methods take parameters `boolean checkSearch  boolean checkGroup` which specify that only entries satisfying the active search / group selection are exported or saved. As far as I can see  these boolean parameters are always set to false (which means all entries are exported). Should I remove both parameters?  || I guess that if this is merged in first  it should be quite OK to rebase #762 (although many changes are redundant).  Regarding your question: it would be nice to be able to save like this  but I guess it is another of JabRefs almost finished/commented out and then removed features... Considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection  Id say remove.  || I think the code is now mature enough to be reviewed. I added some notes above in the first post. Sorry that this PR is rather big.  || I also pushed it to the branch [JabRef/databaseWriter](https://github.com/JabRef/jabref/tree/databaseWriter) so that a build should be available under http://builds.jabref.org/.   || Do we have the "only update if it changed" functionality for the preamble  strings and comments as well?  || For strings and the epilogue yes  for the preamble kind of (the text in the preamble is stored and exactly rewritten  but the preamble tag and newlines around it are not stored). For the metadata there is no such functionality.  || @tobiasdiez Regarding the two parameters (https://github.com/JabRef/jabref/pull/718#issuecomment-178262570): Arent they used for "Save selected as plain BibTeX..."?  || @koppor No it is not used for this function. "Save selected..." gets all the selected items and pass them to the save function. The code in question reads  ``` java if (selectedOnly) {                 session  FileActions.savePartOfDatabase(                         panel.getBibDatabaseContext()                          file  Globals.prefs                          panel.getSelectedEntries()  encoding  FileActions.DatabaseSaveType.DEFAULT)              } else {                 session  FileActions.saveDatabase(panel.getBibDatabaseContext()                          file  Globals.prefs  false  false  encoding  false)              } ```  || Please rebase. I think this should be merged.   One suggestion regarding the SavePreferences: You could create a new instance after the call of a setter. This would result in the benefits of having final variables and it still allows to create derivations of this.   ``` SavePreferences prefs  new SavePreferences(Globals.prefs)  SavePreferences otherInstance  prefs.withEncoding("utf8")  assert prefs ! otherInstance && !prefs.equals(otherInstance) ```  || Rebased and implemented the `withEncoding` suggestion (i.e. removed all setters in the preferences...you really do not like them  right? :smile: )  || In my case (JabRef 3.2 on 32- and 64-bit Windows the problem is not fixed. Original lines % Encoding: windows-1250  @PREAMBLE{{\providecommand{\noopsort}[1]{}}}   (or @Preamble ...)  are always changed to % Encoding: windows-1250@PREAMBLE{{\providecommand{\noopsort}[1]{}}}  after saving changed bib file.  Kind regards  Janez Komelj  || @jkomelj You have to use the [latest development version](http://builds.jabref.org/master/) or wait for the release of 3.3 (probably in 1-2 weeks)  || Thank you  || 
718,1,0,1,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,Improve database writer The aim of this PR is to improve the database writer  in particular fix #621 and #669.  Also add tests to the writer and parser (and do some refactorings to make test writing easier).  Changes (to serialization): - Fix #621 and #669 by adding new lines after encoding and preamble. The idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry.  - Comments and preamble are serialized with capitalized first letter  i.e. `@Comment` instead of `@comment` and `@Preamble` instead of `@PREAMBLE`. This should follow the convention for entries. - There is no space anymore between `@String` and the bracket and after the bracket  i.e. `@String{name  {string}}` instead of `@String { name  {string} }` - Implemented [#756](https://github.com/JabRef/jabref/issues/756): Add possibility to reformat all entries on save (under Preferences  File)  Refactorings: - Renamed FileActions to BibDatabaseWriter - Merged code for export and save in BibDatabaseWriter - Extracted SaveSettings class from FileActions to own file and extended it (& renamed to SavePreferences). Note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden.  - Change usage of arrays to list in many places - Remove unused boolean parameters checkSearch  checkGroup - Moved writing of metadata and CustomEntryTypesManager to BibDatabaseWriter - Extracted and reused gui code for displaying and editing sort preferences (SaveOrderConfigDisplay) Could you rebase this on master as both pre-requisite PRs are already merged in. So this could be completed now.   || One question: currently the save methods take parameters `boolean checkSearch  boolean checkGroup` which specify that only entries satisfying the active search / group selection are exported or saved. As far as I can see  these boolean parameters are always set to false (which means all entries are exported). Should I remove both parameters?  || I guess that if this is merged in first  it should be quite OK to rebase #762 (although many changes are redundant).  Regarding your question: it would be nice to be able to save like this  but I guess it is another of JabRefs almost finished/commented out and then removed features... Considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection  Id say remove.  || I think the code is now mature enough to be reviewed. I added some notes above in the first post. Sorry that this PR is rather big.  || I also pushed it to the branch [JabRef/databaseWriter](https://github.com/JabRef/jabref/tree/databaseWriter) so that a build should be available under http://builds.jabref.org/.   || Do we have the "only update if it changed" functionality for the preamble  strings and comments as well?  || For strings and the epilogue yes  for the preamble kind of (the text in the preamble is stored and exactly rewritten  but the preamble tag and newlines around it are not stored). For the metadata there is no such functionality.  || @tobiasdiez Regarding the two parameters (https://github.com/JabRef/jabref/pull/718#issuecomment-178262570): Arent they used for "Save selected as plain BibTeX..."?  || @koppor No it is not used for this function. "Save selected..." gets all the selected items and pass them to the save function. The code in question reads  ``` java if (selectedOnly) {                 session  FileActions.savePartOfDatabase(                         panel.getBibDatabaseContext()                          file  Globals.prefs                          panel.getSelectedEntries()  encoding  FileActions.DatabaseSaveType.DEFAULT)              } else {                 session  FileActions.saveDatabase(panel.getBibDatabaseContext()                          file  Globals.prefs  false  false  encoding  false)              } ```  || Please rebase. I think this should be merged.   One suggestion regarding the SavePreferences: You could create a new instance after the call of a setter. This would result in the benefits of having final variables and it still allows to create derivations of this.   ``` SavePreferences prefs  new SavePreferences(Globals.prefs)  SavePreferences otherInstance  prefs.withEncoding("utf8")  assert prefs ! otherInstance && !prefs.equals(otherInstance) ```  || Rebased and implemented the `withEncoding` suggestion (i.e. removed all setters in the preferences...you really do not like them  right? :smile: )  || In my case (JabRef 3.2 on 32- and 64-bit Windows the problem is not fixed. Original lines % Encoding: windows-1250  @PREAMBLE{{\providecommand{\noopsort}[1]{}}}   (or @Preamble ...)  are always changed to % Encoding: windows-1250@PREAMBLE{{\providecommand{\noopsort}[1]{}}}  after saving changed bib file.  Kind regards  Janez Komelj  || @jkomelj You have to use the [latest development version](http://builds.jabref.org/master/) or wait for the release of 3.3 (probably in 1-2 weeks)  || Thank you  || 
718,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,0,Improve database writer The aim of this PR is to improve the database writer  in particular fix #621 and #669.  Also add tests to the writer and parser (and do some refactorings to make test writing easier).  Changes (to serialization): - Fix #621 and #669 by adding new lines after encoding and preamble. The idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry.  - Comments and preamble are serialized with capitalized first letter  i.e. `@Comment` instead of `@comment` and `@Preamble` instead of `@PREAMBLE`. This should follow the convention for entries. - There is no space anymore between `@String` and the bracket and after the bracket  i.e. `@String{name  {string}}` instead of `@String { name  {string} }` - Implemented [#756](https://github.com/JabRef/jabref/issues/756): Add possibility to reformat all entries on save (under Preferences  File)  Refactorings: - Renamed FileActions to BibDatabaseWriter - Merged code for export and save in BibDatabaseWriter - Extracted SaveSettings class from FileActions to own file and extended it (& renamed to SavePreferences). Note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden.  - Change usage of arrays to list in many places - Remove unused boolean parameters checkSearch  checkGroup - Moved writing of metadata and CustomEntryTypesManager to BibDatabaseWriter - Extracted and reused gui code for displaying and editing sort preferences (SaveOrderConfigDisplay) Could you rebase this on master as both pre-requisite PRs are already merged in. So this could be completed now.   || One question: currently the save methods take parameters `boolean checkSearch  boolean checkGroup` which specify that only entries satisfying the active search / group selection are exported or saved. As far as I can see  these boolean parameters are always set to false (which means all entries are exported). Should I remove both parameters?  || I guess that if this is merged in first  it should be quite OK to rebase #762 (although many changes are redundant).  Regarding your question: it would be nice to be able to save like this  but I guess it is another of JabRefs almost finished/commented out and then removed features... Considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection  Id say remove.  || I think the code is now mature enough to be reviewed. I added some notes above in the first post. Sorry that this PR is rather big.  || I also pushed it to the branch [JabRef/databaseWriter](https://github.com/JabRef/jabref/tree/databaseWriter) so that a build should be available under http://builds.jabref.org/.   || Do we have the "only update if it changed" functionality for the preamble  strings and comments as well?  || For strings and the epilogue yes  for the preamble kind of (the text in the preamble is stored and exactly rewritten  but the preamble tag and newlines around it are not stored). For the metadata there is no such functionality.  || @tobiasdiez Regarding the two parameters (https://github.com/JabRef/jabref/pull/718#issuecomment-178262570): Arent they used for "Save selected as plain BibTeX..."?  || @koppor No it is not used for this function. "Save selected..." gets all the selected items and pass them to the save function. The code in question reads  ``` java if (selectedOnly) {                 session  FileActions.savePartOfDatabase(                         panel.getBibDatabaseContext()                          file  Globals.prefs                          panel.getSelectedEntries()  encoding  FileActions.DatabaseSaveType.DEFAULT)              } else {                 session  FileActions.saveDatabase(panel.getBibDatabaseContext()                          file  Globals.prefs  false  false  encoding  false)              } ```  || Please rebase. I think this should be merged.   One suggestion regarding the SavePreferences: You could create a new instance after the call of a setter. This would result in the benefits of having final variables and it still allows to create derivations of this.   ``` SavePreferences prefs  new SavePreferences(Globals.prefs)  SavePreferences otherInstance  prefs.withEncoding("utf8")  assert prefs ! otherInstance && !prefs.equals(otherInstance) ```  || Rebased and implemented the `withEncoding` suggestion (i.e. removed all setters in the preferences...you really do not like them  right? :smile: )  || In my case (JabRef 3.2 on 32- and 64-bit Windows the problem is not fixed. Original lines % Encoding: windows-1250  @PREAMBLE{{\providecommand{\noopsort}[1]{}}}   (or @Preamble ...)  are always changed to % Encoding: windows-1250@PREAMBLE{{\providecommand{\noopsort}[1]{}}}  after saving changed bib file.  Kind regards  Janez Komelj  || @jkomelj You have to use the [latest development version](http://builds.jabref.org/master/) or wait for the release of 3.3 (probably in 1-2 weeks)  || Thank you  || 
718,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Improve database writer The aim of this PR is to improve the database writer  in particular fix #621 and #669.  Also add tests to the writer and parser (and do some refactorings to make test writing easier).  Changes (to serialization): - Fix #621 and #669 by adding new lines after encoding and preamble. The idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry.  - Comments and preamble are serialized with capitalized first letter  i.e. `@Comment` instead of `@comment` and `@Preamble` instead of `@PREAMBLE`. This should follow the convention for entries. - There is no space anymore between `@String` and the bracket and after the bracket  i.e. `@String{name  {string}}` instead of `@String { name  {string} }` - Implemented [#756](https://github.com/JabRef/jabref/issues/756): Add possibility to reformat all entries on save (under Preferences  File)  Refactorings: - Renamed FileActions to BibDatabaseWriter - Merged code for export and save in BibDatabaseWriter - Extracted SaveSettings class from FileActions to own file and extended it (& renamed to SavePreferences). Note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden.  - Change usage of arrays to list in many places - Remove unused boolean parameters checkSearch  checkGroup - Moved writing of metadata and CustomEntryTypesManager to BibDatabaseWriter - Extracted and reused gui code for displaying and editing sort preferences (SaveOrderConfigDisplay) Could you rebase this on master as both pre-requisite PRs are already merged in. So this could be completed now.   || One question: currently the save methods take parameters `boolean checkSearch  boolean checkGroup` which specify that only entries satisfying the active search / group selection are exported or saved. As far as I can see  these boolean parameters are always set to false (which means all entries are exported). Should I remove both parameters?  || I guess that if this is merged in first  it should be quite OK to rebase #762 (although many changes are redundant).  Regarding your question: it would be nice to be able to save like this  but I guess it is another of JabRefs almost finished/commented out and then removed features... Considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection  Id say remove.  || I think the code is now mature enough to be reviewed. I added some notes above in the first post. Sorry that this PR is rather big.  || I also pushed it to the branch [JabRef/databaseWriter](https://github.com/JabRef/jabref/tree/databaseWriter) so that a build should be available under http://builds.jabref.org/.   || Do we have the "only update if it changed" functionality for the preamble  strings and comments as well?  || For strings and the epilogue yes  for the preamble kind of (the text in the preamble is stored and exactly rewritten  but the preamble tag and newlines around it are not stored). For the metadata there is no such functionality.  || @tobiasdiez Regarding the two parameters (https://github.com/JabRef/jabref/pull/718#issuecomment-178262570): Arent they used for "Save selected as plain BibTeX..."?  || @koppor No it is not used for this function. "Save selected..." gets all the selected items and pass them to the save function. The code in question reads  ``` java if (selectedOnly) {                 session  FileActions.savePartOfDatabase(                         panel.getBibDatabaseContext()                          file  Globals.prefs                          panel.getSelectedEntries()  encoding  FileActions.DatabaseSaveType.DEFAULT)              } else {                 session  FileActions.saveDatabase(panel.getBibDatabaseContext()                          file  Globals.prefs  false  false  encoding  false)              } ```  || Please rebase. I think this should be merged.   One suggestion regarding the SavePreferences: You could create a new instance after the call of a setter. This would result in the benefits of having final variables and it still allows to create derivations of this.   ``` SavePreferences prefs  new SavePreferences(Globals.prefs)  SavePreferences otherInstance  prefs.withEncoding("utf8")  assert prefs ! otherInstance && !prefs.equals(otherInstance) ```  || Rebased and implemented the `withEncoding` suggestion (i.e. removed all setters in the preferences...you really do not like them  right? :smile: )  || In my case (JabRef 3.2 on 32- and 64-bit Windows the problem is not fixed. Original lines % Encoding: windows-1250  @PREAMBLE{{\providecommand{\noopsort}[1]{}}}   (or @Preamble ...)  are always changed to % Encoding: windows-1250@PREAMBLE{{\providecommand{\noopsort}[1]{}}}  after saving changed bib file.  Kind regards  Janez Komelj  || @jkomelj You have to use the [latest development version](http://builds.jabref.org/master/) or wait for the release of 3.3 (probably in 1-2 weeks)  || Thank you  || 
718,1,0,0,1,0,1,1,0,1,0,1,1,1,1,1,1,0,1,0,Improve database writer The aim of this PR is to improve the database writer  in particular fix #621 and #669.  Also add tests to the writer and parser (and do some refactorings to make test writing easier).  Changes (to serialization): - Fix #621 and #669 by adding new lines after encoding and preamble. The idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry.  - Comments and preamble are serialized with capitalized first letter  i.e. `@Comment` instead of `@comment` and `@Preamble` instead of `@PREAMBLE`. This should follow the convention for entries. - There is no space anymore between `@String` and the bracket and after the bracket  i.e. `@String{name  {string}}` instead of `@String { name  {string} }` - Implemented [#756](https://github.com/JabRef/jabref/issues/756): Add possibility to reformat all entries on save (under Preferences  File)  Refactorings: - Renamed FileActions to BibDatabaseWriter - Merged code for export and save in BibDatabaseWriter - Extracted SaveSettings class from FileActions to own file and extended it (& renamed to SavePreferences). Note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden.  - Change usage of arrays to list in many places - Remove unused boolean parameters checkSearch  checkGroup - Moved writing of metadata and CustomEntryTypesManager to BibDatabaseWriter - Extracted and reused gui code for displaying and editing sort preferences (SaveOrderConfigDisplay) Could you rebase this on master as both pre-requisite PRs are already merged in. So this could be completed now.   || One question: currently the save methods take parameters `boolean checkSearch  boolean checkGroup` which specify that only entries satisfying the active search / group selection are exported or saved. As far as I can see  these boolean parameters are always set to false (which means all entries are exported). Should I remove both parameters?  || I guess that if this is merged in first  it should be quite OK to rebase #762 (although many changes are redundant).  Regarding your question: it would be nice to be able to save like this  but I guess it is another of JabRefs almost finished/commented out and then removed features... Considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection  Id say remove.  || I think the code is now mature enough to be reviewed. I added some notes above in the first post. Sorry that this PR is rather big.  || I also pushed it to the branch [JabRef/databaseWriter](https://github.com/JabRef/jabref/tree/databaseWriter) so that a build should be available under http://builds.jabref.org/.   || Do we have the "only update if it changed" functionality for the preamble  strings and comments as well?  || For strings and the epilogue yes  for the preamble kind of (the text in the preamble is stored and exactly rewritten  but the preamble tag and newlines around it are not stored). For the metadata there is no such functionality.  || @tobiasdiez Regarding the two parameters (https://github.com/JabRef/jabref/pull/718#issuecomment-178262570): Arent they used for "Save selected as plain BibTeX..."?  || @koppor No it is not used for this function. "Save selected..." gets all the selected items and pass them to the save function. The code in question reads  ``` java if (selectedOnly) {                 session  FileActions.savePartOfDatabase(                         panel.getBibDatabaseContext()                          file  Globals.prefs                          panel.getSelectedEntries()  encoding  FileActions.DatabaseSaveType.DEFAULT)              } else {                 session  FileActions.saveDatabase(panel.getBibDatabaseContext()                          file  Globals.prefs  false  false  encoding  false)              } ```  || Please rebase. I think this should be merged.   One suggestion regarding the SavePreferences: You could create a new instance after the call of a setter. This would result in the benefits of having final variables and it still allows to create derivations of this.   ``` SavePreferences prefs  new SavePreferences(Globals.prefs)  SavePreferences otherInstance  prefs.withEncoding("utf8")  assert prefs ! otherInstance && !prefs.equals(otherInstance) ```  || Rebased and implemented the `withEncoding` suggestion (i.e. removed all setters in the preferences...you really do not like them  right? :smile: )  || In my case (JabRef 3.2 on 32- and 64-bit Windows the problem is not fixed. Original lines % Encoding: windows-1250  @PREAMBLE{{\providecommand{\noopsort}[1]{}}}   (or @Preamble ...)  are always changed to % Encoding: windows-1250@PREAMBLE{{\providecommand{\noopsort}[1]{}}}  after saving changed bib file.  Kind regards  Janez Komelj  || @jkomelj You have to use the [latest development version](http://builds.jabref.org/master/) or wait for the release of 3.3 (probably in 1-2 weeks)  || Thank you  || 
718,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Improve database writer The aim of this PR is to improve the database writer  in particular fix #621 and #669.  Also add tests to the writer and parser (and do some refactorings to make test writing easier).  Changes (to serialization): - Fix #621 and #669 by adding new lines after encoding and preamble. The idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry.  - Comments and preamble are serialized with capitalized first letter  i.e. `@Comment` instead of `@comment` and `@Preamble` instead of `@PREAMBLE`. This should follow the convention for entries. - There is no space anymore between `@String` and the bracket and after the bracket  i.e. `@String{name  {string}}` instead of `@String { name  {string} }` - Implemented [#756](https://github.com/JabRef/jabref/issues/756): Add possibility to reformat all entries on save (under Preferences  File)  Refactorings: - Renamed FileActions to BibDatabaseWriter - Merged code for export and save in BibDatabaseWriter - Extracted SaveSettings class from FileActions to own file and extended it (& renamed to SavePreferences). Note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden.  - Change usage of arrays to list in many places - Remove unused boolean parameters checkSearch  checkGroup - Moved writing of metadata and CustomEntryTypesManager to BibDatabaseWriter - Extracted and reused gui code for displaying and editing sort preferences (SaveOrderConfigDisplay) Could you rebase this on master as both pre-requisite PRs are already merged in. So this could be completed now.   || One question: currently the save methods take parameters `boolean checkSearch  boolean checkGroup` which specify that only entries satisfying the active search / group selection are exported or saved. As far as I can see  these boolean parameters are always set to false (which means all entries are exported). Should I remove both parameters?  || I guess that if this is merged in first  it should be quite OK to rebase #762 (although many changes are redundant).  Regarding your question: it would be nice to be able to save like this  but I guess it is another of JabRefs almost finished/commented out and then removed features... Considering that one can save selected entries and it is quite easy to see which entries are in the active group/search selection  Id say remove.  || I think the code is now mature enough to be reviewed. I added some notes above in the first post. Sorry that this PR is rather big.  || I also pushed it to the branch [JabRef/databaseWriter](https://github.com/JabRef/jabref/tree/databaseWriter) so that a build should be available under http://builds.jabref.org/.   || Do we have the "only update if it changed" functionality for the preamble  strings and comments as well?  || For strings and the epilogue yes  for the preamble kind of (the text in the preamble is stored and exactly rewritten  but the preamble tag and newlines around it are not stored). For the metadata there is no such functionality.  || @tobiasdiez Regarding the two parameters (https://github.com/JabRef/jabref/pull/718#issuecomment-178262570): Arent they used for "Save selected as plain BibTeX..."?  || @koppor No it is not used for this function. "Save selected..." gets all the selected items and pass them to the save function. The code in question reads  ``` java if (selectedOnly) {                 session  FileActions.savePartOfDatabase(                         panel.getBibDatabaseContext()                          file  Globals.prefs                          panel.getSelectedEntries()  encoding  FileActions.DatabaseSaveType.DEFAULT)              } else {                 session  FileActions.saveDatabase(panel.getBibDatabaseContext()                          file  Globals.prefs  false  false  encoding  false)              } ```  || Please rebase. I think this should be merged.   One suggestion regarding the SavePreferences: You could create a new instance after the call of a setter. This would result in the benefits of having final variables and it still allows to create derivations of this.   ``` SavePreferences prefs  new SavePreferences(Globals.prefs)  SavePreferences otherInstance  prefs.withEncoding("utf8")  assert prefs ! otherInstance && !prefs.equals(otherInstance) ```  || Rebased and implemented the `withEncoding` suggestion (i.e. removed all setters in the preferences...you really do not like them  right? :smile: )  || In my case (JabRef 3.2 on 32- and 64-bit Windows the problem is not fixed. Original lines % Encoding: windows-1250  @PREAMBLE{{\providecommand{\noopsort}[1]{}}}   (or @Preamble ...)  are always changed to % Encoding: windows-1250@PREAMBLE{{\providecommand{\noopsort}[1]{}}}  after saving changed bib file.  Kind regards  Janez Komelj  || @jkomelj You have to use the [latest development version](http://builds.jabref.org/master/) or wait for the release of 3.3 (probably in 1-2 weeks)  || Thank you  || 
739,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,0,0,1,1,Use URLDownload instead of getResults for fetching stuff Relates to #738   Fixed some things in GVKParser to hopefully get rid of the final Coverity warnings there. Not sure why the tests fail. Although it is related to internet connections  I cannot really see that it has anything to do with the things Ive modified since those fetches rely on Unirest and not URLDownload...  || Seems like the tests pass now (without changing anything). I removed some Coverity warnings as well so that I just didnt repush the same stuff twice.  ||
739,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Use URLDownload instead of getResults for fetching stuff Relates to #738   Fixed some things in GVKParser to hopefully get rid of the final Coverity warnings there. Not sure why the tests fail. Although it is related to internet connections  I cannot really see that it has anything to do with the things Ive modified since those fetches rely on Unirest and not URLDownload...  || Seems like the tests pass now (without changing anything). I removed some Coverity warnings as well so that I just didnt repush the same stuff twice.  ||
739,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Use URLDownload instead of getResults for fetching stuff Relates to #738   Fixed some things in GVKParser to hopefully get rid of the final Coverity warnings there. Not sure why the tests fail. Although it is related to internet connections  I cannot really see that it has anything to do with the things Ive modified since those fetches rely on Unirest and not URLDownload...  || Seems like the tests pass now (without changing anything). I removed some Coverity warnings as well so that I just didnt repush the same stuff twice.  ||
752,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fixed #751 This should fix #751. Should be merged in without waiting for confirmation.  
752,1,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,0,1,Fixed #751 This should fix #751. Should be merged in without waiting for confirmation.  
752,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Fixed #751 This should fix #751. Should be merged in without waiting for confirmation.  
755,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,1,0,0,0,Fix NPE at saving does not reset save flag #741 Fix #741 (and a lot of other null pointer exceptions). getType and getStandardType now return an optional instead of possible null values. Looks good to me! :+1:   || Would be cool if we can increase the test coverage  especially for the newly created branches. Otherwise LGTM :+1:   || I added tests for all uncovered branches in TypedBibEntry and after two LGTM will merge this in. @oscargus have fun rebasing :smile:   ||
755,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,Fix NPE at saving does not reset save flag #741 Fix #741 (and a lot of other null pointer exceptions). getType and getStandardType now return an optional instead of possible null values. Looks good to me! :+1:   || Would be cool if we can increase the test coverage  especially for the newly created branches. Otherwise LGTM :+1:   || I added tests for all uncovered branches in TypedBibEntry and after two LGTM will merge this in. @oscargus have fun rebasing :smile:   ||
755,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Fix NPE at saving does not reset save flag #741 Fix #741 (and a lot of other null pointer exceptions). getType and getStandardType now return an optional instead of possible null values. Looks good to me! :+1:   || Would be cool if we can increase the test coverage  especially for the newly created branches. Otherwise LGTM :+1:   || I added tests for all uncovered branches in TypedBibEntry and after two LGTM will merge this in. @oscargus have fun rebasing :smile:   ||
793,1,0,0,0,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,[WIP] More List<BibEntry> instead of BibEntry[] Instead of #762. Ahh  wasnt ready to be merge yet... Ill create and merge the final corrections (and open an issue as it turned out that the problem I tried to solve wasnt introduced here).  || Hm  sorry  I was in a merge frenzy ... :(  || No worries. Fixed now.  ||
793,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,0,[WIP] More List<BibEntry> instead of BibEntry[] Instead of #762. Ahh  wasnt ready to be merge yet... Ill create and merge the final corrections (and open an issue as it turned out that the problem I tried to solve wasnt introduced here).  || Hm  sorry  I was in a merge frenzy ... :(  || No worries. Fixed now.  ||
793,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,0,[WIP] More List<BibEntry> instead of BibEntry[] Instead of #762. Ahh  wasnt ready to be merge yet... Ill create and merge the final corrections (and open an issue as it turned out that the problem I tried to solve wasnt introduced here).  || Hm  sorry  I was in a merge frenzy ... :(  || No worries. Fixed now.  ||
799,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,Better preference for default file-based mode See #789. - Description rewritten to say "Default TeX mode". - Dropdown for bibtex & biblatex - Moved to general tab - Decided to keep old boolean preference to avoid preference migration for now  ![image](https://cloud.githubusercontent.com/assets/2141507/13001725/da5d74fa-d168-11e5-861e-4253cebad216.png)  @JabRef/developers WDYT? `TeX` is misleading as this lets me think about pdflatex and latex or pure tex. Maybe "Default bibliography mode" as we treat the bibliography?  || :+1:  Two minor remarks: - I would write "BibTeX" and "BibLaTex" instead of everything upper case (what are our convention on this?) - You can rename JabRefPreferences.BIBLATEX_MODE to something containing defaut without forcing migration (i.e. leave the underlying string unchanged)  || The spelling is discussed at https://github.com/koppor/jabref/issues/73. BibTeX is set  but Biblatex or BibLaTeX is not yet finally decided.  || Looks good to me.   || 
799,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Better preference for default file-based mode See #789. - Description rewritten to say "Default TeX mode". - Dropdown for bibtex & biblatex - Moved to general tab - Decided to keep old boolean preference to avoid preference migration for now  ![image](https://cloud.githubusercontent.com/assets/2141507/13001725/da5d74fa-d168-11e5-861e-4253cebad216.png)  @JabRef/developers WDYT? `TeX` is misleading as this lets me think about pdflatex and latex or pure tex. Maybe "Default bibliography mode" as we treat the bibliography?  || :+1:  Two minor remarks: - I would write "BibTeX" and "BibLaTex" instead of everything upper case (what are our convention on this?) - You can rename JabRefPreferences.BIBLATEX_MODE to something containing defaut without forcing migration (i.e. leave the underlying string unchanged)  || The spelling is discussed at https://github.com/koppor/jabref/issues/73. BibTeX is set  but Biblatex or BibLaTeX is not yet finally decided.  || Looks good to me.   || 
799,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Better preference for default file-based mode See #789. - Description rewritten to say "Default TeX mode". - Dropdown for bibtex & biblatex - Moved to general tab - Decided to keep old boolean preference to avoid preference migration for now  ![image](https://cloud.githubusercontent.com/assets/2141507/13001725/da5d74fa-d168-11e5-861e-4253cebad216.png)  @JabRef/developers WDYT? `TeX` is misleading as this lets me think about pdflatex and latex or pure tex. Maybe "Default bibliography mode" as we treat the bibliography?  || :+1:  Two minor remarks: - I would write "BibTeX" and "BibLaTex" instead of everything upper case (what are our convention on this?) - You can rename JabRefPreferences.BIBLATEX_MODE to something containing defaut without forcing migration (i.e. leave the underlying string unchanged)  || The spelling is discussed at https://github.com/koppor/jabref/issues/73. BibTeX is set  but Biblatex or BibLaTeX is not yet finally decided.  || Looks good to me.   || 
828,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,MimeTypeDetector Improvements See #824. - added a http stubbing library - added a redirection test - added a mime type variation test - changed detection implementation to HTTPUrlConnection  Looks like it works... @koppor do you know how to host files and redirection on www.jabref.org?  || File hosting: Even though it is possible to add files by adding them to https://github.com/JabRef/www.jabref.org (gh-pages branch)  I would propose to create a new URL `test.jabref.org`  where we host such files. We should not mix pages.  Redirections: They are possible at GitHub using HTML redirects: https://help.github.com/articles/redirects-on-github-pages/. However  these are not the redirects  we are aiming for. I can setup `test.jabref.org` on my private server and create some redirects.  || Ok  we can mock the HTTP request via WireMock. Should be way better than having an external dependency to our homepage.  ||
828,1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,1,0,0,0,MimeTypeDetector Improvements See #824. - added a http stubbing library - added a redirection test - added a mime type variation test - changed detection implementation to HTTPUrlConnection  Looks like it works... @koppor do you know how to host files and redirection on www.jabref.org?  || File hosting: Even though it is possible to add files by adding them to https://github.com/JabRef/www.jabref.org (gh-pages branch)  I would propose to create a new URL `test.jabref.org`  where we host such files. We should not mix pages.  Redirections: They are possible at GitHub using HTML redirects: https://help.github.com/articles/redirects-on-github-pages/. However  these are not the redirects  we are aiming for. I can setup `test.jabref.org` on my private server and create some redirects.  || Ok  we can mock the HTTP request via WireMock. Should be way better than having an external dependency to our homepage.  ||
828,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,MimeTypeDetector Improvements See #824. - added a http stubbing library - added a redirection test - added a mime type variation test - changed detection implementation to HTTPUrlConnection  Looks like it works... @koppor do you know how to host files and redirection on www.jabref.org?  || File hosting: Even though it is possible to add files by adding them to https://github.com/JabRef/www.jabref.org (gh-pages branch)  I would propose to create a new URL `test.jabref.org`  where we host such files. We should not mix pages.  Redirections: They are possible at GitHub using HTML redirects: https://help.github.com/articles/redirects-on-github-pages/. However  these are not the redirects  we are aiming for. I can setup `test.jabref.org` on my private server and create some redirects.  || Ok  we can mock the HTTP request via WireMock. Should be way better than having an external dependency to our homepage.  ||
842,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,Fixed #492: All text is copied if nothing is marked and preview of pa… Fixed #492  When nothing is selected the whole field is copied. If the field is empty  the right click copy item is disabled.  Preview of text to be pasted in tool tip. Now maximum 20 characters. Should it be longer?  
842,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Fixed #492: All text is copied if nothing is marked and preview of pa… Fixed #492  When nothing is selected the whole field is copied. If the field is empty  the right click copy item is disabled.  Preview of text to be pasted in tool tip. Now maximum 20 characters. Should it be longer?  
842,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Fixed #492: All text is copied if nothing is marked and preview of pa… Fixed #492  When nothing is selected the whole field is copied. If the field is empty  the right click copy item is disabled.  Preview of text to be pasted in tool tip. Now maximum 20 characters. Should it be longer?  
858,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Tab for remaining fields See #454. When is this updated? Will this update on the fly if I change the config?  || Dont think so as the FieldEditor is somehow cached i think.  || What is the state here? What is missing to get this merged?  || @stefan-kolb is working on it. I removed the label to make it clear that is currently under work.   || Think its ok to merge.  ||
858,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Tab for remaining fields See #454. When is this updated? Will this update on the fly if I change the config?  || Dont think so as the FieldEditor is somehow cached i think.  || What is the state here? What is missing to get this merged?  || @stefan-kolb is working on it. I removed the label to make it clear that is currently under work.   || Think its ok to merge.  ||
858,1,0,0,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Tab for remaining fields See #454. When is this updated? Will this update on the fly if I change the config?  || Dont think so as the FieldEditor is somehow cached i think.  || What is the state here? What is missing to get this merged?  || @stefan-kolb is working on it. I removed the label to make it clear that is currently under work.   || Think its ok to merge.  ||
864,1,0,0,0,0,1,1,0,1,0,1,1,1,0,1,1,0,0,0,Add dialog to show all preferences in their raw form plus some filtering Relates to #859. - Adds a dialog which shows all preferences in a table by their type  key  value and default value.  - Table can be sorted - Table can be filtered to show only the preferences which deviate from their default value. This is the most helpful one - and it revealed various bugs when having a closer look. :) - Count is shown as well - Reachable through Options -> Preferences -> Show Preferences (button is below import/export preferences) - Converts default values of null to empty string - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? Mostly GUI changes  testing makes not that much sense here - [x] Tests green? Looks good to me! Just rebase on master and this can be merged.  || Looks good! Some minor comments  which probably can be ignored/fixed later.  ||
864,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,Add dialog to show all preferences in their raw form plus some filtering Relates to #859. - Adds a dialog which shows all preferences in a table by their type  key  value and default value.  - Table can be sorted - Table can be filtered to show only the preferences which deviate from their default value. This is the most helpful one - and it revealed various bugs when having a closer look. :) - Count is shown as well - Reachable through Options -> Preferences -> Show Preferences (button is below import/export preferences) - Converts default values of null to empty string - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? Mostly GUI changes  testing makes not that much sense here - [x] Tests green? Looks good to me! Just rebase on master and this can be merged.  || Looks good! Some minor comments  which probably can be ignored/fixed later.  ||
864,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Add dialog to show all preferences in their raw form plus some filtering Relates to #859. - Adds a dialog which shows all preferences in a table by their type  key  value and default value.  - Table can be sorted - Table can be filtered to show only the preferences which deviate from their default value. This is the most helpful one - and it revealed various bugs when having a closer look. :) - Count is shown as well - Reachable through Options -> Preferences -> Show Preferences (button is below import/export preferences) - Converts default values of null to empty string - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? Mostly GUI changes  testing makes not that much sense here - [x] Tests green? Looks good to me! Just rebase on master and this can be merged.  || Looks good! Some minor comments  which probably can be ignored/fixed later.  ||
874,1,0,0,0,0,1,1,0,1,0,1,0,1,0,1,1,0,0,0,Fixing OpenOffice Citation with curly braces and manual connection browsing - [X] Change in CHANGELOG.md described? - [X] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [X] Tests green?  Fixed #856: Clicking on browse for manual OpenOffice does now work Fixed #815: Curly braces in OO/LO citation no longer ignored - Code cleanup: Replaced ActionListener with Lamdbas  One point for discussion: DefaultFormBuilder (jgoodies) is deprecated. Is there already a replacement for the creation? I found this thread: http://stackoverflow.com/questions/33044573/jgoodies-what-is-the-nextline-equivalent-in-formbuilder @oscargus  @koppor Regarding DefaultFormBuilder: there is an alternative JGoodies approach. However  it has been decided to leave it as is as a Javax conversion is planned (any year now...).  I havent looked at the code carefully  but what happens with {} around e.g. capitals?  || Ah thanks for your hint. Yeah  it seems like it needs more checking for special cases. I will try to come up with a solution to this.  I noticed that the authors name Arp{\\i}rez  then appears as Arp{i}rez et al. [2003]   || I tried some variants  e.g. adding the curly braces "manually" before and end.  ` if (StringUtil.isInCurlyBrackets(field)) { //braces at the start and the end of the string  ```         sb.insert(0  "{")          sb.append("}")          System.out.println("In Curly Braces SB " + sb)      }     return sb.toString().replace("&dollar "  "$")  // Replace &dollar  with $` ```  this works well for Authors. However  the problem is that I have no control over the field type. This creates then a problem when you have an entry with curly braces around the Title Field. Those curly Braces would then be printed in the generated Bibliography... Any ideas appreciated.  || I havent tried it  but I think that OOBibBase.getCitationMarkerField is the place to try. Basically: 1. Check if there are surrounding braces. 2. Format (using the old formatter that removes all braces). 3. If there were surrounding  braces  add them back before returning the formatted string.  A potential problem is author lists which starts and ends with braces  but are not enclosed  say `{\AA}sa Stor{\aa}`  but there are methods for checking that in #863 (IntegrityCheck.BracketChecker)  so as long as the basic mechanism is working one can always improve step 1 later.  || Thanks for your tip. I think I found a working solution.  In fact I copied the method and added a Check for curly braces (code is based on the integrity checker)  like you proposed. The copied method is  Manual tests look promising. I will add some unit tests.   || Found a solution by enhancing the StringUtil method and by adding a check for Curly brackets in `getAuthorCitationMarkerField`  The only thing which bothers me  is that it is kind of "double code". I thought about this  but did not come up with a nice solution. Maybe one of you has an idea.  || I think you can simply check if field is "author" or "editor" in the old method. Not 100% correct but there are other methods using similar logic.  (I guess ideally each field of the predefined entry types should have properties  e.g. if it is a name field.)  || Apart from that I think the PR looks good to go!  (I believe that one probably can add a bit of code to handle escaped curly brackets for the rare cases that someone needs to put a single `\{` in a field... But hardly anything important.)  || 
874,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Fixing OpenOffice Citation with curly braces and manual connection browsing - [X] Change in CHANGELOG.md described? - [X] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [X] Tests green?  Fixed #856: Clicking on browse for manual OpenOffice does now work Fixed #815: Curly braces in OO/LO citation no longer ignored - Code cleanup: Replaced ActionListener with Lamdbas  One point for discussion: DefaultFormBuilder (jgoodies) is deprecated. Is there already a replacement for the creation? I found this thread: http://stackoverflow.com/questions/33044573/jgoodies-what-is-the-nextline-equivalent-in-formbuilder @oscargus  @koppor Regarding DefaultFormBuilder: there is an alternative JGoodies approach. However  it has been decided to leave it as is as a Javax conversion is planned (any year now...).  I havent looked at the code carefully  but what happens with {} around e.g. capitals?  || Ah thanks for your hint. Yeah  it seems like it needs more checking for special cases. I will try to come up with a solution to this.  I noticed that the authors name Arp{\\i}rez  then appears as Arp{i}rez et al. [2003]   || I tried some variants  e.g. adding the curly braces "manually" before and end.  ` if (StringUtil.isInCurlyBrackets(field)) { //braces at the start and the end of the string  ```         sb.insert(0  "{")          sb.append("}")          System.out.println("In Curly Braces SB " + sb)      }     return sb.toString().replace("&dollar "  "$")  // Replace &dollar  with $` ```  this works well for Authors. However  the problem is that I have no control over the field type. This creates then a problem when you have an entry with curly braces around the Title Field. Those curly Braces would then be printed in the generated Bibliography... Any ideas appreciated.  || I havent tried it  but I think that OOBibBase.getCitationMarkerField is the place to try. Basically: 1. Check if there are surrounding braces. 2. Format (using the old formatter that removes all braces). 3. If there were surrounding  braces  add them back before returning the formatted string.  A potential problem is author lists which starts and ends with braces  but are not enclosed  say `{\AA}sa Stor{\aa}`  but there are methods for checking that in #863 (IntegrityCheck.BracketChecker)  so as long as the basic mechanism is working one can always improve step 1 later.  || Thanks for your tip. I think I found a working solution.  In fact I copied the method and added a Check for curly braces (code is based on the integrity checker)  like you proposed. The copied method is  Manual tests look promising. I will add some unit tests.   || Found a solution by enhancing the StringUtil method and by adding a check for Curly brackets in `getAuthorCitationMarkerField`  The only thing which bothers me  is that it is kind of "double code". I thought about this  but did not come up with a nice solution. Maybe one of you has an idea.  || I think you can simply check if field is "author" or "editor" in the old method. Not 100% correct but there are other methods using similar logic.  (I guess ideally each field of the predefined entry types should have properties  e.g. if it is a name field.)  || Apart from that I think the PR looks good to go!  (I believe that one probably can add a bit of code to handle escaped curly brackets for the rare cases that someone needs to put a single `\{` in a field... But hardly anything important.)  || 
874,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fixing OpenOffice Citation with curly braces and manual connection browsing - [X] Change in CHANGELOG.md described? - [X] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [X] Tests green?  Fixed #856: Clicking on browse for manual OpenOffice does now work Fixed #815: Curly braces in OO/LO citation no longer ignored - Code cleanup: Replaced ActionListener with Lamdbas  One point for discussion: DefaultFormBuilder (jgoodies) is deprecated. Is there already a replacement for the creation? I found this thread: http://stackoverflow.com/questions/33044573/jgoodies-what-is-the-nextline-equivalent-in-formbuilder @oscargus  @koppor Regarding DefaultFormBuilder: there is an alternative JGoodies approach. However  it has been decided to leave it as is as a Javax conversion is planned (any year now...).  I havent looked at the code carefully  but what happens with {} around e.g. capitals?  || Ah thanks for your hint. Yeah  it seems like it needs more checking for special cases. I will try to come up with a solution to this.  I noticed that the authors name Arp{\\i}rez  then appears as Arp{i}rez et al. [2003]   || I tried some variants  e.g. adding the curly braces "manually" before and end.  ` if (StringUtil.isInCurlyBrackets(field)) { //braces at the start and the end of the string  ```         sb.insert(0  "{")          sb.append("}")          System.out.println("In Curly Braces SB " + sb)      }     return sb.toString().replace("&dollar "  "$")  // Replace &dollar  with $` ```  this works well for Authors. However  the problem is that I have no control over the field type. This creates then a problem when you have an entry with curly braces around the Title Field. Those curly Braces would then be printed in the generated Bibliography... Any ideas appreciated.  || I havent tried it  but I think that OOBibBase.getCitationMarkerField is the place to try. Basically: 1. Check if there are surrounding braces. 2. Format (using the old formatter that removes all braces). 3. If there were surrounding  braces  add them back before returning the formatted string.  A potential problem is author lists which starts and ends with braces  but are not enclosed  say `{\AA}sa Stor{\aa}`  but there are methods for checking that in #863 (IntegrityCheck.BracketChecker)  so as long as the basic mechanism is working one can always improve step 1 later.  || Thanks for your tip. I think I found a working solution.  In fact I copied the method and added a Check for curly braces (code is based on the integrity checker)  like you proposed. The copied method is  Manual tests look promising. I will add some unit tests.   || Found a solution by enhancing the StringUtil method and by adding a check for Curly brackets in `getAuthorCitationMarkerField`  The only thing which bothers me  is that it is kind of "double code". I thought about this  but did not come up with a nice solution. Maybe one of you has an idea.  || I think you can simply check if field is "author" or "editor" in the old method. Not 100% correct but there are other methods using similar logic.  (I guess ideally each field of the predefined entry types should have properties  e.g. if it is a name field.)  || Apart from that I think the PR looks good to go!  (I believe that one probably can add a bit of code to handle escaped curly brackets for the rare cases that someone needs to put a single `\{` in a field... But hardly anything important.)  || 
874,1,0,0,0,0,1,1,0,1,0,1,0,1,0,1,1,0,0,0,Fixing OpenOffice Citation with curly braces and manual connection browsing - [X] Change in CHANGELOG.md described? - [X] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [X] Tests green?  Fixed #856: Clicking on browse for manual OpenOffice does now work Fixed #815: Curly braces in OO/LO citation no longer ignored - Code cleanup: Replaced ActionListener with Lamdbas  One point for discussion: DefaultFormBuilder (jgoodies) is deprecated. Is there already a replacement for the creation? I found this thread: http://stackoverflow.com/questions/33044573/jgoodies-what-is-the-nextline-equivalent-in-formbuilder @oscargus  @koppor Regarding DefaultFormBuilder: there is an alternative JGoodies approach. However  it has been decided to leave it as is as a Javax conversion is planned (any year now...).  I havent looked at the code carefully  but what happens with {} around e.g. capitals?  || Ah thanks for your hint. Yeah  it seems like it needs more checking for special cases. I will try to come up with a solution to this.  I noticed that the authors name Arp{\\i}rez  then appears as Arp{i}rez et al. [2003]   || I tried some variants  e.g. adding the curly braces "manually" before and end.  ` if (StringUtil.isInCurlyBrackets(field)) { //braces at the start and the end of the string  ```         sb.insert(0  "{")          sb.append("}")          System.out.println("In Curly Braces SB " + sb)      }     return sb.toString().replace("&dollar "  "$")  // Replace &dollar  with $` ```  this works well for Authors. However  the problem is that I have no control over the field type. This creates then a problem when you have an entry with curly braces around the Title Field. Those curly Braces would then be printed in the generated Bibliography... Any ideas appreciated.  || I havent tried it  but I think that OOBibBase.getCitationMarkerField is the place to try. Basically: 1. Check if there are surrounding braces. 2. Format (using the old formatter that removes all braces). 3. If there were surrounding  braces  add them back before returning the formatted string.  A potential problem is author lists which starts and ends with braces  but are not enclosed  say `{\AA}sa Stor{\aa}`  but there are methods for checking that in #863 (IntegrityCheck.BracketChecker)  so as long as the basic mechanism is working one can always improve step 1 later.  || Thanks for your tip. I think I found a working solution.  In fact I copied the method and added a Check for curly braces (code is based on the integrity checker)  like you proposed. The copied method is  Manual tests look promising. I will add some unit tests.   || Found a solution by enhancing the StringUtil method and by adding a check for Curly brackets in `getAuthorCitationMarkerField`  The only thing which bothers me  is that it is kind of "double code". I thought about this  but did not come up with a nice solution. Maybe one of you has an idea.  || I think you can simply check if field is "author" or "editor" in the old method. Not 100% correct but there are other methods using similar logic.  (I guess ideally each field of the predefined entry types should have properties  e.g. if it is a name field.)  || Apart from that I think the PR looks good to go!  (I believe that one probably can add a bit of code to handle escaped curly brackets for the rare cases that someone needs to put a single `\{` in a field... But hardly anything important.)  || 
874,1,0,0,0,0,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Fixing OpenOffice Citation with curly braces and manual connection browsing - [X] Change in CHANGELOG.md described? - [X] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [X] Tests green?  Fixed #856: Clicking on browse for manual OpenOffice does now work Fixed #815: Curly braces in OO/LO citation no longer ignored - Code cleanup: Replaced ActionListener with Lamdbas  One point for discussion: DefaultFormBuilder (jgoodies) is deprecated. Is there already a replacement for the creation? I found this thread: http://stackoverflow.com/questions/33044573/jgoodies-what-is-the-nextline-equivalent-in-formbuilder @oscargus  @koppor Regarding DefaultFormBuilder: there is an alternative JGoodies approach. However  it has been decided to leave it as is as a Javax conversion is planned (any year now...).  I havent looked at the code carefully  but what happens with {} around e.g. capitals?  || Ah thanks for your hint. Yeah  it seems like it needs more checking for special cases. I will try to come up with a solution to this.  I noticed that the authors name Arp{\\i}rez  then appears as Arp{i}rez et al. [2003]   || I tried some variants  e.g. adding the curly braces "manually" before and end.  ` if (StringUtil.isInCurlyBrackets(field)) { //braces at the start and the end of the string  ```         sb.insert(0  "{")          sb.append("}")          System.out.println("In Curly Braces SB " + sb)      }     return sb.toString().replace("&dollar "  "$")  // Replace &dollar  with $` ```  this works well for Authors. However  the problem is that I have no control over the field type. This creates then a problem when you have an entry with curly braces around the Title Field. Those curly Braces would then be printed in the generated Bibliography... Any ideas appreciated.  || I havent tried it  but I think that OOBibBase.getCitationMarkerField is the place to try. Basically: 1. Check if there are surrounding braces. 2. Format (using the old formatter that removes all braces). 3. If there were surrounding  braces  add them back before returning the formatted string.  A potential problem is author lists which starts and ends with braces  but are not enclosed  say `{\AA}sa Stor{\aa}`  but there are methods for checking that in #863 (IntegrityCheck.BracketChecker)  so as long as the basic mechanism is working one can always improve step 1 later.  || Thanks for your tip. I think I found a working solution.  In fact I copied the method and added a Check for curly braces (code is based on the integrity checker)  like you proposed. The copied method is  Manual tests look promising. I will add some unit tests.   || Found a solution by enhancing the StringUtil method and by adding a check for Curly brackets in `getAuthorCitationMarkerField`  The only thing which bothers me  is that it is kind of "double code". I thought about this  but did not come up with a nice solution. Maybe one of you has an idea.  || I think you can simply check if field is "author" or "editor" in the old method. Not 100% correct but there are other methods using similar logic.  (I guess ideally each field of the predefined entry types should have properties  e.g. if it is a name field.)  || Apart from that I think the PR looks good to go!  (I believe that one probably can add a bit of code to handle escaped curly brackets for the rare cases that someone needs to put a single `\{` in a field... But hardly anything important.)  || 
874,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Fixing OpenOffice Citation with curly braces and manual connection browsing - [X] Change in CHANGELOG.md described? - [X] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [X] Tests green?  Fixed #856: Clicking on browse for manual OpenOffice does now work Fixed #815: Curly braces in OO/LO citation no longer ignored - Code cleanup: Replaced ActionListener with Lamdbas  One point for discussion: DefaultFormBuilder (jgoodies) is deprecated. Is there already a replacement for the creation? I found this thread: http://stackoverflow.com/questions/33044573/jgoodies-what-is-the-nextline-equivalent-in-formbuilder @oscargus  @koppor Regarding DefaultFormBuilder: there is an alternative JGoodies approach. However  it has been decided to leave it as is as a Javax conversion is planned (any year now...).  I havent looked at the code carefully  but what happens with {} around e.g. capitals?  || Ah thanks for your hint. Yeah  it seems like it needs more checking for special cases. I will try to come up with a solution to this.  I noticed that the authors name Arp{\\i}rez  then appears as Arp{i}rez et al. [2003]   || I tried some variants  e.g. adding the curly braces "manually" before and end.  ` if (StringUtil.isInCurlyBrackets(field)) { //braces at the start and the end of the string  ```         sb.insert(0  "{")          sb.append("}")          System.out.println("In Curly Braces SB " + sb)      }     return sb.toString().replace("&dollar "  "$")  // Replace &dollar  with $` ```  this works well for Authors. However  the problem is that I have no control over the field type. This creates then a problem when you have an entry with curly braces around the Title Field. Those curly Braces would then be printed in the generated Bibliography... Any ideas appreciated.  || I havent tried it  but I think that OOBibBase.getCitationMarkerField is the place to try. Basically: 1. Check if there are surrounding braces. 2. Format (using the old formatter that removes all braces). 3. If there were surrounding  braces  add them back before returning the formatted string.  A potential problem is author lists which starts and ends with braces  but are not enclosed  say `{\AA}sa Stor{\aa}`  but there are methods for checking that in #863 (IntegrityCheck.BracketChecker)  so as long as the basic mechanism is working one can always improve step 1 later.  || Thanks for your tip. I think I found a working solution.  In fact I copied the method and added a Check for curly braces (code is based on the integrity checker)  like you proposed. The copied method is  Manual tests look promising. I will add some unit tests.   || Found a solution by enhancing the StringUtil method and by adding a check for Curly brackets in `getAuthorCitationMarkerField`  The only thing which bothers me  is that it is kind of "double code". I thought about this  but did not come up with a nice solution. Maybe one of you has an idea.  || I think you can simply check if field is "author" or "editor" in the old method. Not 100% correct but there are other methods using similar logic.  (I guess ideally each field of the predefined entry types should have properties  e.g. if it is a name field.)  || Apart from that I think the PR looks good to go!  (I believe that one probably can add a bit of code to handle escaped curly brackets for the rare cases that someone needs to put a single `\{` in a field... But hardly anything important.)  || 
877,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Add ability to run arbitrary formatters as cleanup actions Add ability to run arbitrary formatters as cleanup actions by reusing save actions. Thus some old cleanup entries could be removed. This also implements/fixes #295. Moreover  an erase formatter is added which just deletes the corresponding field.  ![untitled](https://cloud.githubusercontent.com/assets/5037600/13373692/d6ea20c2-dd6e-11e5-93d2-346a0bd30634.png)  Code changes: - Rename SaveActions to FieldFormatterCleanups - Some smaller refactorings to reuse SaveActions (mainly to separate them from MetaData)  : - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? I think it would look better if the check boxes were aligned vertically.   || ![untitled](https://cloud.githubusercontent.com/assets/5037600/13378951/a13543c2-de17-11e5-88f1-b1097e913f4f.png) You are right!  || When I compare both UIs (before/after) this PR  we loose a lot of documentation and guidance for the user. Because how  the user has to think which formatters would be well suited for which fields to be helpful  making it harder to configure it correctly. We need to find a way to fight this. Why not add a section about suggestions which can be checked/unchecked and upon change change the table with the actions as well?  || All the previous cleanup actions appear as the default value for the field formatters:  ``` activeFormatterCleanups.add(new FieldFormatterCleanup("date"  BibtexFieldFormatters.DATE))  activeFormatterCleanups.add(new FieldFormatterCleanup("month"  new MonthFormatter()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new CaseKeeper()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new UnitFormatter()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new LatexFormatter()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new HTMLToLatexFormatter()))  ```  So opening the cleanup dialog for the first time shows essentially the same information as previously (this is not apparent from the screenshots since I already removed some of the default values).  I could add a button which resets the field formatters to their default value (or if you prefer adds the default formatters).   || - Make paths of linked files relative if possible could also be a Formatter  and hence  added to the save actions. - A button which resets to the defaults is a good idea. - We really need to think how the formatters can be better explained to the user. Would it make sense if each formatter itself has a short localized description how it works  similar to the sentences used before which are shown in the table as well?  || New update with: - Reset button (in cleanup dialog as well as in database properties dialog) - Add descriptions of the formatters as tooltips in the list and in the combo box (not ideal  but better then nothing).   ![untitled](https://cloud.githubusercontent.com/assets/5037600/13585691/825ade24-e4bd-11e5-88a3-3033f6096e96.png)  Adding the "Make paths relative" cleanup as a save action should be covered with #878. I do not want to implement this cleanup as a formatter (formatters are just in-out converters without any side-effects).  || - [x] keep name concept. Key is for serialization. Name is for display. Description is a long text. - [ ] improve keys and names of formatters - separate issue #920 with a table: key and name   - e.g.  `unit` as key   - e.g.  Name: DateFormatter -> NormalizeDateToYYYYMMDD - [x] Add description text as box below the line of "Enter field name" updated upon change of dropdown   - e.g.  "Normalizes dates ..."  || Added now a description text box. From my side this PR can be merged in. The only missing thing is the naming of the formatters  but I would prefer if this would be a separate PR (not sure how much time I have the next days and since this is a blocker for 3.3....) ![untitled](https://cloud.githubusercontent.com/assets/5037600/13647844/3c4b6e56-e636-11e5-8a35-ff118ba1ab3e.png)  || Last point: what happens when the description is longer than this line? Does it wrap automatically? Does it allow to use newlines for formatting?  || Since this is just an JLabel  all the nice limitations and/or features come along. So no  there are no automatic line breaks except if you put everything around <html> tags and you also need to use `<br>` for a new line.   || Hm  this limits the description we can display there. Nevertheless  I think it is best to merge it for now and then do the improvements in another PR. Just rebase and get this in.  || I really like it and only have minor issues  which I also can file as separate issue if it is too much effort to resolve now.  Is it possible to display a description with "the given field" in place of the field name if no field is given? Reason: I find the empty description irritating and thought that the content of the white box was the description.  Above at "Save sort order"  one can select a field. I would have expected the same choice for the selection of the fields to apply the save action. Reason: I am too lazy to input the field name manually.  I experience layout issues at the end - The dialog height should be the size of all content including the white box  shouldnt it?  ![grabbed_20160313-212741](https://cloud.githubusercontent.com/assets/1366654/13731147/ab897bee-e962-11e5-84ff-a9546b62021e.png)  || I added your suggestion about adding "the given field". Could you please open an issue for the other things? Thanks! Ill now merge this in.   || 
877,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,0,0,Add ability to run arbitrary formatters as cleanup actions Add ability to run arbitrary formatters as cleanup actions by reusing save actions. Thus some old cleanup entries could be removed. This also implements/fixes #295. Moreover  an erase formatter is added which just deletes the corresponding field.  ![untitled](https://cloud.githubusercontent.com/assets/5037600/13373692/d6ea20c2-dd6e-11e5-93d2-346a0bd30634.png)  Code changes: - Rename SaveActions to FieldFormatterCleanups - Some smaller refactorings to reuse SaveActions (mainly to separate them from MetaData)  : - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? I think it would look better if the check boxes were aligned vertically.   || ![untitled](https://cloud.githubusercontent.com/assets/5037600/13378951/a13543c2-de17-11e5-88f1-b1097e913f4f.png) You are right!  || When I compare both UIs (before/after) this PR  we loose a lot of documentation and guidance for the user. Because how  the user has to think which formatters would be well suited for which fields to be helpful  making it harder to configure it correctly. We need to find a way to fight this. Why not add a section about suggestions which can be checked/unchecked and upon change change the table with the actions as well?  || All the previous cleanup actions appear as the default value for the field formatters:  ``` activeFormatterCleanups.add(new FieldFormatterCleanup("date"  BibtexFieldFormatters.DATE))  activeFormatterCleanups.add(new FieldFormatterCleanup("month"  new MonthFormatter()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new CaseKeeper()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new UnitFormatter()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new LatexFormatter()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new HTMLToLatexFormatter()))  ```  So opening the cleanup dialog for the first time shows essentially the same information as previously (this is not apparent from the screenshots since I already removed some of the default values).  I could add a button which resets the field formatters to their default value (or if you prefer adds the default formatters).   || - Make paths of linked files relative if possible could also be a Formatter  and hence  added to the save actions. - A button which resets to the defaults is a good idea. - We really need to think how the formatters can be better explained to the user. Would it make sense if each formatter itself has a short localized description how it works  similar to the sentences used before which are shown in the table as well?  || New update with: - Reset button (in cleanup dialog as well as in database properties dialog) - Add descriptions of the formatters as tooltips in the list and in the combo box (not ideal  but better then nothing).   ![untitled](https://cloud.githubusercontent.com/assets/5037600/13585691/825ade24-e4bd-11e5-88a3-3033f6096e96.png)  Adding the "Make paths relative" cleanup as a save action should be covered with #878. I do not want to implement this cleanup as a formatter (formatters are just in-out converters without any side-effects).  || - [x] keep name concept. Key is for serialization. Name is for display. Description is a long text. - [ ] improve keys and names of formatters - separate issue #920 with a table: key and name   - e.g.  `unit` as key   - e.g.  Name: DateFormatter -> NormalizeDateToYYYYMMDD - [x] Add description text as box below the line of "Enter field name" updated upon change of dropdown   - e.g.  "Normalizes dates ..."  || Added now a description text box. From my side this PR can be merged in. The only missing thing is the naming of the formatters  but I would prefer if this would be a separate PR (not sure how much time I have the next days and since this is a blocker for 3.3....) ![untitled](https://cloud.githubusercontent.com/assets/5037600/13647844/3c4b6e56-e636-11e5-8a35-ff118ba1ab3e.png)  || Last point: what happens when the description is longer than this line? Does it wrap automatically? Does it allow to use newlines for formatting?  || Since this is just an JLabel  all the nice limitations and/or features come along. So no  there are no automatic line breaks except if you put everything around <html> tags and you also need to use `<br>` for a new line.   || Hm  this limits the description we can display there. Nevertheless  I think it is best to merge it for now and then do the improvements in another PR. Just rebase and get this in.  || I really like it and only have minor issues  which I also can file as separate issue if it is too much effort to resolve now.  Is it possible to display a description with "the given field" in place of the field name if no field is given? Reason: I find the empty description irritating and thought that the content of the white box was the description.  Above at "Save sort order"  one can select a field. I would have expected the same choice for the selection of the fields to apply the save action. Reason: I am too lazy to input the field name manually.  I experience layout issues at the end - The dialog height should be the size of all content including the white box  shouldnt it?  ![grabbed_20160313-212741](https://cloud.githubusercontent.com/assets/1366654/13731147/ab897bee-e962-11e5-84ff-a9546b62021e.png)  || I added your suggestion about adding "the given field". Could you please open an issue for the other things? Thanks! Ill now merge this in.   || 
877,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Add ability to run arbitrary formatters as cleanup actions Add ability to run arbitrary formatters as cleanup actions by reusing save actions. Thus some old cleanup entries could be removed. This also implements/fixes #295. Moreover  an erase formatter is added which just deletes the corresponding field.  ![untitled](https://cloud.githubusercontent.com/assets/5037600/13373692/d6ea20c2-dd6e-11e5-93d2-346a0bd30634.png)  Code changes: - Rename SaveActions to FieldFormatterCleanups - Some smaller refactorings to reuse SaveActions (mainly to separate them from MetaData)  : - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? I think it would look better if the check boxes were aligned vertically.   || ![untitled](https://cloud.githubusercontent.com/assets/5037600/13378951/a13543c2-de17-11e5-88f1-b1097e913f4f.png) You are right!  || When I compare both UIs (before/after) this PR  we loose a lot of documentation and guidance for the user. Because how  the user has to think which formatters would be well suited for which fields to be helpful  making it harder to configure it correctly. We need to find a way to fight this. Why not add a section about suggestions which can be checked/unchecked and upon change change the table with the actions as well?  || All the previous cleanup actions appear as the default value for the field formatters:  ``` activeFormatterCleanups.add(new FieldFormatterCleanup("date"  BibtexFieldFormatters.DATE))  activeFormatterCleanups.add(new FieldFormatterCleanup("month"  new MonthFormatter()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new CaseKeeper()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new UnitFormatter()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new LatexFormatter()))  activeFormatterCleanups.add(new FieldFormatterCleanup("title"  new HTMLToLatexFormatter()))  ```  So opening the cleanup dialog for the first time shows essentially the same information as previously (this is not apparent from the screenshots since I already removed some of the default values).  I could add a button which resets the field formatters to their default value (or if you prefer adds the default formatters).   || - Make paths of linked files relative if possible could also be a Formatter  and hence  added to the save actions. - A button which resets to the defaults is a good idea. - We really need to think how the formatters can be better explained to the user. Would it make sense if each formatter itself has a short localized description how it works  similar to the sentences used before which are shown in the table as well?  || New update with: - Reset button (in cleanup dialog as well as in database properties dialog) - Add descriptions of the formatters as tooltips in the list and in the combo box (not ideal  but better then nothing).   ![untitled](https://cloud.githubusercontent.com/assets/5037600/13585691/825ade24-e4bd-11e5-88a3-3033f6096e96.png)  Adding the "Make paths relative" cleanup as a save action should be covered with #878. I do not want to implement this cleanup as a formatter (formatters are just in-out converters without any side-effects).  || - [x] keep name concept. Key is for serialization. Name is for display. Description is a long text. - [ ] improve keys and names of formatters - separate issue #920 with a table: key and name   - e.g.  `unit` as key   - e.g.  Name: DateFormatter -> NormalizeDateToYYYYMMDD - [x] Add description text as box below the line of "Enter field name" updated upon change of dropdown   - e.g.  "Normalizes dates ..."  || Added now a description text box. From my side this PR can be merged in. The only missing thing is the naming of the formatters  but I would prefer if this would be a separate PR (not sure how much time I have the next days and since this is a blocker for 3.3....) ![untitled](https://cloud.githubusercontent.com/assets/5037600/13647844/3c4b6e56-e636-11e5-8a35-ff118ba1ab3e.png)  || Last point: what happens when the description is longer than this line? Does it wrap automatically? Does it allow to use newlines for formatting?  || Since this is just an JLabel  all the nice limitations and/or features come along. So no  there are no automatic line breaks except if you put everything around <html> tags and you also need to use `<br>` for a new line.   || Hm  this limits the description we can display there. Nevertheless  I think it is best to merge it for now and then do the improvements in another PR. Just rebase and get this in.  || I really like it and only have minor issues  which I also can file as separate issue if it is too much effort to resolve now.  Is it possible to display a description with "the given field" in place of the field name if no field is given? Reason: I find the empty description irritating and thought that the content of the white box was the description.  Above at "Save sort order"  one can select a field. I would have expected the same choice for the selection of the fields to apply the save action. Reason: I am too lazy to input the field name manually.  I experience layout issues at the end - The dialog height should be the size of all content including the white box  shouldnt it?  ![grabbed_20160313-212741](https://cloud.githubusercontent.com/assets/1366654/13731147/ab897bee-e962-11e5-84ff-a9546b62021e.png)  || I added your suggestion about adding "the given field". Could you please open an issue for the other things? Thanks! Ill now merge this in.   || 
879,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,Fix #466: Rename PDF cleanup now also changes case of file name Fixes #466. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? Please remove the unused imports according to the codacy warnings. Otherwise I think it is fine.  ||
879,1,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Fix #466: Rename PDF cleanup now also changes case of file name Fixes #466. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? Please remove the unused imports according to the codacy warnings. Otherwise I think it is fine.  ||
879,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,Fix #466: Rename PDF cleanup now also changes case of file name Fixes #466. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? Please remove the unused imports according to the codacy warnings. Otherwise I think it is fine.  ||
884,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Fixed #883 Should solve #883. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? No  tests already passed  this is a GUI issue. - [x] Tests green? Yes. Merging this as the changed visibility of the constructors prohibits a proper build at the moment.  || If you pass null to the database  then getResolvedField is invoked with a null database. Thus the crossref functionality is not supported in the rename pattern. I think this is not a big deal  but easy to fix (just pass the right db)  || I think that at the moment null is always passed in the code.  (Which also means that it the two one- and two-argument constructors are only used in tests they can be removed and nulls passed  which of course is the current behaviour but seems to make more sense to provide alternative constructors if they are used in actual code...).  ||
884,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,1,Fixed #883 Should solve #883. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? No  tests already passed  this is a GUI issue. - [x] Tests green? Yes. Merging this as the changed visibility of the constructors prohibits a proper build at the moment.  || If you pass null to the database  then getResolvedField is invoked with a null database. Thus the crossref functionality is not supported in the rename pattern. I think this is not a big deal  but easy to fix (just pass the right db)  || I think that at the moment null is always passed in the code.  (Which also means that it the two one- and two-argument constructors are only used in tests they can be removed and nulls passed  which of course is the current behaviour but seems to make more sense to provide alternative constructors if they are used in actual code...).  ||
884,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixed #883 Should solve #883. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? No  tests already passed  this is a GUI issue. - [x] Tests green? Yes. Merging this as the changed visibility of the constructors prohibits a proper build at the moment.  || If you pass null to the database  then getResolvedField is invoked with a null database. Thus the crossref functionality is not supported in the rename pattern. I think this is not a big deal  but easy to fix (just pass the right db)  || I think that at the moment null is always passed in the code.  (Which also means that it the two one- and two-argument constructors are only used in tests they can be removed and nulls passed  which of course is the current behaviour but seems to make more sense to provide alternative constructors if they are used in actual code...).  ||
903,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,Fixed #890 This should fix #890  - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? Not relevant - [x] Tests green? :+1:   || I think the method   ``` public String doLayout(BibEntry bibtex  BibDatabase database) {         return doLayout(bibtex  database  null)      } ```  in layout.java should be changed too.   And then there is   ``` @Test     public void testHighlightingInvalidParameter() {         String content  "Test Word Content"           TextArea ta  new TextArea(""  content)           //should not matter at all         ta.highlightPattern(null)      } ```  which also sets the highlightPattern to null...thus I would expect (i.e. add test for it) that an NPE is thrown.  Otherwise :+1:   || I think that is the method I changed. Is there another method (I searched  but rather quickly)?  Yes  the layout package could benefit from more testing...  || No you are right...you exactly changed the method I mentioned. My bad :smile:. What I meant in the second part is that setting the higlightPattern to null does not throw an exception (since the test pass) although I would have expected one. So probably a Objects.requireNonNull is missing somewhere.  || But there is a corresponding method in LayoutEntry  which I think should be fixed as well.  Ah  OK! Ill have a look (or maybe the highlighter is never invoked in the test case?).  || I fixed the other place as well  but happened to change to more use of switching... In the long term it would make sense to change the integers now used to an enumeration.  I also realized that all `\n` are stripped from the fields when doing a layout  so even though e.g. HTMLChars will convert the line breaks to something clever  they are not there anymore once the formatter is invoked... Not sure where they go missing though...  || :+1:   || 
903,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Fixed #890 This should fix #890  - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? Not relevant - [x] Tests green? :+1:   || I think the method   ``` public String doLayout(BibEntry bibtex  BibDatabase database) {         return doLayout(bibtex  database  null)      } ```  in layout.java should be changed too.   And then there is   ``` @Test     public void testHighlightingInvalidParameter() {         String content  "Test Word Content"           TextArea ta  new TextArea(""  content)           //should not matter at all         ta.highlightPattern(null)      } ```  which also sets the highlightPattern to null...thus I would expect (i.e. add test for it) that an NPE is thrown.  Otherwise :+1:   || I think that is the method I changed. Is there another method (I searched  but rather quickly)?  Yes  the layout package could benefit from more testing...  || No you are right...you exactly changed the method I mentioned. My bad :smile:. What I meant in the second part is that setting the higlightPattern to null does not throw an exception (since the test pass) although I would have expected one. So probably a Objects.requireNonNull is missing somewhere.  || But there is a corresponding method in LayoutEntry  which I think should be fixed as well.  Ah  OK! Ill have a look (or maybe the highlighter is never invoked in the test case?).  || I fixed the other place as well  but happened to change to more use of switching... In the long term it would make sense to change the integers now used to an enumeration.  I also realized that all `\n` are stripped from the fields when doing a layout  so even though e.g. HTMLChars will convert the line breaks to something clever  they are not there anymore once the formatter is invoked... Not sure where they go missing though...  || :+1:   || 
903,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Fixed #890 This should fix #890  - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? Not relevant - [x] Tests green? :+1:   || I think the method   ``` public String doLayout(BibEntry bibtex  BibDatabase database) {         return doLayout(bibtex  database  null)      } ```  in layout.java should be changed too.   And then there is   ``` @Test     public void testHighlightingInvalidParameter() {         String content  "Test Word Content"           TextArea ta  new TextArea(""  content)           //should not matter at all         ta.highlightPattern(null)      } ```  which also sets the highlightPattern to null...thus I would expect (i.e. add test for it) that an NPE is thrown.  Otherwise :+1:   || I think that is the method I changed. Is there another method (I searched  but rather quickly)?  Yes  the layout package could benefit from more testing...  || No you are right...you exactly changed the method I mentioned. My bad :smile:. What I meant in the second part is that setting the higlightPattern to null does not throw an exception (since the test pass) although I would have expected one. So probably a Objects.requireNonNull is missing somewhere.  || But there is a corresponding method in LayoutEntry  which I think should be fixed as well.  Ah  OK! Ill have a look (or maybe the highlighter is never invoked in the test case?).  || I fixed the other place as well  but happened to change to more use of switching... In the long term it would make sense to change the integers now used to an enumeration.  I also realized that all `\n` are stripped from the fields when doing a layout  so even though e.g. HTMLChars will convert the line breaks to something clever  they are not there anymore once the formatter is invoked... Not sure where they go missing though...  || :+1:   || 
915,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Add button in preference dialog to reset preferences Implements #455 and/or https://github.com/koppor/jabref/issues/47. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - only UI change - [x] Tests green? Nice. Looks good. But I would add a note that resetting the perferences requires a restart (see change the language or the remote settings).   || Good point. An info message is now shown.  || Looks good to me.   ||
915,1,0,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,Add button in preference dialog to reset preferences Implements #455 and/or https://github.com/koppor/jabref/issues/47. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - only UI change - [x] Tests green? Nice. Looks good. But I would add a note that resetting the perferences requires a restart (see change the language or the remote settings).   || Good point. An info message is now shown.  || Looks good to me.   ||
915,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Add button in preference dialog to reset preferences Implements #455 and/or https://github.com/koppor/jabref/issues/47. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - only UI change - [x] Tests green? Nice. Looks good. But I would add a note that resetting the perferences requires a restart (see change the language or the remote settings).   || Good point. An info message is now shown.  || Looks good to me.   ||
925,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,Add tests for metadata parsing This solves #707 and prepares the way to refactor the metadata class.  I added a few methods to the MetaData class to make testing more convenient. Many calls to getData() in fact can be replaced by these new methods. I think this is something for a new PR.  One question: to write the tests in a nice way I had to overwrite a few equals methods. In particular for the LowerCaseChanger. Should I also override equals for all other formatters? :+1:   || When is the equals required (except for simplifying this test)? Seems like one can add them later if required.  The PR looks good!  || No as far as I can see equals is never used for the formatters (and also no getKey().equals which could be replaced with an internal equals).  ||
925,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,1,Add tests for metadata parsing This solves #707 and prepares the way to refactor the metadata class.  I added a few methods to the MetaData class to make testing more convenient. Many calls to getData() in fact can be replaced by these new methods. I think this is something for a new PR.  One question: to write the tests in a nice way I had to overwrite a few equals methods. In particular for the LowerCaseChanger. Should I also override equals for all other formatters? :+1:   || When is the equals required (except for simplifying this test)? Seems like one can add them later if required.  The PR looks good!  || No as far as I can see equals is never used for the formatters (and also no getKey().equals which could be replaced with an internal equals).  ||
925,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Add tests for metadata parsing This solves #707 and prepares the way to refactor the metadata class.  I added a few methods to the MetaData class to make testing more convenient. Many calls to getData() in fact can be replaced by these new methods. I think this is something for a new PR.  One question: to write the tests in a nice way I had to overwrite a few equals methods. In particular for the LowerCaseChanger. Should I also override equals for all other formatters? :+1:   || When is the equals required (except for simplifying this test)? Seems like one can add them later if required.  The PR looks good!  || No as far as I can see equals is never used for the formatters (and also no getKey().equals which could be replaced with an internal equals).  ||
926,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Key bindings are now working in preview panel Fixes #649. Until now the toolbar within the Preview panel held the key bindings which werent active when the toolbar wasnt created. Now the Preview panel itself carries the key bindings. - [x] Change in CHANGELOG.md described? - [X] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? - [x] Tests green? Looks good to me :+1:   || Looks good! :+1:  || - Please extract the setting of the key bindings as a method. Otherwise  looks good to me too.  - For each action  one has to register a string two times  one at the input map and one in the action map  e.g.  "print". Can you extract variables so that this is made more clear? A local variable for each of the blocks should suffice  making it a constant moves it away from the code in question  hence  just create a local one.   || Extracted the key bindings and the actionMapKeys.  || :+1:   || 
926,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,Key bindings are now working in preview panel Fixes #649. Until now the toolbar within the Preview panel held the key bindings which werent active when the toolbar wasnt created. Now the Preview panel itself carries the key bindings. - [x] Change in CHANGELOG.md described? - [X] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? - [x] Tests green? Looks good to me :+1:   || Looks good! :+1:  || - Please extract the setting of the key bindings as a method. Otherwise  looks good to me too.  - For each action  one has to register a string two times  one at the input map and one in the action map  e.g.  "print". Can you extract variables so that this is made more clear? A local variable for each of the blocks should suffice  making it a constant moves it away from the code in question  hence  just create a local one.   || Extracted the key bindings and the actionMapKeys.  || :+1:   || 
926,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Key bindings are now working in preview panel Fixes #649. Until now the toolbar within the Preview panel held the key bindings which werent active when the toolbar wasnt created. Now the Preview panel itself carries the key bindings. - [x] Change in CHANGELOG.md described? - [X] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? - [x] Tests green? Looks good to me :+1:   || Looks good! :+1:  || - Please extract the setting of the key bindings as a method. Otherwise  looks good to me too.  - For each action  one has to register a string two times  one at the input map and one in the action map  e.g.  "print". Can you extract variables so that this is made more clear? A local variable for each of the blocks should suffice  making it a constant moves it away from the code in question  hence  just create a local one.   || Extracted the key bindings and the actionMapKeys.  || :+1:   || 
929,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,"Find unlinked files" freezes when using for PDF 1. Fixed #410 Reason was an IllegalArgumentException thrown by DOI class when pasting the contents of the whole first PDF page to the constructor. 2. The DOI class can only handle real DOIs and does not extract Strings that might look like a DOI from the text  therefore the whole DOI scraper was removed in https://github.com/JabRef/jabref/commit/acdcd829c304e03b9bfd92d6eba383b5a1d52108 3. The whole PDFImporter class is screwed and a monkeypatch. It should be reimplemented from scratch. 1./2.: The usage of DOIs was requested by a user: If the PDF contains a DOI string  the data of the DOI should be used and not the guessed content. - With old JabRef code  that code worked. Do you have a proposal to bring that functionality back?  3.: The parsing results are better for Springer and IEEE papers than with other existing open source scrapers and Mr. DLib. That fact has to be regarded  too.  || The DOI finding should work again now  but the DOI class has quite some redundant code now  as I need to exclude spaces from the findInText regex. I do not know if there are any DOIs out there that include spaces but theoretically it seems to be allowed...  || For me `src/test/resources/encrypted.pdf`is not raising any exception. Also  `importEntries` is not throwing any `IOException`  which is propagated to other methods later on. The functionality is really flawed....  || Spaces should be encoded as %20 in a DOI  so I do not think it will be a problem  see https://www.doi.org/doi_handbook/2_Numbering.html#2.5.2.4  I seem to recall that we changed the encoding of DOIs at some stage  maybe this should be revisited?  || So you mean we can replace the EXACT_DOI pattern with the DOI_PATTERN?!  ||
929,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,"Find unlinked files" freezes when using for PDF 1. Fixed #410 Reason was an IllegalArgumentException thrown by DOI class when pasting the contents of the whole first PDF page to the constructor. 2. The DOI class can only handle real DOIs and does not extract Strings that might look like a DOI from the text  therefore the whole DOI scraper was removed in https://github.com/JabRef/jabref/commit/acdcd829c304e03b9bfd92d6eba383b5a1d52108 3. The whole PDFImporter class is screwed and a monkeypatch. It should be reimplemented from scratch. 1./2.: The usage of DOIs was requested by a user: If the PDF contains a DOI string  the data of the DOI should be used and not the guessed content. - With old JabRef code  that code worked. Do you have a proposal to bring that functionality back?  3.: The parsing results are better for Springer and IEEE papers than with other existing open source scrapers and Mr. DLib. That fact has to be regarded  too.  || The DOI finding should work again now  but the DOI class has quite some redundant code now  as I need to exclude spaces from the findInText regex. I do not know if there are any DOIs out there that include spaces but theoretically it seems to be allowed...  || For me `src/test/resources/encrypted.pdf`is not raising any exception. Also  `importEntries` is not throwing any `IOException`  which is propagated to other methods later on. The functionality is really flawed....  || Spaces should be encoded as %20 in a DOI  so I do not think it will be a problem  see https://www.doi.org/doi_handbook/2_Numbering.html#2.5.2.4  I seem to recall that we changed the encoding of DOIs at some stage  maybe this should be revisited?  || So you mean we can replace the EXACT_DOI pattern with the DOI_PATTERN?!  ||
929,1,0,0,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,"Find unlinked files" freezes when using for PDF 1. Fixed #410 Reason was an IllegalArgumentException thrown by DOI class when pasting the contents of the whole first PDF page to the constructor. 2. The DOI class can only handle real DOIs and does not extract Strings that might look like a DOI from the text  therefore the whole DOI scraper was removed in https://github.com/JabRef/jabref/commit/acdcd829c304e03b9bfd92d6eba383b5a1d52108 3. The whole PDFImporter class is screwed and a monkeypatch. It should be reimplemented from scratch. 1./2.: The usage of DOIs was requested by a user: If the PDF contains a DOI string  the data of the DOI should be used and not the guessed content. - With old JabRef code  that code worked. Do you have a proposal to bring that functionality back?  3.: The parsing results are better for Springer and IEEE papers than with other existing open source scrapers and Mr. DLib. That fact has to be regarded  too.  || The DOI finding should work again now  but the DOI class has quite some redundant code now  as I need to exclude spaces from the findInText regex. I do not know if there are any DOIs out there that include spaces but theoretically it seems to be allowed...  || For me `src/test/resources/encrypted.pdf`is not raising any exception. Also  `importEntries` is not throwing any `IOException`  which is propagated to other methods later on. The functionality is really flawed....  || Spaces should be encoded as %20 in a DOI  so I do not think it will be a problem  see https://www.doi.org/doi_handbook/2_Numbering.html#2.5.2.4  I seem to recall that we changed the encoding of DOIs at some stage  maybe this should be revisited?  || So you mean we can replace the EXACT_DOI pattern with the DOI_PATTERN?!  ||
947,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,[WIP] Fix for undoing deletion/cutting multiple entries Workaround for #796. When an undo with multiple entries is undone  each entry is undone one at a time. The Problem herein lies  that when the first entry is undone  the insertion in the database triggers the creation and insertion of an NamedCompund into the UndoManager which kills the main Undo (the one with the multiple entries)  which result in just one entry being undone.  With this Workaround each entry has its own NamedCompund which solves the Problem but the user has to call the UndoAction several times (Ctrl-Z for each entry). - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? - [x] Tests green? Im unsure whether this is the correct behavior: If I delete multiple entries at once  all of them should be restored. I thought that the undo/redo concept of JabRef is that always undo and redo actions are packaged as a whole.  Is it a valid workaround to globally flag whether an redo/undo action is in progress and thus no new undo thing is put on the undo stack.  || I would also prefer that the undo stuff is fixed so restoring several bibentries works.   || But good that you found out the reason for the failing multiple entries! :+1:  || OK  Ill look further into it and search for a better solution!  || @bartsch-dev can you point me to the code where the insertion adds a new change in the undomanager? As far as I see  the revert action just calls database.insert() which does not call the undo manager. Thanks.  || When an entry is about to being restored [`UndoableRemoveEntry#undo()`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/gui/undo/UndoableRemoveEntry.java#L62) is called. The entry is inserted back into the database which fires a [`DatabaseChangeEvent`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/model/database/BibDatabase.java#L185) and calls [`SpecialFieldDatabaseChangeListener#databaseChanged(DatabaseChangeEvent e)`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/SpecialFieldDatabaseChangeListener.java#L25) and adds another Edit into the `undoManager`. If we follow that trail we see that the `UndoManager` trims the Edits (line 502) which calls `die()` (line 244) and kills the `NamedCompound`which contains the other entries we havent undone yet.  || I wonder whether it is a solution to add a second paramter to `insertEntry` indicating whether the action should be a silent change or not. - Or add a second method `insertEntrySilently`.  || Thank you @bartsch-dev for you helpful explanation! I think the cleanest way is to remove the `SpecialFieldDatabaseChangeListener` and let the calling code handle the undo-management. I.e. if I call database.insert() then I also have to create the undo event there. Otherwise we have problems everywhere with handling multiple changes (undo an import?). I think this strategy is also applied everywhere else  at least the group interface handles the undo thing itself.  But maybe you come up with another solution.  || When removing the `SpecialFieldDatabaseChangeListener`  it should be taken care that the special fields still work.   Currently  the fields are stored in the keyword field and are put into normal fields to enable rendering in the table. If the `SpecialFieldDatabaseChangeListener` is removed  this rendering IMHO wont take place any more.  When we rewrite the special fields (https://github.com/koppor/jabref/issues/84)  this might change.  || Another working solution I found was to create a new `UndoableEdit` which manages multiple Entries with a List. When undoing the removal it uses the new `addEntries()`-Method inside `BibDatabase` which adds all the Entries and after that finally fires the DatabaseChanges.  || @koppor @tobiasdiez WDYT?  || As I explored deeper into the code I noticed that the Undo which the `SpecialFieldDatabaseChangeListener` adds does not do anything. Basically its an empty `NamedCompund` (which gets discarded by the `UndoManager`).  Can that confirm anyone?  || Currently without code here. But double check that the stars in the column rating are displayed in all undo cases. Deleting/adding an entry is OK  but what about undo/redo of adding keyword "rank1" in the keyword field? - My feeling is that undo/redo if that wont work when the updatelistener is changed.  Also if an entry with keyword "rank1" is added -> is the column "ranking" updated to show one star?  || The [`SpecialFieldDatabaseChangeListener`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/SpecialFieldDatabaseChangeListener.java#L18) only reacts on the insertion of entries.  On another note  when changing the rank of an entry you have to click into the Entry List to repaint it. But I think there was opened an Issue on that a short time ago.  || I deleted the `SpecialFieldDatabaseChangeListener` and adjusted l10n. As far as I can tell everything works just fine (tested it with deleting/undoing entries with rank/marked/color marked  @tschechlovdev maybe you can do some additional testing?). I removed the ID generation in `UndoableRemoveEntry` since its not necessary.  I have NO idea why circleCI fails and how to fix it.  || ``` :compileJava/home/travis/build/JabRef/jabref/src/main/java/net/sf/jabref/gui/BasePanel.java:1324: error: cannot find symbol          database.addDatabaseChangeListener(SpecialFieldDatabaseChangeListener.getInstance())                                              ^    symbol:   variable SpecialFieldDatabaseChangeListener    location: class BasePanel ```  Should be quite obvious what is wrong and not be that hard to fix?!  || Woops  I slipped there. I extracted some code for another Bugfix which will get its own PR and extracted too much. Now all checks pass but before that the build on circleCI exceeded the memory of 4G (no typing error  but I think circleCI meant 4GB) and failed.  || LGTM :+1: Its nice that a bug can be fixed by removing code.  || Special fields functionality is disturbed by this patch.  ## Steps to reproduce 1. open [special-fields.bib](https://github.com/JabRef/jabref/blob/master/src/test/resources/testbib/special-fields.bib) 2. double click on second entry (key: entry-with-rank2) 3. Go to "BibTeX source" 4. Copy the complete string into notepad++ 5. Close the entry editor 6. Change `rank2` to `rank4` in both the key and the keywords field 7. Mark everything 8. Copy into the clipboard 9. Focus JabRef. Ensure that the entry editor is really closed 10. Click into the white area 11. paste the entry (using ctrl+v) 12. expected: four stars shown at ranking column  as is: no stars shown at ranking column  ![grabbed_20160412-083537](https://cloud.githubusercontent.com/assets/1366654/14451731/8d057f68-0089-11e6-898b-60117395ad0c.png)  ## Intermediate solution 1. Open the editor 2. Go to the "General" tab 3. Change `rank4` to `rank3` 4. Save 5. Change `rank3` to `rank4`  ## General remarks  I know that the keyword-based synchronization is a code which is not that straight forward as other code in JabRef. I personally like the functionality to have columns shown which are based on keywords I made. The reason might be that I sometimes edit my bibtex files manually  which also [nearly half of the survey participants do](http://www.jabref.org/surveys/2015/analysis).  || Thanks for that detailed explanation.  IMO the addition of the Undo-Object in [`SpecialFieldDatabaseChangeListener`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/SpecialFieldDatabaseChangeListener.java#L25) is not useful. Mostly because its added before the more important Undo-Object  the undo of the entry paste  and when you undo the paste this undo-Object is irrelevant.   || @bartsch-dev Could you add an integrationTest  meaning a test for the UI demonstrating the undo/redo behavior? Then  we do not have to rely on the [above manual steps](https://github.com/JabRef/jabref/pull/947#issuecomment-208730863) for testing. @bruehldev and @Braunch should be the experts in UI testing.  || Ill do it it the next sprint  which starts today.  || ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/947?srcpr) is **27.55%**  > Merging [#947](https://codecov.io/gh/JabRef/jabref/pull/947?srcpr) into [master](https://codecov.io/gh/JabRef/jabref/branch/master?srcpr) will decrease coverage by **-0.91%**  ``` diff @@             master       #947   diff @@    Files           700        695     -5      Lines         46231      46292    +61      Methods           0          0             Messages          0          0             Branches       7631       7649    +18     - Hits          13158      12753   -405    - Misses        31949      32439   +490    + Partials       1124       1100    -24    ``` 1. 5 files (not in diff) in `.../net/sf/jabref/event` were deleted. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6576656E74) 2. 1 files (not in diff) in `...n/java/net/sf/jabref` were deleted. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A6162726566) 3. 2 files (not in diff) in `...va/net/sf/jabref/sql` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F73716C)     - Misses `+1` 4. 2 files (not in diff) in `...jabref/specialfields` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F7370656369616C6669656C6473) 5. 2 files (not in diff) in `...f/jabref/model/entry` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6D6F64656C2F656E747279)     - Misses `+9`     - Partials `+1`     - Hits `+8` 6. 2 files (not in diff) in `...abref/model/database` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6D6F64656C2F6461746162617365)     - Misses `+3`     - Partials `+1`     - Hits `-1` 7. 2 files (not in diff) in `...sf/jabref/logic/util` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F7574696C)     - Misses `+16`     - Partials `-4`     - Hits `-12` 8. 2 files (not in diff) in `...f/jabref/logic/msbib` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F6D73626962)     - Misses `+345`     - Partials `-14`     - Hits `-302` 9. 4 files (not in diff) in `...jabref/logic/cleanup` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F636C65616E7570)     - Misses `-1`     - Hits `-4` 10. 6 files (not in diff) in `.../net/sf/jabref/logic` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F676963)      - Misses `+24`      - Hits `-42`  > Powered by [Codecov](https://codecov.io?srcpr). Last updated by [50fe6d7...d2d8096](https://codecov.io/gh/JabRef/jabref/compare/50fe6d7499239fa2f04354697411495b79691e74...d2d809637d7f03dfb1d634f6cfdb706a653afd01)  || LGTM  Please rebase to allow it to be marged  || Please resolve the conflicts.  || I rebased and resolved the conflicts.  || Tests fail in master. Can you have a look? Otherwise  I will revert this merge.   || Hm  thats very strange (the tests in this PR passed). I will look into it.  || After a quick study I noticed that assertJ is simply to fast for JabRef  meaning that the entry table after opening the database is simply not loaded and thus cannot be found. By increasing the delay between events from assertJ (`robot().settings().delayBetweenEvents(500) `) it can be averted but I do not like it that way as it depends on the power of the executing machine. I will look further into it tomorrow.  You can revert the merge if you like  that way we can have a clean commit without a mess in between.  || The test seems to fail randomly. :(  Making it stable enough is fine for me.   || @bartsch-dev  have you tried using robot().waitForIdle() ?  This should wait until the Ui loaded the table without defining a timeout that slows the tests down on faster machines.  || That does not work. A simple solution was to open an empty table at the very beginning  that way the loaded database opens without delay.  Ill open a new PR in a second.  || 
947,1,0,0,1,0,1,1,0,0,1,1,0,0,0,1,1,0,0,0,[WIP] Fix for undoing deletion/cutting multiple entries Workaround for #796. When an undo with multiple entries is undone  each entry is undone one at a time. The Problem herein lies  that when the first entry is undone  the insertion in the database triggers the creation and insertion of an NamedCompund into the UndoManager which kills the main Undo (the one with the multiple entries)  which result in just one entry being undone.  With this Workaround each entry has its own NamedCompund which solves the Problem but the user has to call the UndoAction several times (Ctrl-Z for each entry). - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? - [x] Tests green? Im unsure whether this is the correct behavior: If I delete multiple entries at once  all of them should be restored. I thought that the undo/redo concept of JabRef is that always undo and redo actions are packaged as a whole.  Is it a valid workaround to globally flag whether an redo/undo action is in progress and thus no new undo thing is put on the undo stack.  || I would also prefer that the undo stuff is fixed so restoring several bibentries works.   || But good that you found out the reason for the failing multiple entries! :+1:  || OK  Ill look further into it and search for a better solution!  || @bartsch-dev can you point me to the code where the insertion adds a new change in the undomanager? As far as I see  the revert action just calls database.insert() which does not call the undo manager. Thanks.  || When an entry is about to being restored [`UndoableRemoveEntry#undo()`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/gui/undo/UndoableRemoveEntry.java#L62) is called. The entry is inserted back into the database which fires a [`DatabaseChangeEvent`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/model/database/BibDatabase.java#L185) and calls [`SpecialFieldDatabaseChangeListener#databaseChanged(DatabaseChangeEvent e)`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/SpecialFieldDatabaseChangeListener.java#L25) and adds another Edit into the `undoManager`. If we follow that trail we see that the `UndoManager` trims the Edits (line 502) which calls `die()` (line 244) and kills the `NamedCompound`which contains the other entries we havent undone yet.  || I wonder whether it is a solution to add a second paramter to `insertEntry` indicating whether the action should be a silent change or not. - Or add a second method `insertEntrySilently`.  || Thank you @bartsch-dev for you helpful explanation! I think the cleanest way is to remove the `SpecialFieldDatabaseChangeListener` and let the calling code handle the undo-management. I.e. if I call database.insert() then I also have to create the undo event there. Otherwise we have problems everywhere with handling multiple changes (undo an import?). I think this strategy is also applied everywhere else  at least the group interface handles the undo thing itself.  But maybe you come up with another solution.  || When removing the `SpecialFieldDatabaseChangeListener`  it should be taken care that the special fields still work.   Currently  the fields are stored in the keyword field and are put into normal fields to enable rendering in the table. If the `SpecialFieldDatabaseChangeListener` is removed  this rendering IMHO wont take place any more.  When we rewrite the special fields (https://github.com/koppor/jabref/issues/84)  this might change.  || Another working solution I found was to create a new `UndoableEdit` which manages multiple Entries with a List. When undoing the removal it uses the new `addEntries()`-Method inside `BibDatabase` which adds all the Entries and after that finally fires the DatabaseChanges.  || @koppor @tobiasdiez WDYT?  || As I explored deeper into the code I noticed that the Undo which the `SpecialFieldDatabaseChangeListener` adds does not do anything. Basically its an empty `NamedCompund` (which gets discarded by the `UndoManager`).  Can that confirm anyone?  || Currently without code here. But double check that the stars in the column rating are displayed in all undo cases. Deleting/adding an entry is OK  but what about undo/redo of adding keyword "rank1" in the keyword field? - My feeling is that undo/redo if that wont work when the updatelistener is changed.  Also if an entry with keyword "rank1" is added -> is the column "ranking" updated to show one star?  || The [`SpecialFieldDatabaseChangeListener`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/SpecialFieldDatabaseChangeListener.java#L18) only reacts on the insertion of entries.  On another note  when changing the rank of an entry you have to click into the Entry List to repaint it. But I think there was opened an Issue on that a short time ago.  || I deleted the `SpecialFieldDatabaseChangeListener` and adjusted l10n. As far as I can tell everything works just fine (tested it with deleting/undoing entries with rank/marked/color marked  @tschechlovdev maybe you can do some additional testing?). I removed the ID generation in `UndoableRemoveEntry` since its not necessary.  I have NO idea why circleCI fails and how to fix it.  || ``` :compileJava/home/travis/build/JabRef/jabref/src/main/java/net/sf/jabref/gui/BasePanel.java:1324: error: cannot find symbol          database.addDatabaseChangeListener(SpecialFieldDatabaseChangeListener.getInstance())                                              ^    symbol:   variable SpecialFieldDatabaseChangeListener    location: class BasePanel ```  Should be quite obvious what is wrong and not be that hard to fix?!  || Woops  I slipped there. I extracted some code for another Bugfix which will get its own PR and extracted too much. Now all checks pass but before that the build on circleCI exceeded the memory of 4G (no typing error  but I think circleCI meant 4GB) and failed.  || LGTM :+1: Its nice that a bug can be fixed by removing code.  || Special fields functionality is disturbed by this patch.  ## Steps to reproduce 1. open [special-fields.bib](https://github.com/JabRef/jabref/blob/master/src/test/resources/testbib/special-fields.bib) 2. double click on second entry (key: entry-with-rank2) 3. Go to "BibTeX source" 4. Copy the complete string into notepad++ 5. Close the entry editor 6. Change `rank2` to `rank4` in both the key and the keywords field 7. Mark everything 8. Copy into the clipboard 9. Focus JabRef. Ensure that the entry editor is really closed 10. Click into the white area 11. paste the entry (using ctrl+v) 12. expected: four stars shown at ranking column  as is: no stars shown at ranking column  ![grabbed_20160412-083537](https://cloud.githubusercontent.com/assets/1366654/14451731/8d057f68-0089-11e6-898b-60117395ad0c.png)  ## Intermediate solution 1. Open the editor 2. Go to the "General" tab 3. Change `rank4` to `rank3` 4. Save 5. Change `rank3` to `rank4`  ## General remarks  I know that the keyword-based synchronization is a code which is not that straight forward as other code in JabRef. I personally like the functionality to have columns shown which are based on keywords I made. The reason might be that I sometimes edit my bibtex files manually  which also [nearly half of the survey participants do](http://www.jabref.org/surveys/2015/analysis).  || Thanks for that detailed explanation.  IMO the addition of the Undo-Object in [`SpecialFieldDatabaseChangeListener`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/SpecialFieldDatabaseChangeListener.java#L25) is not useful. Mostly because its added before the more important Undo-Object  the undo of the entry paste  and when you undo the paste this undo-Object is irrelevant.   || @bartsch-dev Could you add an integrationTest  meaning a test for the UI demonstrating the undo/redo behavior? Then  we do not have to rely on the [above manual steps](https://github.com/JabRef/jabref/pull/947#issuecomment-208730863) for testing. @bruehldev and @Braunch should be the experts in UI testing.  || Ill do it it the next sprint  which starts today.  || ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/947?srcpr) is **27.55%**  > Merging [#947](https://codecov.io/gh/JabRef/jabref/pull/947?srcpr) into [master](https://codecov.io/gh/JabRef/jabref/branch/master?srcpr) will decrease coverage by **-0.91%**  ``` diff @@             master       #947   diff @@    Files           700        695     -5      Lines         46231      46292    +61      Methods           0          0             Messages          0          0             Branches       7631       7649    +18     - Hits          13158      12753   -405    - Misses        31949      32439   +490    + Partials       1124       1100    -24    ``` 1. 5 files (not in diff) in `.../net/sf/jabref/event` were deleted. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6576656E74) 2. 1 files (not in diff) in `...n/java/net/sf/jabref` were deleted. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A6162726566) 3. 2 files (not in diff) in `...va/net/sf/jabref/sql` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F73716C)     - Misses `+1` 4. 2 files (not in diff) in `...jabref/specialfields` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F7370656369616C6669656C6473) 5. 2 files (not in diff) in `...f/jabref/model/entry` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6D6F64656C2F656E747279)     - Misses `+9`     - Partials `+1`     - Hits `+8` 6. 2 files (not in diff) in `...abref/model/database` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6D6F64656C2F6461746162617365)     - Misses `+3`     - Partials `+1`     - Hits `-1` 7. 2 files (not in diff) in `...sf/jabref/logic/util` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F7574696C)     - Misses `+16`     - Partials `-4`     - Hits `-12` 8. 2 files (not in diff) in `...f/jabref/logic/msbib` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F6D73626962)     - Misses `+345`     - Partials `-14`     - Hits `-302` 9. 4 files (not in diff) in `...jabref/logic/cleanup` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F636C65616E7570)     - Misses `-1`     - Hits `-4` 10. 6 files (not in diff) in `.../net/sf/jabref/logic` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F676963)      - Misses `+24`      - Hits `-42`  > Powered by [Codecov](https://codecov.io?srcpr). Last updated by [50fe6d7...d2d8096](https://codecov.io/gh/JabRef/jabref/compare/50fe6d7499239fa2f04354697411495b79691e74...d2d809637d7f03dfb1d634f6cfdb706a653afd01)  || LGTM  Please rebase to allow it to be marged  || Please resolve the conflicts.  || I rebased and resolved the conflicts.  || Tests fail in master. Can you have a look? Otherwise  I will revert this merge.   || Hm  thats very strange (the tests in this PR passed). I will look into it.  || After a quick study I noticed that assertJ is simply to fast for JabRef  meaning that the entry table after opening the database is simply not loaded and thus cannot be found. By increasing the delay between events from assertJ (`robot().settings().delayBetweenEvents(500) `) it can be averted but I do not like it that way as it depends on the power of the executing machine. I will look further into it tomorrow.  You can revert the merge if you like  that way we can have a clean commit without a mess in between.  || The test seems to fail randomly. :(  Making it stable enough is fine for me.   || @bartsch-dev  have you tried using robot().waitForIdle() ?  This should wait until the Ui loaded the table without defining a timeout that slows the tests down on faster machines.  || That does not work. A simple solution was to open an empty table at the very beginning  that way the loaded database opens without delay.  Ill open a new PR in a second.  || 
947,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,[WIP] Fix for undoing deletion/cutting multiple entries Workaround for #796. When an undo with multiple entries is undone  each entry is undone one at a time. The Problem herein lies  that when the first entry is undone  the insertion in the database triggers the creation and insertion of an NamedCompund into the UndoManager which kills the main Undo (the one with the multiple entries)  which result in just one entry being undone.  With this Workaround each entry has its own NamedCompund which solves the Problem but the user has to call the UndoAction several times (Ctrl-Z for each entry). - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [ ] Tests created for changes? - [x] Tests green? Im unsure whether this is the correct behavior: If I delete multiple entries at once  all of them should be restored. I thought that the undo/redo concept of JabRef is that always undo and redo actions are packaged as a whole.  Is it a valid workaround to globally flag whether an redo/undo action is in progress and thus no new undo thing is put on the undo stack.  || I would also prefer that the undo stuff is fixed so restoring several bibentries works.   || But good that you found out the reason for the failing multiple entries! :+1:  || OK  Ill look further into it and search for a better solution!  || @bartsch-dev can you point me to the code where the insertion adds a new change in the undomanager? As far as I see  the revert action just calls database.insert() which does not call the undo manager. Thanks.  || When an entry is about to being restored [`UndoableRemoveEntry#undo()`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/gui/undo/UndoableRemoveEntry.java#L62) is called. The entry is inserted back into the database which fires a [`DatabaseChangeEvent`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/model/database/BibDatabase.java#L185) and calls [`SpecialFieldDatabaseChangeListener#databaseChanged(DatabaseChangeEvent e)`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/SpecialFieldDatabaseChangeListener.java#L25) and adds another Edit into the `undoManager`. If we follow that trail we see that the `UndoManager` trims the Edits (line 502) which calls `die()` (line 244) and kills the `NamedCompound`which contains the other entries we havent undone yet.  || I wonder whether it is a solution to add a second paramter to `insertEntry` indicating whether the action should be a silent change or not. - Or add a second method `insertEntrySilently`.  || Thank you @bartsch-dev for you helpful explanation! I think the cleanest way is to remove the `SpecialFieldDatabaseChangeListener` and let the calling code handle the undo-management. I.e. if I call database.insert() then I also have to create the undo event there. Otherwise we have problems everywhere with handling multiple changes (undo an import?). I think this strategy is also applied everywhere else  at least the group interface handles the undo thing itself.  But maybe you come up with another solution.  || When removing the `SpecialFieldDatabaseChangeListener`  it should be taken care that the special fields still work.   Currently  the fields are stored in the keyword field and are put into normal fields to enable rendering in the table. If the `SpecialFieldDatabaseChangeListener` is removed  this rendering IMHO wont take place any more.  When we rewrite the special fields (https://github.com/koppor/jabref/issues/84)  this might change.  || Another working solution I found was to create a new `UndoableEdit` which manages multiple Entries with a List. When undoing the removal it uses the new `addEntries()`-Method inside `BibDatabase` which adds all the Entries and after that finally fires the DatabaseChanges.  || @koppor @tobiasdiez WDYT?  || As I explored deeper into the code I noticed that the Undo which the `SpecialFieldDatabaseChangeListener` adds does not do anything. Basically its an empty `NamedCompund` (which gets discarded by the `UndoManager`).  Can that confirm anyone?  || Currently without code here. But double check that the stars in the column rating are displayed in all undo cases. Deleting/adding an entry is OK  but what about undo/redo of adding keyword "rank1" in the keyword field? - My feeling is that undo/redo if that wont work when the updatelistener is changed.  Also if an entry with keyword "rank1" is added -> is the column "ranking" updated to show one star?  || The [`SpecialFieldDatabaseChangeListener`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/SpecialFieldDatabaseChangeListener.java#L18) only reacts on the insertion of entries.  On another note  when changing the rank of an entry you have to click into the Entry List to repaint it. But I think there was opened an Issue on that a short time ago.  || I deleted the `SpecialFieldDatabaseChangeListener` and adjusted l10n. As far as I can tell everything works just fine (tested it with deleting/undoing entries with rank/marked/color marked  @tschechlovdev maybe you can do some additional testing?). I removed the ID generation in `UndoableRemoveEntry` since its not necessary.  I have NO idea why circleCI fails and how to fix it.  || ``` :compileJava/home/travis/build/JabRef/jabref/src/main/java/net/sf/jabref/gui/BasePanel.java:1324: error: cannot find symbol          database.addDatabaseChangeListener(SpecialFieldDatabaseChangeListener.getInstance())                                              ^    symbol:   variable SpecialFieldDatabaseChangeListener    location: class BasePanel ```  Should be quite obvious what is wrong and not be that hard to fix?!  || Woops  I slipped there. I extracted some code for another Bugfix which will get its own PR and extracted too much. Now all checks pass but before that the build on circleCI exceeded the memory of 4G (no typing error  but I think circleCI meant 4GB) and failed.  || LGTM :+1: Its nice that a bug can be fixed by removing code.  || Special fields functionality is disturbed by this patch.  ## Steps to reproduce 1. open [special-fields.bib](https://github.com/JabRef/jabref/blob/master/src/test/resources/testbib/special-fields.bib) 2. double click on second entry (key: entry-with-rank2) 3. Go to "BibTeX source" 4. Copy the complete string into notepad++ 5. Close the entry editor 6. Change `rank2` to `rank4` in both the key and the keywords field 7. Mark everything 8. Copy into the clipboard 9. Focus JabRef. Ensure that the entry editor is really closed 10. Click into the white area 11. paste the entry (using ctrl+v) 12. expected: four stars shown at ranking column  as is: no stars shown at ranking column  ![grabbed_20160412-083537](https://cloud.githubusercontent.com/assets/1366654/14451731/8d057f68-0089-11e6-898b-60117395ad0c.png)  ## Intermediate solution 1. Open the editor 2. Go to the "General" tab 3. Change `rank4` to `rank3` 4. Save 5. Change `rank3` to `rank4`  ## General remarks  I know that the keyword-based synchronization is a code which is not that straight forward as other code in JabRef. I personally like the functionality to have columns shown which are based on keywords I made. The reason might be that I sometimes edit my bibtex files manually  which also [nearly half of the survey participants do](http://www.jabref.org/surveys/2015/analysis).  || Thanks for that detailed explanation.  IMO the addition of the Undo-Object in [`SpecialFieldDatabaseChangeListener`](https://github.com/JabRef/jabref/blob/master/src/main/java/net/sf/jabref/specialfields/SpecialFieldDatabaseChangeListener.java#L25) is not useful. Mostly because its added before the more important Undo-Object  the undo of the entry paste  and when you undo the paste this undo-Object is irrelevant.   || @bartsch-dev Could you add an integrationTest  meaning a test for the UI demonstrating the undo/redo behavior? Then  we do not have to rely on the [above manual steps](https://github.com/JabRef/jabref/pull/947#issuecomment-208730863) for testing. @bruehldev and @Braunch should be the experts in UI testing.  || Ill do it it the next sprint  which starts today.  || ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/947?srcpr) is **27.55%**  > Merging [#947](https://codecov.io/gh/JabRef/jabref/pull/947?srcpr) into [master](https://codecov.io/gh/JabRef/jabref/branch/master?srcpr) will decrease coverage by **-0.91%**  ``` diff @@             master       #947   diff @@    Files           700        695     -5      Lines         46231      46292    +61      Methods           0          0             Messages          0          0             Branches       7631       7649    +18     - Hits          13158      12753   -405    - Misses        31949      32439   +490    + Partials       1124       1100    -24    ``` 1. 5 files (not in diff) in `.../net/sf/jabref/event` were deleted. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6576656E74) 2. 1 files (not in diff) in `...n/java/net/sf/jabref` were deleted. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A6162726566) 3. 2 files (not in diff) in `...va/net/sf/jabref/sql` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F73716C)     - Misses `+1` 4. 2 files (not in diff) in `...jabref/specialfields` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F7370656369616C6669656C6473) 5. 2 files (not in diff) in `...f/jabref/model/entry` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6D6F64656C2F656E747279)     - Misses `+9`     - Partials `+1`     - Hits `+8` 6. 2 files (not in diff) in `...abref/model/database` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6D6F64656C2F6461746162617365)     - Misses `+3`     - Partials `+1`     - Hits `-1` 7. 2 files (not in diff) in `...sf/jabref/logic/util` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F7574696C)     - Misses `+16`     - Partials `-4`     - Hits `-12` 8. 2 files (not in diff) in `...f/jabref/logic/msbib` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F6D73626962)     - Misses `+345`     - Partials `-14`     - Hits `-302` 9. 4 files (not in diff) in `...jabref/logic/cleanup` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F636C65616E7570)     - Misses `-1`     - Hits `-4` 10. 6 files (not in diff) in `.../net/sf/jabref/logic` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/d2d809637d7f03dfb1d634f6cfdb706a653afd01/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F676963)      - Misses `+24`      - Hits `-42`  > Powered by [Codecov](https://codecov.io?srcpr). Last updated by [50fe6d7...d2d8096](https://codecov.io/gh/JabRef/jabref/compare/50fe6d7499239fa2f04354697411495b79691e74...d2d809637d7f03dfb1d634f6cfdb706a653afd01)  || LGTM  Please rebase to allow it to be marged  || Please resolve the conflicts.  || I rebased and resolved the conflicts.  || Tests fail in master. Can you have a look? Otherwise  I will revert this merge.   || Hm  thats very strange (the tests in this PR passed). I will look into it.  || After a quick study I noticed that assertJ is simply to fast for JabRef  meaning that the entry table after opening the database is simply not loaded and thus cannot be found. By increasing the delay between events from assertJ (`robot().settings().delayBetweenEvents(500) `) it can be averted but I do not like it that way as it depends on the power of the executing machine. I will look further into it tomorrow.  You can revert the merge if you like  that way we can have a clean commit without a mess in between.  || The test seems to fail randomly. :(  Making it stable enough is fine for me.   || @bartsch-dev  have you tried using robot().waitForIdle() ?  This should wait until the Ui loaded the table without defining a timeout that slows the tests down on faster machines.  || That does not work. A simple solution was to open an empty table at the very beginning  that way the loaded database opens without delay.  Ill open a new PR in a second.  || 
974,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,Always trim fields on save and remove TrimFormatter The consensus in #920 was that fields should always be written without leading or trailing whitespace. This is done in this PR and the TrimFormatter is removed. (by the way  empty fields are never written as one of the added tests shows)  - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? LGTM  ||
974,1,0,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0,1,0,Always trim fields on save and remove TrimFormatter The consensus in #920 was that fields should always be written without leading or trailing whitespace. This is done in this PR and the TrimFormatter is removed. (by the way  empty fields are never written as one of the added tests shows)  - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? LGTM  ||
974,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Always trim fields on save and remove TrimFormatter The consensus in #920 was that fields should always be written without leading or trailing whitespace. This is done in this PR and the TrimFormatter is removed. (by the way  empty fields are never written as one of the added tests shows)  - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? LGTM  ||
979,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Refactored Singlebibtexfield Based on the initial ideas in #978 the class SingleBibtexField is extracted and two EnumSets are used for implementing the existing functionality. Very good points! Too much copy-paste (as usual). Will sort it out tomorrow.  || Looks good. Other improvements can be made in separate PRs.   ||
979,1,0,0,0,1,1,1,0,0,0,1,1,0,0,1,1,0,1,0,Refactored Singlebibtexfield Based on the initial ideas in #978 the class SingleBibtexField is extracted and two EnumSets are used for implementing the existing functionality. Very good points! Too much copy-paste (as usual). Will sort it out tomorrow.  || Looks good. Other improvements can be made in separate PRs.   ||
979,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Refactored Singlebibtexfield Based on the initial ideas in #978 the class SingleBibtexField is extracted and two EnumSets are used for implementing the existing functionality. Very good points! Too much copy-paste (as usual). Will sort it out tomorrow.  || Looks good. Other improvements can be made in separate PRs.   ||
988,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,When clicking on a tab  the first field now has the focus - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green?  This is referes to #623  I just had to add the activateVisible() Method to the ChangeListener to ensure the focus is set. What happens if I am scrolling through the list of entries in the table via the keys? Does the focus can jump away to the field editor if it is open? From what I recall  we had the issue I mentioned before and had to remove the functionality to automatically focus the first field. Please test this exhaustively with different entry editors for different entry types open and then scrolling via keys.  || I am going to figure that out after our exam this week. So your comment is recognized :)  || I had a chat with @koppor  today. @bruehldev  and I will write an automated test for this in our upcoming sprint (starting on monday 25th april). When this is done we should have verified if the focus is lost on scrolling or not.  || What is the current status here?  || I have run the Integration tests on it and tried it manually. The entry tables focus is not lost when going through the entries. Only when opening the entry editor as intended.  || I wonder why the travis jobs are not executed? Because you violate the correct imports order  and this cannot be merged without the build failing at the moment.  || I will fix the order soon. Probably on Friday. Maybe pushing on the branch will then trigger the jobs again.  || LGTM :+1:  just fix the import order (and improve the changelog)  then this can be merged in from my point of view  || Can this be merged?  || why did the gradlew scripts change?  || otherwise LGTM  || Gradle scripts are back to normal.  || OK :+1:   ||
988,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,When clicking on a tab  the first field now has the focus - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green?  This is referes to #623  I just had to add the activateVisible() Method to the ChangeListener to ensure the focus is set. What happens if I am scrolling through the list of entries in the table via the keys? Does the focus can jump away to the field editor if it is open? From what I recall  we had the issue I mentioned before and had to remove the functionality to automatically focus the first field. Please test this exhaustively with different entry editors for different entry types open and then scrolling via keys.  || I am going to figure that out after our exam this week. So your comment is recognized :)  || I had a chat with @koppor  today. @bruehldev  and I will write an automated test for this in our upcoming sprint (starting on monday 25th april). When this is done we should have verified if the focus is lost on scrolling or not.  || What is the current status here?  || I have run the Integration tests on it and tried it manually. The entry tables focus is not lost when going through the entries. Only when opening the entry editor as intended.  || I wonder why the travis jobs are not executed? Because you violate the correct imports order  and this cannot be merged without the build failing at the moment.  || I will fix the order soon. Probably on Friday. Maybe pushing on the branch will then trigger the jobs again.  || LGTM :+1:  just fix the import order (and improve the changelog)  then this can be merged in from my point of view  || Can this be merged?  || why did the gradlew scripts change?  || otherwise LGTM  || Gradle scripts are back to normal.  || OK :+1:   ||
988,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,When clicking on a tab  the first field now has the focus - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green?  This is referes to #623  I just had to add the activateVisible() Method to the ChangeListener to ensure the focus is set. What happens if I am scrolling through the list of entries in the table via the keys? Does the focus can jump away to the field editor if it is open? From what I recall  we had the issue I mentioned before and had to remove the functionality to automatically focus the first field. Please test this exhaustively with different entry editors for different entry types open and then scrolling via keys.  || I am going to figure that out after our exam this week. So your comment is recognized :)  || I had a chat with @koppor  today. @bruehldev  and I will write an automated test for this in our upcoming sprint (starting on monday 25th april). When this is done we should have verified if the focus is lost on scrolling or not.  || What is the current status here?  || I have run the Integration tests on it and tried it manually. The entry tables focus is not lost when going through the entries. Only when opening the entry editor as intended.  || I wonder why the travis jobs are not executed? Because you violate the correct imports order  and this cannot be merged without the build failing at the moment.  || I will fix the order soon. Probably on Friday. Maybe pushing on the branch will then trigger the jobs again.  || LGTM :+1:  just fix the import order (and improve the changelog)  then this can be merged in from my point of view  || Can this be merged?  || why did the gradlew scripts change?  || otherwise LGTM  || Gradle scripts are back to normal.  || OK :+1:   ||
996,1,0,0,1,0,1,1,1,0,0,1,0,1,0,1,1,0,1,0,fix entry deletion from database Fixes #991  a Bug introduced in b3aee00bae8b589aa1252ef182f8b3293d06bd69.  While moving from `Map` to `List` as the data structure for the stored `BibEntries` is has been forgotten to adjust the `removeEntry`-Method. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? Is it really impossible to add a test case?  || Enhanced the tests a little bit and added a null-check while inserting an object into the database.  || LGTM :+1:   || Thanks for fixing the bug I had introduced.  The changes look good.  Please try to adhere to the convention for tests outlined in the wiki https://github.com/JabRef/jabref/wiki/Code-Howtos#test-cases  especially the naming of the tests and only one test per test method. Comments test methods shouldn.t be necessary but the test name should contain all the information.   || After some minor naming improvements  this can be merged in in my opinion. Good job.  ||
996,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,fix entry deletion from database Fixes #991  a Bug introduced in b3aee00bae8b589aa1252ef182f8b3293d06bd69.  While moving from `Map` to `List` as the data structure for the stored `BibEntries` is has been forgotten to adjust the `removeEntry`-Method. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? Is it really impossible to add a test case?  || Enhanced the tests a little bit and added a null-check while inserting an object into the database.  || LGTM :+1:   || Thanks for fixing the bug I had introduced.  The changes look good.  Please try to adhere to the convention for tests outlined in the wiki https://github.com/JabRef/jabref/wiki/Code-Howtos#test-cases  especially the naming of the tests and only one test per test method. Comments test methods shouldn.t be necessary but the test name should contain all the information.   || After some minor naming improvements  this can be merged in in my opinion. Good job.  ||
996,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,fix entry deletion from database Fixes #991  a Bug introduced in b3aee00bae8b589aa1252ef182f8b3293d06bd69.  While moving from `Map` to `List` as the data structure for the stored `BibEntries` is has been forgotten to adjust the `removeEntry`-Method. - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? Is it really impossible to add a test case?  || Enhanced the tests a little bit and added a null-check while inserting an object into the database.  || LGTM :+1:   || Thanks for fixing the bug I had introduced.  The changes look good.  Please try to adhere to the convention for tests outlined in the wiki https://github.com/JabRef/jabref/wiki/Code-Howtos#test-cases  especially the naming of the tests and only one test per test method. Comments test methods shouldn.t be necessary but the test name should contain all the information.   || After some minor naming improvements  this can be merged in in my opinion. Good job.  ||
999,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,0,0,0,DB properties layout and save order config changed - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests green?  Fixes  #957  and #958   Fix height of the dialog and add spacing between OK/Cancel Button and  border Changed JComboxBox to editable and removed the unnecessary textfields Added JCombobox for selecting the fields to apply the selected formatter to Changed position of Delete Button Removed IndexOutOfBound Exception when no item is selected  Edit// I just see this PR is #999  ) Is it possible to write a simple UI test for it? :innocent:  Refs #507   || UI-Test  I will try to write one  || Added GUI Test und fixed Checkbox label not displaying correclty  || The code looks good  so I give my :+1: for merging if you add a nice looking screenshot :smiley:   || @tobiasdiez  Here you are: ![dbproperties](https://cloud.githubusercontent.com/assets/320228/13907253/784b77ae-eeea-11e5-8a61-a72b953537ac.png)  || @oscargus   I tried to fix this  but I could not get the damn JList resized horizontally or vertically. I tried around a lot.  The code for this is located in `FieldFormattersCleanUpPanel`  From this one it sounded very simple:  http://alvinalexander.com/java/edu/jgoodies-formlayout-grow-fill/3-fixing-jgoodies-formlayout-sizing.shtml Edit// This is how it scales after my fix ![dbpropertiesresized](https://cloud.githubusercontent.com/assets/320228/13959063/c75f28cc-f052-11e5-94b2-016eb93417f8.png)  || My code did everything except horizontal sizing (and I also tried a lot...)  so check there for possible hints. I think that when spanning multiple columns using a fourth alignment argument to .xyw is one thing.  || @Siedlerchr : I think it is good to go  so please rebase and it can be merged.  (I reserve the right to fix/change(?) the scaling at some stage. :-))  || @oscargus  Okay  otherwise I would have looked at the GUI resizing in more detail the next days  || @Siedlerchr Up to you. I just wasnt sure what the status of the PR was and was thinking of merging it (if it was possible). Feel free to look at the resizing. :+1:   || @oscargus  As I just rebased it on the master I would suggest merging it for once now  so that the biggest changes (e.g. the Comboxes) are into it. The resizing are only some minor things.  I will try to experiment with them in the next days and release it then as a new pr.  ||
999,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,0,1,1,1,DB properties layout and save order config changed - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests green?  Fixes  #957  and #958   Fix height of the dialog and add spacing between OK/Cancel Button and  border Changed JComboxBox to editable and removed the unnecessary textfields Added JCombobox for selecting the fields to apply the selected formatter to Changed position of Delete Button Removed IndexOutOfBound Exception when no item is selected  Edit// I just see this PR is #999  ) Is it possible to write a simple UI test for it? :innocent:  Refs #507   || UI-Test  I will try to write one  || Added GUI Test und fixed Checkbox label not displaying correclty  || The code looks good  so I give my :+1: for merging if you add a nice looking screenshot :smiley:   || @tobiasdiez  Here you are: ![dbproperties](https://cloud.githubusercontent.com/assets/320228/13907253/784b77ae-eeea-11e5-8a61-a72b953537ac.png)  || @oscargus   I tried to fix this  but I could not get the damn JList resized horizontally or vertically. I tried around a lot.  The code for this is located in `FieldFormattersCleanUpPanel`  From this one it sounded very simple:  http://alvinalexander.com/java/edu/jgoodies-formlayout-grow-fill/3-fixing-jgoodies-formlayout-sizing.shtml Edit// This is how it scales after my fix ![dbpropertiesresized](https://cloud.githubusercontent.com/assets/320228/13959063/c75f28cc-f052-11e5-94b2-016eb93417f8.png)  || My code did everything except horizontal sizing (and I also tried a lot...)  so check there for possible hints. I think that when spanning multiple columns using a fourth alignment argument to .xyw is one thing.  || @Siedlerchr : I think it is good to go  so please rebase and it can be merged.  (I reserve the right to fix/change(?) the scaling at some stage. :-))  || @oscargus  Okay  otherwise I would have looked at the GUI resizing in more detail the next days  || @Siedlerchr Up to you. I just wasnt sure what the status of the PR was and was thinking of merging it (if it was possible). Feel free to look at the resizing. :+1:   || @oscargus  As I just rebased it on the master I would suggest merging it for once now  so that the biggest changes (e.g. the Comboxes) are into it. The resizing are only some minor things.  I will try to experiment with them in the next days and release it then as a new pr.  ||
999,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,DB properties layout and save order config changed - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests green?  Fixes  #957  and #958   Fix height of the dialog and add spacing between OK/Cancel Button and  border Changed JComboxBox to editable and removed the unnecessary textfields Added JCombobox for selecting the fields to apply the selected formatter to Changed position of Delete Button Removed IndexOutOfBound Exception when no item is selected  Edit// I just see this PR is #999  ) Is it possible to write a simple UI test for it? :innocent:  Refs #507   || UI-Test  I will try to write one  || Added GUI Test und fixed Checkbox label not displaying correclty  || The code looks good  so I give my :+1: for merging if you add a nice looking screenshot :smiley:   || @tobiasdiez  Here you are: ![dbproperties](https://cloud.githubusercontent.com/assets/320228/13907253/784b77ae-eeea-11e5-8a61-a72b953537ac.png)  || @oscargus   I tried to fix this  but I could not get the damn JList resized horizontally or vertically. I tried around a lot.  The code for this is located in `FieldFormattersCleanUpPanel`  From this one it sounded very simple:  http://alvinalexander.com/java/edu/jgoodies-formlayout-grow-fill/3-fixing-jgoodies-formlayout-sizing.shtml Edit// This is how it scales after my fix ![dbpropertiesresized](https://cloud.githubusercontent.com/assets/320228/13959063/c75f28cc-f052-11e5-94b2-016eb93417f8.png)  || My code did everything except horizontal sizing (and I also tried a lot...)  so check there for possible hints. I think that when spanning multiple columns using a fourth alignment argument to .xyw is one thing.  || @Siedlerchr : I think it is good to go  so please rebase and it can be merged.  (I reserve the right to fix/change(?) the scaling at some stage. :-))  || @oscargus  Okay  otherwise I would have looked at the GUI resizing in more detail the next days  || @Siedlerchr Up to you. I just wasnt sure what the status of the PR was and was thinking of merging it (if it was possible). Feel free to look at the resizing. :+1:   || @oscargus  As I just rebased it on the master I would suggest merging it for once now  so that the biggest changes (e.g. the Comboxes) are into it. The resizing are only some minor things.  I will try to experiment with them in the next days and release it then as a new pr.  ||
999,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,0,0,0,DB properties layout and save order config changed - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests green?  Fixes  #957  and #958   Fix height of the dialog and add spacing between OK/Cancel Button and  border Changed JComboxBox to editable and removed the unnecessary textfields Added JCombobox for selecting the fields to apply the selected formatter to Changed position of Delete Button Removed IndexOutOfBound Exception when no item is selected  Edit// I just see this PR is #999  ) Is it possible to write a simple UI test for it? :innocent:  Refs #507   || UI-Test  I will try to write one  || Added GUI Test und fixed Checkbox label not displaying correclty  || The code looks good  so I give my :+1: for merging if you add a nice looking screenshot :smiley:   || @tobiasdiez  Here you are: ![dbproperties](https://cloud.githubusercontent.com/assets/320228/13907253/784b77ae-eeea-11e5-8a61-a72b953537ac.png)  || @oscargus   I tried to fix this  but I could not get the damn JList resized horizontally or vertically. I tried around a lot.  The code for this is located in `FieldFormattersCleanUpPanel`  From this one it sounded very simple:  http://alvinalexander.com/java/edu/jgoodies-formlayout-grow-fill/3-fixing-jgoodies-formlayout-sizing.shtml Edit// This is how it scales after my fix ![dbpropertiesresized](https://cloud.githubusercontent.com/assets/320228/13959063/c75f28cc-f052-11e5-94b2-016eb93417f8.png)  || My code did everything except horizontal sizing (and I also tried a lot...)  so check there for possible hints. I think that when spanning multiple columns using a fourth alignment argument to .xyw is one thing.  || @Siedlerchr : I think it is good to go  so please rebase and it can be merged.  (I reserve the right to fix/change(?) the scaling at some stage. :-))  || @oscargus  Okay  otherwise I would have looked at the GUI resizing in more detail the next days  || @Siedlerchr Up to you. I just wasnt sure what the status of the PR was and was thinking of merging it (if it was possible). Feel free to look at the resizing. :+1:   || @oscargus  As I just rebased it on the master I would suggest merging it for once now  so that the biggest changes (e.g. the Comboxes) are into it. The resizing are only some minor things.  I will try to experiment with them in the next days and release it then as a new pr.  ||
999,1,0,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0,1,0,DB properties layout and save order config changed - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests green?  Fixes  #957  and #958   Fix height of the dialog and add spacing between OK/Cancel Button and  border Changed JComboxBox to editable and removed the unnecessary textfields Added JCombobox for selecting the fields to apply the selected formatter to Changed position of Delete Button Removed IndexOutOfBound Exception when no item is selected  Edit// I just see this PR is #999  ) Is it possible to write a simple UI test for it? :innocent:  Refs #507   || UI-Test  I will try to write one  || Added GUI Test und fixed Checkbox label not displaying correclty  || The code looks good  so I give my :+1: for merging if you add a nice looking screenshot :smiley:   || @tobiasdiez  Here you are: ![dbproperties](https://cloud.githubusercontent.com/assets/320228/13907253/784b77ae-eeea-11e5-8a61-a72b953537ac.png)  || @oscargus   I tried to fix this  but I could not get the damn JList resized horizontally or vertically. I tried around a lot.  The code for this is located in `FieldFormattersCleanUpPanel`  From this one it sounded very simple:  http://alvinalexander.com/java/edu/jgoodies-formlayout-grow-fill/3-fixing-jgoodies-formlayout-sizing.shtml Edit// This is how it scales after my fix ![dbpropertiesresized](https://cloud.githubusercontent.com/assets/320228/13959063/c75f28cc-f052-11e5-94b2-016eb93417f8.png)  || My code did everything except horizontal sizing (and I also tried a lot...)  so check there for possible hints. I think that when spanning multiple columns using a fourth alignment argument to .xyw is one thing.  || @Siedlerchr : I think it is good to go  so please rebase and it can be merged.  (I reserve the right to fix/change(?) the scaling at some stage. :-))  || @oscargus  Okay  otherwise I would have looked at the GUI resizing in more detail the next days  || @Siedlerchr Up to you. I just wasnt sure what the status of the PR was and was thinking of merging it (if it was possible). Feel free to look at the resizing. :+1:   || @oscargus  As I just rebased it on the master I would suggest merging it for once now  so that the biggest changes (e.g. the Comboxes) are into it. The resizing are only some minor things.  I will try to experiment with them in the next days and release it then as a new pr.  ||
999,1,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0,0,DB properties layout and save order config changed - [x] Change in CHANGELOG.md described? - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests green?  Fixes  #957  and #958   Fix height of the dialog and add spacing between OK/Cancel Button and  border Changed JComboxBox to editable and removed the unnecessary textfields Added JCombobox for selecting the fields to apply the selected formatter to Changed position of Delete Button Removed IndexOutOfBound Exception when no item is selected  Edit// I just see this PR is #999  ) Is it possible to write a simple UI test for it? :innocent:  Refs #507   || UI-Test  I will try to write one  || Added GUI Test und fixed Checkbox label not displaying correclty  || The code looks good  so I give my :+1: for merging if you add a nice looking screenshot :smiley:   || @tobiasdiez  Here you are: ![dbproperties](https://cloud.githubusercontent.com/assets/320228/13907253/784b77ae-eeea-11e5-8a61-a72b953537ac.png)  || @oscargus   I tried to fix this  but I could not get the damn JList resized horizontally or vertically. I tried around a lot.  The code for this is located in `FieldFormattersCleanUpPanel`  From this one it sounded very simple:  http://alvinalexander.com/java/edu/jgoodies-formlayout-grow-fill/3-fixing-jgoodies-formlayout-sizing.shtml Edit// This is how it scales after my fix ![dbpropertiesresized](https://cloud.githubusercontent.com/assets/320228/13959063/c75f28cc-f052-11e5-94b2-016eb93417f8.png)  || My code did everything except horizontal sizing (and I also tried a lot...)  so check there for possible hints. I think that when spanning multiple columns using a fourth alignment argument to .xyw is one thing.  || @Siedlerchr : I think it is good to go  so please rebase and it can be merged.  (I reserve the right to fix/change(?) the scaling at some stage. :-))  || @oscargus  Okay  otherwise I would have looked at the GUI resizing in more detail the next days  || @Siedlerchr Up to you. I just wasnt sure what the status of the PR was and was thinking of merging it (if it was possible). Feel free to look at the resizing. :+1:   || @oscargus  As I just rebased it on the master I would suggest merging it for once now  so that the biggest changes (e.g. the Comboxes) are into it. The resizing are only some minor things.  I will try to experiment with them in the next days and release it then as a new pr.  ||
1010,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Added initial tests for ExportFormat Really trivial and early test  but could maybe avoid bugs like #1001 to happen (and form a foundation to extend on). Mhh....I am missing an assertion in these tests  i.e. reading the exported file and checking that it is empty.   || I have changed the code based on all(?) comments. Major implications: - Now  all exporters returns an empty file for an empty set of entries and are tested for this. Earlier  some heading information was generated - All exporters are now tested that they throw an NPE with a null database or null entries list - The change that fixes #1001 is in practice reverted and solved such that the ExportFormat calls add all entries instead of null for all entries - The test disabled in #1005 is active again - I had to break the new guideline in #1012 to be able to test all exporters for NPEs in a simple way  if theres a better way please let me know  (This shows that adding a quite crappy initial test can lead to good things. :-))  || As the export is now not performed for empty databases (entries lists)  as a side effect  the coverage is more accurate now as well. Earlier it increased quite a bit  but no actual testing was done (well  apart from that the code executed without any errors).  || This looks way better then the initial PR. Good job!  || Not obvious that Parameterized is executed before BeforeClass  but once I figured that out...  || LGTM  || I think this is probably as far as we get right now and that the code is quite OK since it is rather general and only tests what is actually tested (or how to formulate it...).  ||
1010,1,0,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0,1,0,Added initial tests for ExportFormat Really trivial and early test  but could maybe avoid bugs like #1001 to happen (and form a foundation to extend on). Mhh....I am missing an assertion in these tests  i.e. reading the exported file and checking that it is empty.   || I have changed the code based on all(?) comments. Major implications: - Now  all exporters returns an empty file for an empty set of entries and are tested for this. Earlier  some heading information was generated - All exporters are now tested that they throw an NPE with a null database or null entries list - The change that fixes #1001 is in practice reverted and solved such that the ExportFormat calls add all entries instead of null for all entries - The test disabled in #1005 is active again - I had to break the new guideline in #1012 to be able to test all exporters for NPEs in a simple way  if theres a better way please let me know  (This shows that adding a quite crappy initial test can lead to good things. :-))  || As the export is now not performed for empty databases (entries lists)  as a side effect  the coverage is more accurate now as well. Earlier it increased quite a bit  but no actual testing was done (well  apart from that the code executed without any errors).  || This looks way better then the initial PR. Good job!  || Not obvious that Parameterized is executed before BeforeClass  but once I figured that out...  || LGTM  || I think this is probably as far as we get right now and that the code is quite OK since it is rather general and only tests what is actually tested (or how to formulate it...).  ||
1010,1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,Added initial tests for ExportFormat Really trivial and early test  but could maybe avoid bugs like #1001 to happen (and form a foundation to extend on). Mhh....I am missing an assertion in these tests  i.e. reading the exported file and checking that it is empty.   || I have changed the code based on all(?) comments. Major implications: - Now  all exporters returns an empty file for an empty set of entries and are tested for this. Earlier  some heading information was generated - All exporters are now tested that they throw an NPE with a null database or null entries list - The change that fixes #1001 is in practice reverted and solved such that the ExportFormat calls add all entries instead of null for all entries - The test disabled in #1005 is active again - I had to break the new guideline in #1012 to be able to test all exporters for NPEs in a simple way  if theres a better way please let me know  (This shows that adding a quite crappy initial test can lead to good things. :-))  || As the export is now not performed for empty databases (entries lists)  as a side effect  the coverage is more accurate now as well. Earlier it increased quite a bit  but no actual testing was done (well  apart from that the code executed without any errors).  || This looks way better then the initial PR. Good job!  || Not obvious that Parameterized is executed before BeforeClass  but once I figured that out...  || LGTM  || I think this is probably as far as we get right now and that the code is quite OK since it is rather general and only tests what is actually tested (or how to formulate it...).  ||
1014,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,Improved Exception Handling in Tests cases Never catch an Exception Removed unnecessary Exceptions Throw specific Exceptions  never only Exception Ref #1012  - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? Good work! :+1:  || @Siedlerchr Btw  you should assign your commit email with your Github account  see https://github.com/JabRef/jabref/pull/1014/commits/758e7c2d6fe6cb9e8a82f4bfda2f601608647344  || @oscargus Fixed. @stefan-kolb I just added my git mail address to my github account as secondary mail address.  || Was done by Eclipse. Will change this back  ||
1014,1,0,1,1,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Improved Exception Handling in Tests cases Never catch an Exception Removed unnecessary Exceptions Throw specific Exceptions  never only Exception Ref #1012  - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? Good work! :+1:  || @Siedlerchr Btw  you should assign your commit email with your Github account  see https://github.com/JabRef/jabref/pull/1014/commits/758e7c2d6fe6cb9e8a82f4bfda2f601608647344  || @oscargus Fixed. @stefan-kolb I just added my git mail address to my github account as secondary mail address.  || Was done by Eclipse. Will change this back  ||
1014,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Improved Exception Handling in Tests cases Never catch an Exception Removed unnecessary Exceptions Throw specific Exceptions  never only Exception Ref #1012  - [x] Changes in pull request outlined? (What  why  ...) - [x] Tests created for changes? - [x] Tests green? Good work! :+1:  || @Siedlerchr Btw  you should assign your commit email with your Github account  see https://github.com/JabRef/jabref/pull/1014/commits/758e7c2d6fe6cb9e8a82f4bfda2f601608647344  || @oscargus Fixed. @stefan-kolb I just added my git mail address to my github account as secondary mail address.  || Was done by Eclipse. Will change this back  ||
1041,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Write database type in lower case into the bib file This finally fixes #963. A quick fix has been introduced in 661eea007e555  but that does not cover the lower case writing of the type.  ``` @Comment{jabref-meta: DATABASE_TYPE:BibTeX } ```  finally gets  ``` @Comment{jabref-meta: databaseType:bibtex } ``` - [ ] Change in CHANGELOG.md described -> This has been introduced in the development versions after the last release  thus no entry required - [x] Tests created for changes -> tests have been adapted to match this new implementation Is the parsing case insensitive? Is that tested?  || @oscargus The value is parsed case-insensitive.  ||
1041,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,1,0,0,1,Write database type in lower case into the bib file This finally fixes #963. A quick fix has been introduced in 661eea007e555  but that does not cover the lower case writing of the type.  ``` @Comment{jabref-meta: DATABASE_TYPE:BibTeX } ```  finally gets  ``` @Comment{jabref-meta: databaseType:bibtex } ``` - [ ] Change in CHANGELOG.md described -> This has been introduced in the development versions after the last release  thus no entry required - [x] Tests created for changes -> tests have been adapted to match this new implementation Is the parsing case insensitive? Is that tested?  || @oscargus The value is parsed case-insensitive.  ||
1041,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Write database type in lower case into the bib file This finally fixes #963. A quick fix has been introduced in 661eea007e555  but that does not cover the lower case writing of the type.  ``` @Comment{jabref-meta: DATABASE_TYPE:BibTeX } ```  finally gets  ``` @Comment{jabref-meta: databaseType:bibtex } ``` - [ ] Change in CHANGELOG.md described -> This has been introduced in the development versions after the last release  thus no entry required - [x] Tests created for changes -> tests have been adapted to match this new implementation Is the parsing case insensitive? Is that tested?  || @oscargus The value is parsed case-insensitive.  ||
1050,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,Restructrued CleanUp Formatters dialog  #1038 Reworked CleanUp Formatter dlg: - [x] Description updates when and Item is selected. Also on startup. The field is now also multilane with auto resizing and word wrap. - [x] After deleting a selected item in the list  the next one (previous) is selected - [x] Changed layout to be more consistent   Renamings to be more precise and moving in new package. Added tests. - [ X] Change in CHANGELOG.md described - [ X] Tests created for changes - [ X] Screenshots added (for bigger UI changes)  ![cleanupentriesdialog](https://cloud.githubusercontent.com/assets/320228/14066003/1fa8ac48-f43f-11e5-9d5c-782a027ad581.png) Looks good to me :+1: Just a few small remarks which should be fixed then this can be merged in.  || @tobiasdiez  Applied your proposed changes. Instead of "Run selected field formatters" it is now  "Run listed field formatters"  || I think this looks good. @koppor what do you think?  || Why is this assigned to @koppor ? What is blocking this?  ||  #1038 is my request and Id like to have the example displayed. For that  I need #1159 to get through.  My aim to have the dialog understandable to users.  Further  I need to test the thing  for which I didnt have time yet. :see_no_evil:   || <s>\- [ ] When changing the focus of the list  the description does not update. Is it possible to update the description when the focus of the list changes?</s>  <s>\- [ ] When the formatters are disabled  it is not clear  where the description comes from. Maybe hide the field?</s>  ![grabbed_20160410-140135](https://cloud.githubusercontent.com/assets/1366654/14410050/ce3f2512-ff24-11e5-96a1-c60a92247b76.png) - [ ] When I enable the formatting  no formatter is selected. Could there the first formatter (if available) be enabled?  Change at the combobox works.  || @koppor  The focus of the description only updates when you select it in the combobox. It would be otherwise too confusing  if the combobox displays Formatter A and you select Formatter B in the list. Which one should be displayed then? From my point of view the Workflow atm is: Select the field e.g. abstract and select the formatter to add to the list. Therefore the description is referring to the current selected formatter.  The other things regarding the enabling/disabling could be done easily  As tomorrow my new semester starts  I do not know if I can get this whole thing done in time for v3.3 Release on (Friday?).   || @Siedlerchr Do you still have time?  || Yep  wil look at it this evening or tomorrow morning.  || The thing is that a user might now  what a specific formatter does when opening the dialog the first time. As far as I remember  we have some default formatters enabled and the user does not know what to do.  <s>Therefore  this quick suggestion. Note that I added the formatter string at the sketch at #1038. That was aimed to reduce confusion somehow :innocent: </s>  Decision from developers: Tooltip on existing formatters is enough.  || Decision: we merge as is. @Siedlerchr Could you just resolve the conflicts? :innocent: Thank you for working on it.  || @Siedlerchr Can you please rebase this  so we can merge?  || Will do this today evening.  2016-04-13 10:51 GMT+02:00 Stefan Kolb notifications@github.com:  > @Siedlerchr https://github.com/Siedlerchr Can you please rebase this  > so we can merge? >  > — > You are receiving this because you were mentioned. > Reply to this email directly or view it on GitHub > https://github.com/JabRef/jabref/pull/1050#issuecomment-209310723  || We decided to use the existing translation string instead of introducing new ones a few days before the release. (Refs #1128)  "Run_listed_field_formatters" (wished) -> "Run field formatters" (existing)  || [![LGTM](http://lgtm.in/p/4EbBDqGPn)](http://lgtm.in/i/4EbBDqGPn)  || 
1050,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,Restructrued CleanUp Formatters dialog  #1038 Reworked CleanUp Formatter dlg: - [x] Description updates when and Item is selected. Also on startup. The field is now also multilane with auto resizing and word wrap. - [x] After deleting a selected item in the list  the next one (previous) is selected - [x] Changed layout to be more consistent   Renamings to be more precise and moving in new package. Added tests. - [ X] Change in CHANGELOG.md described - [ X] Tests created for changes - [ X] Screenshots added (for bigger UI changes)  ![cleanupentriesdialog](https://cloud.githubusercontent.com/assets/320228/14066003/1fa8ac48-f43f-11e5-9d5c-782a027ad581.png) Looks good to me :+1: Just a few small remarks which should be fixed then this can be merged in.  || @tobiasdiez  Applied your proposed changes. Instead of "Run selected field formatters" it is now  "Run listed field formatters"  || I think this looks good. @koppor what do you think?  || Why is this assigned to @koppor ? What is blocking this?  ||  #1038 is my request and Id like to have the example displayed. For that  I need #1159 to get through.  My aim to have the dialog understandable to users.  Further  I need to test the thing  for which I didnt have time yet. :see_no_evil:   || <s>\- [ ] When changing the focus of the list  the description does not update. Is it possible to update the description when the focus of the list changes?</s>  <s>\- [ ] When the formatters are disabled  it is not clear  where the description comes from. Maybe hide the field?</s>  ![grabbed_20160410-140135](https://cloud.githubusercontent.com/assets/1366654/14410050/ce3f2512-ff24-11e5-96a1-c60a92247b76.png) - [ ] When I enable the formatting  no formatter is selected. Could there the first formatter (if available) be enabled?  Change at the combobox works.  || @koppor  The focus of the description only updates when you select it in the combobox. It would be otherwise too confusing  if the combobox displays Formatter A and you select Formatter B in the list. Which one should be displayed then? From my point of view the Workflow atm is: Select the field e.g. abstract and select the formatter to add to the list. Therefore the description is referring to the current selected formatter.  The other things regarding the enabling/disabling could be done easily  As tomorrow my new semester starts  I do not know if I can get this whole thing done in time for v3.3 Release on (Friday?).   || @Siedlerchr Do you still have time?  || Yep  wil look at it this evening or tomorrow morning.  || The thing is that a user might now  what a specific formatter does when opening the dialog the first time. As far as I remember  we have some default formatters enabled and the user does not know what to do.  <s>Therefore  this quick suggestion. Note that I added the formatter string at the sketch at #1038. That was aimed to reduce confusion somehow :innocent: </s>  Decision from developers: Tooltip on existing formatters is enough.  || Decision: we merge as is. @Siedlerchr Could you just resolve the conflicts? :innocent: Thank you for working on it.  || @Siedlerchr Can you please rebase this  so we can merge?  || Will do this today evening.  2016-04-13 10:51 GMT+02:00 Stefan Kolb notifications@github.com:  > @Siedlerchr https://github.com/Siedlerchr Can you please rebase this  > so we can merge? >  > — > You are receiving this because you were mentioned. > Reply to this email directly or view it on GitHub > https://github.com/JabRef/jabref/pull/1050#issuecomment-209310723  || We decided to use the existing translation string instead of introducing new ones a few days before the release. (Refs #1128)  "Run_listed_field_formatters" (wished) -> "Run field formatters" (existing)  || [![LGTM](http://lgtm.in/p/4EbBDqGPn)](http://lgtm.in/i/4EbBDqGPn)  || 
1050,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Restructrued CleanUp Formatters dialog  #1038 Reworked CleanUp Formatter dlg: - [x] Description updates when and Item is selected. Also on startup. The field is now also multilane with auto resizing and word wrap. - [x] After deleting a selected item in the list  the next one (previous) is selected - [x] Changed layout to be more consistent   Renamings to be more precise and moving in new package. Added tests. - [ X] Change in CHANGELOG.md described - [ X] Tests created for changes - [ X] Screenshots added (for bigger UI changes)  ![cleanupentriesdialog](https://cloud.githubusercontent.com/assets/320228/14066003/1fa8ac48-f43f-11e5-9d5c-782a027ad581.png) Looks good to me :+1: Just a few small remarks which should be fixed then this can be merged in.  || @tobiasdiez  Applied your proposed changes. Instead of "Run selected field formatters" it is now  "Run listed field formatters"  || I think this looks good. @koppor what do you think?  || Why is this assigned to @koppor ? What is blocking this?  ||  #1038 is my request and Id like to have the example displayed. For that  I need #1159 to get through.  My aim to have the dialog understandable to users.  Further  I need to test the thing  for which I didnt have time yet. :see_no_evil:   || <s>\- [ ] When changing the focus of the list  the description does not update. Is it possible to update the description when the focus of the list changes?</s>  <s>\- [ ] When the formatters are disabled  it is not clear  where the description comes from. Maybe hide the field?</s>  ![grabbed_20160410-140135](https://cloud.githubusercontent.com/assets/1366654/14410050/ce3f2512-ff24-11e5-96a1-c60a92247b76.png) - [ ] When I enable the formatting  no formatter is selected. Could there the first formatter (if available) be enabled?  Change at the combobox works.  || @koppor  The focus of the description only updates when you select it in the combobox. It would be otherwise too confusing  if the combobox displays Formatter A and you select Formatter B in the list. Which one should be displayed then? From my point of view the Workflow atm is: Select the field e.g. abstract and select the formatter to add to the list. Therefore the description is referring to the current selected formatter.  The other things regarding the enabling/disabling could be done easily  As tomorrow my new semester starts  I do not know if I can get this whole thing done in time for v3.3 Release on (Friday?).   || @Siedlerchr Do you still have time?  || Yep  wil look at it this evening or tomorrow morning.  || The thing is that a user might now  what a specific formatter does when opening the dialog the first time. As far as I remember  we have some default formatters enabled and the user does not know what to do.  <s>Therefore  this quick suggestion. Note that I added the formatter string at the sketch at #1038. That was aimed to reduce confusion somehow :innocent: </s>  Decision from developers: Tooltip on existing formatters is enough.  || Decision: we merge as is. @Siedlerchr Could you just resolve the conflicts? :innocent: Thank you for working on it.  || @Siedlerchr Can you please rebase this  so we can merge?  || Will do this today evening.  2016-04-13 10:51 GMT+02:00 Stefan Kolb notifications@github.com:  > @Siedlerchr https://github.com/Siedlerchr Can you please rebase this  > so we can merge? >  > — > You are receiving this because you were mentioned. > Reply to this email directly or view it on GitHub > https://github.com/JabRef/jabref/pull/1050#issuecomment-209310723  || We decided to use the existing translation string instead of introducing new ones a few days before the release. (Refs #1128)  "Run_listed_field_formatters" (wished) -> "Run field formatters" (existing)  || [![LGTM](http://lgtm.in/p/4EbBDqGPn)](http://lgtm.in/i/4EbBDqGPn)  || 
1054,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Fix sorting of entries on save Fix sorting of entries on save (this shouldnt affect the sorting of export  so is unrelated to #1051). In the end it was just a wrong boolean in the preference. - [ ] Change in CHANGELOG.md described - no  I think the issue was introduced in this version - [ ] Tests created for changes - kind of  there is a test for the sorting now but it passed before any fix  no test added for the boolean in the preference - [ ] Screenshots added (for bigger UI changes) Context:  - Decision to add new entries at the end - User wants to have other sort options - User wants to have other sort options as default  The idea is that a user can configure a `bib` template  which contains the default "preferences" for a database  such as the bibtex key patterns and the sort order configuration. When the user creates a new `bib` file  the template is used.  We discussed sometime ago the plethora of preferences. Maybe that approach could help to reduce that. However  the system of a `bib` template could increase complexity. Since I care for sharing and group editing of `bib` files  I want to a) have as much as possible bib-affecting configurations (directory  key patterns  ...) in the `bib` file itself (See for instance #180) and b) enable new users to have a properly configured `bib` file and not requiring an expert to configure JabRef.  a) is IMHO mostly achieved b) is some thing we are working on to have correct default settings. My personal feeling is that some groups  however  do not want to follow our conventions (for instance  bibtex keys  sort order) and thus require different settings.  Maybe I should open a separate issue asking for support of "bib template". :innocent:   || @koppor commented on the wrong issue?  || @tobiasdiez No  not the wrong issue. I tried to give some context above. Hope  that helps to understand my text.  || 
1054,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Fix sorting of entries on save Fix sorting of entries on save (this shouldnt affect the sorting of export  so is unrelated to #1051). In the end it was just a wrong boolean in the preference. - [ ] Change in CHANGELOG.md described - no  I think the issue was introduced in this version - [ ] Tests created for changes - kind of  there is a test for the sorting now but it passed before any fix  no test added for the boolean in the preference - [ ] Screenshots added (for bigger UI changes) Context:  - Decision to add new entries at the end - User wants to have other sort options - User wants to have other sort options as default  The idea is that a user can configure a `bib` template  which contains the default "preferences" for a database  such as the bibtex key patterns and the sort order configuration. When the user creates a new `bib` file  the template is used.  We discussed sometime ago the plethora of preferences. Maybe that approach could help to reduce that. However  the system of a `bib` template could increase complexity. Since I care for sharing and group editing of `bib` files  I want to a) have as much as possible bib-affecting configurations (directory  key patterns  ...) in the `bib` file itself (See for instance #180) and b) enable new users to have a properly configured `bib` file and not requiring an expert to configure JabRef.  a) is IMHO mostly achieved b) is some thing we are working on to have correct default settings. My personal feeling is that some groups  however  do not want to follow our conventions (for instance  bibtex keys  sort order) and thus require different settings.  Maybe I should open a separate issue asking for support of "bib template". :innocent:   || @koppor commented on the wrong issue?  || @tobiasdiez No  not the wrong issue. I tried to give some context above. Hope  that helps to understand my text.  || 
1054,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Fix sorting of entries on save Fix sorting of entries on save (this shouldnt affect the sorting of export  so is unrelated to #1051). In the end it was just a wrong boolean in the preference. - [ ] Change in CHANGELOG.md described - no  I think the issue was introduced in this version - [ ] Tests created for changes - kind of  there is a test for the sorting now but it passed before any fix  no test added for the boolean in the preference - [ ] Screenshots added (for bigger UI changes) Context:  - Decision to add new entries at the end - User wants to have other sort options - User wants to have other sort options as default  The idea is that a user can configure a `bib` template  which contains the default "preferences" for a database  such as the bibtex key patterns and the sort order configuration. When the user creates a new `bib` file  the template is used.  We discussed sometime ago the plethora of preferences. Maybe that approach could help to reduce that. However  the system of a `bib` template could increase complexity. Since I care for sharing and group editing of `bib` files  I want to a) have as much as possible bib-affecting configurations (directory  key patterns  ...) in the `bib` file itself (See for instance #180) and b) enable new users to have a properly configured `bib` file and not requiring an expert to configure JabRef.  a) is IMHO mostly achieved b) is some thing we are working on to have correct default settings. My personal feeling is that some groups  however  do not want to follow our conventions (for instance  bibtex keys  sort order) and thus require different settings.  Maybe I should open a separate issue asking for support of "bib template". :innocent:   || @koppor commented on the wrong issue?  || @tobiasdiez No  not the wrong issue. I tried to give some context above. Hope  that helps to understand my text.  || 
1064,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fix #1062 Merge entry with DOI information now also applies changes to entry type <describe the changes you have made here: what  why  ...> - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) No test  because a test requires an online connection? :innocent: Other than that: LGTM :+1:  || LGTM :+1:  ||
1064,1,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,1,0,Fix #1062 Merge entry with DOI information now also applies changes to entry type <describe the changes you have made here: what  why  ...> - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) No test  because a test requires an online connection? :innocent: Other than that: LGTM :+1:  || LGTM :+1:  ||
1064,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,Fix #1062 Merge entry with DOI information now also applies changes to entry type <describe the changes you have made here: what  why  ...> - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) No test  because a test requires an online connection? :innocent: Other than that: LGTM :+1:  || LGTM :+1:  ||
1089,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,FileList field size now dependent on its content Fixes #672. The FileList (within the EntryEditor) now automatically resizes its Columns dependent on the length of its content.  ![java 2016-04-03 12-13-50-65](https://cloud.githubusercontent.com/assets/15333371/14231930/de478ace-f995-11e5-8ef7-3efff0f97eb4.jpg) - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Screenshots added (for bigger UI changes) I rearranged the Imports a bit (using the settings @tobiasdiez describes in #1091).  || Looks good to me me! @JabRef/developers anybody else any comments? Maybe we could integrate that in v3.3 already?  || Apart from my comment regarding the CHANGELOG this is fine and can be merged.  || Moved the changelog entry from `fixed` to `changed`.  ||
1089,1,0,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,FileList field size now dependent on its content Fixes #672. The FileList (within the EntryEditor) now automatically resizes its Columns dependent on the length of its content.  ![java 2016-04-03 12-13-50-65](https://cloud.githubusercontent.com/assets/15333371/14231930/de478ace-f995-11e5-8ef7-3efff0f97eb4.jpg) - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Screenshots added (for bigger UI changes) I rearranged the Imports a bit (using the settings @tobiasdiez describes in #1091).  || Looks good to me me! @JabRef/developers anybody else any comments? Maybe we could integrate that in v3.3 already?  || Apart from my comment regarding the CHANGELOG this is fine and can be merged.  || Moved the changelog entry from `fixed` to `changed`.  ||
1089,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,1,0,FileList field size now dependent on its content Fixes #672. The FileList (within the EntryEditor) now automatically resizes its Columns dependent on the length of its content.  ![java 2016-04-03 12-13-50-65](https://cloud.githubusercontent.com/assets/15333371/14231930/de478ace-f995-11e5-8ef7-3efff0f97eb4.jpg) - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Screenshots added (for bigger UI changes) I rearranged the Imports a bit (using the settings @tobiasdiez describes in #1091).  || Looks good to me me! @JabRef/developers anybody else any comments? Maybe we could integrate that in v3.3 already?  || Apart from my comment regarding the CHANGELOG this is fine and can be merged.  || Moved the changelog entry from `fixed` to `changed`.  ||
1116,1,0,0,1,0,1,1,1,1,0,1,1,0,0,1,1,0,1,0,Open Jdk problems with Look and Feels See #393 #638.  Still not 100% sure if this only applies to OpenJDK and GTK L&F or also to Oracle JDK and GTK L&F. Metal L&F seems to work but looks ugly.  Idea is to try Metal on OpenJDK and wait if more bug reports pop up even for Oracle. - [x] Maybe we should close at least one of the two bug reports that seem to be related to OpenJDK and GTK #393 #638 Or maybe even open a new one with possible solutions.  Also see https://bugs.launchpad.net/ubuntu/+source/openjdk-8/+bug/1510009  **Especially see** https://bugs.debian.org/cgi-bin/bugreport.cgi?bug813143  Maybe we can just ignore this and wait for it to be fixed in OpenJDK and add a hint to our FAQ and documentation? When merging this in please use squash merge to make it easy to revert this change when this is obsolete for OpenJDK later on.  || :+1:   || Oh  where did 4aa0d5b go? As far as I can see  only ac0bae5 (which is very short in comparison to the changes shown above) has been cherry-picked?  || #1145 : related?  ||
1116,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,Open Jdk problems with Look and Feels See #393 #638.  Still not 100% sure if this only applies to OpenJDK and GTK L&F or also to Oracle JDK and GTK L&F. Metal L&F seems to work but looks ugly.  Idea is to try Metal on OpenJDK and wait if more bug reports pop up even for Oracle. - [x] Maybe we should close at least one of the two bug reports that seem to be related to OpenJDK and GTK #393 #638 Or maybe even open a new one with possible solutions.  Also see https://bugs.launchpad.net/ubuntu/+source/openjdk-8/+bug/1510009  **Especially see** https://bugs.debian.org/cgi-bin/bugreport.cgi?bug813143  Maybe we can just ignore this and wait for it to be fixed in OpenJDK and add a hint to our FAQ and documentation? When merging this in please use squash merge to make it easy to revert this change when this is obsolete for OpenJDK later on.  || :+1:   || Oh  where did 4aa0d5b go? As far as I can see  only ac0bae5 (which is very short in comparison to the changes shown above) has been cherry-picked?  || #1145 : related?  ||
1116,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Open Jdk problems with Look and Feels See #393 #638.  Still not 100% sure if this only applies to OpenJDK and GTK L&F or also to Oracle JDK and GTK L&F. Metal L&F seems to work but looks ugly.  Idea is to try Metal on OpenJDK and wait if more bug reports pop up even for Oracle. - [x] Maybe we should close at least one of the two bug reports that seem to be related to OpenJDK and GTK #393 #638 Or maybe even open a new one with possible solutions.  Also see https://bugs.launchpad.net/ubuntu/+source/openjdk-8/+bug/1510009  **Especially see** https://bugs.debian.org/cgi-bin/bugreport.cgi?bug813143  Maybe we can just ignore this and wait for it to be fixed in OpenJDK and add a hint to our FAQ and documentation? When merging this in please use squash merge to make it easy to revert this change when this is obsolete for OpenJDK later on.  || :+1:   || Oh  where did 4aa0d5b go? As far as I can see  only ac0bae5 (which is very short in comparison to the changes shown above) has been cherry-picked?  || #1145 : related?  ||
1116,1,0,0,1,0,1,1,1,1,0,1,1,0,0,1,1,0,1,0,Open Jdk problems with Look and Feels See #393 #638.  Still not 100% sure if this only applies to OpenJDK and GTK L&F or also to Oracle JDK and GTK L&F. Metal L&F seems to work but looks ugly.  Idea is to try Metal on OpenJDK and wait if more bug reports pop up even for Oracle. - [x] Maybe we should close at least one of the two bug reports that seem to be related to OpenJDK and GTK #393 #638 Or maybe even open a new one with possible solutions.  Also see https://bugs.launchpad.net/ubuntu/+source/openjdk-8/+bug/1510009  **Especially see** https://bugs.debian.org/cgi-bin/bugreport.cgi?bug813143  Maybe we can just ignore this and wait for it to be fixed in OpenJDK and add a hint to our FAQ and documentation? When merging this in please use squash merge to make it easy to revert this change when this is obsolete for OpenJDK later on.  || :+1:   || Oh  where did 4aa0d5b go? As far as I can see  only ac0bae5 (which is very short in comparison to the changes shown above) has been cherry-picked?  || #1145 : related?  ||
1116,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,Open Jdk problems with Look and Feels See #393 #638.  Still not 100% sure if this only applies to OpenJDK and GTK L&F or also to Oracle JDK and GTK L&F. Metal L&F seems to work but looks ugly.  Idea is to try Metal on OpenJDK and wait if more bug reports pop up even for Oracle. - [x] Maybe we should close at least one of the two bug reports that seem to be related to OpenJDK and GTK #393 #638 Or maybe even open a new one with possible solutions.  Also see https://bugs.launchpad.net/ubuntu/+source/openjdk-8/+bug/1510009  **Especially see** https://bugs.debian.org/cgi-bin/bugreport.cgi?bug813143  Maybe we can just ignore this and wait for it to be fixed in OpenJDK and add a hint to our FAQ and documentation? When merging this in please use squash merge to make it easy to revert this change when this is obsolete for OpenJDK later on.  || :+1:   || Oh  where did 4aa0d5b go? As far as I can see  only ac0bae5 (which is very short in comparison to the changes shown above) has been cherry-picked?  || #1145 : related?  ||
1116,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Open Jdk problems with Look and Feels See #393 #638.  Still not 100% sure if this only applies to OpenJDK and GTK L&F or also to Oracle JDK and GTK L&F. Metal L&F seems to work but looks ugly.  Idea is to try Metal on OpenJDK and wait if more bug reports pop up even for Oracle. - [x] Maybe we should close at least one of the two bug reports that seem to be related to OpenJDK and GTK #393 #638 Or maybe even open a new one with possible solutions.  Also see https://bugs.launchpad.net/ubuntu/+source/openjdk-8/+bug/1510009  **Especially see** https://bugs.debian.org/cgi-bin/bugreport.cgi?bug813143  Maybe we can just ignore this and wait for it to be fixed in OpenJDK and add a hint to our FAQ and documentation? When merging this in please use squash merge to make it easy to revert this change when this is obsolete for OpenJDK later on.  || :+1:   || Oh  where did 4aa0d5b go? As far as I can see  only ac0bae5 (which is very short in comparison to the changes shown above) has been cherry-picked?  || #1145 : related?  ||
1135,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,Fix #1130 and re-enable GUI test @koppor Its just a simple if :smile: GUI test seems to brake after a few runs. They are really quite unstable :(  ||
1135,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,Fix #1130 and re-enable GUI test @koppor Its just a simple if :smile: GUI test seems to brake after a few runs. They are really quite unstable :(  ||
1135,1,0,0,1,1,1,1,0,1,0,1,1,0,0,1,1,0,0,1,Fix #1130 and re-enable GUI test @koppor Its just a simple if :smile: GUI test seems to brake after a few runs. They are really quite unstable :(  ||
1138,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,ImportFormatReader test Added initial tests for ImportFormatReader. Now  seven different formats are imported without specifying the format and the number of imported entries is checked. Should avoid bugs like #1134.  I also removed unused methods and moved a totally unrelated method to a better home. LGTM :+1: Nice work.  ||
1138,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,1,ImportFormatReader test Added initial tests for ImportFormatReader. Now  seven different formats are imported without specifying the format and the number of imported entries is checked. Should avoid bugs like #1134.  I also removed unused methods and moved a totally unrelated method to a better home. LGTM :+1: Nice work.  ||
1138,1,0,0,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,ImportFormatReader test Added initial tests for ImportFormatReader. Now  seven different formats are imported without specifying the format and the number of imported entries is checked. Should avoid bugs like #1134.  I also removed unused methods and moved a totally unrelated method to a better home. LGTM :+1: Nice work.  ||
1144,1,0,1,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Readd FormatChars support Alternative to  #1114 to add backwards compatibility for FormatChars (and a few other renamed LayoutFormatters). The idea was to replace the reflection code by an (admittedly big) switch statement. In this way we gain some flexibility about the location and naming of LayoutFormatter classes.  By the way   according to http://jabref.sourceforge.net/help/CustomExports.php all LayoutFormatters starting with "Author" are deprecated and are replaced by "Authors" since 2.7. Should we just delete them now? - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) I am in favour of this solution  because it breaks the link between our class structure and hard-coded strings in the layout files of random people. The switch may be long  but it is very easy to read.   As you suggest  we should delete the deprecated "Author" formatters.  Lets decide on this at the upcoming devcall!  || Just make sure that http://help.jabref.org/en/CustomExports/ is updated accordingly and note:  "Custom formatters  If none of the available formatters can do what you want to achieve  you can add your own by implementing the net.sf.jabref.export.layout.LayoutFormatter interface. If you insert your class into the net.sf.jabref.export.layout.format package  you can call the formatter by its class name only  like with the standard formatters. Otherwise  you must call the formatter by its fully qualified name (including package name). In any case  the formatter must be in your classpath when running JabRef."  (I do not have any opinion on this  just want to make sure that things are not obviously broken.)  || LGTM :+1:   || @tobiasdiez Could you open a new issue for your "By the way" thing and post the excerpt from the help page? I couldnt quickly find the paragraph youre referring to.  || 
1144,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,Readd FormatChars support Alternative to  #1114 to add backwards compatibility for FormatChars (and a few other renamed LayoutFormatters). The idea was to replace the reflection code by an (admittedly big) switch statement. In this way we gain some flexibility about the location and naming of LayoutFormatter classes.  By the way   according to http://jabref.sourceforge.net/help/CustomExports.php all LayoutFormatters starting with "Author" are deprecated and are replaced by "Authors" since 2.7. Should we just delete them now? - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) I am in favour of this solution  because it breaks the link between our class structure and hard-coded strings in the layout files of random people. The switch may be long  but it is very easy to read.   As you suggest  we should delete the deprecated "Author" formatters.  Lets decide on this at the upcoming devcall!  || Just make sure that http://help.jabref.org/en/CustomExports/ is updated accordingly and note:  "Custom formatters  If none of the available formatters can do what you want to achieve  you can add your own by implementing the net.sf.jabref.export.layout.LayoutFormatter interface. If you insert your class into the net.sf.jabref.export.layout.format package  you can call the formatter by its class name only  like with the standard formatters. Otherwise  you must call the formatter by its fully qualified name (including package name). In any case  the formatter must be in your classpath when running JabRef."  (I do not have any opinion on this  just want to make sure that things are not obviously broken.)  || LGTM :+1:   || @tobiasdiez Could you open a new issue for your "By the way" thing and post the excerpt from the help page? I couldnt quickly find the paragraph youre referring to.  || 
1144,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,Readd FormatChars support Alternative to  #1114 to add backwards compatibility for FormatChars (and a few other renamed LayoutFormatters). The idea was to replace the reflection code by an (admittedly big) switch statement. In this way we gain some flexibility about the location and naming of LayoutFormatter classes.  By the way   according to http://jabref.sourceforge.net/help/CustomExports.php all LayoutFormatters starting with "Author" are deprecated and are replaced by "Authors" since 2.7. Should we just delete them now? - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) I am in favour of this solution  because it breaks the link between our class structure and hard-coded strings in the layout files of random people. The switch may be long  but it is very easy to read.   As you suggest  we should delete the deprecated "Author" formatters.  Lets decide on this at the upcoming devcall!  || Just make sure that http://help.jabref.org/en/CustomExports/ is updated accordingly and note:  "Custom formatters  If none of the available formatters can do what you want to achieve  you can add your own by implementing the net.sf.jabref.export.layout.LayoutFormatter interface. If you insert your class into the net.sf.jabref.export.layout.format package  you can call the formatter by its class name only  like with the standard formatters. Otherwise  you must call the formatter by its fully qualified name (including package name). In any case  the formatter must be in your classpath when running JabRef."  (I do not have any opinion on this  just want to make sure that things are not obviously broken.)  || LGTM :+1:   || @tobiasdiez Could you open a new issue for your "By the way" thing and post the excerpt from the help page? I couldnt quickly find the paragraph youre referring to.  || 
1149,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,Replace NormalizeNamesFormatter by AuthorList and so fix #318 - Fixes #318 (and refs #950) - Removes comma as delimiter of author names (in NormalizenamesFormatter).   The problem is that comma separated authors cannot be distingued from one author in BibTeX format.   For example `Name  della  first` could be three names separated by commas or if interpreted as valid BibTeX string it is one author with lastnamename  jrpartdella  firstnamefirst. - Add colon as delimiter of author names (in AuthorListParser).  Thanks at all  but especially @oscargus  for creating many tests. Made implementing this PR way easier!  ##  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Looks very nice! :+1:  The MD thing is a bit challenging and either way we will do it wrong for one of the cases. If I were in medicine I would probably prefer not to expand MD (especially).  || LGTM   ||
1149,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,Replace NormalizeNamesFormatter by AuthorList and so fix #318 - Fixes #318 (and refs #950) - Removes comma as delimiter of author names (in NormalizenamesFormatter).   The problem is that comma separated authors cannot be distingued from one author in BibTeX format.   For example `Name  della  first` could be three names separated by commas or if interpreted as valid BibTeX string it is one author with lastnamename  jrpartdella  firstnamefirst. - Add colon as delimiter of author names (in AuthorListParser).  Thanks at all  but especially @oscargus  for creating many tests. Made implementing this PR way easier!  ##  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Looks very nice! :+1:  The MD thing is a bit challenging and either way we will do it wrong for one of the cases. If I were in medicine I would probably prefer not to expand MD (especially).  || LGTM   ||
1149,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Replace NormalizeNamesFormatter by AuthorList and so fix #318 - Fixes #318 (and refs #950) - Removes comma as delimiter of author names (in NormalizenamesFormatter).   The problem is that comma separated authors cannot be distingued from one author in BibTeX format.   For example `Name  della  first` could be three names separated by commas or if interpreted as valid BibTeX string it is one author with lastnamename  jrpartdella  firstnamefirst. - Add colon as delimiter of author names (in AuthorListParser).  Thanks at all  but especially @oscargus  for creating many tests. Made implementing this PR way easier!  ##  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Looks very nice! :+1:  The MD thing is a bit challenging and either way we will do it wrong for one of the cases. If I were in medicine I would probably prefer not to expand MD (especially).  || LGTM   ||
1149,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,Replace NormalizeNamesFormatter by AuthorList and so fix #318 - Fixes #318 (and refs #950) - Removes comma as delimiter of author names (in NormalizenamesFormatter).   The problem is that comma separated authors cannot be distingued from one author in BibTeX format.   For example `Name  della  first` could be three names separated by commas or if interpreted as valid BibTeX string it is one author with lastnamename  jrpartdella  firstnamefirst. - Add colon as delimiter of author names (in AuthorListParser).  Thanks at all  but especially @oscargus  for creating many tests. Made implementing this PR way easier!  ##  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Looks very nice! :+1:  The MD thing is a bit challenging and either way we will do it wrong for one of the cases. If I were in medicine I would probably prefer not to expand MD (especially).  || LGTM   ||
1149,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,1,Replace NormalizeNamesFormatter by AuthorList and so fix #318 - Fixes #318 (and refs #950) - Removes comma as delimiter of author names (in NormalizenamesFormatter).   The problem is that comma separated authors cannot be distingued from one author in BibTeX format.   For example `Name  della  first` could be three names separated by commas or if interpreted as valid BibTeX string it is one author with lastnamename  jrpartdella  firstnamefirst. - Add colon as delimiter of author names (in AuthorListParser).  Thanks at all  but especially @oscargus  for creating many tests. Made implementing this PR way easier!  ##  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Looks very nice! :+1:  The MD thing is a bit challenging and either way we will do it wrong for one of the cases. If I were in medicine I would probably prefer not to expand MD (especially).  || LGTM   ||
1149,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Replace NormalizeNamesFormatter by AuthorList and so fix #318 - Fixes #318 (and refs #950) - Removes comma as delimiter of author names (in NormalizenamesFormatter).   The problem is that comma separated authors cannot be distingued from one author in BibTeX format.   For example `Name  della  first` could be three names separated by commas or if interpreted as valid BibTeX string it is one author with lastnamename  jrpartdella  firstnamefirst. - Add colon as delimiter of author names (in AuthorListParser).  Thanks at all  but especially @oscargus  for creating many tests. Made implementing this PR way easier!  ##  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Looks very nice! :+1:  The MD thing is a bit challenging and either way we will do it wrong for one of the cases. If I were in medicine I would probably prefer not to expand MD (especially).  || LGTM   ||
1168,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix #1163 by removing the strange functionality which enabled sorting… We have some very strange logic in JabRef which allows to handle years using only the two last numbers  so we can detect that 68 means 1968. This causes a lot of issues. I do not think that JabRef should still support such strange logic  and just use the value which is in the year field.   Hence  I removed it.   This also solves the issue of having that YearUtil in the model package which duplicated a method in the StringUtil class.   Refs #1163 LGTM :+1:  || LGTM :+1:   || Should we readd YearUtil as a cleanup to convert two digit years to four digit years?  || If we add it  we should make use of the java 8 functionality instead of the own ugly parsing: http://stackoverflow.com/questions/32505490/how-to-change-the-base-date-for-parsing-two-letter-years-with-java-8-datetimefor  and this one: http://stackoverflow.com/questions/29490893/parsing-string-to-local-date-doesnt-use-desired-century  ||
1168,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,Fix #1163 by removing the strange functionality which enabled sorting… We have some very strange logic in JabRef which allows to handle years using only the two last numbers  so we can detect that 68 means 1968. This causes a lot of issues. I do not think that JabRef should still support such strange logic  and just use the value which is in the year field.   Hence  I removed it.   This also solves the issue of having that YearUtil in the model package which duplicated a method in the StringUtil class.   Refs #1163 LGTM :+1:  || LGTM :+1:   || Should we readd YearUtil as a cleanup to convert two digit years to four digit years?  || If we add it  we should make use of the java 8 functionality instead of the own ugly parsing: http://stackoverflow.com/questions/32505490/how-to-change-the-base-date-for-parsing-two-letter-years-with-java-8-datetimefor  and this one: http://stackoverflow.com/questions/29490893/parsing-string-to-local-date-doesnt-use-desired-century  ||
1168,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,1,0,Fix #1163 by removing the strange functionality which enabled sorting… We have some very strange logic in JabRef which allows to handle years using only the two last numbers  so we can detect that 68 means 1968. This causes a lot of issues. I do not think that JabRef should still support such strange logic  and just use the value which is in the year field.   Hence  I removed it.   This also solves the issue of having that YearUtil in the model package which duplicated a method in the StringUtil class.   Refs #1163 LGTM :+1:  || LGTM :+1:   || Should we readd YearUtil as a cleanup to convert two digit years to four digit years?  || If we add it  we should make use of the java 8 functionality instead of the own ugly parsing: http://stackoverflow.com/questions/32505490/how-to-change-the-base-date-for-parsing-two-letter-years-with-java-8-datetimefor  and this one: http://stackoverflow.com/questions/29490893/parsing-string-to-local-date-doesnt-use-desired-century  ||
1168,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix #1163 by removing the strange functionality which enabled sorting… We have some very strange logic in JabRef which allows to handle years using only the two last numbers  so we can detect that 68 means 1968. This causes a lot of issues. I do not think that JabRef should still support such strange logic  and just use the value which is in the year field.   Hence  I removed it.   This also solves the issue of having that YearUtil in the model package which duplicated a method in the StringUtil class.   Refs #1163 LGTM :+1:  || LGTM :+1:   || Should we readd YearUtil as a cleanup to convert two digit years to four digit years?  || If we add it  we should make use of the java 8 functionality instead of the own ugly parsing: http://stackoverflow.com/questions/32505490/how-to-change-the-base-date-for-parsing-two-letter-years-with-java-8-datetimefor  and this one: http://stackoverflow.com/questions/29490893/parsing-string-to-local-date-doesnt-use-desired-century  ||
1168,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,Fix #1163 by removing the strange functionality which enabled sorting… We have some very strange logic in JabRef which allows to handle years using only the two last numbers  so we can detect that 68 means 1968. This causes a lot of issues. I do not think that JabRef should still support such strange logic  and just use the value which is in the year field.   Hence  I removed it.   This also solves the issue of having that YearUtil in the model package which duplicated a method in the StringUtil class.   Refs #1163 LGTM :+1:  || LGTM :+1:   || Should we readd YearUtil as a cleanup to convert two digit years to four digit years?  || If we add it  we should make use of the java 8 functionality instead of the own ugly parsing: http://stackoverflow.com/questions/32505490/how-to-change-the-base-date-for-parsing-two-letter-years-with-java-8-datetimefor  and this one: http://stackoverflow.com/questions/29490893/parsing-string-to-local-date-doesnt-use-desired-century  ||
1168,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,Fix #1163 by removing the strange functionality which enabled sorting… We have some very strange logic in JabRef which allows to handle years using only the two last numbers  so we can detect that 68 means 1968. This causes a lot of issues. I do not think that JabRef should still support such strange logic  and just use the value which is in the year field.   Hence  I removed it.   This also solves the issue of having that YearUtil in the model package which duplicated a method in the StringUtil class.   Refs #1163 LGTM :+1:  || LGTM :+1:   || Should we readd YearUtil as a cleanup to convert two digit years to four digit years?  || If we add it  we should make use of the java 8 functionality instead of the own ugly parsing: http://stackoverflow.com/questions/32505490/how-to-change-the-base-date-for-parsing-two-letter-years-with-java-8-datetimefor  and this one: http://stackoverflow.com/questions/29490893/parsing-string-to-local-date-doesnt-use-desired-century  ||
1207,1,0,0,1,0,1,1,1,0,0,1,0,1,0,1,0,0,0,1,Restructure importers The aim of this PR is to reduce the overlap between the Importer package and some code in GUI (in particular  the class OpenDatabaseAction). Moreover  #1080 and #1153 are fixed.  In detail  the following things were changed: - The abstract `ImportFormat` class is almost completely rewritten. Please have a look at this class. Almost all other changes are a direct consequence of the edits made to the ImportFormat class. The biggest change is that the import method returns a `ParserResult` instead of a list of entries (in this way  metadata can also be imported and error messages are communicated more effectively instead of throwing IOExceptions). Moreover  the import method operates on a reader instead of an input stream in order to reduce some common code in all importers. -  Add method `importDatabase(Path file  Charset encoding)` to the importer interface which opens the file and passes the stream to the other import method. - The BibTexImporter overwrites this new import method and uses the logic from `OpenDatabaseAction.loadDatabase` to determine the encoding of the bib file. - Change OpenDatabaseAction to operate against the BibTex importer.  - Remove get/set isCustomImporter: was not really used (just for sorting - now everything is alphabetical) - Empty entries are no longer imported (thus a few test had to be changed)  Remark: The methods getExtension and getDescription are not implemented by almost any importer. This should be done. Maybe this is something for the stupro?  (Will add the changelog entry and add a few tests later) - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Any comments or can I rebase and merge?  || I do not fully understand why the getCLIId method is removed? How is the importer selected from CLI now?   Also  since there is a method setCliId  maybe that should change name as well (as it appears as getCLIId is sometimes replaces with getId  somehow  it seems like getCLIId is a better name  but no strong opinions).  Many changes are related to imports and replacing extension strings with a list of extension strings  right?  || Now I think I understand why. However  I think that getCLIId and getFormatName in general should return different things...  || Well  maybe I do not understand the code fully (again  tired)  but what I was worried about with getId does not seem to the case  so to me this looks good!  || There is a method getId (previously getCLIID) in ImportFormat which constructs the id based on the name of the formatter. Thus some of the hand-coded ids in the specific importers could be removed.  I couldnt find the method `setCLIID`. Where does it exists?  || I saw `"REPEC New Economic Papers (NEP)"` and then that getId() used that string which caused one comment  but then I saw the tests and realized that one wasnt supposed to type something like that. :-) Now  I also know why.  :+1:  || Waiting for the last #547 to be merged - then  this PR can clean up all the importer code uniformly.   || This is unblocked now. Go 4 it. :)  || 
1207,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Restructure importers The aim of this PR is to reduce the overlap between the Importer package and some code in GUI (in particular  the class OpenDatabaseAction). Moreover  #1080 and #1153 are fixed.  In detail  the following things were changed: - The abstract `ImportFormat` class is almost completely rewritten. Please have a look at this class. Almost all other changes are a direct consequence of the edits made to the ImportFormat class. The biggest change is that the import method returns a `ParserResult` instead of a list of entries (in this way  metadata can also be imported and error messages are communicated more effectively instead of throwing IOExceptions). Moreover  the import method operates on a reader instead of an input stream in order to reduce some common code in all importers. -  Add method `importDatabase(Path file  Charset encoding)` to the importer interface which opens the file and passes the stream to the other import method. - The BibTexImporter overwrites this new import method and uses the logic from `OpenDatabaseAction.loadDatabase` to determine the encoding of the bib file. - Change OpenDatabaseAction to operate against the BibTex importer.  - Remove get/set isCustomImporter: was not really used (just for sorting - now everything is alphabetical) - Empty entries are no longer imported (thus a few test had to be changed)  Remark: The methods getExtension and getDescription are not implemented by almost any importer. This should be done. Maybe this is something for the stupro?  (Will add the changelog entry and add a few tests later) - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Any comments or can I rebase and merge?  || I do not fully understand why the getCLIId method is removed? How is the importer selected from CLI now?   Also  since there is a method setCliId  maybe that should change name as well (as it appears as getCLIId is sometimes replaces with getId  somehow  it seems like getCLIId is a better name  but no strong opinions).  Many changes are related to imports and replacing extension strings with a list of extension strings  right?  || Now I think I understand why. However  I think that getCLIId and getFormatName in general should return different things...  || Well  maybe I do not understand the code fully (again  tired)  but what I was worried about with getId does not seem to the case  so to me this looks good!  || There is a method getId (previously getCLIID) in ImportFormat which constructs the id based on the name of the formatter. Thus some of the hand-coded ids in the specific importers could be removed.  I couldnt find the method `setCLIID`. Where does it exists?  || I saw `"REPEC New Economic Papers (NEP)"` and then that getId() used that string which caused one comment  but then I saw the tests and realized that one wasnt supposed to type something like that. :-) Now  I also know why.  :+1:  || Waiting for the last #547 to be merged - then  this PR can clean up all the importer code uniformly.   || This is unblocked now. Go 4 it. :)  || 
1207,1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,Restructure importers The aim of this PR is to reduce the overlap between the Importer package and some code in GUI (in particular  the class OpenDatabaseAction). Moreover  #1080 and #1153 are fixed.  In detail  the following things were changed: - The abstract `ImportFormat` class is almost completely rewritten. Please have a look at this class. Almost all other changes are a direct consequence of the edits made to the ImportFormat class. The biggest change is that the import method returns a `ParserResult` instead of a list of entries (in this way  metadata can also be imported and error messages are communicated more effectively instead of throwing IOExceptions). Moreover  the import method operates on a reader instead of an input stream in order to reduce some common code in all importers. -  Add method `importDatabase(Path file  Charset encoding)` to the importer interface which opens the file and passes the stream to the other import method. - The BibTexImporter overwrites this new import method and uses the logic from `OpenDatabaseAction.loadDatabase` to determine the encoding of the bib file. - Change OpenDatabaseAction to operate against the BibTex importer.  - Remove get/set isCustomImporter: was not really used (just for sorting - now everything is alphabetical) - Empty entries are no longer imported (thus a few test had to be changed)  Remark: The methods getExtension and getDescription are not implemented by almost any importer. This should be done. Maybe this is something for the stupro?  (Will add the changelog entry and add a few tests later) - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Any comments or can I rebase and merge?  || I do not fully understand why the getCLIId method is removed? How is the importer selected from CLI now?   Also  since there is a method setCliId  maybe that should change name as well (as it appears as getCLIId is sometimes replaces with getId  somehow  it seems like getCLIId is a better name  but no strong opinions).  Many changes are related to imports and replacing extension strings with a list of extension strings  right?  || Now I think I understand why. However  I think that getCLIId and getFormatName in general should return different things...  || Well  maybe I do not understand the code fully (again  tired)  but what I was worried about with getId does not seem to the case  so to me this looks good!  || There is a method getId (previously getCLIID) in ImportFormat which constructs the id based on the name of the formatter. Thus some of the hand-coded ids in the specific importers could be removed.  I couldnt find the method `setCLIID`. Where does it exists?  || I saw `"REPEC New Economic Papers (NEP)"` and then that getId() used that string which caused one comment  but then I saw the tests and realized that one wasnt supposed to type something like that. :-) Now  I also know why.  :+1:  || Waiting for the last #547 to be merged - then  this PR can clean up all the importer code uniformly.   || This is unblocked now. Go 4 it. :)  || 
1207,1,0,0,1,0,1,1,1,0,0,1,0,1,0,1,0,0,0,1,Restructure importers The aim of this PR is to reduce the overlap between the Importer package and some code in GUI (in particular  the class OpenDatabaseAction). Moreover  #1080 and #1153 are fixed.  In detail  the following things were changed: - The abstract `ImportFormat` class is almost completely rewritten. Please have a look at this class. Almost all other changes are a direct consequence of the edits made to the ImportFormat class. The biggest change is that the import method returns a `ParserResult` instead of a list of entries (in this way  metadata can also be imported and error messages are communicated more effectively instead of throwing IOExceptions). Moreover  the import method operates on a reader instead of an input stream in order to reduce some common code in all importers. -  Add method `importDatabase(Path file  Charset encoding)` to the importer interface which opens the file and passes the stream to the other import method. - The BibTexImporter overwrites this new import method and uses the logic from `OpenDatabaseAction.loadDatabase` to determine the encoding of the bib file. - Change OpenDatabaseAction to operate against the BibTex importer.  - Remove get/set isCustomImporter: was not really used (just for sorting - now everything is alphabetical) - Empty entries are no longer imported (thus a few test had to be changed)  Remark: The methods getExtension and getDescription are not implemented by almost any importer. This should be done. Maybe this is something for the stupro?  (Will add the changelog entry and add a few tests later) - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Any comments or can I rebase and merge?  || I do not fully understand why the getCLIId method is removed? How is the importer selected from CLI now?   Also  since there is a method setCliId  maybe that should change name as well (as it appears as getCLIId is sometimes replaces with getId  somehow  it seems like getCLIId is a better name  but no strong opinions).  Many changes are related to imports and replacing extension strings with a list of extension strings  right?  || Now I think I understand why. However  I think that getCLIId and getFormatName in general should return different things...  || Well  maybe I do not understand the code fully (again  tired)  but what I was worried about with getId does not seem to the case  so to me this looks good!  || There is a method getId (previously getCLIID) in ImportFormat which constructs the id based on the name of the formatter. Thus some of the hand-coded ids in the specific importers could be removed.  I couldnt find the method `setCLIID`. Where does it exists?  || I saw `"REPEC New Economic Papers (NEP)"` and then that getId() used that string which caused one comment  but then I saw the tests and realized that one wasnt supposed to type something like that. :-) Now  I also know why.  :+1:  || Waiting for the last #547 to be merged - then  this PR can clean up all the importer code uniformly.   || This is unblocked now. Go 4 it. :)  || 
1207,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,Restructure importers The aim of this PR is to reduce the overlap between the Importer package and some code in GUI (in particular  the class OpenDatabaseAction). Moreover  #1080 and #1153 are fixed.  In detail  the following things were changed: - The abstract `ImportFormat` class is almost completely rewritten. Please have a look at this class. Almost all other changes are a direct consequence of the edits made to the ImportFormat class. The biggest change is that the import method returns a `ParserResult` instead of a list of entries (in this way  metadata can also be imported and error messages are communicated more effectively instead of throwing IOExceptions). Moreover  the import method operates on a reader instead of an input stream in order to reduce some common code in all importers. -  Add method `importDatabase(Path file  Charset encoding)` to the importer interface which opens the file and passes the stream to the other import method. - The BibTexImporter overwrites this new import method and uses the logic from `OpenDatabaseAction.loadDatabase` to determine the encoding of the bib file. - Change OpenDatabaseAction to operate against the BibTex importer.  - Remove get/set isCustomImporter: was not really used (just for sorting - now everything is alphabetical) - Empty entries are no longer imported (thus a few test had to be changed)  Remark: The methods getExtension and getDescription are not implemented by almost any importer. This should be done. Maybe this is something for the stupro?  (Will add the changelog entry and add a few tests later) - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Any comments or can I rebase and merge?  || I do not fully understand why the getCLIId method is removed? How is the importer selected from CLI now?   Also  since there is a method setCliId  maybe that should change name as well (as it appears as getCLIId is sometimes replaces with getId  somehow  it seems like getCLIId is a better name  but no strong opinions).  Many changes are related to imports and replacing extension strings with a list of extension strings  right?  || Now I think I understand why. However  I think that getCLIId and getFormatName in general should return different things...  || Well  maybe I do not understand the code fully (again  tired)  but what I was worried about with getId does not seem to the case  so to me this looks good!  || There is a method getId (previously getCLIID) in ImportFormat which constructs the id based on the name of the formatter. Thus some of the hand-coded ids in the specific importers could be removed.  I couldnt find the method `setCLIID`. Where does it exists?  || I saw `"REPEC New Economic Papers (NEP)"` and then that getId() used that string which caused one comment  but then I saw the tests and realized that one wasnt supposed to type something like that. :-) Now  I also know why.  :+1:  || Waiting for the last #547 to be merged - then  this PR can clean up all the importer code uniformly.   || This is unblocked now. Go 4 it. :)  || 
1207,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Restructure importers The aim of this PR is to reduce the overlap between the Importer package and some code in GUI (in particular  the class OpenDatabaseAction). Moreover  #1080 and #1153 are fixed.  In detail  the following things were changed: - The abstract `ImportFormat` class is almost completely rewritten. Please have a look at this class. Almost all other changes are a direct consequence of the edits made to the ImportFormat class. The biggest change is that the import method returns a `ParserResult` instead of a list of entries (in this way  metadata can also be imported and error messages are communicated more effectively instead of throwing IOExceptions). Moreover  the import method operates on a reader instead of an input stream in order to reduce some common code in all importers. -  Add method `importDatabase(Path file  Charset encoding)` to the importer interface which opens the file and passes the stream to the other import method. - The BibTexImporter overwrites this new import method and uses the logic from `OpenDatabaseAction.loadDatabase` to determine the encoding of the bib file. - Change OpenDatabaseAction to operate against the BibTex importer.  - Remove get/set isCustomImporter: was not really used (just for sorting - now everything is alphabetical) - Empty entries are no longer imported (thus a few test had to be changed)  Remark: The methods getExtension and getDescription are not implemented by almost any importer. This should be done. Maybe this is something for the stupro?  (Will add the changelog entry and add a few tests later) - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Any comments or can I rebase and merge?  || I do not fully understand why the getCLIId method is removed? How is the importer selected from CLI now?   Also  since there is a method setCliId  maybe that should change name as well (as it appears as getCLIId is sometimes replaces with getId  somehow  it seems like getCLIId is a better name  but no strong opinions).  Many changes are related to imports and replacing extension strings with a list of extension strings  right?  || Now I think I understand why. However  I think that getCLIId and getFormatName in general should return different things...  || Well  maybe I do not understand the code fully (again  tired)  but what I was worried about with getId does not seem to the case  so to me this looks good!  || There is a method getId (previously getCLIID) in ImportFormat which constructs the id based on the name of the formatter. Thus some of the hand-coded ids in the specific importers could be removed.  I couldnt find the method `setCLIID`. Where does it exists?  || I saw `"REPEC New Economic Papers (NEP)"` and then that getId() used that string which caused one comment  but then I saw the tests and realized that one wasnt supposed to type something like that. :-) Now  I also know why.  :+1:  || Waiting for the last #547 to be merged - then  this PR can clean up all the importer code uniformly.   || This is unblocked now. Go 4 it. :)  || 
1215,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Improved conversion maps and conversion speed The HTML/Unicode <-> LaTeX conversion map source was based on regular expressions making it a jungle of backslashes. Now  replace is used instead of replaceAll so fewer backslashes and (theoretically) a bit faster.  I also added benchmarking for the following conversions: - HTML to LaTeX (used at import  cleanup and save action) - LaTeX to HTML (used for preview) - LaTeX to Unicode (used for table rendering)   and I got a slight improvement  although I cannot really tell why the two latter are faster now as they are based on cleaned versions... One reason might be that the tests are based on LaTeX symbols with more backslashes in them for the old case...  Before: Benchmarks.htmlToLatexConversion      5533.070 ▒   86.148  ops/s Benchmarks.latexToHTMLConversion     141500.226 ▒ 8011.038  ops/s Benchmarks.latexToUnicodeConversion  124527.930 ▒ 3984.776  ops/s  After: Benchmarks.htmlToLatexConversion     6153.450 ▒   114.716  ops/s Benchmarks.latexToHTMLConversion     168037.040 ▒ 13412.341  ops/s Benchmarks.latexToUnicodeConversion  173674.308 ▒  7455.006  ops/s  Here one can see that only searching the string to be converted once is far better than running replace on all possible characters. Which is not surprising  but require quite complicated code.  Finally  with the simpler strings it was easier to add most (all?) of the curly brackets required to solve #405 . With the benchmarks in place  you might also try out the recommendations of http://stackoverflow.com/questions/4285083/fastest-way-to-perform-a-lot-of-strings-replace-in-java and http://stackoverflow.com/questions/16228992/commons-lang-stringutils-replace-performance-vs-string-replace. . So using Apaches StringUtils.replace() and/or   > Dont make a pattern for every single replaceAll line  but try to combine them (regex has a OR operator) and let Pattern optimize the regex. Do use the compiled pattern and do not compile it in every call  its fairly expensive.  || At the moment there are (almost) only replace  so very few actual regexes. There are a few cases where the several characters are replaced with the same  so in those cases it may be worthwhile to use an or-regex.  Still  I think the way to go here (for HTML to LaTeX) would be to parse the string and once either HTML tags or HTML-encoded characters are found those are replaced  rather than blindly replacing all possible characters. In that way one can probably honor more tags as well.  || I would not prematurely optimize things which does not reduce the speed of JabRef.   || Except that optimizing code is quite fun. :speedboat:   Im quite sure #405 should be fixed now.  || What is the current state here? Can this be merged?  || This should be good to go now. Only better compared to the earlier version although of course  the "correct" way to convert can be argued infinitely...  || Thanks @oscargus :+1:   || 
1215,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,Improved conversion maps and conversion speed The HTML/Unicode <-> LaTeX conversion map source was based on regular expressions making it a jungle of backslashes. Now  replace is used instead of replaceAll so fewer backslashes and (theoretically) a bit faster.  I also added benchmarking for the following conversions: - HTML to LaTeX (used at import  cleanup and save action) - LaTeX to HTML (used for preview) - LaTeX to Unicode (used for table rendering)   and I got a slight improvement  although I cannot really tell why the two latter are faster now as they are based on cleaned versions... One reason might be that the tests are based on LaTeX symbols with more backslashes in them for the old case...  Before: Benchmarks.htmlToLatexConversion      5533.070 ▒   86.148  ops/s Benchmarks.latexToHTMLConversion     141500.226 ▒ 8011.038  ops/s Benchmarks.latexToUnicodeConversion  124527.930 ▒ 3984.776  ops/s  After: Benchmarks.htmlToLatexConversion     6153.450 ▒   114.716  ops/s Benchmarks.latexToHTMLConversion     168037.040 ▒ 13412.341  ops/s Benchmarks.latexToUnicodeConversion  173674.308 ▒  7455.006  ops/s  Here one can see that only searching the string to be converted once is far better than running replace on all possible characters. Which is not surprising  but require quite complicated code.  Finally  with the simpler strings it was easier to add most (all?) of the curly brackets required to solve #405 . With the benchmarks in place  you might also try out the recommendations of http://stackoverflow.com/questions/4285083/fastest-way-to-perform-a-lot-of-strings-replace-in-java and http://stackoverflow.com/questions/16228992/commons-lang-stringutils-replace-performance-vs-string-replace. . So using Apaches StringUtils.replace() and/or   > Dont make a pattern for every single replaceAll line  but try to combine them (regex has a OR operator) and let Pattern optimize the regex. Do use the compiled pattern and do not compile it in every call  its fairly expensive.  || At the moment there are (almost) only replace  so very few actual regexes. There are a few cases where the several characters are replaced with the same  so in those cases it may be worthwhile to use an or-regex.  Still  I think the way to go here (for HTML to LaTeX) would be to parse the string and once either HTML tags or HTML-encoded characters are found those are replaced  rather than blindly replacing all possible characters. In that way one can probably honor more tags as well.  || I would not prematurely optimize things which does not reduce the speed of JabRef.   || Except that optimizing code is quite fun. :speedboat:   Im quite sure #405 should be fixed now.  || What is the current state here? Can this be merged?  || This should be good to go now. Only better compared to the earlier version although of course  the "correct" way to convert can be argued infinitely...  || Thanks @oscargus :+1:   || 
1215,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Improved conversion maps and conversion speed The HTML/Unicode <-> LaTeX conversion map source was based on regular expressions making it a jungle of backslashes. Now  replace is used instead of replaceAll so fewer backslashes and (theoretically) a bit faster.  I also added benchmarking for the following conversions: - HTML to LaTeX (used at import  cleanup and save action) - LaTeX to HTML (used for preview) - LaTeX to Unicode (used for table rendering)   and I got a slight improvement  although I cannot really tell why the two latter are faster now as they are based on cleaned versions... One reason might be that the tests are based on LaTeX symbols with more backslashes in them for the old case...  Before: Benchmarks.htmlToLatexConversion      5533.070 ▒   86.148  ops/s Benchmarks.latexToHTMLConversion     141500.226 ▒ 8011.038  ops/s Benchmarks.latexToUnicodeConversion  124527.930 ▒ 3984.776  ops/s  After: Benchmarks.htmlToLatexConversion     6153.450 ▒   114.716  ops/s Benchmarks.latexToHTMLConversion     168037.040 ▒ 13412.341  ops/s Benchmarks.latexToUnicodeConversion  173674.308 ▒  7455.006  ops/s  Here one can see that only searching the string to be converted once is far better than running replace on all possible characters. Which is not surprising  but require quite complicated code.  Finally  with the simpler strings it was easier to add most (all?) of the curly brackets required to solve #405 . With the benchmarks in place  you might also try out the recommendations of http://stackoverflow.com/questions/4285083/fastest-way-to-perform-a-lot-of-strings-replace-in-java and http://stackoverflow.com/questions/16228992/commons-lang-stringutils-replace-performance-vs-string-replace. . So using Apaches StringUtils.replace() and/or   > Dont make a pattern for every single replaceAll line  but try to combine them (regex has a OR operator) and let Pattern optimize the regex. Do use the compiled pattern and do not compile it in every call  its fairly expensive.  || At the moment there are (almost) only replace  so very few actual regexes. There are a few cases where the several characters are replaced with the same  so in those cases it may be worthwhile to use an or-regex.  Still  I think the way to go here (for HTML to LaTeX) would be to parse the string and once either HTML tags or HTML-encoded characters are found those are replaced  rather than blindly replacing all possible characters. In that way one can probably honor more tags as well.  || I would not prematurely optimize things which does not reduce the speed of JabRef.   || Except that optimizing code is quite fun. :speedboat:   Im quite sure #405 should be fixed now.  || What is the current state here? Can this be merged?  || This should be good to go now. Only better compared to the earlier version although of course  the "correct" way to convert can be argued infinitely...  || Thanks @oscargus :+1:   || 
1217,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,Added integrity checker for odd number of # Will sometimes help for #1212 and #1188 LGTM :+1: I think we slowly approach the point where it might make sense to extract the checkers as separate classes. @simonharrer what do you think?  || Hm  yes  would make sense @tobiasdiez . I would merge this in with the current structure but for the next checker we should create separate classes.   || Go ahead an merge this in.  ||
1217,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Added integrity checker for odd number of # Will sometimes help for #1212 and #1188 LGTM :+1: I think we slowly approach the point where it might make sense to extract the checkers as separate classes. @simonharrer what do you think?  || Hm  yes  would make sense @tobiasdiez . I would merge this in with the current structure but for the next checker we should create separate classes.   || Go ahead an merge this in.  ||
1217,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Added integrity checker for odd number of # Will sometimes help for #1212 and #1188 LGTM :+1: I think we slowly approach the point where it might make sense to extract the checkers as separate classes. @simonharrer what do you think?  || Hm  yes  would make sense @tobiasdiez . I would merge this in with the current structure but for the next checker we should create separate classes.   || Go ahead an merge this in.  ||
1217,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,Added integrity checker for odd number of # Will sometimes help for #1212 and #1188 LGTM :+1: I think we slowly approach the point where it might make sense to extract the checkers as separate classes. @simonharrer what do you think?  || Hm  yes  would make sense @tobiasdiez . I would merge this in with the current structure but for the next checker we should create separate classes.   || Go ahead an merge this in.  ||
1217,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Added integrity checker for odd number of # Will sometimes help for #1212 and #1188 LGTM :+1: I think we slowly approach the point where it might make sense to extract the checkers as separate classes. @simonharrer what do you think?  || Hm  yes  would make sense @tobiasdiez . I would merge this in with the current structure but for the next checker we should create separate classes.   || Go ahead an merge this in.  ||
1217,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Added integrity checker for odd number of # Will sometimes help for #1212 and #1188 LGTM :+1: I think we slowly approach the point where it might make sense to extract the checkers as separate classes. @simonharrer what do you think?  || Hm  yes  would make sense @tobiasdiez . I would merge this in with the current structure but for the next checker we should create separate classes.   || Go ahead an merge this in.  ||
1229,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix #1091 apply and ensure correct import sort order See #1091 :+1:  || LGTM :+1:   ||
1229,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,Fix #1091 apply and ensure correct import sort order See #1091 :+1:  || LGTM :+1:   ||
1229,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix #1091 apply and ensure correct import sort order See #1091 :+1:  || LGTM :+1:   ||
1229,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix #1091 apply and ensure correct import sort order See #1091 :+1:  || LGTM :+1:   ||
1229,1,0,0,1,0,1,1,0,0,0,1,0,1,1,1,1,1,1,1,Fix #1091 apply and ensure correct import sort order See #1091 :+1:  || LGTM :+1:   ||
1229,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Fix #1091 apply and ensure correct import sort order See #1091 :+1:  || LGTM :+1:   ||
1238,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Added integrity checker to detect HTML encoded characters in fields Based on discussions in #1188 :+1: LGTM  || @oscargus in the url field  your detection now finds html encoded characters. Maybe we should exclude the check for the url field?  || @oscargus same holds true for the odd number of unescaped # warning  which also occurs in a url field of mine.   ||
1238,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,1,0,1,Added integrity checker to detect HTML encoded characters in fields Based on discussions in #1188 :+1: LGTM  || @oscargus in the url field  your detection now finds html encoded characters. Maybe we should exclude the check for the url field?  || @oscargus same holds true for the odd number of unescaped # warning  which also occurs in a url field of mine.   ||
1238,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,Added integrity checker to detect HTML encoded characters in fields Based on discussions in #1188 :+1: LGTM  || @oscargus in the url field  your detection now finds html encoded characters. Maybe we should exclude the check for the url field?  || @oscargus same holds true for the odd number of unescaped # warning  which also occurs in a url field of mine.   ||
1246,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fixed #1245 This should fix #1245 so that it is possible to set empty strings is jstyle-files as `key""` LGTM but can you please add a test for the fix.  || Yes  but not right now. Good point!  || Could you please add a test for it so we can merge this in :smile: ? We already closed the related issue.  || Done! Will merge when I see that the tests pass.  ||
1246,1,0,0,1,1,1,1,1,0,0,1,0,1,1,1,1,1,0,1,Fixed #1245 This should fix #1245 so that it is possible to set empty strings is jstyle-files as `key""` LGTM but can you please add a test for the fix.  || Yes  but not right now. Good point!  || Could you please add a test for it so we can merge this in :smile: ? We already closed the related issue.  || Done! Will merge when I see that the tests pass.  ||
1246,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixed #1245 This should fix #1245 so that it is possible to set empty strings is jstyle-files as `key""` LGTM but can you please add a test for the fix.  || Yes  but not right now. Good point!  || Could you please add a test for it so we can merge this in :smile: ? We already closed the related issue.  || Done! Will merge when I see that the tests pass.  ||
1246,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fixed #1245 This should fix #1245 so that it is possible to set empty strings is jstyle-files as `key""` LGTM but can you please add a test for the fix.  || Yes  but not right now. Good point!  || Could you please add a test for it so we can merge this in :smile: ? We already closed the related issue.  || Done! Will merge when I see that the tests pass.  ||
1246,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Fixed #1245 This should fix #1245 so that it is possible to set empty strings is jstyle-files as `key""` LGTM but can you please add a test for the fix.  || Yes  but not right now. Good point!  || Could you please add a test for it so we can merge this in :smile: ? We already closed the related issue.  || Done! Will merge when I see that the tests pass.  ||
1246,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,Fixed #1245 This should fix #1245 so that it is possible to set empty strings is jstyle-files as `key""` LGTM but can you please add a test for the fix.  || Yes  but not right now. Good point!  || Could you please add a test for it so we can merge this in :smile: ? We already closed the related issue.  || Done! Will merge when I see that the tests pass.  ||
1278,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Tried to fix #1251  but all tests pass... Will merge this in if the tests all pass on the ci server. - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes)  
1278,1,0,0,1,0,0,1,0,1,1,1,0,1,1,1,1,1,0,1,Tried to fix #1251  but all tests pass... Will merge this in if the tests all pass on the ci server. - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes)  
1278,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Tried to fix #1251  but all tests pass... Will merge this in if the tests all pass on the ci server. - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes)  
1281,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,Replace BibtexEntryAssert by overwriting BibEntry.equals method As proposed in #625 a proper BibEntry.equals is provided in this PR and used for the tests.   This as a few advantages: - detect differences which are not visible in the canonical string representation (so far this hit empty fields and different line breaks) - get more meaningful test-failure messages for lists (instead of "expected 2 got 3" the added entry is displayed) - Assert.assertEquals just works and no custom written assertEquals method has to be used  I clicked around a bit  but couldnt find any unexpected side effects due to the overwritten equals method.   If this PR is accepted  then I would inline the BibtexEntryAssert.assertEquals methods. - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Great stuff! Love it :heart:   || LGTM :+1:   || LGTM  ||
1281,1,0,1,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Replace BibtexEntryAssert by overwriting BibEntry.equals method As proposed in #625 a proper BibEntry.equals is provided in this PR and used for the tests.   This as a few advantages: - detect differences which are not visible in the canonical string representation (so far this hit empty fields and different line breaks) - get more meaningful test-failure messages for lists (instead of "expected 2 got 3" the added entry is displayed) - Assert.assertEquals just works and no custom written assertEquals method has to be used  I clicked around a bit  but couldnt find any unexpected side effects due to the overwritten equals method.   If this PR is accepted  then I would inline the BibtexEntryAssert.assertEquals methods. - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Great stuff! Love it :heart:   || LGTM :+1:   || LGTM  ||
1281,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,Replace BibtexEntryAssert by overwriting BibEntry.equals method As proposed in #625 a proper BibEntry.equals is provided in this PR and used for the tests.   This as a few advantages: - detect differences which are not visible in the canonical string representation (so far this hit empty fields and different line breaks) - get more meaningful test-failure messages for lists (instead of "expected 2 got 3" the added entry is displayed) - Assert.assertEquals just works and no custom written assertEquals method has to be used  I clicked around a bit  but couldnt find any unexpected side effects due to the overwritten equals method.   If this PR is accepted  then I would inline the BibtexEntryAssert.assertEquals methods. - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Great stuff! Love it :heart:   || LGTM :+1:   || LGTM  ||
1282,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix #1271: Authors with compound first names are parsed properly - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Looks good!  || LGTM  Please rebase and merge  || Thanks! Fixed in JabRef-3.4dev--snapshot--2016-04-29--master--694840a.jar  ||
1282,1,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,Fix #1271: Authors with compound first names are parsed properly - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Looks good!  || LGTM  Please rebase and merge  || Thanks! Fixed in JabRef-3.4dev--snapshot--2016-04-29--master--694840a.jar  ||
1298,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,Added option to copy version information in the about dialog Added option to copy version information of JabRef in the about dialog as described in #871 . This will help with filing issues and bug reports as the version of JabRef  OS and Java will be copied.  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Screenshots added (for bigger UI changes)  ![screen shot 2016-04-25 at 22 38 58](https://cloud.githubusercontent.com/assets/15340757/14798171/915a5bbc-0b36-11e6-8bbf-b01cb100b2cd.png) Just one minor comment  otherwise this looks good. Please rebase.  || ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/1298?srcpr) is **27.49%**  > Merging [#1298](https://codecov.io/gh/JabRef/jabref/pull/1298?srcpr) into [master](https://codecov.io/gh/JabRef/jabref/branch/master?srcpr) will decrease coverage by **-<.01%**  ``` diff @@             master      #1298   diff @@    Files           694        696     +2      Lines         46259      46419   +160      Methods           0          0             Messages          0          0             Branches       7650       7677    +27     + Hits          12755      12760     +5    - Misses        32404      32555   +151    - Partials       1100       1104     +4    ``` 1. 3 files (not in diff) in `.../net/sf/jabref/logic` were deleted. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F676963) 2. 1 files (not in diff) in `...n/java/net/sf/jabref` were deleted. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A6162726566) 3. 2 files (not in diff) in `...bref/logic/formatter` were created. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F666F726D6174746572) 4. 2 files (not in diff) in `...jabref/logic/cleanup` were created. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F636C65616E7570) 5. 1 files (not in diff) in `...n/java/net/sf/jabref` were created. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A6162726566) 6. 4 files (not in diff) in `...f/jabref/model/entry` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6D6F64656C2F656E747279)     - Misses `+8`     - Hits `-12` 7. 5 files (not in diff) in `.../jabref/logic/groups` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F67726F757073)     - Misses `+22`     - Partials `+3`     - Hits `-1` 8. 3 files (not in diff) in `...jabref/logic/cleanup` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F636C65616E7570)     - Misses `+6`     - Hits `+8` 9. 3 files (not in diff) in `.../net/sf/jabref/logic` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F676963)     - Misses `-2`     - Partials `-2`     - Hits `-2` 10. 3 files (not in diff) in `...t/sf/jabref/importer` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F696D706F72746572)      - Misses `-5`      - Partials `+1`      - Hits `-1`  > Powered by [Codecov](https://codecov.io?srcpr). Last updated by [7230a80...941240f](https://codecov.io/gh/JabRef/jabref/compare/7230a809da3e138e362b56366043c4a18b267ca1...941240f674c02e07a8aae88010b1c0f9dd4a3a6f)  ||
1298,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,Added option to copy version information in the about dialog Added option to copy version information of JabRef in the about dialog as described in #871 . This will help with filing issues and bug reports as the version of JabRef  OS and Java will be copied.  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Screenshots added (for bigger UI changes)  ![screen shot 2016-04-25 at 22 38 58](https://cloud.githubusercontent.com/assets/15340757/14798171/915a5bbc-0b36-11e6-8bbf-b01cb100b2cd.png) Just one minor comment  otherwise this looks good. Please rebase.  || ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/1298?srcpr) is **27.49%**  > Merging [#1298](https://codecov.io/gh/JabRef/jabref/pull/1298?srcpr) into [master](https://codecov.io/gh/JabRef/jabref/branch/master?srcpr) will decrease coverage by **-<.01%**  ``` diff @@             master      #1298   diff @@    Files           694        696     +2      Lines         46259      46419   +160      Methods           0          0             Messages          0          0             Branches       7650       7677    +27     + Hits          12755      12760     +5    - Misses        32404      32555   +151    - Partials       1100       1104     +4    ``` 1. 3 files (not in diff) in `.../net/sf/jabref/logic` were deleted. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F676963) 2. 1 files (not in diff) in `...n/java/net/sf/jabref` were deleted. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A6162726566) 3. 2 files (not in diff) in `...bref/logic/formatter` were created. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F666F726D6174746572) 4. 2 files (not in diff) in `...jabref/logic/cleanup` were created. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F636C65616E7570) 5. 1 files (not in diff) in `...n/java/net/sf/jabref` were created. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A6162726566) 6. 4 files (not in diff) in `...f/jabref/model/entry` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6D6F64656C2F656E747279)     - Misses `+8`     - Hits `-12` 7. 5 files (not in diff) in `.../jabref/logic/groups` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F67726F757073)     - Misses `+22`     - Partials `+3`     - Hits `-1` 8. 3 files (not in diff) in `...jabref/logic/cleanup` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F6769632F636C65616E7570)     - Misses `+6`     - Hits `+8` 9. 3 files (not in diff) in `.../net/sf/jabref/logic` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6C6F676963)     - Misses `-2`     - Partials `-2`     - Hits `-2` 10. 3 files (not in diff) in `...t/sf/jabref/importer` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/941240f674c02e07a8aae88010b1c0f9dd4a3a6f/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F696D706F72746572)      - Misses `-5`      - Partials `+1`      - Hits `-1`  > Powered by [Codecov](https://codecov.io?srcpr). Last updated by [7230a80...941240f](https://codecov.io/gh/JabRef/jabref/compare/7230a809da3e138e362b56366043c4a18b267ca1...941240f674c02e07a8aae88010b1c0f9dd4a3a6f)  ||
1300,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Resolves #1290 Change Jabref help to Online help - All translations must be added again LGTM  ||
1300,1,0,0,1,1,1,1,0,0,1,1,0,1,0,1,1,1,0,1,Resolves #1290 Change Jabref help to Online help - All translations must be added again LGTM  ||
1304,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Implemented Jstyle file filter and opening in last dir Filter filter for jstyle files #1294  Extended BrowseAction to display file filter Fixed NPE when selecting invalid jstyle (prevented style dialog from opening) - [X ] Change in CHANGELOG.md described LGTM  || @simonharrer Would you merge this in?  ||
1304,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Implemented Jstyle file filter and opening in last dir Filter filter for jstyle files #1294  Extended BrowseAction to display file filter Fixed NPE when selecting invalid jstyle (prevented style dialog from opening) - [X ] Change in CHANGELOG.md described LGTM  || @simonharrer Would you merge this in?  ||
1310,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix #1295 NPE when sorting tabs - Selected tab might be null when sorting tabs - The logic is really strange in general  so this fixes the problem but we need to rework the actions enabling in general imho.  
1310,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,Fix #1295 NPE when sorting tabs - Selected tab might be null when sorting tabs - The logic is really strange in general  so this fixes the problem but we need to rework the actions enabling in general imho.  
1318,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,Update Localization instructions Corrected gradlew task name #1312  @koppor  @stefan-kolb Please check the order of the imports: https://travis-ci.org/JabRef/jabref/builds/126478088  || Hm  will check my Eclipse settings again .  || `gradlew eclipse` should be enough --> We are generating the correct settings. No need for manual intervention.  || @koppor  Fixed the import order. The setting was not activated in my Eclipse saving options.   || ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/1318?srcpr) is **27.51%**  > Merging [#1318](https://codecov.io/gh/JabRef/jabref/pull/1318?srcpr) into [master](https://codecov.io/gh/JabRef/jabref/branch/master?srcpr) will not change coverage  ``` diff @@             master      #1318   diff @@    Files           695        695             Lines         46382      46382             Methods           0          0             Messages          0          0             Branches       7677       7677              Hits          12760      12760             Misses        32518      32518             Partials       1104       1104           ```  > Powered by [Codecov](https://codecov.io?srcpr). Last updated by [1aa2145...522607b](https://codecov.io/gh/JabRef/jabref/compare/1aa214510eee23cc586aad116780e4a875538e00...522607b2804067a4d52c4444fd2238a480d9f0a2)  || LGTM :+1:  ||
1318,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Update Localization instructions Corrected gradlew task name #1312  @koppor  @stefan-kolb Please check the order of the imports: https://travis-ci.org/JabRef/jabref/builds/126478088  || Hm  will check my Eclipse settings again .  || `gradlew eclipse` should be enough --> We are generating the correct settings. No need for manual intervention.  || @koppor  Fixed the import order. The setting was not activated in my Eclipse saving options.   || ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/1318?srcpr) is **27.51%**  > Merging [#1318](https://codecov.io/gh/JabRef/jabref/pull/1318?srcpr) into [master](https://codecov.io/gh/JabRef/jabref/branch/master?srcpr) will not change coverage  ``` diff @@             master      #1318   diff @@    Files           695        695             Lines         46382      46382             Methods           0          0             Messages          0          0             Branches       7677       7677              Hits          12760      12760             Misses        32518      32518             Partials       1104       1104           ```  > Powered by [Codecov](https://codecov.io?srcpr). Last updated by [1aa2145...522607b](https://codecov.io/gh/JabRef/jabref/compare/1aa214510eee23cc586aad116780e4a875538e00...522607b2804067a4d52c4444fd2238a480d9f0a2)  || LGTM :+1:  ||
1336,1,0,0,0,1,1,1,0,1,0,1,0,1,0,1,1,0,0,1,Refactor Open and Save Dialogs Complete Refactoring of the ugly and propably outdated FileDialogs code NewFileDialogs will be renamed when the work is done Atm I want to keep it parallel.  TODO: - [x] Refactor getMultpleFiles  - [x] Provide methods for other Open and Save Dialogs  - [x] Replace OpenFileFilter with FileNameExtensionFilter  http://docs.oracle.com/javase/8/docs/api/javax/swing/filechooser/FileNameExtensionFilter.html - [x] Refactor BrowseAction to use new the Methods - [x] Test #1324  again Good idea to refactor the file dialogs :+1:. Just one small comment so far: could you please make the methods non-static (and probably move the passed frame to the constructor). In this way the code becomes more testable because the file dialog can be mocked away.  || @tobiasdiez  Yes  I already came up with a solution for this. I will probably use some kind of FactorPattern to create the dialogs. That reduces the number of constructors/method overloads.  || ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/1336?srcpr) is **27.54%**  > Merging [#1336](https://codecov.io/gh/JabRef/jabref/pull/1336?srcpr) into [master](https://codecov.io/gh/JabRef/jabref/branch/master?srcpr) will increase coverage by **+<.01%**  ``` diff @@             master      #1336   diff @@    Files           694        696     +2      Lines         46262      46335    +73      Methods           0          0             Messages          0          0             Branches       7649       7655     +6     + Hits          12733      12759    +26    - Misses        32432      32476    +44    - Partials       1097       1100     +3    ``` 1. 2 files (not in diff) in `...va/net/sf/jabref/gui` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/5371fd432d2d250943be418839a3f95965609ce5/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F677569)     - Misses `-2`     - Partials `+3`     - Hits `+22` 2. 1 files (not in diff) in `...n/java/net/sf/jabref` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/5371fd432d2d250943be418839a3f95965609ce5/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A6162726566)     - Hits `+4` 3. File `...ClipboardAction.java` (not in diff) was created. [more](https://codecov.io/gh/JabRef/jabref/commit/5371fd432d2d250943be418839a3f95965609ce5/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6775692F616374696F6E732F436F707956657273696F6E546F436C6970626F617264416374696F6E2E6A617661)  > Powered by [Codecov](https://codecov.io?srcpr). Last updated by [71eca69...5371fd4](https://codecov.io/gh/JabRef/jabref/compare/71eca696817ab9d4099937e52db627562e851934...5371fd432d2d250943be418839a3f95965609ce5)  || What is the status here? Id love to see these changes inside JabRef 3.5!  || Unfortunately I have not that much time atm. But I will try to see how far I get the next days. Mabye at the weekend I can get some time for it. Atm another project ist due on sunday... )  || Got some time working on it.  || Ready for review.  || I really like the new FileDialog class and its fluent interface. The code needs some cleanup in general (remove commented-out code and debug prints  no abbreviations  ...) and then I think it is good to go.  || Adressed comments. @tobiasdiez  Not sure if I understand you right on how I should handle the WorkingDir-Prefs-stuff. To me it does not make sense to pass the Working dir to the constructor from an external call. It would create unnecessary dependencies to the prefs.  Or what was your idea?  || @oscargus  Could you please have a look why the `cleanupCasesAddsBracketAroundAluminiumGalliumArsenid` test is failing? Locally all is okay for me. I have no idea what it could cause on Travis.  And I didnt touch any of the cleanup code in this PR . :confused:   ||
1336,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,Refactor Open and Save Dialogs Complete Refactoring of the ugly and propably outdated FileDialogs code NewFileDialogs will be renamed when the work is done Atm I want to keep it parallel.  TODO: - [x] Refactor getMultpleFiles  - [x] Provide methods for other Open and Save Dialogs  - [x] Replace OpenFileFilter with FileNameExtensionFilter  http://docs.oracle.com/javase/8/docs/api/javax/swing/filechooser/FileNameExtensionFilter.html - [x] Refactor BrowseAction to use new the Methods - [x] Test #1324  again Good idea to refactor the file dialogs :+1:. Just one small comment so far: could you please make the methods non-static (and probably move the passed frame to the constructor). In this way the code becomes more testable because the file dialog can be mocked away.  || @tobiasdiez  Yes  I already came up with a solution for this. I will probably use some kind of FactorPattern to create the dialogs. That reduces the number of constructors/method overloads.  || ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/1336?srcpr) is **27.54%**  > Merging [#1336](https://codecov.io/gh/JabRef/jabref/pull/1336?srcpr) into [master](https://codecov.io/gh/JabRef/jabref/branch/master?srcpr) will increase coverage by **+<.01%**  ``` diff @@             master      #1336   diff @@    Files           694        696     +2      Lines         46262      46335    +73      Methods           0          0             Messages          0          0             Branches       7649       7655     +6     + Hits          12733      12759    +26    - Misses        32432      32476    +44    - Partials       1097       1100     +3    ``` 1. 2 files (not in diff) in `...va/net/sf/jabref/gui` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/5371fd432d2d250943be418839a3f95965609ce5/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F677569)     - Misses `-2`     - Partials `+3`     - Hits `+22` 2. 1 files (not in diff) in `...n/java/net/sf/jabref` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/5371fd432d2d250943be418839a3f95965609ce5/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A6162726566)     - Hits `+4` 3. File `...ClipboardAction.java` (not in diff) was created. [more](https://codecov.io/gh/JabRef/jabref/commit/5371fd432d2d250943be418839a3f95965609ce5/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F6775692F616374696F6E732F436F707956657273696F6E546F436C6970626F617264416374696F6E2E6A617661)  > Powered by [Codecov](https://codecov.io?srcpr). Last updated by [71eca69...5371fd4](https://codecov.io/gh/JabRef/jabref/compare/71eca696817ab9d4099937e52db627562e851934...5371fd432d2d250943be418839a3f95965609ce5)  || What is the status here? Id love to see these changes inside JabRef 3.5!  || Unfortunately I have not that much time atm. But I will try to see how far I get the next days. Mabye at the weekend I can get some time for it. Atm another project ist due on sunday... )  || Got some time working on it.  || Ready for review.  || I really like the new FileDialog class and its fluent interface. The code needs some cleanup in general (remove commented-out code and debug prints  no abbreviations  ...) and then I think it is good to go.  || Adressed comments. @tobiasdiez  Not sure if I understand you right on how I should handle the WorkingDir-Prefs-stuff. To me it does not make sense to pass the Working dir to the constructor from an external call. It would create unnecessary dependencies to the prefs.  Or what was your idea?  || @oscargus  Could you please have a look why the `cleanupCasesAddsBracketAroundAluminiumGalliumArsenid` test is failing? Locally all is okay for me. I have no idea what it could cause on Travis.  And I didnt touch any of the cleanup code in this PR . :confused:   ||
1349,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,Fix #1347 Open URLs does not work with query strings This should work with query strings like `http://books.google.de/books?id0yaM63MuqckC&lpgPA153&ots0H7EqpbM79&lr&hlde&pgPA153#vonepage&q&ffalse` and normal URLs.  However  the question is: Does this impact the opening of any other file path or anything? We need to be careful as this is a generic open method. Maybe thats also the problem because it needs to handle any kind of URI.  @Siedlerchr @tobiasdiez Please take a look. Tested it. Works  but requires for Urls a http:// to be present. a simple `www.google.de` does not work. But it also does not work with `explorer "www.google.de"` from the start menu. So I assume this is some windows behaviour.  It would be nice to have a cleanup for this then or maybe we should automatically do this.  || 
1349,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,Fix #1347 Open URLs does not work with query strings This should work with query strings like `http://books.google.de/books?id0yaM63MuqckC&lpgPA153&ots0H7EqpbM79&lr&hlde&pgPA153#vonepage&q&ffalse` and normal URLs.  However  the question is: Does this impact the opening of any other file path or anything? We need to be careful as this is a generic open method. Maybe thats also the problem because it needs to handle any kind of URI.  @Siedlerchr @tobiasdiez Please take a look. Tested it. Works  but requires for Urls a http:// to be present. a simple `www.google.de` does not work. But it also does not work with `explorer "www.google.de"` from the start menu. So I assume this is some windows behaviour.  It would be nice to have a cleanup for this then or maybe we should automatically do this.  || 
1350,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,Fix NPE on selecting invalid jstyle Follow up from #1294   NPE was raised in Comparator because name was initialized with null instead of Empty string Only store preferences if style is valid  @oscargus  The fix has the side effect that a file where the name can not be parsed correctly is displayed as "Empty style". I attached the problematic style file which was provided in #1294  However: Valid still returns true.  As you have worked recently with the styles things  do you know what is required for a jstyle? @koppor  Maybe you know this? Then we could improved the validity check   [campus_format.english.txt](https://github.com/JabRef/jabref/files/247561/campus_format.english.txt) ![emptyjstyle](https://cloud.githubusercontent.com/assets/320228/14995084/4d8c3a3e-1173-11e6-8eb6-e8f5490ffa5e.png) I suggest merging this. For the discussion on a validity checker for ooStyle I will create a new Issue.  ||
1350,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,Fix NPE on selecting invalid jstyle Follow up from #1294   NPE was raised in Comparator because name was initialized with null instead of Empty string Only store preferences if style is valid  @oscargus  The fix has the side effect that a file where the name can not be parsed correctly is displayed as "Empty style". I attached the problematic style file which was provided in #1294  However: Valid still returns true.  As you have worked recently with the styles things  do you know what is required for a jstyle? @koppor  Maybe you know this? Then we could improved the validity check   [campus_format.english.txt](https://github.com/JabRef/jabref/files/247561/campus_format.english.txt) ![emptyjstyle](https://cloud.githubusercontent.com/assets/320228/14995084/4d8c3a3e-1173-11e6-8eb6-e8f5490ffa5e.png) I suggest merging this. For the discussion on a validity checker for ooStyle I will create a new Issue.  ||
1355,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Update Preview Panel on Generate BibtexKey Fix for #1353 Fixed some missing unlocks Some formatting - [X] Change in CHANGELOG.md described ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/1355?srcpr) is **27.56%**  > Merging [#1355](https://codecov.io/gh/JabRef/jabref/pull/1355?srcpr) into [master](https://codecov.io/gh/JabRef/jabref/branch/master?srcpr) will increase coverage by **+<.01%**  ``` diff @@             master      #1355   diff @@    Files           695        695             Lines         46296      46294     -2      Methods           0          0             Messages          0          0             Branches       7650       7650              Hits          12759      12759           + Misses        32437      32435     -2      Partials       1100       1100           ``` 1. 2 files (not in diff) in `...va/net/sf/jabref/gui` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/08c87479978059d5ab487326d07f25af6d111c12/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F677569)     - Misses `-2`  > Powered by [Codecov](https://codecov.io?srcpr). Last updated by [f968736...08c8747](https://codecov.io/gh/JabRef/jabref/compare/f9687367e8b9fe67c02ec59169581430e5d87067...08c87479978059d5ab487326d07f25af6d111c12)  || ATM the crossRef Test is failing  I get a timeout. Otherwise this build is fine.  || LGTM  Please address my comment  then this can be rebased and merged.  || Gradle test execution fails on travis (Code 137 -> Travis issued a SIGKILL) . Seems to be a memory/resource  related problem: https://github.com/travis-ci/travis-ci/issues/2882  || Can be merged.   ||
1355,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,Update Preview Panel on Generate BibtexKey Fix for #1353 Fixed some missing unlocks Some formatting - [X] Change in CHANGELOG.md described ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/1355?srcpr) is **27.56%**  > Merging [#1355](https://codecov.io/gh/JabRef/jabref/pull/1355?srcpr) into [master](https://codecov.io/gh/JabRef/jabref/branch/master?srcpr) will increase coverage by **+<.01%**  ``` diff @@             master      #1355   diff @@    Files           695        695             Lines         46296      46294     -2      Methods           0          0             Messages          0          0             Branches       7650       7650              Hits          12759      12759           + Misses        32437      32435     -2      Partials       1100       1100           ``` 1. 2 files (not in diff) in `...va/net/sf/jabref/gui` were modified. [more](https://codecov.io/gh/JabRef/jabref/commit/08c87479978059d5ab487326d07f25af6d111c12/changes?srcpr#7372632F6D61696E2F6A6176612F6E65742F73662F6A61627265662F677569)     - Misses `-2`  > Powered by [Codecov](https://codecov.io?srcpr). Last updated by [f968736...08c8747](https://codecov.io/gh/JabRef/jabref/compare/f9687367e8b9fe67c02ec59169581430e5d87067...08c87479978059d5ab487326d07f25af6d111c12)  || ATM the crossRef Test is failing  I get a timeout. Otherwise this build is fine.  || LGTM  Please address my comment  then this can be rebased and merged.  || Gradle test execution fails on travis (Code 137 -> Travis issued a SIGKILL) . Seems to be a memory/resource  related problem: https://github.com/travis-ci/travis-ci/issues/2882  || Can be merged.   ||
1368,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Removed possibility to automatically add braces via Option - Preferen… …ces - File - Store the following fields with braces around capital letters. Please use save actions instead for adding braces automatically.  Refs #1351  
1368,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Removed possibility to automatically add braces via Option - Preferen… …ces - File - Store the following fields with braces around capital letters. Please use save actions instead for adding braces automatically.  Refs #1351  
1369,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix #1313: Remove UI as the checkbox is no longer backed by a config … …option  See #1313  
1369,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Fix #1313: Remove UI as the checkbox is no longer backed by a config … …option  See #1313  
1369,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix #1313: Remove UI as the checkbox is no longer backed by a config … …option  See #1313  
1369,1,0,1,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,Fix #1313: Remove UI as the checkbox is no longer backed by a config … …option  See #1313  
1383,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Implemented error console in JavaFX This is the error console in JabRef being implemented in JavaFX. The Console is highly flexible in positioning and styling its components through a fxml and corresponding css stylesheet.  Also to show better the error console content (Log  Output  Exception)  i have allowed to resize error console windows manually.  ![error console dialog](https://cloud.githubusercontent.com/assets/13031192/17971852/ca6d07dc-6adc-11e6-91f3-88541458fcd3.PNG)  PS: - update the error console screenshot - new feature:   - copy log: user can copy the log   - report issue: user can report directly issues from console. #872: have done - [X] Change in CHANGELOG.md described - [X] Screenshots added (for bigger UI changes) Please also add a screenshot for these new javafx dialogs.  Moreover  it would be nice if you could address the issues https://github.com/JabRef/jabref/issues/882  https://github.com/JabRef/jabref/issues/872 (I think  this is already covered with this PR...in this case please add a changelog entry) and https://github.com/JabRef/jabref/issues/819  which are all connected to the error console.   || Please adress the Language-key related errors  The first build failed because there were still some obsolete keys...  || @tobiasdiez @Siedlerchr slowly  slowly... let the students check this PR first and wait until it is labeled with "ready-for-review" :wink:  || ## [Current coverage](https://codecov.io/gh/JabRef/jabref/pull/1383?srcpr) is 28.39% (diff: 10.52%)  > Merging [#1383](https://codecov.io/gh/JabRef/jabref/pull/1383?srcpr) into [javafx](https://codecov.io/gh/JabRef/jabref/branch/javafx?srcpr) will increase coverage by **17.61%**  ``` diff @@             javafx      #1383   diff @@    Files           705        705              Lines         46412      46332     -80      Methods           0          0              Messages          0          0              Branches       7637       7639      +2     + Hits           5002      13154   +8152    + Misses        40963      32053   -8910    - Partials        447       1125    +678    ```  > Powered by [Codecov](https://codecov.io?srcpr). Last update [bc6f0c9...9e9bbc2](https://codecov.io/gh/JabRef/jabref/compare/bc6f0c929ebc9730064e884c619805c94d0db1f9...9e9bbc213dafb36d06dc2c0bf0e5ea3fd86243b1?srcpr)  || I am having trouble to hide the developer information. The css file probably needs some changes  I tried to set the visibilty but that didnt work out. @tobiasdiez Do you have some tips to handle this?   || Sorry for my later answer. Normally you do this by using a PseudoClass `inactive` and change it with `pseudoClassStateChanged`  see for example https://github.com/JabRef/jabref/pull/1438/files#diff-9a2c5dd139caeeb5e3e3eebb9adb24b3R92. Then you can style them via `.list-cell:active` and `.list-cell:inactive`.  I would however only use the PseudoClasses for real styling purposes  for example `.list-cell:error` shows an error icon and sets the font color to red. Filtering should really happen on the basis of the viewmodel to which the listview binds (as you have done it right now).  For debugging UI issues  the tool Scenic View is very helpful (http://fxexperience.com/scenic-view/). I had some problems with running it separately and bind it to JabRef. However  adding it to the dependencies (Project Structure -> Modules -> Dependencies -> Add) and then invoke `ScenicView.show(scene) ` somewhere works.  || @tobiasdiez  I have created FilterList to filter messages. But I have one problem to view correctly entries in Listview (have a look at my Screenshot). It only runs correctly if entries run out of the Listview. I have created a Test Button to test this behavior. This Test Button generates 1 entry in System.out  throws 1 exception and generates 1 entry in the Cache. This will be removed later. Can you help me and tell me  why Listview does not displays the entry correctly?  ![notcorrectview](https://cloud.githubusercontent.com/assets/13031192/16559695/e877d2d2-41ee-11e6-831e-47dfbef4af97.PNG)  || Sorry but I do not understand where your problem is. It looks like it prints the Test Cache message as well as the (first line of) the error stack trace. The system.out is ignored as I would have expected since you hide low priority messages.   || Hi @tobiasdiez   So i will explain you  what is my problem. - The ListView shoulds show you all log entries and other entries like system.out and exception  if the button "Development Information" disable. - If the button on click  it shoulds hide all system.out and exception entries.   I have handle this will a filterlist. But the behavior by showing of entries is not correct. - Reproduct:   - Start error console   - Click on "Test" Button (1 time or more times)   - Click on  "Development Information" Button   - Click on this again     If you do so like i have written  then you will understand my problem.     Sorry about my bad english. I hope that you understand what I mean. I need you help or some tipp how i can clear this problem :-)  Thx you  || Thanks for the additional description. I added a comment to ErrorConsoleViewModel which should help you to solve the problem.   For the next time  please try to add some tests first. There were quite a few things which could have been wrong: - Are the messages correctly passed to the T-Stream? - Do they have the correct priority? - Is filtering of the list working properly?  - And finally: is is just a problem with the way how messages are displayed in the list view.  The first 3 options could have been ruled out by automatic tests. It would be good if you could add corresponding tests (which also require some positve refactoring  like making `filteredList` a (public) class variable and moving its initialization to the constructor).  || There are three solution for this problem with create issue function: - **Solution 1:** Using of a GitHub API to create issue directly from JabRef with log in data  which user not like to do it. But I think  that way will be nice solution and GitHub will get more member (take a look in create issue dialog screenshot).   From customer: it will be nice this solution with a default account  but it will be not work.  ![create issue with github api](https://cloud.githubusercontent.com/assets/13031192/17296487/cece12a0-5801-11e6-97d0-9b81c05e65ee.PNG) - **Solution 2:** Using OAuth2 to create issue directly from JabRef without log in data  but the user must give the application access in their account to use it  That will be difficult for some user. - **Solution 3 (This is my actual implement solution):** Create issue over default browser with help of saved log and exception information in clipboard.  (take a look in create issue pop up screenshot).  ![create issue with default browser](https://cloud.githubusercontent.com/assets/13031192/17297508/4aabf744-5806-11e6-92b4-43193a6257b1.PNG)  After close or click on OK Button. The default browser will open and show create issue site with default title (automatic bug report-"current time with this format yyyyMMddHHmmss") and a default issue description (JabRef version  operating system version  Java version). During the show of this create issue site  the log and exception information will be saved in clipboard. So the user can be paste it for detail information in issue description. (take a look in create issue in default browser with paste detail information screenshot)  ![new issue](https://cloud.githubusercontent.com/assets/13031192/17297662/f1a18bf4-5806-11e6-8fc7-0a08455eb788.PNG)  || Which one did you implement?  || I really like the copied-to-clipboard-solution. Its simple yet effective.   || Can you please post a new screenshot of the actual look? Edit// and could you please test the look on HIDPI screens too?  || This is the new look of error console dialog:  ![errorconsoledialog](https://cloud.githubusercontent.com/assets/13031192/17666726/e6bc1ad2-6301-11e6-9000-d6364a97b2be.PNG)  with button "Developer information" it will show you the exceptions and outputs  if it is exist. You can copy the log and create issue directly from errorconsole. :-)  EDIT: I have test it on display with 1920 x 1080. I think  that it is all okay  -)  || Please fix this bug: - When you activate the "developer information" button and then click "Copy Log" the exceptions will get hidden even though the "developer information" toggle button is still active. - Pressing the "developer information" button twice will show the exceptions again.  || Please update your screenshots.  || Please fix bug: - Open the developer information console - Click show "Developer information" toggle button to show exceptions - Click "Ok" button - Open the developer information console   "Developer information" toggle button is now deactivated again but the list view still shows the exception and the colour of the exception is black instead of red.  || Any idea for a better icon? As pointed out in #1742 there is much more information than just errors here. It might even be better to skip the icon. (What about the information icon?)  || Some suggestions: - I would use the [Console image](https://mdn.mozillademos.org/files/5597/web-console-commandline-highlighted.png) instead of the red error symbol. Also move it above the list and add some description left to it. In spirit "we now give you an insight into the inner workings of JabRefs brain. This might help to diagonize the root of problems. Please use the button below to inform the developers about an issue. - Rename "create issue" to "report issue". Move "copy log" button to the left to group it with the other buttons there. Rename "ok" to "close". - Do we really need a way to hide errors and warnings? I think every log entry should be shown to the user (i.e. no "developer information button"). I know  you spent a lot of time to implement it but I just do not see any advantages in having such a button. - Add a small non-obtrusive icon in front of every line which indicates if it is an error / warning / info. Similar to https://mdn.mozillademos.org/files/5597/web-console-commandline-highlighted.png.  || Some minor remarks and a bigger one with the icons  once they are fixed Im fine with this. All in all I really like how the console looks now. Good job 👍   || @tobiasdiez: I have merged and done feedback  || Thanks for the update. The code looks better now. I have just a few more remarks  then this can be merged. @koppor pls do the final review  || @tobiasdiez @koppor: feedbacks are done. Only this teestream thing  i am not sure how to fix it 😄   || Maybe someone else from @JabRef/stupro can help. @bartsch-dev maybe? Its a kind of architectural decision.  || Try to use StreamEavesdropper instead of TeeStream  || @tobiasdiez Is this what you meant with moving the code to the streamEavesdropper?  || Yes this looks better. So now I had a look at the code. If I understand it correctly  then there already exist two ways of listen to logger messages: - GuiAppender: listens to everything which goes through the Log4j API (i.e. `LOGGER.log(...)`) and writes it to Cache - StreamEavesdropper: listens to everything which goes through the System streams (`System.out/err`) and writes it to some streams  And you added: - LogMessages: listens to everything and writes it some some internal list  Could you refactor the code so that everything is only written ̀to the internal list of  `LogMessages`  i.e. get rid of the Cache class and the printstreams in `StreamEavesdropper`. (And please add code comments to the classes  it was hard to understand what they actually do)  Appendum for myself: Since there is essentially no code which still uses `System.out/err.printLn`  I would actually try to get rid of the `StreamEavesdropper` completely. Only problem: uncaught exceptions are not written via the Log4j interface. But this could be solved by setting the [default handler](http://stackoverflow.com/a/2344830/873661).  || @tobiasdiez I have refactored and have done feedback. Hope it will be merged this time 😄   || 
1384,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix #1334: Display correct number of entries in static groups <describe the changes you have made here: what  why  ...> Fix of #1334. Nice bonus: total number of entries is displayed after "All Entries" group. - [ ] Change in CHANGELOG.md described (bug not present in 3.3) - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) LGTM  ||
1388,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fix sorting issue #1357 The logic is fucked but this should fix the issue.  Problem was that when sort in original order was selected  the corresponding variable newSortOrder would still read the disabled sort order inside the JDialog.  
1389,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,Fix #1381 File links containing blanks are broken if non-default viewer is set Runtime.exec with a String splits on white spaces...  
1397,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,add fields for nbibImporter and add testfile Regarding: [#1063](https://github.com/JabRef/jabref/issues/1063) The medlineplain importer does not have all fields  that the nbib format has. So I added the fields to the medlineplain format and added a test+ testfile for the nbib format. A list of the elements that should be imported now  can be found [here](https://www.nlm.nih.gov/bsd/mms/medlineelements.html). - [X ] Tests created for changes You should also record your changes in the readme  || LGTM  || For somehow the travis-ci is failing because an integration test  scrollingThroughEntryList  fails.  || LGTM  too. Just some minor remarks for readability.   ||
1401,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix #1399 export to html: html code is not well-formed Always write the footer  no matter if encoding is given or not. @tobiasdiez WDYT? You changed the code before.  || LGTM  ||
1409,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Cleanup guiglobals Implements #1408  Cleans up the `GUIGlobals` class and move `LatexFieldFormatter` to the `bibtex` package  which is now independent of the `gui` package.  As a final step  I would move the class `net.sf.jabref.importer.fileformat.FieldContentParser` to the `bibtex` package  which would make the package self-contained (apart from imports to the preferences and related classes) and would move the whole `bibtex` package into `logic`. Are there objections to this? I restructured variable positioning as discussed in #1408 and turn MAX_BACK_HISTORY_SIZE  LINE_LENGTH  and INDENT into proper preferences.  @JabRef/developers What about turning the `bibtex` package into a subpackage of `logic`? Or should that rather stay a top-level package?  || The more stuff is in the logic package  the better.   || Ok  from side this is good to go. I even was able to move some more classes into the model package.  || LGTM  || LGTM  just some minor remarks.  What I do not understand is the purpose of the bibtex package. Some of the classes seem like they do not have anything to do with writing or parsing bibtex and are rather general  for example the comparators. Maybe it would make sense to completely dissolve the bibtex package by moving the parsing logic to the import package and writing to export...in the end the bibtex format is just a special import-export format.  || @tobiasdiez Thanks for your remarks  I will integrate them as well.  As for the bibtex package: Its existence is a historical thing and I do not know the exact motivation behind. It seems like "bundle parsing and writing of pure bibtex"  but  with the addition of new importers and exporters  responsibilities shifted and mixed over time. The big advantage we have now is that the package moved to logic  which means that there is a guarantee that it is independent of GUI code and it can be re-used for new GUI stuff with relative safety. If we move it out of logic (to importers or exporters) we loose that advantage. Ultimately  the goal should be to get the GUI independent code from the import/export package into logic as well.  Out of topic: I just noticed the codecov report. How the hell did code coverage increase by a wooping 11.27% with this PR? I didnt even write new tests. This has to be an error.  || I implemented the above comments and the PR is once again ready to go from my side.  One remark: `COL_DEFINITION_FIELD_SEPARATOR` cannot go to `GUIGlobals`  since this would create dependencies from logic to gui. Therefore  I moved it into `COL_DEFINITION_FIELD_SEPARATOR` to `Globals`. This is fair  I think  since the variables relates to our BibTeX sytnax and field content  which is independent of the GUI.  I still don`t get how the coverage can have increased that much.  || 
1440,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix #1420 Auto downloader should respect file pattern and propose correct filename ![image](https://cloud.githubusercontent.com/assets/2141507/15472274/898030a4-20fa-11e6-9a77-8cfac10688d5.png) LGTM  || LGTM :+1:  ||
1443,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix #651: Improve parsing of author names containing braces Fixes #651. - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) LGTM  ||
1453,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,0,Refactor placement of parsing and writing logic According to the following conventions: - All objects which can be read from a string have `public static Type parse(Stringy input)` method. - All objects which can be written to a string have a `public Stringy getAsString()` method.  Should fix #888. ##  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) I am still an advocate of separate read/write classes which handle the serialization in both ways because: - Using an Interface with fromString/toString methods would allow to make this more explicit in the code and ensure that these methods are not renamed by accident - Using separate classes for reading/writing would make the classes themselfs smaller and allow a better separation of concern.  - Easier to test as one only needs to look at a single cread/write class with its own test.  || Yes  you are right that separate read/write classes are probably even better. Nonetheless  I find the changes made in this PR are still an improvement and Im quite satisfied with the result. (Satisfied enough to have no motivation for introducing new read/write classes)  || I changed the names. Thanks for the feedback!  ||
1459,1,0,0,1,1,1,1,0,0,0,1,0,1,0,1,1,0,0,0,create update checker for the enduser Implements #661.  The updater regularly checks if there is a new stable version of JabRef available [via github API](https://api.github.com/repos/JabRef/jabref/releases/latest). If there is  a dialog will popup:  ![newversion](https://cloud.githubusercontent.com/assets/15333371/15649011/86b17b5c-266e-11e6-97c4-e47cda603fa7.PNG) - `Download update` points directly to [fosshub](http://www.fosshub.com/JabRef.html) - `Ignore this update` will ignore this specific version on automatic version checks - `Remind me later` will inform the user on the next version check (automatic or manual) of this version - `View changelog` points directly to the changelog specific to this version (eg. v3.3 would point to https://github.com/JabRef/jabref/blob/v3.3/CHANGELOG.md)  Under `Help` there is another button to check for updates.  ![updatetab](https://cloud.githubusercontent.com/assets/15333371/15649013/8e438c2a-266e-11e6-8cc6-07461176e8d1.png) under preferences you can see: - the current version - when the version was last checked and a button to check it now - if theres a new version available and a download button - if a version was ignored and a button to unignore it - you can also define how often the automatic check should occur Your tests mostly cover the `Version` class  did you also test (at least manually) if the new version dialog shows up as expected (on the start if newer version is available or not if you already pressed ignore this update)? I guess this is not easy to test with real data as you are already on the latest version when running this branch.  || Good work 👍 I have made a few minor comments but when they are addressed its fine by my side.  || Cant this be done by a) mocking the current version (mocking prefs?!) and b) mocking http? We already did both somewhere else in the code.  || Looks good to me too. Just some minor remarks and a bigger one for the handling of the dev version in isNewerThan.  For testing: UnitTests are not really possible since its a GUI thing (and mocking is not possible for UI tests  right?). But you can change the version information in the gradle file  build it and then run it (i.e. pretend that you have an older version). Or for the sake of testing  you can also modify the BuildInfo class to return a hard-coded version.  || I should have considered all mentioned issues. Some methods cant be extracted to another class (e.g. `JabRefGUI#checkForNewVersion()` to `Version` b/c then they would violate the strict separation of the logic from the gui).  || Hm  I am missing a CHANGELOG. :(  || Hm  I could swear I wrote one. Should I write it quickly and open another PR  or do you push it directly onto the master?  || I added it directly.  ||
1460,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,Fix #1455 NPE when retrieving BibteX data from DOI See #1455 LGTM  ||
1460,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,Fix #1455 NPE when retrieving BibteX data from DOI See #1455 LGTM  ||
1471,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Preserve user comments in bib file So I am finally having my take at #1026. The current solution was surprisingly easy so far (despite what I had written before). It looks explicitly for our encoding prefix in the file ("Encoding: ") and kills lines that contain it (but only lines preceding an entry  it will not delete something that is inside an entry). Other user comments are left untouched and are _always_ written out again  even if the entry is reformatted.  User comments that are above meta data  bibtex strings  or the preamble will still be removed  though. Changing that would require large scale changes to these items in our model  since we would also need to store the parsed serialization for them  which we do not do so far.  This should receive significant automated  but also manual  testing  since it modifies a quite critical part and has the potential to destroy bib files. I will add a few more tests for this PR. - [X] Change in CHANGELOG.md described - [X] Tests created for changes Ok  Id like to put this up for discussion.  User comments are now kept under the following circumstances: - Above any BibEntry - Above any BibtexString - Comments at the end of the file  This is independent of whether an entry is changed/reformatted  but not if it is deleted. If it is reformated  user comment text is located exactly one blank line above the reformated entry.  User comments are still not kept when: - Above meta data comments - Above the Preamble - Contains JabRefs ENCODING_PREFIX - Above an entry that has been deleted  Is this good enough? It should be sufficient in most scenarios and work if someone opens his non-JabRef bib file with JabRef. If someone starts adding arbitrary text between JabRefs Metadata  though... The latter is hard to achieve since we do not store the serialization of MetaData. If we want to  Id have to make some additions to our MetaData objects. I could also store the comments between meta data and add them as a bunch at the end of the file  but then the relative position gets lost. Before I do more work  Id like to clarify the following points: - Does the storage of arbitrary text above MetaData really matter? - Is it ok to delete comments if the entry below them is deleted?  || Looks good to me. Just had some more or less minor remarks (mostly about the testing code).   I think we do not need support for comments between JabRef metadata.  || @tobiasdiez If not mentioned otherwise  I addressed your comments above.  We tend to differ when it comes to testing in general  though. I really prefer integration tests when doing anything with reading/writing. In JabRef  these things are inherently coupled. To implement this PR (write out user comments correctly)  I also had to do significant changes to reading. So  as long as no overwhelming majority of @JabRef/developers pressures me to write unit tests  I will rather write integration tests.  || LGTM. I think integration tests are more valuable. So this would suffice for me.   || Great! Let us talk briefly about this during the next devcall and decide if we take it into 3.5 or 3.6.  || For 3.6  || @lenhard Please squash the commits via Github when merging this :smile:   ||
1474,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix #1434: Static groups are now longer displayed as dynamic ones Reason for this bug: ExplicteGroup now derives from KeywordGroup and thus was sometimes displayed as a keyword group. - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) Why does it make sense that the explicit group extends the keyword group? I do not see any advantages from that  despite making it more complex. Is really a lot of code saved? Maybe duplicating a few lines of code (in explicit and keyword group) creates a simpler structure overall?  || I think it makes sense that the explicit group derives from keyword group. A keyword group allows to collect all entries which contain a given word in a specified field. The explicit group does exactly the same thing except that only the `groups` field is of interest.   If you have a look at the [ExplicitGroup class](https://github.com/JabRef/jabref/blob/e13d7f10b23e3b03c9f6425704ad46a973c90023/src/main/java/net/sf/jabref/logic/groups/ExplicitGroup.java) you will notice that it contains absolutely no logic about how to determine the matched entries. This is completely handled by the keyword group. (It might even make sense to expand the class hierarchy chain and let `KeywordGroup` derive from `SearchGroup` since in the end it only a very specific search query is used.)   || Thanks for the detailed explanation - makes sense. :)  Instead of relying on the class  I would recommend to introduce an enum that differentiates the group types  and which is returned through a method getType which each class overwrites if necessary.   ||
1479,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,Rewrite MedlineImporter with JAXB and add nbib fields Regarding:[#1063](https://github.com/JabRef/jabref/issues/1063) Ive rewritten the MedlineImporter (to be more specific: the `importDatabase` method)  so that it uses a JAXB parser now  instead of a SAX parser. Ive also added the nbib fields to the importer. Tests for the changes will be coming. - [x] Change in CHANGELOG.md described - [x] Tests created for changes Very good work :+1:  only a few remarks from my side.  || Please do not include the generated classes. Try to use https://github.com/jacobono/gradle-jaxb-plugin to generate them. Does that work?  || Can you please document the source of the XSD you used to create the JAXB classes. Thanks!  || @koppor I didnt get the plugin work. But Ive wrote an ant task  that Ive found [here](https://joerglenhard.wordpress.com/2012/01/10/xjc-and-schemagen-with-gradle/). This works local  but for some reason travis ci says  that src/main/gen is a non existend directory.  @matthiasgeiger I wrote the source as a comment in the xsd file(s)  is that ok ?   || Made some comments  but in general LGTM  || LGTM :+1:   || So can this be merged in ? Or are there any other remarks?  || Sorry  but this does not work at all for me.  Steps to reproduce:  - go to https://www.ncbi.nlm.nih.gov/pubmed/?termflu - select one or more entries - click on "Send to:" -> "File" -> "XML" - Open JabRef and try to "Import into new database" the created XML file  What happens? There are two dialogs showing nothing:  ![medline-import1](https://cloud.githubusercontent.com/assets/676652/16837231/581cd4a4-49c2-11e6-97a4-02212208c3ec.png)  ![medline-import2](https://cloud.githubusercontent.com/assets/676652/16837232/584be41a-49c2-11e6-9176-d2a2243c21b2.png)  Followed by an error message: ![medline-import3](https://cloud.githubusercontent.com/assets/676652/16837242/61c485f6-49c2-11e6-88c7-a4e2c25937e8.png)  Am I doing sth wrong?  || Yeah youre right. Im getting the same problem. But for some reason  the files that Ive tested are working. Im looking for the problem.  || @matthiasgeiger now it should work. Im not sure why  but somehow the first two lines `<?xml version"1.0"?> <!DOCTYPE PubmedArticleSet PUBLIC "-//NLM//DTD PubMedArticle  1st January 2016//EN" "http://www.ncbi.nlm.nih.gov/corehtml/query/DTD/pubmed_160101.dtd">`  were causing trouble. My solution is to skip the first lines  till we reach the first line  that contains <pubmedarticle>  <pubmedarticleset>  <pubmedbookarticle> or <pubmedbookarticleset>.  || XML parsers should do that work. Do not walk through XML by hand.  Please remove this method and try the solution presented at http://stackoverflow.com/a/22204172/873282  `xsr.next() ` from XMLStreamReader seems to be your friend.  || Other than my small comments: looks good (codewise). Havent tried the UI.  || Ive adressed the comments. Are there any other remarks?   || LGTM  || So can this be merged?   || 
1483,1,0,0,0,0,1,1,0,0,0,1,0,1,0,0,1,0,0,0,Fixes #1482: Correct number of matched entries is displayed for refining subgroups The issue was that  for the number of hits  JabRef only checked if the group taken separately matched the entry. That is  it was completely ignored that the group sits in a tree and might be set up to refine the search of the parent. Taking the example given in #1482  577 entries satisfy the condition `articlé original` but only 38 are also matched by `articlé`. - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) LGTM :+1:  || LGTM :+1:   || LGTM  || Ok  lets merge this in :smile: :+1:   ||
1486,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fixes #1485 Export shorttitle as standard field shorttitle <-> Shorttitle  Includes the obvious migration problems  which I do not know if they really occur. LGTM  || :+1:   ||
1487,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Implement getExtension and getDescription for importers Implement getExtension and getDescription for importers. #1444  - [X] Change in CHANGELOG.md described - [X] Tests created for changes Please fix the minor things. After this  mark it again for ready-for-review and we will merge this in.   ||
1511,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixes #1507: Keywords are now separated by the delimiter specified in the preferences Also did some small refactorings / renamings. - [ ] Tests created for changes - [x] Change in CHANGELOG.md described - [ ] Screenshots added (for bigger UI changes) LGTM :+1:   || Some tests are failing and it would be great if you could push your branch to the jabref repo as this facilitates testing by simply running a build from http://builds.jabref.org/  || OK fixed the failing tests and the build is available under http://builds.jabref.org/fix1507/. (Will fix the checkstyle issues after green light for merge)  ||
1549,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Searchbar across all bib files instead each having its own Implemented #825. The SearchBar is now in the top Toolbar instead of each Tab having its own (always at the right). On Tab change the Tab gets updated. The Autocomplete is bound to the current Tab (maybe extend this one in another PR?). The old global Search (opening all findings in a new Window) is gone  do we really need it?  ![jabref_globalsearch](https://cloud.githubusercontent.com/assets/15333371/16581743/8b88f5fc-42ab-11e6-8d65-e2b0802d968c.png) - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Screenshots added (for bigger UI changes) Good work 👍  || I am really happy that you are working on this. Is it correct  that the "global search" window will be abandoned? I have no idea whether it is causing any conflict with the current implementation of the search mechanism  but I am one of those who is using it rather extensively.   There are two scenarios  where a global search is useful: 1. Often I create a separate bib file for a project (e.g. a journal article)  where I put all related papers. Some of them are of interest just for this project and are not supposed to be part of my database core (e.g. newspaper articles). Hence  I often use search queries that include results of the core and project related file 2. I have a bib file for papers which I use in a certain context  but that havent been read thoroughly yet. Some of them will eventually be moved to the core database. Also in this case I use a global search to find results within both bib-files.  Both scenarios could be managed by creating groups  and if global search gets abandoned  I will certainly do. However  I like the tab based style of several bib files very much  because I do not have the feeling that my project related articles get lost in my huge database with thousands of entries  || :+1: for keeping the global search window. Please readd it. @bartsch-dev There are many JabRef users having more than 10 bib files. They do not want to click through all 10 files for each search.  || Another aspect: What happens if the horiztonal space is not enough to display all icons and the search bar? Will the searchbar be displayed beneath the icon bar?   || Based on another issue the minimum width of the window is already around 1000 pixels (depending on look-an-feel  OS  etc)  so it is crucial that it will fold.  But it indeed looks promising!  || if the window is too small for the toolbar it will now wrap between the normal buttons and the searchbar.  The search result Dialog will now remember its location  the global search has a shortcut (ctrl+shift+f  #573)  enter in the result dialog will select the entry in the BasePanel (#617)  the Reuslt window is cloasable with ctrl+w if fdocused (https://github.com/JabRef/jabref/issues/573#issuecomment-232284156)  and the result dialog wont stay at top anymore if the MainFrame is focused and they are on top of each other.  || Please resolve conflicts.  || > enter in the result dialog will select the entry in the BasePanel - I have two databases open and search for a keyword - I open the global search and it finds my result entries from both databases - I press enter on an entry and it focuses the correct tab but <b>it always selects the first entry in this tab</b>  EDIT: It does focus the correct entry if I am already in the right tab  but if it has to focus a different tab it always selects the first entry.  Did I missunderstand the sentence or is this a bug?  || Should be fixed now!  || Is it possible to work on the global search in this PR  too?  - [x] The shortcut ctrl+shift+f should focus the search field if it is empty (instead of doing a globally searching the empty string) - [x] ESC in the global search should focus the search field. Currently  the focus just stays where it was - [x] The global search popup should show the bib file name  || implemented all 3 things.  || What happens if the window is too small? Will the search bar be moved to the new line? A lot of people use JabRef only with 1024x768 resolution.  || Yes  if the width is too small the entire searchbar will move into a new line.  || What Ive done so far: - SearchBar   - instead of each bib database having its own  the searchbar is now in the Toolbar   - if the window width is too small the whole searchbar will move into a new line   - added shortcut: global search `ctrl+shift+f`  if the search field is empty it focus the searchbar   - fixed: when searching the first match will be selected if the current selection is no match - SearchResultWindow   - the window will now remember its location   - each entry now shows which bib file it belongs to   - when the user closes the window (without selecting an entry) the searchbar is focused   - when the user double clicks on an entry it will correctly be selected in the bib file   - `enter` will select the entry in the bib file  (#617)   - added shortcut: closing the window `ctrl+w` (https://github.com/JabRef/jabref/issues/573#issuecomment-232284156)   - the result window wont stay on top anymore the main frame is focused  What do you think?  || Sounds good :wink:  Ill test it later and give you some feedback  || Good job! Almost all your described functionality is working fine. :+1:   The exception is "fixed: when searching the first match will be selected if the current selection is no match" - this still is not working for me in "filter" mode.  Some ideas for further improvments: - the database column in the result window should be longer - the current width is determined by the word "database" and only the first 9 characters of the filename is shown. - in windows re-accessing the result window after switching the focus to another application is hard as it is not added to the windows task bar (was no issue before as it was modal above the JabRef main window) - Im not sure whether it might be helpful to use a (titled?) border to group the search related textfields  buttons and labels (see https://docs.oracle.com/javase/tutorial/uiswing/components/border.html) - or maybe align the search stuff on the right side?   || > The exception is "fixed: when searching the first match will be selected if the current selection is no match" - this still is not working for me in "filter" mode.  When no entry was selected at all the search wouldnt select a match  it now does. Did you mean that?  > the database column in the result window should be longer - the current width is determined by the word "database" and only the first 9 characters of the filename is shown.  The database column is now as wide as the author column.  > in windows re-accessing the result window after switching the focus to another application is hard as it is not added to the windows task bar (was no issue before as it was modal above the JabRef main window)  The SearchResultFrame will now show in the Taskbar (you can focus it with the global search shortkey too).  > ...  or maybe align the search stuff on the right side?   I wanted to do that too  but if I do that the toolbar is not wrapable anymore.  || > > The exception is "fixed: when searching the first match will be selected if the current selection is no match" - this still is not working for me in "filter" mode. >  > When no entry was selected at all the search wouldnt select a match  it now does. Did you mean that?  As far as I understand you description of the fix always the first matching entry should be selected if the search if the currently selected entry is not a match of the search. Right?  This is working fine if the "float" mode is active - but does not work in the "filter" mode: The preview or entry editor is still showing the entry selected before performing the search (which is not visible in the list of matches at all): ![unbe nt](https://cloud.githubusercontent.com/assets/676652/17137970/570e3f82-533e-11e6-909a-9f17ad3855d1.png)  || Your PR is currently broken:  ``` Exception in thread "AWT-EventQueue-0" java.lang.ArrayIndexOutOfBoundsException: 4         at net.sf.jabref.gui.search.SearchResultFrame.setWidths(SearchResultFrame.java:305)         at net.sf.jabref.gui.search.SearchResultFrame.init(SearchResultFrame.java:155)         at net.sf.jabref.gui.search.SearchResultFrame.<init>(SearchResultFrame.java:135)         at net.sf.jabref.gui.search.GlobalSearchWorker.<init>(GlobalSearchWorker.java:35)         at net.sf.jabref.gui.search.GlobalSearchBar.performGlobalSearch(GlobalSearchBar.java:206)         at net.sf.jabref.gui.search.GlobalSearchBar.lambda$new$1(GlobalSearchBar.java:117)         at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:2022) ... ```  || Sadly I cannot reproduce your problem!  || I will be gone the next 2 weeks. I will be continuing working then.  || What needs to be done for this PR to be closed?  || Please fix my minor comments. @matthiasgeiger Any additional comments? Otherwise  I would merge this in. (After double check CHANGELOG.md and headers)  || Could you please make `Search globally` make a toggle button and change the functionally of the button before to behave acoordingly?  If the search globally is on  the global search is active. Otherwise  the search string is local for each database.  || You can also use the icon `earth` (Codepoint F1E7) and `earth-off` (F1E8 ) for this.  || As I was just writing something similar as @matthiasgeiger   here are the images for reference:  ![earth](https://cloud.githubusercontent.com/assets/8114497/17968273/2fc2d1a4-6acc-11e6-8a75-6717c32fee4b.png) ![earth-off](https://cloud.githubusercontent.com/assets/8114497/17968272/2fc1e708-6acc-11e6-96ec-ba5cebc7a14a.png)  || added a global mode to the search - if the global mode is off   - each tab has its own searchterm   - the search result dialog only shows local findings - if the global mode is on   - in each tab the searchterm is the same (taking the one when it was activated)   - the search result dialog shows findings in all bib files  || Does the help file need an update?  || The global search needs to be added to the help file. The `show results in window` functionality needs to be described too.  || What is the current status on this? Is there anything @bartsch-dev should do here?  || Looking at the localization files and the changelog it seems like you have some merge problems. Fixing the localization files should fix travis CI. Also try to fix codacy/pr issues.  || Ive got an issue with the focus. Discussed personally with @bartsch-dev. Would merge after that is fixed.  || I fixed the focus problem. I also addressed a traversal problem after you abort the searcht (hit <kbd>ESC</kbd> in the searchbar). Now the User can jump from the searchbar to the Main table with <kbd>ctrl</kbd> + <kbd>Enter</kbd>  || Searchbar disappers at certain occaisions. Please try to increase/decrease the width of JabRef and youll see that at some point  it disappears:  ![grabbed_20160908-224223](https://cloud.githubusercontent.com/assets/1366654/18366072/86d91e9a-7615-11e6-84f9-81e71f2ebb89.png)  ![grabbed_20160908-224233](https://cloud.githubusercontent.com/assets/1366654/18366080/8cd6214e-7615-11e6-8696-6453ac4f92a2.png)  It also happens during the search if "no results found" is appended. Then  the searchbar disapears after having nothing found:  ![grabbed_20160908-224028](https://cloud.githubusercontent.com/assets/1366654/18366014/443e09b0-7615-11e6-9978-41331842a1b3.png)  ![grabbed_20160908-224043](https://cloud.githubusercontent.com/assets/1366654/18366024/4b7496c2-7615-11e6-884d-fae815de5d89.png)  || fixed  || Tested with bce1bf5 - not fixed:  ![jabref-global-search](https://cloud.githubusercontent.com/assets/1366654/18416353/69048144-7812-11e6-99e7-7f61db3c51ba.gif)  || 
1563,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,Added button to crossref entry editor field to select parent entry Based on the idea in #1338 a button is added in the crossref entry editor field to select the parent entry in the main table. It is not exactly the same thing as suggested in #1338 though. - [x] Change in CHANGELOG.md described Well  now it is more like the actual feature request. The reverse linking is not obvious how to implement graphically and relates to https://github.com/koppor/jabref/issues/14 as well.  || I kept the button name and didnt understand the lambda thing. Other than that  the comments are honored.  || @oscargus  Forget about the lambda thing. I oversaw that it contains more than one method :confused:   ||
1567,1,0,0,1,0,1,1,0,0,0,1,0,0,1,1,1,0,0,0,Fix 1530: Integrity checker should ignore unescaped hashes in url field Addresses #1530  - [X] Change in CHANGELOG.md described - [X] Tests created for changes LGTM :+1:   || LGTM :+1:  rebase and merge.  ||
1572,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Implement 1356 Implements  #1356 and provides a formatter that converts HTML to Unicode (converting characters and eliminating tags) - [X] Change in CHANGELOG.md described - [X] Tests created for changes LGTM  || LGTM :+1:   || I have only a few small remarks. :+1: for merge in general  ||
1581,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Fixed #1264 I finally got around to understand the reasons for #1264 (and parts of #1464). It turned out that commands starting with c was handled in a special way and that `{\v{S}}` was for unknown reasons used as "line tabulation set".  As a result  not only does JabRef now render `\v{S}` and `\chi` correctly  it also renders combining accents  see screen shot. <img width"291" alt"capture4" src"https://cloud.githubusercontent.com/assets/8114497/16817520/70ec1168-4943-11e6-86e0-2f9d55475e35.PNG"> - [x] Change in CHANGELOG.md described - [x] Screenshots added (for bigger UI changes) @oscargus Do the tests from #1464 pass in your branch?  || @stefan-kolb as it was only `\chi` that was failing  I would expect that  yes. The other two did already work. (Right?)  || @oscargus It was only the \chi  yes because \c is handled as special character. If my test from the PR pass we can merge my test PR into your branch and then merge your fix :smile:   || In general  I would like tests for this PR.  || My PR #1464  includes tests for the bug.  || @stefan-kolb There is a `\chi` first at the second row of the screen shot. Turned out all commands starting with c didnt work as c was hardcoded into Globals as an accent  so `\chi` was interpreted similar to if it had said `{\c{h}}i` and since `\c{h}` wasnt listed it was simply removed. Now `\c{h}` works as well  giving ḩ .  @tobiasdiez: I was considering that. However  the main feature is adding support for accented unicode characters and they are a hassle to type properly... Nor will they make much sense except lots of comments. For example  spot the difference between ä and ä...  || @oscargus Can you just cherry-pick my commit from the PR and you have your first test :smile:  And then just close my PR afterwards :+1:   || I added some tests now.  @stefan-kolb Im afraid that is a bit out of my comfort/knowledge zone... My solution would be to almost simultaneously merge both PRs. :-)   || @oscargus Then just copy my tests and close the PR :smile:   || @stefan-kolb That should be within grasp. :-)  || LGTM thanks for the quick solution! :)  || LGTM :+1:   || LGTM :+1: just some minor remarks about naming variables and tests  ||
1581,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Fixed #1264 I finally got around to understand the reasons for #1264 (and parts of #1464). It turned out that commands starting with c was handled in a special way and that `{\v{S}}` was for unknown reasons used as "line tabulation set".  As a result  not only does JabRef now render `\v{S}` and `\chi` correctly  it also renders combining accents  see screen shot. <img width"291" alt"capture4" src"https://cloud.githubusercontent.com/assets/8114497/16817520/70ec1168-4943-11e6-86e0-2f9d55475e35.PNG"> - [x] Change in CHANGELOG.md described - [x] Screenshots added (for bigger UI changes) @oscargus Do the tests from #1464 pass in your branch?  || @stefan-kolb as it was only `\chi` that was failing  I would expect that  yes. The other two did already work. (Right?)  || @oscargus It was only the \chi  yes because \c is handled as special character. If my test from the PR pass we can merge my test PR into your branch and then merge your fix :smile:   || In general  I would like tests for this PR.  || My PR #1464  includes tests for the bug.  || @stefan-kolb There is a `\chi` first at the second row of the screen shot. Turned out all commands starting with c didnt work as c was hardcoded into Globals as an accent  so `\chi` was interpreted similar to if it had said `{\c{h}}i` and since `\c{h}` wasnt listed it was simply removed. Now `\c{h}` works as well  giving ḩ .  @tobiasdiez: I was considering that. However  the main feature is adding support for accented unicode characters and they are a hassle to type properly... Nor will they make much sense except lots of comments. For example  spot the difference between ä and ä...  || @oscargus Can you just cherry-pick my commit from the PR and you have your first test :smile:  And then just close my PR afterwards :+1:   || I added some tests now.  @stefan-kolb Im afraid that is a bit out of my comfort/knowledge zone... My solution would be to almost simultaneously merge both PRs. :-)   || @oscargus Then just copy my tests and close the PR :smile:   || @stefan-kolb That should be within grasp. :-)  || LGTM thanks for the quick solution! :)  || LGTM :+1:   || LGTM :+1: just some minor remarks about naming variables and tests  ||
1581,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Fixed #1264 I finally got around to understand the reasons for #1264 (and parts of #1464). It turned out that commands starting with c was handled in a special way and that `{\v{S}}` was for unknown reasons used as "line tabulation set".  As a result  not only does JabRef now render `\v{S}` and `\chi` correctly  it also renders combining accents  see screen shot. <img width"291" alt"capture4" src"https://cloud.githubusercontent.com/assets/8114497/16817520/70ec1168-4943-11e6-86e0-2f9d55475e35.PNG"> - [x] Change in CHANGELOG.md described - [x] Screenshots added (for bigger UI changes) @oscargus Do the tests from #1464 pass in your branch?  || @stefan-kolb as it was only `\chi` that was failing  I would expect that  yes. The other two did already work. (Right?)  || @oscargus It was only the \chi  yes because \c is handled as special character. If my test from the PR pass we can merge my test PR into your branch and then merge your fix :smile:   || In general  I would like tests for this PR.  || My PR #1464  includes tests for the bug.  || @stefan-kolb There is a `\chi` first at the second row of the screen shot. Turned out all commands starting with c didnt work as c was hardcoded into Globals as an accent  so `\chi` was interpreted similar to if it had said `{\c{h}}i` and since `\c{h}` wasnt listed it was simply removed. Now `\c{h}` works as well  giving ḩ .  @tobiasdiez: I was considering that. However  the main feature is adding support for accented unicode characters and they are a hassle to type properly... Nor will they make much sense except lots of comments. For example  spot the difference between ä and ä...  || @oscargus Can you just cherry-pick my commit from the PR and you have your first test :smile:  And then just close my PR afterwards :+1:   || I added some tests now.  @stefan-kolb Im afraid that is a bit out of my comfort/knowledge zone... My solution would be to almost simultaneously merge both PRs. :-)   || @oscargus Then just copy my tests and close the PR :smile:   || @stefan-kolb That should be within grasp. :-)  || LGTM thanks for the quick solution! :)  || LGTM :+1:   || LGTM :+1: just some minor remarks about naming variables and tests  ||
1583,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,Fixed #1527 and some refactoring/cleanups Fixed #1527 and did some refactoring and cleanups. - [x] Change in CHANGELOG.md described changes LGTM :+1:   However  the usage of "magic numbers" for the diff modes should be avoided - but this can also be solved in another PR :wink:  || Just a minor comment  otherwise looks good.  Have a thought on my suggestion and decide if you want to implement it. Afterwards rebase and merge.  || @matthiasgeiger I agree. However  I do not really get how to map a `JComboBox` and an `enum`...  || `new JComboBox(EnumType.values())` should work  || 
1584,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Added layout DateFormatter  see #1249 Added a configurable layout formatter for dates. Fixes #1249. - [x] Change in CHANGELOG.md described - [x] Tests created for changes LGTM just merge after you removed the generated comment  ||
1584,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Added layout DateFormatter  see #1249 Added a configurable layout formatter for dates. Fixes #1249. - [x] Change in CHANGELOG.md described - [x] Tests created for changes LGTM just merge after you removed the generated comment  ||
1589,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,0,0,0,1,Implement 1516 Implements #1516. Selected fields (`ISBN`  `URL`  `URI`  `ISSN`  `DOI`) are displayed in upper case in the entry editor. - [x] Change in CHANGELOG.md described LGTM! :+1:  || one minor remark: "ISRN" which is used in Biblatex TechReports could - or should - be added   Apart from that: LGTM  || 
1590,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Implemented #1345 - cleanup ISSN Implemented cleanup that adds a missing dash in the ISSN field if it looks like an ISSN (checksum is not controlled  but eight digits  where the last may be an x). - [x] Change in CHANGELOG.md described - [x] Tests created for changes The whole purpose of this PR was indeed to add the missing dash if it otherwise looks like an ISSN  yes. That works at the moment.  Would we actually need a clean up action then? If properly used  the ISSN class would provide automatic clean up  right? Which is useful  but may be annoying?  Btw  I doubt using the different parts explicitly is very useful though. But if there is a valid use case where the string is not enough  so sure. Should the parts then be `String` or `int` (x is 10 and only appears in the checksum)?  It really looks like over-engineering to me  I must say though...  || Extracted an `ISSN` class for checking validity and cleaning up.  || I am missing tests for the ISSN class. Otherwise  LGTM.  ||
1599,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Fixed #1592 This should fix #1592. - [x] Change in CHANGELOG.md described LGTM  ||
1599,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Fixed #1592 This should fix #1592. - [x] Change in CHANGELOG.md described LGTM  ||
1601,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Move event Moves the `event` package into `model`  as discussed in #1579  No need for changelog  since this has no externally visible effect. Commits will be squashed on merge. LGTM! :+1:  ||
1604,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Move preferences Moves preferences-related classes into a new top-level package as outlined in #1579. This is a pure refactoring  no functional changes. It does not fix the dependencies on preferences  but separates them from the remaining classes in the root package.  Additionally  the class `JabRefPreferencesFilterDialog` is moved into the gui package  where it belongs. This also allows to rename the class and reduce its visibility.  Commits can be squashed on merge. LGTM  ||
1616,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Resolves #1613 Use Jabref default icon for uninstaller for now Using standard icon for now. Should be replaced by specific uninstaller icon after redesign #482 :+1:  || LGTM can you add a changelog  please? then  just merge it.  ||
1622,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Improved LaTeX to Unicode/HTML formatters to output more sensible val… See #1321. Main thing is that `\LaTeX{}` outputs `LaTeX`  same for all unknown commands. Also behaves a bit better for some other situations with unknown commands and there are now tests for it to make sure that it happens. - [x] Change in CHANGELOG.md described - [x] Tests created for changes  
1638,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Keep @Comment text in a bib file Implements #1632. User comments marked by `@Comment` are now kept in the bib file  regardless of whether they use brackets or not. - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef Looks good!  Is it possible to comment multiple entries?  ``` @Comment{ @Article{ ... } @Book{ ... } } ```  Guess it is...  || Great!  And just to be sure  I added another unit test for a `@comment` that contains multiple entries.  ||
1666,1,0,0,1,0,1,1,0,1,0,1,0,0,0,1,0,0,0,0,Rewrite bibtexml importer with JAXB parser Regarding: #898  Ive rewritten the bibtexml importer: It was written with a SAX parser and Ive used a JAXB parser. I will be addings some more tests for the changes Ive made.  Note: Exporting in bibtexml format and then trying to import in bibtexml format is not working because of #1665. - [x] Tests created for changes - [x] Manually tested changed features in running JabRef Are there any other remarks?  || Travis is failing because of UI tests...  || Please not that the UI tests are done but **ignored**. Please read the travis output and check for **red lines**  Checkstyle failed. Your IDE settings seem to be non-formant. Please double check: https://github.com/JabRef/jabref/wiki/Guidelines-for-setting-up-a-local-workspace#intellij  ``` :checkstyleMain[ant:checkstyle] [ERROR] /home/travis/build/JabRef/jabref/src/main/java/net/sf/jabref/logic/importer/fileformat/BibTeXMLImporter.java:36: net.sf.jabref.importer.fileformat.bibtexml.Entry should be separated from previous imports. [ImportOrder]   FAILED  FAILURE: Build failed with an exception.  * What went wrong:  Execution failed for task :checkstyleMain.  > Checkstyle rule violations were found. See the report at: file:///home/travis/build/JabRef/jabref/build/reports/checkstyle/main.html  * Try:  Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.  BUILD FAILED  Total time: 1 mins 16.912 secs  ```  ||
1666,1,0,0,1,0,1,1,0,1,0,1,0,0,0,1,0,0,0,0,Rewrite bibtexml importer with JAXB parser Regarding: #898  Ive rewritten the bibtexml importer: It was written with a SAX parser and Ive used a JAXB parser. I will be addings some more tests for the changes Ive made.  Note: Exporting in bibtexml format and then trying to import in bibtexml format is not working because of #1665. - [x] Tests created for changes - [x] Manually tested changed features in running JabRef Are there any other remarks?  || Travis is failing because of UI tests...  || Please not that the UI tests are done but **ignored**. Please read the travis output and check for **red lines**  Checkstyle failed. Your IDE settings seem to be non-formant. Please double check: https://github.com/JabRef/jabref/wiki/Guidelines-for-setting-up-a-local-workspace#intellij  ``` :checkstyleMain[ant:checkstyle] [ERROR] /home/travis/build/JabRef/jabref/src/main/java/net/sf/jabref/logic/importer/fileformat/BibTeXMLImporter.java:36: net.sf.jabref.importer.fileformat.bibtexml.Entry should be separated from previous imports. [ImportOrder]   FAILED  FAILURE: Build failed with an exception.  * What went wrong:  Execution failed for task :checkstyleMain.  > Checkstyle rule violations were found. See the report at: file:///home/travis/build/JabRef/jabref/build/reports/checkstyle/main.html  * Try:  Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.  BUILD FAILED  Total time: 1 mins 16.912 secs  ```  ||
1671,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix #1288 Newly opened bib-file is not focused - [x] Open a NEW file and it is correctly focused afterwards - [x] Open a file that was already OPENED before is correctly focused afterwards - [x] Open a file TWO TIMES and it is only opened once @matthiasgeiger Should work now :smile:   || LGTM (apart from the minor comments via Skype :wink: )  ||
1678,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Fixed OO/LO manual connection dialog on Linux Doesnt fix the whole issue #1669  but at least the bug in the UI code so that the manual connection dialog can be drawn on Linux. :+1:   ||
1683,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Do not cite entries without a key in OpenOffice/LibreOffice (#1682) Check that all entries to be cited have non-empty keys  show a popup if there are empty keys  and generate keys if instructed to do so.  References #1682  - [x] Change in CHANGELOG.md described - [x] Manually tested changed features in running JabRef <img width"269" alt"capture14" src"https://cloud.githubusercontent.com/assets/8114497/17440765/4924f2d8-5b2e-11e6-9c48-85b941c7ce93.PNG">  || Please do not use "Implemented #1682" as title. One cannot follow the link to the root issue :smile: A small description makes it much easier.  || Otherwise  please rebase and merge :+1:   || 
1717,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fixes broken serialization of bibentries containing an @ Fixes #1716. - [x] Change in CHANGELOG.md described - [x] Tests created for changes - ~~Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef - ~~Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)~~  As this is rather crucial it would be great if someone else checks what I have done  -)  To explain:   ``` -                // get the text before the entry -                String prolog  parsedSerialization.substring(0  parsedSerialization.lastIndexOf(@))  ```  ... did not work properly if an `@` is used within an entry.  However  determining from the complete parsed serialization where the entry begins and what are comments before the entry is not so trivial. Thus  I added another attribute in the bibentry `commentsBeforeEntry` in which the serialized form of the comments stored in front of the entry is directly saved during parsing the entry. LGTM :+1:  || Just some minor remarks  LGTM :+1:   || We are discussing the failing/unstable GUI tests at #1700   || Just my two cents regarding this PR (by looking at the code): Should be fine! I was thinking about implementing something similar (separate comment field in BibEntry) before  but had avoided it so far. There are a lot of tests regarding parsing  so I am confident that we should not meet unexpected NullPointerExceptions and the like.  Good to see that we have a new person who is responsible for implementing the parsing logic  -)  || Forget it... This parsing stuff is still some black magic for me  )  || Refs #123  ||
1733,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fixed ConcurrentModificationException when removing a field in the so… Fixes #1724. Really simple it turned out...  No CHANGELOG since Im not sure if it was in 3.5. - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
1755,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,Fixed name column rendering #1499 and #1531 Fixed #1499 and #1531. Better to format the author names before converting LaTeX to Unicode... Bah!  <img width"368" alt"capture17" src"https://cloud.githubusercontent.com/assets/8114497/17715209/7202747c-6403-11e6-877b-723da18781fe.PNG"> - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Good work  simple change for fixing two issues at the same time  LGTM :+1:   || LGTM :+1:  Please slightly rewrite the tests and then you can merge it.  ||
1755,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,Fixed name column rendering #1499 and #1531 Fixed #1499 and #1531. Better to format the author names before converting LaTeX to Unicode... Bah!  <img width"368" alt"capture17" src"https://cloud.githubusercontent.com/assets/8114497/17715209/7202747c-6403-11e6-877b-723da18781fe.PNG"> - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Good work  simple change for fixing two issues at the same time  LGTM :+1:   || LGTM :+1:  Please slightly rewrite the tests and then you can merge it.  ||
1755,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,Fixed name column rendering #1499 and #1531 Fixed #1499 and #1531. Better to format the author names before converting LaTeX to Unicode... Bah!  <img width"368" alt"capture17" src"https://cloud.githubusercontent.com/assets/8114497/17715209/7202747c-6403-11e6-877b-723da18781fe.PNG"> - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Good work  simple change for fixing two issues at the same time  LGTM :+1:   || LGTM :+1:  Please slightly rewrite the tests and then you can merge it.  ||
1765,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,0,0,Export to Office 2007 First fix for #1750. I will continue reworking some other fields  too and will add some more tests.  <!-- describe the changes you have made here: what  why  ... --> - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef - [X] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) I would like to merge this in for 3 6 (No Localization changes)  after I rebase   || Looks good! Just some minor comments.  || I will fix it this afternoon/evening. Regarding the language mapping  there is not yet a simple solution  as we would have to integrate the whole table of LCID:   https://msdn.microsoft.com/de-de/goglobal/bb964664.aspx https://support.office.com/en-us/article/Locale-identification-numbers-for-language-specific-files-16102229-37c5-4ad5-92b1-0438f6304114?uien-US&rsen-US&adUS  || Address comments as far as possible  ||
1770,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Implements #1767: Add Help Button to access new help page (Refs #1767) - [x] Manually tested changed features in running JabRef  
1774,1,0,0,1,1,1,1,0,0,0,1,0,1,1,1,1,0,0,1,Fix #1771 Show all supported import types as default file filter Little bit tricky to get this done. Would have preferred a cleaner option but I still need access to some JFileChooser methods... @Siedlerchr This is one for you to review :smile:   || Generally a good solution  but I would move the logic to the ImportFileFilter  makes it a bit more clear.  ||
1780,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,0,0,0,0,Fix arxiv fetcher not working correctly Fix #1776 remove Cookie Handler implementation Our UrlDownload works without or own CookieHandler cookies  too.  Edit// 3.5 worked partly for me with arxivID All unit test and manual tests work again.  I think the problem was that due to the inheritance  our cookie handler was called in every HTTP connection. No idea why it failed with arxiv only. @stefan-kolb I wanted to remove this Cookie Handler anyway :+1: Not sure what it did before. If everything works without it  it would be great!  || Yes  everything works fine without it. I checked some urlDownloads (e.g. Lookup Fulltex) and some other manual fetching things. I really have no idea  why it was added before. Maybe because as a workaround for some things in the past.  || Please remove the empty lines. other than that Im happy with removing the Cookie-Impl.  ||
1791,1,0,0,0,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,Removed JabRefPreferences dependency in FileUtil and removed TimeStamp Removed some JabRefPreferences dependencies in logic. Move TimeStamp methods to EntryEditor as they are only used there.  Second part from #1731  - [x] Manually tested changed features in running JabRef  
1797,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Improved main table rendering when using e.g. title/author Earlier on a name formatter was used if any of the fields in a column contained person names  now it is determined by the used field. (Marginally related to #1795  or at least one step towards a solution  figuring out which field actually was used.)  Before: <img width"432" alt"capture18" src"https://cloud.githubusercontent.com/assets/8114497/17831868/bd234cca-66f5-11e6-9ad6-7dc84a0e7a18.PNG">  After: <img width"527" alt"capture19" src"https://cloud.githubusercontent.com/assets/8114497/17831871/c3134324-66f5-11e6-8b17-5309354227a5.PNG">  (As can be seen  the author/editor column is still rendered as it should.) - [x] Change in CHANGELOG.md described - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef  
1812,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Fix #1803 Working directory is set to full path including filename   LGTM! :+1:  ||
1815,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,1,Fix delete entry keybindings bug When using a different localization then English  setting the keybindings does not work correctly (see here #1235 ). I figured out that the problem is that the `KeyEvent` returns localized key texts so you can not use this to set the `KeyBindings`(the JabRef `KeyBindings` use English key texts). At the moment I only see two possibilities that do not end up in comparing tons of Strings to manually get the english localization.   ~~First would be to change the locale to English  so that the `KeyEvent` returns english key texts  but I do not know what I might break with that and if the rest of the localization will still work.~~   ~~Second solution would be to change the `KeyBindings` so that they use `KeyCodes` instead of Strings. This would IMHO improve the `KeyBindings` system but it would mean a lot of changes in all the `KeyBinding` related code.~~ See the comment below for my approach https://github.com/JabRef/jabref/pull/1815#issuecomment-242346564. - [x] Manually tested changed features in running JabRef I now found a way to fix it. I am building a String with the English modifier key text using the triggered KeyEvents  `is-ModifierKey-Down` methods  || Please resolve conflicts and minor comments  then its good to me 👍  || @boceckts can you test it on win and mac for me please? The meta key does not work on my linux system since there are OS functions on it.  || @Braunch Windows uses the windows key for its own shortcuts  same as with some linux distributions. On mac it now does work to make shortcuts directly with the command(meta) key....but I just realized that if you create a shortcut with the control key  e.g. "ctrl + S" it will automatically be replaced by "command(meta) + S". So I guess the meta key does not have to be listened to..sry for that.  || Is this intended? Why should the grabbed keys differ from the keys actually used by the user? I changed the behavior so that you can set the meta + key shortcut with the meta.  || Any opinion on my solution with the meta key from the @JabRef/developers ?  || Please merge `upstream/mater` and fix minor comments. Then  it should be good to go.  || I addressed the small comments and resolved the conflicts.  || You commited with both your st university address and your normal development address. Please double check your git config.  Please merge upstream/master again. Can you make one commit as described at https://github.com/JabRef/jabref/wiki/Tools#rebase-everything-as-one-commit-on-master? Then  I can resolve the conflicts by myself.  || I resolved the conflicts and squashed my commits. Should be good to go.  || Please do not squash  this makes reviewing very hard as we cannot see  what has been adressed. I added a `BUMP` on all my unaswered comments. Please fix/answer.  You can see all comments at https://github.com/JabRef/jabref/pull/1815/files  || I addressed your comments and merged the upstream/master. I squashed following your comment https://github.com/JabRef/jabref/pull/1815#issuecomment-246499706 Did I get that wrong?  || 
1823,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fixed #1804: URL field is not removed by integrity check Better to disable the check than remove the field from the entry.  -)  Fixes #1804  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes (one may think of adding a test that no fields are removed from the entry in the integrity check  but I havent done that here  ideally the entry should have every possible field included...) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) LGTM  ||
1837,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Fixes #1687 "month" field ascending/descending sorting swapped When sorting according to "month"  "ascending"/"descending" are switched. - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef LGTM! Great with the comparator test! :+1:  ||
1848,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Allow setting the etal-string empty. Implements #1841 Earlier it was not allowed to set the etal-string in the Authors layout formatter to be empty. However  as clear from #1841 there is at least one use case for it and it is not obvious why it wasnt allowed earlier.  A side note: it is still not allowed to set Sep and LastSep empty. Maybe there are good reasons for that? - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
1848,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Allow setting the etal-string empty. Implements #1841 Earlier it was not allowed to set the etal-string in the Authors layout formatter to be empty. However  as clear from #1841 there is at least one use case for it and it is not obvious why it wasnt allowed earlier.  A side note: it is still not allowed to set Sep and LastSep empty. Maybe there are good reasons for that? - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
1857,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixed NPE when loading a style file that has no default style Found when trying #1841 although non-related. - [x] Change in CHANGELOG.md described - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Maybe we could get that into 3.6  too?   || Yes  I think it would make sense/be safe. A better solution is discussed in #1858 .  ||
1865,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixed #1663 Better multi-monitor support - [x] Location of Windows is keep also for multi-monitor setups - [x] Location of Window is only reverted when it is not displaybale (no multi-monitor anymore/wrong preferences) - [x] Removed duplicate maximized state logic - [x] Dialogs are centered as overlay over the main window not always on the main screen  @JabRef/developers Please try on your multi-monitor setup @ work and or a @ home.  - The location of the windows should stay the same or should be adapted to a visible alternate location.  - Also the maximized state should be remembered correctly on all monitors. - Do you see any dialogs that are not correctly centered in multi monitor scenario (JabRef on 2nd screen  dialog on main screen) I run a single X screen two monitor setup and I cannot tell the difference compared to before: if any dialog cover both monitors it is moved and resized to stay inside one of the monitors.  || Is it really inside the boundaries of the screen rectangle? Only then it can work. Sometimes the resolutions are different between monitors (see screenshot). ![image](https://cloud.githubusercontent.com/assets/2141507/18007075/d0085914-6ba2-11e6-89ce-d0146a10e824.png)  || When closing the merge entries window: ![screenshot-4](https://cloud.githubusercontent.com/assets/8114497/18007316/d38fae92-6ba3-11e6-8436-f9687797d429.png) When opening it: ![screenshot-5](https://cloud.githubusercontent.com/assets/8114497/18007331/e2acadd0-6ba3-11e6-96fa-2e13acbe0101.png)  (It may be that the size is kept better now  that I didnt think of.)  Same with the main window (which is adapted to the left monitor on both images).  || With that said  Im sure that this PR solves some problems and Im not sure that the behaviour I report really is a problem as such.  || No your example should work. For me and my horizontal/horizontal setup it works. It looks like for your horizontal/vertical it does not... We have to test more settings to smooth this functionality.  || @oscargus I tried your use case on a similar setup on Windows and it worked  maybe a Linux problem? ![image](https://cloud.githubusercontent.com/assets/2141507/18008684/584e9b98-6ba9-11e6-8a96-9d06e0d3b6b0.png)  || Could indeed be. Especially with the option to have more than one X-screen (which I do not but some people do). Are you interested in any numbers from my setup (obtained from the code)?  || Sure  maybe you can also take a look. I simplified the code very much  so it should be easy to debug if Java/the OS supports our case or if we cannot do anything about the problem. Its basically just   ``` java if(!isDisplayable(storedPosition)) ```  checking for the current location inside a virtual rectangle of all available screens (union).  || LGTM  || @stefan-kolb I will try to see why things go wrong on my office setup "soon"...  || 
1869,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,Download many files in one go Implements #1496 and also allows selecting multiple documents to find full text documents for. I think that it does not always show a dialog for every failed files when having multiple ongoing downloads.  Please try it out at http://builds.jabref.org/downloadmanyfiles - [x] Change in CHANGELOG.md described - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) If it does what you promise  I love you! :heart_eyes:  :laughing:  Will try this tomorrow.   > think that it does not always show a dialog for every failed files when having multiple ongoing downloads.  Not sure if I understand you correctly: So I download e.g. 20 files  and 5 fails. Is then the dialog "Failed DL" displayed 5 times? Or after all downloads are finished it shows a dialog with e.g. 15/20 files downloaded succesfully?  || Works technically fine  but I have some remarks  as its currently not effective usable: I ran it over Quality->Look up fulltext When the process is finished  it shows the file save/ Download failed dialog for every entry which I previously selected. So if I have 200 entries select  after the process it opens 200 dialogs... Even for canceling I would have to click 200 times of cancel. And There is apparently no option to cancel the lookup process.  I would suggest having just a final download result dialog or directly a process window  perhaps sth like this from Down Them All: ![dta](https://addons.cdn.mozilla.net/user-media/previews/full/18/18838.png?modified1331218902)  || Well  what you select is what you get. :-)  I agree that your approach would be even better  but that is out of the scope for me at the moment. One could still reenable one selected entry at a time  with the added benefit of being able to start more than one  but I do not really know if that is a better way to do it. Maybe it is better to pop up a dialog asking if the user is sure they want to try to find > 10(?) full text documents as this can be quite a hassle?  || Agree with you. Add this dialog warning  for more than x? entries . For the rest we should create a new issue/enhancement. Mabye the other devs have some other   Regarding the blocking: Does not block the UI atm.  || I updated and set it to 10. Not sure how much one should actually write in the dialog...  || Code LGTM  just move that magic number to a constant.  || Yeah  was thinking about the constant thing as well. Will fix it. I guess it is a good idea to merge now so people have time to find possible issues.  || Improved the file name generation as well. If the formatter does return an empty string  the BibTeX key is used. If no BibTeX key  "default" is used.  || 
1893,1,0,0,1,1,1,1,0,0,0,1,1,1,0,1,1,0,0,0,Fix Invalid Bibtexkey freeze Fixes #1882. Reference: #1863. - [x] Change in CHANGELOG.md described - [x] Manually tested changed features in running JabRef Please add label "ready-for-review". Thanks.  || LGTM :+1:  I tested your changes and they are working. Good work! Please resolve the merge conflicts and then we can merge it it.  To resolve the merge conflicts I recommend installing and setting up a merge tool for 3way merge (e.g. Meld or kdiff3 or your favorite tool) Then you do  git checkout master git fetch upstream git merge upstream/master git push `git merge upstream/<yourBranch>` Open Git Gui to see and resolve merge conflicts  Be careful with the changelog   || Well done :+1:  Merged.  || 
1894,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Implemented title and camel key modifiers Implemented #1506  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) LGTM   just some misisng space in the changelog  :+1:   || Added `lower_case`  `upper_case`  `sentence_case`  `capitalize`  and `title_case` modifiers (the two first are just additional names).  Unmodifiable return from `Title.getWords()` but the function of the modifier rely heavily on mutable `Word`.  || @oscargus Could you follow up so that we can merge?  || @koppor / @oscargus  pls also move `metadata.setBibtexKeyPattern(bibtexKeyPattern) ` to the setup method  || @tobiasdiez Sorry for overlooking your second move comment. I also created `Formatters.getFormatterForModifier`. Hope  this is good to go now.  The tests are locally OK. The failing test is unrelated to the update.  || Yes  looks good now. Thanks @koppor for finishing this PR 😄   ||
1899,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Move files to subfolders in file directory Implementation for #1092    Already implemented Copy and Move methods from #1861     - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [X] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  ![jabreffiledirpattern](https://cloud.githubusercontent.com/assets/320228/20651008/ad235808-b4dc-11e6-9e1f-fe6175d5c4eb.png) TODO: Pass global as param TODO: Check relative path  || @JabRef/developers  I need some help with the GUI: I desperately tried to add the new field below the other  but I cant get it work  no matter what I tried :rage:   The original layout code is this:  `FormLayout layout  new FormLayout("1dlu  8dlu  left:pref  4dlu  fill:3dlu")` in: https://github.com/JabRef/jabref/blob/fileDirPattern/src/main/java/net/sf/jabref/gui/preftabs/ImportSettingsTab.java  The new field is there  but kinda hidden. No idea how to change it back:  ![settingsimportpanel](https://cloud.githubusercontent.com/assets/320228/18609034/56a523ba-7cf8-11e6-98fa-dbdefb6ca60b.png)  || Yeah  finally the layout works :sunglasses:   || Thanks for the work! Im really missing this feature in JabRef 3.  However  the current behavior is a little unexpected. First  the file seems to be moved relative to its current directory. For example directory pattern \EntryType moves the file with every execution of cleanup to a new subdirectory. For me  expected behavior would be  that the new path is relative to the directory of the bib-file or some otherwise specified root directory.   Second  the file field in the bib entry seems to be adjusted only  if the option Use the BIB file location as primary file directory is set. Otherwise  the file is moved  but the file path is not adjusted.  || @dierkes  Thanks for your feedback. I would have asked you to test it otherwise  too  ) The moving files is a bit complicated as it has to be kept backwards compatible.  The file directory is the first found directory: a) global file dire from setting b) bib file relative c) bib specific setting (atm not sure about the order b and c)  Regarding the file field  I will check it  || Regarding the new file directory: Thats not the behavior I observed.  My test case was: original file: phdthesis/xyz_2015.pdf (all paths relative to the bib-file) file name pattern: \bibtexkey file dir pattern: \EntryType  cleanup -> phdthesis/PhdThesis/xyz_215.pdf cleanup -> phdthesis/PhdThesis/PhdThesis/xyz_215.pdf cleanup -> phdthesis/PhdThesis/PhdThesis/PhdThesis/xyz_215.pdf  It didnt matter if Use the BIB file location as primary file directory was set or if the default directory for files was set. (I tried with setting it to the directory of the bib-file.) I didnt try to set the default file directory for the specific bib-file  however. (Can do that later.)  From my perspective  a backward compatible solution could be: If the file dir pattern is not set  rename the file in its current location. If it is set  move the file to the directory specified by file dir pattern (relative to bib-file directory  if its a relative path) and rename it there. However  an empty file name pattern could mean a) rename the file in place or b) move file to bib-file directory  so an additional option is probably necessary  that specifies whether moving files is active or not.  Interpreting the file dir pattern as a path relative to the current directory of the file does not make sense to me  since executing cleanup would always change the file path. Which is probably the opposite effect one expects from a cleanup  )  || Ah I see you are right.  Will look around.  2016-10-14 12:48 GMT+02:00 dierkes notifications@github.com:  > Regarding the new file directory: Thats not the behavior I observed. >  > My test case was: > original file: phdthesis/xyz_2015.pdf (all paths relative to the bib-file) > file name pattern: \bibtexkey > file dir pattern: \EntryType >  > cleanup -> phdthesis/PhdThesis/xyz_215.pdf > cleanup -> phdthesis/PhdThesis/PhdThesis/xyz_215.pdf > cleanup -> phdthesis/PhdThesis/PhdThesis/PhdThesis/xyz_215.pdf >  > It didnt matter if Use the BIB file location as primary file directory > was set or if the default directory for files was set. (I tried with > setting it to the directory of the bib-file.) I didnt try to set the > default file directory for the specific bib-file  however. (Can do that > later.) >  > From my perspective  a backward compatible solution could be: If the file > dir pattern is not set  rename the file in its current location. If it is > set  move the file to the directory specified by file dir pattern (relative > to bib-file directory  if its a relative path) and rename it there. > However  an empty file name pattern could mean a) rename the file in place > or b) move file to bib-file directory  so an additional option is probably > necessary  that specifies whether moving files is active or not. >  > Interpreting the file dir pattern as a path relative to the current > directory of the file does not make sense to me  since executing cleanup > would always change the file path. Which is probably the opposite effect > one expects from a cleanup  ) >  > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub > https://github.com/JabRef/jabref/pull/1899#issuecomment-253768620  or mute > the thread > https://github.com/notifications/unsubscribe-auth/AATi5PlBiKVFhsla2g3oROQ4oKL60iRdks5qz135gaJpZM4Jxp95 > .  || @dierkes  I fixed it  when all tests are green you could try it out.  || Now it works mostly as expected for me.  Of course  as described above  with the current state its not possible to rename a file only (if its current location does not match the file dir pattern). So we might need the option to activate/deactivate moving the files.  And a very strange thing I noticed: If FileDir pattern is empty and Main file directory is empty and Use the BIB file location as primary file directory is not set  then the file is not moved and a directory relative to the JabRef directory (or maybe to the current working directory)  is created with the name of the desired file path. Staying in the example from above  instead of renaming the file to (literature/) PhdThesis/xyz_2015.pdf a directory named (jabref/) PhdThesis/xyz_2015.pdf/ is created.  || Thanks for the feedback  I will check it Normally renaming file only should work if fileDirPattern is empty in the settings  Am 15.10.2016 11:52 nachm. schrieb "dierkes" notifications@github.com:  > Now it works mostly as expected for me. >  > Of course  as described above  with the current state its not possible to > rename a file only (if its current location does not match the file dir > pattern). So we might need the option to activate/deactivate moving the > files. >  > And a very strange thing I noticed: If FileDir pattern is empty and > Main file directory is empty and Use the BIB file location as primary > file directory is not set  then the file is not moved and a directory > relative to the JabRef directory (or maybe to the current working > directory) is created with the name of the desired file path. Staying in > the example from above  instead of renaming the file to > (literature/) PhdThesis/xyz_2015.pdf > a directory named > (jabref/) PhdThesis/xyz_2015.pdf/ > is created. >  > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub > https://github.com/JabRef/jabref/pull/1899#issuecomment-254013358  or mute > the thread > https://github.com/notifications/unsubscribe-auth/AATi5AJdZEgO8bkoYc7N76tm89c8-MvIks5q0UshgaJpZM4Jxp95 > .  || @dierkes  I fixed the strange behaviour. There was some directory path which was just "" and not null  so it was resolved to the current dir of the jar.  Now it only renames the file. And the old behaviour now works  too  when fileDirPattern is Empty  the file is moved to the file directory   The file directories are checked in this order:  The settings are prioritized in the following order and the first defined setting is used 1. metadata user-specific directory 2. metadata general directory 3. preferences directory 4. BIB file directory  || This works  almost.  -)  I encountered a similar problem when dragging a file and dropping it to an entry. When I select to move the file  again instead of a file a directory is created (same path as the file should have).  || And another issue: If multiple files are linked to an entry  the first file is renamed and the other file links get lost. In JabRef 3.6 the first file is renamed and the other files are moved to the same directory.  || Thanks for your intenstive testing. The issue with the drag and drop is now fixed.  There was a problem with the layout which would have been default to bibtexkey if the pattern param is empty.  I am aware of the thing with the multi files. As far as I discovered the first successful rename/move exits the function. Will try to find out why. Not sure if I find time for it next week.  Addtionally I will create some automatic tests  too if it works finally..  || I think  I fixed the issue with the multiple files  see #2248.  The behavior now  as far as I understand it  is: The function will try to move/rename all attached files. If a file with the new file path already exist (that happens if two attached files have the same file extension)  it does not move/rename the file and keeps the old file path in the bib entry.  For example  lets consider we have three attached files: OldDir1/OldName1.pdf OldDir2/OldName2.pdf OldDir3/OldName3.txt  The new file paths will be: NewDir/NewName.pdf OldDir2/OldName2.pdf NewDir/NewName.txt  I think  there is some room for improvement. For example  to keep OldName2 but move the file to NewDir  if possible. However  before doing this  I think its necessary to define the desired behavior in detail.  || Thanks for your work! Just one thing  it would be nice if you could check that locally  too. There is a junit test I set to ignore (due to the bug) which should now work  too. Just remove the ignore-Tag and  execute it (either directly  or run gradlew check)  `cleanupRenamePdfRenamesWithMultipleFiles()` in  `src/test/java/net/sf/jabref/logic/cleanup/CleanupWorkerTest.java`  || I removed the tag.  When I run `gradlew check`  the test `cleanupRenamePdfRenamesRelativeFile()` in `CleanupWorkerTest.java` fails. However  I think the problem lies within the design of the test. The expected path of the file is `Toot.tmp`  but the actual path is `Misc/Toot.tmp`. I guess  there is some default value set for fileDirPattern.  || Hm I think the value has to be set to an empty string in the test because otherwise it will take the value of the settings.  Am 10.11.2016 12:57 vorm. schrieb "dierkes" notifications@github.com:  > I removed the tag. >  > When I run gradlew check  the test cleanupRenamePdfRenamesRelativeFile() > in CleanupWorkerTest.java fails. However  I think the problem lies within > the design of the test. The expected path of the file is Toot.tmp  but the > actual path is Misc/Toot.tmp. I guess  there is some default value set for > fileDirPattern. >  > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub  or mute the thread.  || @dierkes  I just fixed the failing test. As I expected it  it was due to the setting which got read  || Great. Is there a chance to integrate this branch into the next release?  || Technically  this branch is based on the current master  but not included with the 3.7 release which will be probably released today  So if you stick for the moment to the dev version of this branch  you have all stuff from 3.7 release plus this feature.  Of course it will be in the next release then. There are only some tests which now have to be added to make it ready for a merge || Documentation: Could you please add an issue at help.jabref.org or even create an initial page with `skeleton: true` in the header?  You can link https://help.jabref.org/en/CustomExports#built-in-export-formatters for a description of the formatters which can be used. || I fixed the things from the review  || included feedbacjk || One or two of my comments are still open when I look at the Github UI above. Actually Im only interested why you initialized the Array with a length of 4  Im fine with the rest as thes are only cosmetic changes. || Fixed the rest and the one test which @koppor commented out  in c9726d94686e6687af66476d26b0a1d08c61b41c works fine on travis now again.  || @JabRef/developers we can merge right? || @stefan-kolb @Siedlerchr Yes we can. That is  once the merge conflict in the italian localization gets fixed. || @JabRef/developers  all Conflicts fixed. || Hi  on my system two tests are failing  cleanupRenamePdfRenamesWithMultipleFiles and cleanUpRenamePdfRenameFileDirectoryPatternSubDirectory. However  the problem seems to be that these and other tests do not remove the temporary files properly after execution. The behavior of the cleanup function itself is as expected  but since a file with the target path exists already (left from another test)  the attached file is not renamed and the assertion fails. Im running the tests on Fedora. || Thanks  for  the feedback  I  will  check  that.  Am 06.12.2016 11:45 nachm. schrieb "dierkes" <notifications@github.com>:  > Hi  on my system two tests are failing  cleanupRenamePdfRenamesWithMultipleFiles > and cleanUpRenamePdfRenameFileDirectoryPatternSubDirectory. However  the > problem seems to be that these and other tests do not remove the temporary > files properly after execution. The behavior of the cleanup function itself > is as expected  but since a file with the target path exists already (left > from another test)  the attached file is not renamed and the assertion > fails. Im running the tests on Fedora. > > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/1899#issuecomment-265297567>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/AATi5I43yoo4Vp5qizL0mHwTdMyVBieXks5rFeWEgaJpZM4Jxp95> > . >  || Should now be fixed. Was some Preferences problem as I already thought. Mocked it away.  || 
1899,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Move files to subfolders in file directory Implementation for #1092    Already implemented Copy and Move methods from #1861     - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [X] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  ![jabreffiledirpattern](https://cloud.githubusercontent.com/assets/320228/20651008/ad235808-b4dc-11e6-9e1f-fe6175d5c4eb.png) TODO: Pass global as param TODO: Check relative path  || @JabRef/developers  I need some help with the GUI: I desperately tried to add the new field below the other  but I cant get it work  no matter what I tried :rage:   The original layout code is this:  `FormLayout layout  new FormLayout("1dlu  8dlu  left:pref  4dlu  fill:3dlu")` in: https://github.com/JabRef/jabref/blob/fileDirPattern/src/main/java/net/sf/jabref/gui/preftabs/ImportSettingsTab.java  The new field is there  but kinda hidden. No idea how to change it back:  ![settingsimportpanel](https://cloud.githubusercontent.com/assets/320228/18609034/56a523ba-7cf8-11e6-98fa-dbdefb6ca60b.png)  || Yeah  finally the layout works :sunglasses:   || Thanks for the work! Im really missing this feature in JabRef 3.  However  the current behavior is a little unexpected. First  the file seems to be moved relative to its current directory. For example directory pattern \EntryType moves the file with every execution of cleanup to a new subdirectory. For me  expected behavior would be  that the new path is relative to the directory of the bib-file or some otherwise specified root directory.   Second  the file field in the bib entry seems to be adjusted only  if the option Use the BIB file location as primary file directory is set. Otherwise  the file is moved  but the file path is not adjusted.  || @dierkes  Thanks for your feedback. I would have asked you to test it otherwise  too  ) The moving files is a bit complicated as it has to be kept backwards compatible.  The file directory is the first found directory: a) global file dire from setting b) bib file relative c) bib specific setting (atm not sure about the order b and c)  Regarding the file field  I will check it  || Regarding the new file directory: Thats not the behavior I observed.  My test case was: original file: phdthesis/xyz_2015.pdf (all paths relative to the bib-file) file name pattern: \bibtexkey file dir pattern: \EntryType  cleanup -> phdthesis/PhdThesis/xyz_215.pdf cleanup -> phdthesis/PhdThesis/PhdThesis/xyz_215.pdf cleanup -> phdthesis/PhdThesis/PhdThesis/PhdThesis/xyz_215.pdf  It didnt matter if Use the BIB file location as primary file directory was set or if the default directory for files was set. (I tried with setting it to the directory of the bib-file.) I didnt try to set the default file directory for the specific bib-file  however. (Can do that later.)  From my perspective  a backward compatible solution could be: If the file dir pattern is not set  rename the file in its current location. If it is set  move the file to the directory specified by file dir pattern (relative to bib-file directory  if its a relative path) and rename it there. However  an empty file name pattern could mean a) rename the file in place or b) move file to bib-file directory  so an additional option is probably necessary  that specifies whether moving files is active or not.  Interpreting the file dir pattern as a path relative to the current directory of the file does not make sense to me  since executing cleanup would always change the file path. Which is probably the opposite effect one expects from a cleanup  )  || Ah I see you are right.  Will look around.  2016-10-14 12:48 GMT+02:00 dierkes notifications@github.com:  > Regarding the new file directory: Thats not the behavior I observed. >  > My test case was: > original file: phdthesis/xyz_2015.pdf (all paths relative to the bib-file) > file name pattern: \bibtexkey > file dir pattern: \EntryType >  > cleanup -> phdthesis/PhdThesis/xyz_215.pdf > cleanup -> phdthesis/PhdThesis/PhdThesis/xyz_215.pdf > cleanup -> phdthesis/PhdThesis/PhdThesis/PhdThesis/xyz_215.pdf >  > It didnt matter if Use the BIB file location as primary file directory > was set or if the default directory for files was set. (I tried with > setting it to the directory of the bib-file.) I didnt try to set the > default file directory for the specific bib-file  however. (Can do that > later.) >  > From my perspective  a backward compatible solution could be: If the file > dir pattern is not set  rename the file in its current location. If it is > set  move the file to the directory specified by file dir pattern (relative > to bib-file directory  if its a relative path) and rename it there. > However  an empty file name pattern could mean a) rename the file in place > or b) move file to bib-file directory  so an additional option is probably > necessary  that specifies whether moving files is active or not. >  > Interpreting the file dir pattern as a path relative to the current > directory of the file does not make sense to me  since executing cleanup > would always change the file path. Which is probably the opposite effect > one expects from a cleanup  ) >  > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub > https://github.com/JabRef/jabref/pull/1899#issuecomment-253768620  or mute > the thread > https://github.com/notifications/unsubscribe-auth/AATi5PlBiKVFhsla2g3oROQ4oKL60iRdks5qz135gaJpZM4Jxp95 > .  || @dierkes  I fixed it  when all tests are green you could try it out.  || Now it works mostly as expected for me.  Of course  as described above  with the current state its not possible to rename a file only (if its current location does not match the file dir pattern). So we might need the option to activate/deactivate moving the files.  And a very strange thing I noticed: If FileDir pattern is empty and Main file directory is empty and Use the BIB file location as primary file directory is not set  then the file is not moved and a directory relative to the JabRef directory (or maybe to the current working directory)  is created with the name of the desired file path. Staying in the example from above  instead of renaming the file to (literature/) PhdThesis/xyz_2015.pdf a directory named (jabref/) PhdThesis/xyz_2015.pdf/ is created.  || Thanks for the feedback  I will check it Normally renaming file only should work if fileDirPattern is empty in the settings  Am 15.10.2016 11:52 nachm. schrieb "dierkes" notifications@github.com:  > Now it works mostly as expected for me. >  > Of course  as described above  with the current state its not possible to > rename a file only (if its current location does not match the file dir > pattern). So we might need the option to activate/deactivate moving the > files. >  > And a very strange thing I noticed: If FileDir pattern is empty and > Main file directory is empty and Use the BIB file location as primary > file directory is not set  then the file is not moved and a directory > relative to the JabRef directory (or maybe to the current working > directory) is created with the name of the desired file path. Staying in > the example from above  instead of renaming the file to > (literature/) PhdThesis/xyz_2015.pdf > a directory named > (jabref/) PhdThesis/xyz_2015.pdf/ > is created. >  > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub > https://github.com/JabRef/jabref/pull/1899#issuecomment-254013358  or mute > the thread > https://github.com/notifications/unsubscribe-auth/AATi5AJdZEgO8bkoYc7N76tm89c8-MvIks5q0UshgaJpZM4Jxp95 > .  || @dierkes  I fixed the strange behaviour. There was some directory path which was just "" and not null  so it was resolved to the current dir of the jar.  Now it only renames the file. And the old behaviour now works  too  when fileDirPattern is Empty  the file is moved to the file directory   The file directories are checked in this order:  The settings are prioritized in the following order and the first defined setting is used 1. metadata user-specific directory 2. metadata general directory 3. preferences directory 4. BIB file directory  || This works  almost.  -)  I encountered a similar problem when dragging a file and dropping it to an entry. When I select to move the file  again instead of a file a directory is created (same path as the file should have).  || And another issue: If multiple files are linked to an entry  the first file is renamed and the other file links get lost. In JabRef 3.6 the first file is renamed and the other files are moved to the same directory.  || Thanks for your intenstive testing. The issue with the drag and drop is now fixed.  There was a problem with the layout which would have been default to bibtexkey if the pattern param is empty.  I am aware of the thing with the multi files. As far as I discovered the first successful rename/move exits the function. Will try to find out why. Not sure if I find time for it next week.  Addtionally I will create some automatic tests  too if it works finally..  || I think  I fixed the issue with the multiple files  see #2248.  The behavior now  as far as I understand it  is: The function will try to move/rename all attached files. If a file with the new file path already exist (that happens if two attached files have the same file extension)  it does not move/rename the file and keeps the old file path in the bib entry.  For example  lets consider we have three attached files: OldDir1/OldName1.pdf OldDir2/OldName2.pdf OldDir3/OldName3.txt  The new file paths will be: NewDir/NewName.pdf OldDir2/OldName2.pdf NewDir/NewName.txt  I think  there is some room for improvement. For example  to keep OldName2 but move the file to NewDir  if possible. However  before doing this  I think its necessary to define the desired behavior in detail.  || Thanks for your work! Just one thing  it would be nice if you could check that locally  too. There is a junit test I set to ignore (due to the bug) which should now work  too. Just remove the ignore-Tag and  execute it (either directly  or run gradlew check)  `cleanupRenamePdfRenamesWithMultipleFiles()` in  `src/test/java/net/sf/jabref/logic/cleanup/CleanupWorkerTest.java`  || I removed the tag.  When I run `gradlew check`  the test `cleanupRenamePdfRenamesRelativeFile()` in `CleanupWorkerTest.java` fails. However  I think the problem lies within the design of the test. The expected path of the file is `Toot.tmp`  but the actual path is `Misc/Toot.tmp`. I guess  there is some default value set for fileDirPattern.  || Hm I think the value has to be set to an empty string in the test because otherwise it will take the value of the settings.  Am 10.11.2016 12:57 vorm. schrieb "dierkes" notifications@github.com:  > I removed the tag. >  > When I run gradlew check  the test cleanupRenamePdfRenamesRelativeFile() > in CleanupWorkerTest.java fails. However  I think the problem lies within > the design of the test. The expected path of the file is Toot.tmp  but the > actual path is Misc/Toot.tmp. I guess  there is some default value set for > fileDirPattern. >  > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub  or mute the thread.  || @dierkes  I just fixed the failing test. As I expected it  it was due to the setting which got read  || Great. Is there a chance to integrate this branch into the next release?  || Technically  this branch is based on the current master  but not included with the 3.7 release which will be probably released today  So if you stick for the moment to the dev version of this branch  you have all stuff from 3.7 release plus this feature.  Of course it will be in the next release then. There are only some tests which now have to be added to make it ready for a merge || Documentation: Could you please add an issue at help.jabref.org or even create an initial page with `skeleton: true` in the header?  You can link https://help.jabref.org/en/CustomExports#built-in-export-formatters for a description of the formatters which can be used. || I fixed the things from the review  || included feedbacjk || One or two of my comments are still open when I look at the Github UI above. Actually Im only interested why you initialized the Array with a length of 4  Im fine with the rest as thes are only cosmetic changes. || Fixed the rest and the one test which @koppor commented out  in c9726d94686e6687af66476d26b0a1d08c61b41c works fine on travis now again.  || @JabRef/developers we can merge right? || @stefan-kolb @Siedlerchr Yes we can. That is  once the merge conflict in the italian localization gets fixed. || @JabRef/developers  all Conflicts fixed. || Hi  on my system two tests are failing  cleanupRenamePdfRenamesWithMultipleFiles and cleanUpRenamePdfRenameFileDirectoryPatternSubDirectory. However  the problem seems to be that these and other tests do not remove the temporary files properly after execution. The behavior of the cleanup function itself is as expected  but since a file with the target path exists already (left from another test)  the attached file is not renamed and the assertion fails. Im running the tests on Fedora. || Thanks  for  the feedback  I  will  check  that.  Am 06.12.2016 11:45 nachm. schrieb "dierkes" <notifications@github.com>:  > Hi  on my system two tests are failing  cleanupRenamePdfRenamesWithMultipleFiles > and cleanUpRenamePdfRenameFileDirectoryPatternSubDirectory. However  the > problem seems to be that these and other tests do not remove the temporary > files properly after execution. The behavior of the cleanup function itself > is as expected  but since a file with the target path exists already (left > from another test)  the attached file is not renamed and the assertion > fails. Im running the tests on Fedora. > > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/1899#issuecomment-265297567>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/AATi5I43yoo4Vp5qizL0mHwTdMyVBieXks5rFeWEgaJpZM4Jxp95> > . >  || Should now be fixed. Was some Preferences problem as I already thought. Mocked it away.  || 
1906,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Check Integrity year check added #1897 Added last four nonpunctuation characters should be numerals in Check Integrity year - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef Thanks! The tests fails because of missing translation strings.  If you run the logic/i10/LocalizationConsistencyTest.java you will get a list of strings which are not in the translation files. Add those to the English one and run the script that the output tells you to. Then  all languages are updated and the test should pass (you may have to refresh the files in your IDE in case it fails again). Also  see: https://github.com/JabRef/jabref/wiki/Code-Howtos#using-localization-correctly  If you can add a test to IntegrityCheckTest (or whatever it is called) that really tests for this new feature it would be great.  || I hope  it is correct now. Please set label "ready-for-review". Thanks.  || Thanks for your work :+1: LGTM!  If you reword the changelog  we can merge it in.  || A probably stupid question: why not just check that the year field consists exactly of 4 digits?  || @tobiasdiez  Because the offical bibtex spec says so: See the issue for details: https://github.com/JabRef/jabref/issues/1897#issuecomment-243756785  || Got 3 minor comments and then we can merge :+1:   || Thanks :smile:  LGTM :+1:   || LGTM  too.  || 
1914,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Check integrity edition check implemented #1912 Implemented a check for the field edition. The check differentiates between BibTeX and BibLaTeX mode of the database. - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef Please set label "ready-for-review". Thank you.  || LGTM +1  Just let someone other look at it  too.  Another thing I just got in mind is that the whole checker code could be refactored to use lamdbas  because we have a nice Functional Interface. Will create a new issue for discussing that.   || LGTM :+1:  too. Just change the order in the if statement as @Siedlerchr suggest and then this could be merged.  || And please extract the checker to its own file.  || LGTM from my side now. :+1:   || @grimes2 Please rebase this on master and we will merge it in.  || :+1:  || Thanks for your contribution!  || 
1926,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,0,Extract all Integrity checker classes to its own file Issue #1922 - [ ] Change in CHANGELOG.md described - [x] Manually tested changed features in running JabRef You have still some checkstyle erorr with your imports. If you run eclipse and have the JabRef profile inlcuded  then you can just do Strg+Shift+o for oganizing imports and your checkstyle error will go away  ) PS: you should also run ./gradlew check before a commit to see if all is right  || Ahh. :laughing:  Thanks. Please set label "ready-for review"  || Looks fine code-wise  solid work! Can be merged  in my point of view.  || Yes  LGTM  too!  || 
1928,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Support CitationStyles Implements #119.  The User can choose multiple CitationStyles which he can cycle threw in the preview panel (forward with <kbd>F9</kbd>  backwards <kbd>shift</kbd> + <kbd>F9</kbd>  both are in the context menu and the menu bar) . As discussed I removed the 2nd Preview. ### Preview before:  ![preview_before](https://cloud.githubusercontent.com/assets/15333371/18280266/c6853006-7458-11e6-8828-4484a74bbda6.PNG) ### Preview after:  ![preview_after](https://cloud.githubusercontent.com/assets/15333371/18280283/d74107e4-7458-11e6-8c88-216281c78758.PNG) ### Preferences before:  ![preferences_before](https://cloud.githubusercontent.com/assets/15333371/18280265/c684f26c-7458-11e6-9672-fde6b684a11b.PNG) ### Preferences after:  ![preferences_after](https://cloud.githubusercontent.com/assets/15333371/18280282/d7368f08-7458-11e6-9bc6-dac0e119443c.PNG)  I didnt include the localization (other the English) on purpose because they create unnecessary conflicts when rebasing quite often (I push them when everything else is fine).  The Help page has to be updated too. I do that as soon as this PR is merged. - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  Warning: currently I read the available CitationStyles at runtime. I had problems reading them from the gradle dependency thus currently they are only found when JabRef is started from the JAR. The text of the preferences tab is not completely visible  either reword or adjust the width of the side panel.  || When pressing the up or down button the selected entry becomes deselected and I have to select it again  this can be quite frustrating if I want to move a citation style to the top. Can you please change it so the selected entry stays selected?  || The preview panel is not being updated after changing the citation style but rather displays always the first selected entry.  Steps to reproduce: 1. go to preferences and add a citation style 2. In the main table select an entry and open the preview panel 3. press F9 to see the newly added citation style 4. select a different entry and the preview panel will not update but use the information of the first selected entry EDIT: it will update the citation style though  || The preview panel is not being updated after changing the citation style when working with multiple databases.  Steps to reproduce: 1. go to preferences and add a citation style 2. open at least two databases with at least one entry 3. in the main table select an entry and open the preview panel 4. select the second database and an entry 6. press F9 to change to the newly added citation style 5. the preview panel will not update at all but the status says the citation style has changed When switching to the first database the preview panel has updated and responds to citation style changes.  || I think it would be great to also add the selected citation styles to the "Export to clipboard" dialog.   || When the bugs are fixed and the other minor comments have been addressed then its fine by me.  || Fixed the Bug (both were caused by the same thing) Is the Export to clipboard important? You can already copy the current preview via context menu on the preview panel.  || <s>The context menu exports text only. Is it possible to export the HTML?</s> When pasting into Microsoft Word  everything is formatted correctly.  The "export to clipboard" is not important. If some interested user requests it  work on it can be done.  || Is the use of Citation Styles only for the preview pane ?  I have downloaded the latest developer version and connected to a LibreOffice document to see if I could use the CSL styles to format my bibliography  but when I open the "Select style" window  only the jstyle format seems to be supported.    || I think  this would be the next logical step: to use Citation Styles in Libre Office.  || Please open a new issue to offer tracking the status. Maybe @oscargus has some time to work on that.  || If I use Biblatex style biblio entries  then I have fields like "journaltitle " "location " and "date" instead of "journal " "address " and "year."  These are not picked up by the new Preview citation styles.    Further  as reported by boceckts above  one cant get the citation style displayed  so as to edit it.  The whole new Preview citation feature is wonderfully helpful. I use it a lot!  Thank you. || 
1931,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Export number field as number if not patent or issue in office 07 xml Add : Export key field (not to be confused with bibtexkey field)   Add test for custom entry type and key field  Refs #1851   Documentation has to be updated.  <!-- describe the changes you have made here: what  why  ... --> - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [X] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Added mapping between note field and comments field. Now all official fields  should be mapped. I will update help accordingly.  || :+1:   ||
1934,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Removed external dependency in logic An alternative to #1924 : hard coded `PS` and `PDF` as file type names.  Still some methods that can be removed in `ExternalFileType` (the original thing done in #1924 .  I created three `gui` packages: - `externalfiletypes` for things related to `ExternalFileType` - `externalfiles` for things (primarily) related to the actual files - `filelist` for things related to `FileList` - [x] Change in CHANGELOG.md described LGTM :+1: I like this solution. Personally  I wouldnt separate externalfiletypes and externalfile  but this is probably a matter of taste.  || LGTM as well! And I am in favor of the separation.  Just for clarification before merging: Do you still intend to move `ExternalFileType` and `ExternalFileTypes` into one of the other packages? Or  since the external dependencies on the classes are removed now  will you keep them in gui?  Both ways would be fine in a sense. If those classes are exclusively used in gui  it is fine to keep them there  even if they are could be refactored in a gui-independent fashion.   Before merging the build has to succeed of course.  || The plan is to keep it as is as it solves the problem.  One may indeed think of different solutions regarding the amount of packages and there is no clear border  especially considering `filelist`.  Regarding the builds: clearly I picked the wrong field in `ExternalFileType`... Will fix it.  || Correct field. Bad at reading...  || Not sure why the Circle CI-tests are not executed  but the things are fixed now anyway.  || I closed and reopened the PR to give travis another chance to build the branch.  So can we merge this?   || Good idea and it worked! The build succeeded  so we can merge it.  ||
1942,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,Mods importer Regarding: #1920   Adds an importer for the MODS (xml) format. The importer is written with a JAXB parser. Details on the format and the newest xml schema can be found [here](http://www.loc.gov/standards/mods/). Ive used the newest schema (version 3.6). - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef I just merged my XMLunit changes n #1944.  I think it can useful for you too. Allows checking/validating XML against a schema  too   || I think your code looks good but generally I would like to see more comments and try using more lambdas. :+1:   || I do not really get why travis is failing...   || The problem seems to with the integration tests  not related to your changes  || Hm  Im also wondering why codecov is not running the tests. The test coverage should be much higher...  || I dunno about CodeCo  from my point of view its good! :+1:  @boceckts  Please have a final look  || Okay  I merge it in now as all things are resolved :+1:  Regarding the failing tests we should investigate that in a new issue.   ||
1944,1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,Try around with XMLUnit <!-- describe the changes you have made here: what  why  ... -->  See #1943 for details  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Please fix the two comments and then directly merge it.  ||
1950,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Towards hierarchical keywords <!-- describe the changes you have made here: what  why  ... -->  This PR is the first step towards supporting hierarchical keywords #628.  - [x] Refactor the keyword-related code to use new classes `KeywordList` and `Keyword`  - [x] Unified keyword delimiter to be a single character and in this way fixed the issues mentioned in #705 and #1877 - [ ] Move keyword delimiter from preferences to metadata (database properties) -> new PR - [ ] Add hierarchical delimiter and change parsing logic in `KeywordList` accordingly -> new PR - [ ] Change UI to support hierarchical keywords -> new PR  Note: I also moved the StringUtil class to model (in some sense it is JabRefs own String class) and removed EntryUtil (only had methods related to strings (-> StringUtil) or keywords (-> KeywordList) ). - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
1950,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Towards hierarchical keywords <!-- describe the changes you have made here: what  why  ... -->  This PR is the first step towards supporting hierarchical keywords #628.  - [x] Refactor the keyword-related code to use new classes `KeywordList` and `Keyword`  - [x] Unified keyword delimiter to be a single character and in this way fixed the issues mentioned in #705 and #1877 - [ ] Move keyword delimiter from preferences to metadata (database properties) -> new PR - [ ] Add hierarchical delimiter and change parsing logic in `KeywordList` accordingly -> new PR - [ ] Change UI to support hierarchical keywords -> new PR  Note: I also moved the StringUtil class to model (in some sense it is JabRefs own String class) and removed EntryUtil (only had methods related to strings (-> StringUtil) or keywords (-> KeywordList) ). - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
1950,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Towards hierarchical keywords <!-- describe the changes you have made here: what  why  ... -->  This PR is the first step towards supporting hierarchical keywords #628.  - [x] Refactor the keyword-related code to use new classes `KeywordList` and `Keyword`  - [x] Unified keyword delimiter to be a single character and in this way fixed the issues mentioned in #705 and #1877 - [ ] Move keyword delimiter from preferences to metadata (database properties) -> new PR - [ ] Add hierarchical delimiter and change parsing logic in `KeywordList` accordingly -> new PR - [ ] Change UI to support hierarchical keywords -> new PR  Note: I also moved the StringUtil class to model (in some sense it is JabRefs own String class) and removed EntryUtil (only had methods related to strings (-> StringUtil) or keywords (-> KeywordList) ). - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
1952,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,0,1,1,Fix wrong path in error message Fixes #1949  an error message directs to the wrong preference tab. - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Please resolve conflicts  then its ready to go.  || Conflicts resolved.  || LGTM :+1:  Ill merge it in  ||
1962,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Minor improvements to the JavaFX about dialog Follow up of #1959. @bartsch-dev had a great idea to use his `Version` class to get the changelog url since it already provides a method for it. I only adjusted it slightly so dev versions will be redirected to https://github.com/JabRef/jabref/blob/master/CHANGELOG.md#unreleased. Links will also stay gighlighted after they have been visited.  ![normal version](https://cloud.githubusercontent.com/assets/15340757/18448747/8a24dc0a-792c-11e6-985d-ce0f1876bc59.PNG)  for snapshot versions a new label will be added for the complete version string. ![snapshot](https://cloud.githubusercontent.com/assets/15340757/18448748/8b2078bc-792c-11e6-8a16-e136173aaa38.PNG) - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) I think the "License: " prefix is not really necessary. "MIT license" is already self-explanatory.  @koppor do you really want this? Also remove the "snapshot" part in the title  e.g. `3.7dev 2016-09-09`  || @tobiasdiez I get the version string from `Globals.BUILD_INFO.getVersion() ` do you only want to remove "snapshot" in the about dialog or in general? For example copy version also calls the same method.  || Like the idea with the VersioInfo solution! :+1:  Is commit included?  || "snapshot" is part of the builds delivered by builds.jabref.org. For example:  > JabRef 3.7dev--snapshot--2016-09-12--javafx--bd3dbe8 > windows 10 10.0 amd64  > Java 1.8.0_101  The complete version string should be shown somewhere in the About dialog.  Does the text wrap work also for this long string without whitespace?  || @grimes2  yes it will automatically be broken down to fit multiple lines.  ![longversion](https://cloud.githubusercontent.com/assets/15340757/18442493/45034776-7911-11e6-9385-1c9cfb630a80.PNG)  || Ok  leave it like that (with snapshot)...it is only for the dev version  so no reason to be pixel perfect.   || Thats fine. The normal versions JabRef 3.7 or JabRef 3.7dev will anyway fit in one line. And for the authors all informations are now delivered. Thank you!  || I still have the opinion that "License:" should be removed  but apart from that 👍 for merge. @koppor your call.  || After talking to @koppor I changed minor things and how the snapshot versions will be displayed  I updated the screenshots in the description of this pr accordingly.  || The about dialog is not centered on the JabRef window. See attached screenshot.  JabRef 3.7dev--snapshot--2016-10-06--javafx--5a4e79a windows 10 10.0 amd64  Java 1.8.0_101  ![grabbed_20161006-181713](https://cloud.githubusercontent.com/assets/1366654/19160726/4042c700-8bf1-11e6-95dc-8572acfb2f53.png)  || Hmm I just tried it with the jar available at http://builds.jabref.org/javafx/ and it worked perfectly for me :thinking:  ![aboutdialogcenter](https://cloud.githubusercontent.com/assets/15340757/19189106/61ec5d8a-8c96-11e6-9bda-4d2b608089a9.gif)  JabRef 3.7dev--snapshot--2016-09-26--javafx--6134490 windows 8.1 6.3 amd64  Java 1.8.0_102  || Works on a single screen. Have to connect to an external screen and check again. I have the feeling that JavaFX does not work well with two screens having a different magnification.  || This was actually tested on a second screen  thats why there are no icons. Your build is also a newer one  maybe this is the reason.  On Oct 7  2016  14:22  at 14:22  Oliver Kopp notifications@github.com wrote:  > Works on a single screen. Have to connect to an external screen and > check again. I have the feeling that JavaFX does not work well with two > screens having a different magnification. >  > ##  >  > You are receiving this because you authored the thread. > Reply to this email directly or view it on GitHub: > https://github.com/JabRef/jabref/pull/1962#issuecomment-252238662  || 
1970,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fixes #1958: Verbatim URL field is no longer checked for HTML encoded chars - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef Please adjust the javadoc comment and then its good to merge :+1:   ||
1989,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,Rewrite mods exporter and add test for it Regarding: #1920  Rewrite the MODS exporter with a JAXB parser.  Details on the format and the newest xml schema can be found [here](http://www.loc.gov/standards/mods/). Ive used the newest schema (version 3.6). This PR uses the same gradle script and schema as in #1942 .  - [ ] internal QS - [x] Tests created for changes - [x] Manually tested changed features in running JabRef For some reason codecov does not run the class `ModsExportFormatTestFiles` like in #1942  ...   || @tschechlovdev  Codecov seems to work again:  codecov/project — 28.28% (+0.42%) compared to a8e1488   || Please work on coverage - or is the coverage indication wrong?  ![grabbed_20160921-091358](https://cloud.githubusercontent.com/assets/1366654/18701229/de5b056e-7fdb-11e6-8148-24f53a816038.png)  || No  I have two test classes. `ModsExportFormatTest` and `ModsExportFormatTestFiles`. The coverage comes from `ModsExportFormatTest`  but `ModsExportFormatTestFiles` does not seem to be executed.  I tried to rename `ModsExportFormatTestFiles` to `ModsExportFormatFilesTest`  because I had the intention that it is because the class didnt end with test. Though that also does not seem to work.  || Regarding the test coverage. I have no idea  but maybe it is related to the fact that its a parameterized test?  || Regarding the not executed tests https://github.com/JabRef/jabref/pull/2017#issuecomment-248593717.  || Please increase test coverage.  I did not see a roundtrip test: bibtex -> mods -> bibtex and mods -> bibtex -> mods. Is that possible?  || @koppor  Regarding test coverage: Its still the same problem that the parameterized test are not run by codecov. I will take care of this in a separate PR. Regarding the roundtrip test: I will add one.  || I remove the "ready-for-review" for the moment until the comments are addressed. Please add it again afterwards. Thanks.  || Good! I merge in!  || Im getting the following error:  ``` :compileJava /home/admir/tmp/jabref/src/main/java/net/sf/jabref/logic/exporter/ModsExportFormat.java:60: error: incompatible types: Character cannot be converted to String             .getKeywordSeparator()  ```  OS data:  ``` Distributor ID: Debian Description:    Debian GNU/Linux 8.5 (jessie) Release:        8.5 Codename:       jessie ```  || Ill take a quick look  || @obraliar  Works fine. Did you run ./gradlew eclipse (or build whatever youride is) ? And also ./gradlew check executes fine. No related error.  || @Siedlerchr What OS are you using? `./gradlew assemble` and also `./gradlew check` fails with the same error. I cloned jabref into another directory to annul all factors. Unfortunately  it doesent work. It works when resetting to the commit before.  || @obraliar  Now it get the same. Seems like my local repo was not update to date. I will revert that commit here.  Problem is the internal class stuff. @tschechlovdev  Sorry  but you have to fix this   || @obraliar  I just reverted the commit. Follow up discussion in #2078  || 
2005,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Check avaiable help lanugages when opening specific help page <!-- describe the changes you have made here: what  why  ... -->  If help lang not avaiable use English Fix for #1937 - [X] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
2015,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Implemented Integrity MonthChecker MonthChecker added. #2012 - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef pattern thing fixed  || Thanks for your contribution! Looks good now :+1:  I will merge it in now   ||
2027,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Disable context menu action on selection of multiple entries If multiple entries are selected  some  context menu  toolbar and menu actions are now disabled. Disabled actions: - Print entry preview - Attach file - Edit entry - Open folder (enable only  if file exist) - Open file (enable only  if file exist) - Open URL or DOI (enable only  if url or doi exist) - Merge entries (enable only on select of two entries)  These actions make no sense to be used when there are multiple entries selected. For further information have a look at #463   Context menu before change:  ![2016-09-22_15h50_28](https://cloud.githubusercontent.com/assets/13031192/18750832/10981b3c-80dd-11e6-96cb-af3b83864d59.png)  Context menu after change:  ![2016-09-22_15h50_45](https://cloud.githubusercontent.com/assets/13031192/18751046/d1eefaa8-80dd-11e6-9d3e-e1d6b3794524.png)  Edit menu before change:  ![2016-09-22_15h51_28](https://cloud.githubusercontent.com/assets/13031192/18750871/398a97e0-80dd-11e6-9a8c-71af8553b537.png)  Edit menu after change:  ![2016-09-22_15h51_55](https://cloud.githubusercontent.com/assets/13031192/18750887/44f77bc0-80dd-11e6-84b9-de724fd66535.png)  Bibtex menu before change:  ![2016-09-22_15h52_21](https://cloud.githubusercontent.com/assets/13031192/18750919/6538a3a0-80dd-11e6-8911-f7e781ec224e.png)  Bibtex menu after change:  ![2016-09-22_15h52_44](https://cloud.githubusercontent.com/assets/13031192/18750934/751fe1a2-80dd-11e6-94f2-633872d1fc51.png)  Quality menu before change:  ![2016-09-22_16h34_33](https://cloud.githubusercontent.com/assets/13031192/18752711/8805176e-80e3-11e6-9c1c-00994c832f16.png)  Quality menu after change:  ![2016-09-22_16h34_52](https://cloud.githubusercontent.com/assets/13031192/18752781/bf2f9318-80e3-11e6-84da-d94dcf7f5b57.png)  Tools menu before change:  ![2016-09-22_16h35_17](https://cloud.githubusercontent.com/assets/13031192/18752801/d894e6e6-80e3-11e6-9471-80ca13d5ae64.png)  Tools menu after change:  ![2016-09-22_18h08_02](https://cloud.githubusercontent.com/assets/13031192/18756271/999a78fa-80ef-11e6-89fa-8c96cfd547ab.png)  Toolbare button "Edit Entry" before change:  ![2016-09-22_15h53_17](https://cloud.githubusercontent.com/assets/13031192/18750974/911e3246-80dd-11e6-916e-a55196e2f1f7.png)  Toolbare button "Edit Entry" after change:  ![2016-09-22_15h53_44](https://cloud.githubusercontent.com/assets/13031192/18750992/a0aaf488-80dd-11e6-94b5-f1e21f3e50eb.png)  Toolbare button "Merge entries" before change:  ![2016-09-22_16h38_10](https://cloud.githubusercontent.com/assets/13031192/18752857/fc3bfcce-80e3-11e6-92e8-2e3edeffe976.png)  Toolbare button "Merge entries" after change:  ![2016-09-22_16h37_00](https://cloud.githubusercontent.com/assets/13031192/18752874/07bcf530-80e4-11e6-8402-d3147d14196f.png)  Please take a look for merge. THX 😄  - [x] Change in CHANGELOG.md described - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Internal QS Complete to disable menu item  toolbar button and context menu on multiple select of entries.  || Merge entries needs to be enabled only if exactly two entries are selected  also disable the following if multiple entries are selected: Tools -> open file Tools -> Open URL or DOI  || All things are complete 😄   || Please resolve conflicts.  || All things are done 👍  If all thing is okay  then it will be nice to take a look to merge.  A big THX 😄   || Besides minor comments: LGTM. - The send-as-email-action internally works with multiple entries  but Outlook cannot receive that long string as text. Thus  it is OK for me to exclude this action.  || All things are done 🎅   || Okay  looks good now. Merge it in. :+1:   ||
2028,1,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,[WIP] Fix ris import Regarding: #1647  Doi import should now work with the DO field. Also Ive added some fields  that are available in the [RIS specification](http://referencemanager.com/sites/rm/files/m/direct_export_ris.pdf). Ive also done some code cleanups. #1074 should be also fixed now. Ive added the scopus file as test file. - [x] Tests created for changes - [x] Manually tested changed features in running JabRef Travis fails  because the Architecture tests say  that the StringUtil class should be kept as small as possible ...  || Speak with @lenhard if its okay to increase it and how to fix the test   || I tried to contact @lenhard  but didnt get an answer. So for the moment I think it is the best to remove the method from the StringUtil class  so that this PR do not have to wait to long. In addition it would only be 2 classes who would use this method.  Travis is still failing because of a DOI test.  || Yes  it is the proper way for the moment. We can think later on for moving it. I would merge it in then  || @tschechlovdev You contacted me? How? :-) This mention of myself is the first sign I see  but maybe I overlooked something.  || @lenhard  The question was about the "Failing travis test" regarding the StringUtil method. The ideas was to add  a method for replacing unicode dashes: `String[] entries  linesAsString.replace("\u2013"  "-").replace("\u2014"  "--").replace("\u2015"  "--")` which is also used in medline Plain.  || I know Im late to the party  but one question: is this unicode dash needed for the page numbers? Because then there is a cleanup formatter which does the job (Page number normalizer  or some permutation of these words).   || The reason for moving more functionality to `StringUtil` in model was  if I recall it correctly  that the group fixes needed these methods. If the dash replacement functionality is not needed by model classes  why should it go into that package? If you need that in multiple importer classes  why not introduce a util class for the importer package?  || 
2028,1,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,[WIP] Fix ris import Regarding: #1647  Doi import should now work with the DO field. Also Ive added some fields  that are available in the [RIS specification](http://referencemanager.com/sites/rm/files/m/direct_export_ris.pdf). Ive also done some code cleanups. #1074 should be also fixed now. Ive added the scopus file as test file. - [x] Tests created for changes - [x] Manually tested changed features in running JabRef Travis fails  because the Architecture tests say  that the StringUtil class should be kept as small as possible ...  || Speak with @lenhard if its okay to increase it and how to fix the test   || I tried to contact @lenhard  but didnt get an answer. So for the moment I think it is the best to remove the method from the StringUtil class  so that this PR do not have to wait to long. In addition it would only be 2 classes who would use this method.  Travis is still failing because of a DOI test.  || Yes  it is the proper way for the moment. We can think later on for moving it. I would merge it in then  || @tschechlovdev You contacted me? How? :-) This mention of myself is the first sign I see  but maybe I overlooked something.  || @lenhard  The question was about the "Failing travis test" regarding the StringUtil method. The ideas was to add  a method for replacing unicode dashes: `String[] entries  linesAsString.replace("\u2013"  "-").replace("\u2014"  "--").replace("\u2015"  "--")` which is also used in medline Plain.  || I know Im late to the party  but one question: is this unicode dash needed for the page numbers? Because then there is a cleanup formatter which does the job (Page number normalizer  or some permutation of these words).   || The reason for moving more functionality to `StringUtil` in model was  if I recall it correctly  that the group fixes needed these methods. If the dash replacement functionality is not needed by model classes  why should it go into that package? If you need that in multiple importer classes  why not introduce a util class for the importer package?  || 
2031,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,Fix localization task hints fixes: #2029  Replaces hints to the old gradle localization task names with the new ones.  
2034,1,0,0,1,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0,Fix bad web search error messages Fixes #1542  I rewrote the error messages when the fetchers fail (or added them). @zellerdev currently rewrites the medline fetcher #2066. Probably the strange error message automatically disappears when the medline fetcher is ported to the new interface. Thus I think it is ok to merge this PR (and double check before merging #2066).  || Uhm... the change in `GeneralFetcher.java` causes a quite weird exception:  ``` Exception in thread "JabRef CachedThreadPool" java.lang.IndexOutOfBoundsException: Index: 3  Size: 3     at java.util.ArrayList.rangeCheck(ArrayList.java:653)     at java.util.ArrayList.get(ArrayList.java:429)     at java.awt.Container.createHierarchyEvents(Container.java:1441)     at java.awt.Container.createHierarchyEvents(Container.java:1441)     at java.awt.Container.createHierarchyEvents(Container.java:1441)     at java.awt.Container.createHierarchyEvents(Container.java:1441)     at java.awt.Container.createHierarchyEvents(Container.java:1441)     at java.awt.Dialog.conditionalShow(Dialog.java:953)     at java.awt.Dialog.show(Dialog.java:1037)     at java.awt.Component.show(Component.java:1673)     at java.awt.Component.setVisible(Component.java:1625)     at java.awt.Window.setVisible(Window.java:1014)     at java.awt.Dialog.setVisible(Dialog.java:1005)     at net.sf.jabref.gui.importer.fetcher.GeneralFetcher.lambda$actionPerformed$171(GeneralFetcher.java:220)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) ```  Occurs on (successful) searches with an internet connection in my branch for #2101   Has anyone else this problem?  || ... and there is another problem caused by the same change:  The whole UI freezes after some consecutive searches  e.g.  using the IEEE fetcher.  @bartsch-dev Can you investigate this issues?  || Ill look into it tomorrow evening.  || To get the fetchers back working I just reverted your change in `GeneralFetcher.java` (see 6daa5b5)  Why have you changed it in your PR?  || To not show the fetcher dialog if the fetching was not successful. Now fetcher dialog opens  the error message is on top of that and closes when the error message gets closed.  || 
2040,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Right click menus should allow copying doi url Right clicking on the doi field in the main table or the entry editor shows a sub menu where the user can copy the url of the doi to the clipboard. Refs #490  Right click menu when doi field isnt present ![rightclick](https://cloud.githubusercontent.com/assets/15340757/18834365/c468e680-83f5-11e6-928f-b23de9dd2585.PNG)  Right click menu in entry editor when doi field is not empty ![entryrightclick](https://cloud.githubusercontent.com/assets/15340757/18834634/60974fbe-83f7-11e6-9294-5abac76d96ec.PNG)  Right click menu in entry editor when doi field is empty ![emptydoi](https://cloud.githubusercontent.com/assets/15340757/18834669/902bd7f4-83f7-11e6-9125-4399cb80fec9.PNG) - [x] Internal quality assurance - [x] Add the menu to the entry editor - [x] Change in CHANGELOG.md described - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef Thanks!  || @tobiasdiez  A bit too fast. At least the equals thing should be fixed.  || @Siedlerchr can I still push to this branch or should I create a new branch + pull request?  || Hm  not sure. Better create a new one based on master and then fix the things and we merge it in  || I fixed it in https://github.com/JabRef/jabref/commit/ffa3299d09616c8c779e0a080797c83f517a16fb.   || @tobiasdiez thank you.  ||
2043,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,0,1,Use parallel stream while searching With this the search should be much faster on platforms where multiple cores are available. (#1993) Could you please create one benchmark which uses the normal stream and one for the parallel one  please also post the benchmark results so that we can see the improvement.  || The differences between parallel and normal stream will be only visible in large database  there the parallel stream is more advanced  because the jvm optimizes it.  || ### stream  ``` Benchmark                             Mode  Cnt        Score        Error  Units Benchmarks.htmlToLatexConversion     thrpt   20     3430 821 ±     12 570  ops/s Benchmarks.inferBibDatabaseMode      thrpt   20    12196 397 ±    250 891  ops/s Benchmarks.keywordGroupContains      thrpt   20     7367 579 ±    702 650  ops/s Benchmarks.keywordGroupContainsWord  thrpt   20  8080932 143 ± 190154 353  ops/s Benchmarks.latexToHTMLConversion     thrpt   20    62292 491 ±   1375 804  ops/s Benchmarks.latexToUnicodeConversion  thrpt   20    59849 947 ±    298 067  ops/s Benchmarks.parse                     thrpt   20       20 002 ±      0 809  ops/s Benchmarks.search                    thrpt   20       19 986 ±      0 729  ops/s Benchmarks.write                     thrpt   20       39 440 ±      0 232  ops/s ```  ### parallel stream  ``` Benchmark                             Mode  Cnt        Score       Error  Units Benchmarks.htmlToLatexConversion     thrpt   20     3478 589 ±    58 752  ops/s Benchmarks.inferBibDatabaseMode      thrpt   20    12098 187 ±   235 957  ops/s Benchmarks.keywordGroupContains      thrpt   20     6694 197 ±    84 251  ops/s Benchmarks.keywordGroupContainsWord  thrpt   20  7858681 820 ± 11459 928  ops/s Benchmarks.latexToHTMLConversion     thrpt   20    60325 789 ±  3041 157  ops/s Benchmarks.latexToUnicodeConversion  thrpt   20    59671 261 ±   535 001  ops/s Benchmarks.parse                     thrpt   20       20 349 ±     0 154  ops/s Benchmarks.search                    thrpt   20       63 016 ±     0 843  ops/s Benchmarks.write ```  || Ok  that are good numbers. Perfect. Could you please keep the original `@Benchmark` with normal `stream` and add a new one for the parallel stream (just copy 1:1 the method). Then this can be merged.  || Created a separate Benchmark.  || Thanks :+1:   ||
2055,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix ignore version Fixes #2054   Made a rookie mistake and ignored the already ignored version again. Reworked the preferences to the new design. The only test that failed is the `getByDoi` test from the springer service. Not surprising since the Springer service is currently down for mainte ce.  || Okay  I merged it in!  ||
2066,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Medline Fetcher using new infrastructure Rewrite the Medline fetcher. Refs #2012  - [x] Tests created for changes - [x] Manually tested changed features in running JabRef Please make sure that  creating the BibEntry is done in UTF-8 encoding  #2060 / #2061   || Please also make sure that the strange error message reported in https://github.com/JabRef/jabref/pull/2034#pullrequestreview-2529277 does not appear anymore. Thanks.  || I couldnt reproduce the issue. In my case I had one single error message containing all messages. I changed the exception message `eutils.ncbi.nlm.nih.gov` to a more understandable one.   || CI fails due to mainte ce on ebook.de. So a few IsbnFetcher tests fail.  || 👍 good job. can be merged from my point of view.  || Other than the minor comments: LGTM. Please ping me as soon as you have fixed the minor comments.  || Now I use the counter to inform the user if more entries then the fetched ones are available. I completely removed retmax and retstart and use the default values. I also updated the comments. @koppor   || I preferred the version where 50 entries were returned 😄   || @tobiasdiez Didnt want to change the semantics with my comments -> I just read the code. Should @zellerdev revert this part of his changes? For me  both is fine as long as the fetcher works 😇   || I always thought the limit of 50 was some server-side thing?  || I think the part witch changed the number of fetched entries from 20 to 50 can be reverted but removing the local variables was indeed a good observation. I think even the count variable is not necessary and maybe can be replaced by `list of fetched bib entries.size()`.   || Can you please have a look whether #2172 is fixed with this PR?  || @tschechlovdev is preparing a fix. He wrote the MedlineImporter in the first place.  || Tests fail  but I could fix them locally to get the fix into the master branch (0e5e15d65fba4116a5672 and 966e1967046db466da0). Please consider rewriting the fetcher using xsd.  ||
2067,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Undo #2002 Undo #2002. See #2064.  
2069,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,0,Fix changing the font size not working when importing preferences I initialized the FontSelectorDialog with the variable that keeps changes made in the dialog instead of the current Globals. This seems to fix both issues named here #1808  - [x] Change in CHANGELOG.md described - [x] Manually tested changed features in running JabRef I made the PreferenceDialog store the settings when preferences are exported so that the exported preferences are the same as the ones shown in the dialog. I thought about doing the same when the "show preferences" button is pressed. But I am not convinced that the user would expect that the changes made in the dialog are stored when he wants to show them. Maybe he just wants to compare stuff and then accidentally changes the settings.   || The preference dialog now gets disposed when preferences has been imported. This prevents that the user overrides the imported preferences.  || Can this be merged?  || 
2070,1,0,0,1,1,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix execution of preference migrations Follow up of #1704 to fix the key pattern part of #2021  Preference migrations are executed too late after other operations already worked on the prefs node --> execute them directly in the main class.  
2075,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Other fields fix and changes These are the claimed improvements: - Removed optional fields from `other fields` (BibTeX) - Removed deprecated fields from `other fields` (BibLaTeX)  See: #2064 - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Im sorry  but I am not sure if I get/understand your changes  because what does "OtherFields" refer to?  I have the following tabs. in BibTex: `Required  Optional  General  Abstract  Review  Source` and in Biblatex: `Required  Optional1  Optional2  Deprecated  General  Abstract  Review  Source`  Deprecated fields exist for bibtex compatibility  when you import an entry you often get in bibtex.  So these fields are somehow still required.   || Tab Other fields shows the remaining fields: ![otherfields](https://cloud.githubusercontent.com/assets/15456836/18884619/78865560-84e8-11e6-979b-fbd78f368062.png)  || I think I found the bug in #2064. It was not a regression. A new entry editor was not instantiated on changing an entry of the same type. So some "other fields" were not displayed.  || Please set label "ready-for-review". Thanks.  || The idea was originally to have a better performance. So the entry editor is retained for the same type. This is not a good idea. The entry editor needs to be build completetely new in all cases  because the new entry can have some additional (layout changing) other fields.  || So the whole `entryEditors` list can be deleted  right? (because its sole purpose was to cache the entry editor for each type). Moreover  there is a similar code in the showEntry method which differentiates between cached vs not-yet-cached.  || ``` //To indicate which entry is currently shown. private final Map<String  EntryEditor> entryEditors  new HashMap<>()  ```  I think  `entryEditors` stores all the old entry editors and the new entry editor. So Im not sure  that the sole purpose is to store an entry editor of each type. The similar code in `showEntry` should also be adjusted  but there is currently no bug report for it.  || Ive checked the code. @tobiasdiez you are right. The whole entry editor caching (for each type) can be removed. I have no performance issues with my databases.  || I noticed a very small latency if you quickly switch from editing one entry to another (for example with the arrow keys). But as I do not think this is a big deal  Ill merge this PR now.  || Yes  fast scrolling of the entries causes a small latency and moderate CPU usage. But I think  this is no problem. I have an idea for caching the entry editor: entry editor A -> B -> A. A can be cached. But this takes real effect only on heavy usage of the database.  || Or cache based on the "properties" of the entry. One could generate a unique ID for each entry property. -- Property: entry type  other fields. (future: hadPDFAttached) @braunch  || The problem is generating the textfields. So especially in biblatex mode there are around 80 fields which are generated every time. I would not cache the whole editor but just generate the textboxes when the tab is focused.   || The other field tab is optional (No field -> No tab). I would prefer to create the other fields tab always (No field -> Empty tab). The advantage is  that every entry editor has always the same layout of the tabs. This preserves the active (other fields) tab on changing the entry.  || 
2082,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,Quick fix google scholar entry fetching Google Scholar fetching was broken again (see #1886)  With this fix at least getting the first 10 search hits is possible again.   Configuration is no longer possible in the current form and google generally limits the responses (per page) to 20 hits (however  even using this will cause a captcha challenge for JabRef).  As only 10 hits are allowed a rewrite to the new FetcherInfrastructure should now be possible (thus  omitting the 2-step approach). - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)   - [ ] Update of http://help.jabref.org/en/GoogleScholar might be useful to indicate that only 10 hits are (currently) shown  
2088,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,[WIP] Rewrite mods exporter and add test Follow up of #1989 and regarding #2078. Rewrites the mods exporter with a jaxb parser.   In comparison to the last PR  I do not longer rely on the NamespacePrefixMapper. I added an annotation in the package-info.java which also does the namespace prefix mapping. Only problem is that this annotation cannot be automatically generated by a gradle or ant script  thats why added the package-info.java to src/main/java/net/...../mods. - [x] Tests created for changes - [x] Manually tested changed features in running JabRef Okay  now all seems to be executed fine on travis and codecov is increased  || Yeah codecov was increased but the class `modsExportFormatTestFiles` was still not run  so this issue still remains.  || Codecov itself does not run any tests  it relies on the results from travis: http://docs.codecov.io/docs/ci-service-relationship Mabye its a travis configuration thing. No idea. It would be nice if you could search for information about that   || Yeah  I will try to find a solution for this.  ||
2094,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Make all files selectable in file chooser dialogs make all files selectable in filechooser   fixed #2021 - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Does this make the _._ file filter the default file filter (selected)? (https://docs.oracle.com/javase/7/docs/api/javax/swing/JFileChooser.html#setAcceptAllFileFilterUsed(boolean))  || no  the default one is still the specific one (e.g. xml)  || Great  thanks Christoph!  ||
2102,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Store LaTeX-free fields in BibEntry Based on the discussion in #1993 and the work of @bartsch-dev in #2091  this PR aims to improve the speed of search by storing LaTeX-free versions of field values in a cache. It aims at a balance between better performance and an acceptable memory footprint. Basically  all ideas from #1993 are implemented: a cached store of LaTeX-free fields which is computed on demand  String internalization  and regex performance improvements in `LatexToUnicode`.  Here are measurements with the new branch:  ``` Benchmark                             Mode  Cnt         Score        Error  Unit Benchmarks.latexToUnicodeConversion  thrpt   20    119823.078   2063.425  ops/s Benchmarks.parallelSearch            thrpt   20       735.890    113.685  ops/s Benchmarks.search                    thrpt   20       397.807     28.557  ops/s ```  The memory footprint of a database with 6500 entries is ~ 912 MB on my machine  And on current master:  ``` Benchmark                             Mode  Cnt         Score        Error  Unit Benchmarks.latexToUnicodeConversion  thrpt   20     94367.718   2570.784  ops/s Benchmarks.parallelSearch            thrpt   20        58.204       3.285  ops/s Benchmarks.search                    thrpt   20        30.531       0.952  ops/s ```  The memory footprint of the same 6500 entry database is ~ 888 MB.  All in all  this looks like a hefty performance improvement at little memory cost. - [x] Change in CHANGELOG.md described - [x] Manually tested changed features in running JabRef LGTM. Although the converter is probably not perfect and we might run into new problems caused by that fact.  || The functionality in the converter has not changed  it is just a rewording of `String.replace` calls into regular expressions that are compiled once instead of every time. Thus  there should be no new problems that werent broken before anyway. You can never be sure  though...  I still think the converter should be written from scratch  but that should really be a separate PR.  || Regarding `GrammarBasedSearchRule`: I am not 100% sure  but it looks like it on the one hand builds upon `ContainBasedSearchRule`. But it also has some self-searching code  which I modified to use the LaTeX-free version. This was probably a bug.  || Implementation alternatives for the LaTeX-to-Unicode conversions are discussed at https://github.com/JabRef/jabref/issues/1252  || As a few people have looked at the code and only criticized minor aspects (which I fixed)  Ill merge this now. The codacy build seems to be broken somehow  but then it is also not that critical.  ||
2102,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Store LaTeX-free fields in BibEntry Based on the discussion in #1993 and the work of @bartsch-dev in #2091  this PR aims to improve the speed of search by storing LaTeX-free versions of field values in a cache. It aims at a balance between better performance and an acceptable memory footprint. Basically  all ideas from #1993 are implemented: a cached store of LaTeX-free fields which is computed on demand  String internalization  and regex performance improvements in `LatexToUnicode`.  Here are measurements with the new branch:  ``` Benchmark                             Mode  Cnt         Score        Error  Unit Benchmarks.latexToUnicodeConversion  thrpt   20    119823.078   2063.425  ops/s Benchmarks.parallelSearch            thrpt   20       735.890    113.685  ops/s Benchmarks.search                    thrpt   20       397.807     28.557  ops/s ```  The memory footprint of a database with 6500 entries is ~ 912 MB on my machine  And on current master:  ``` Benchmark                             Mode  Cnt         Score        Error  Unit Benchmarks.latexToUnicodeConversion  thrpt   20     94367.718   2570.784  ops/s Benchmarks.parallelSearch            thrpt   20        58.204       3.285  ops/s Benchmarks.search                    thrpt   20        30.531       0.952  ops/s ```  The memory footprint of the same 6500 entry database is ~ 888 MB.  All in all  this looks like a hefty performance improvement at little memory cost. - [x] Change in CHANGELOG.md described - [x] Manually tested changed features in running JabRef LGTM. Although the converter is probably not perfect and we might run into new problems caused by that fact.  || The functionality in the converter has not changed  it is just a rewording of `String.replace` calls into regular expressions that are compiled once instead of every time. Thus  there should be no new problems that werent broken before anyway. You can never be sure  though...  I still think the converter should be written from scratch  but that should really be a separate PR.  || Regarding `GrammarBasedSearchRule`: I am not 100% sure  but it looks like it on the one hand builds upon `ContainBasedSearchRule`. But it also has some self-searching code  which I modified to use the LaTeX-free version. This was probably a bug.  || Implementation alternatives for the LaTeX-to-Unicode conversions are discussed at https://github.com/JabRef/jabref/issues/1252  || As a few people have looked at the code and only criticized minor aspects (which I fixed)  Ill merge this now. The codacy build seems to be broken somehow  but then it is also not that critical.  ||
2106,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,0,Crash after saving BibTeX source with parsing error Fixes #2104. - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? I just tested your PR following the instructions stated in #2104. JabRef does not crash anymore. However  no error message appears and the additional faulty comma is just not stored silently. When I look into the error console  I see the error.  Imho  this is not quite the behavior we want. It is fine to avoid storing the broken BibTeX  but there should be an error message (that does not crash JabRef). Otherwise  a user might expect that the save worked and would be surprised to see that it did not. This is critical  since all changes made to the entry are lost  not just the comma. Therefore  we need the error message so that the user has a change to fix the mistakes.  || I get an error message: ![parsingerror](https://cloud.githubusercontent.com/assets/15456836/19037291/c6320606-8975-11e6-86bf-fc95adab4f1c.png) I do not know  why it does not work for you. `Edit` keeps the BibTeX source (with parsing error) and gives the opportunity to correct the error. `Revert to original source` does not store the changes.  || You are correct  my bad! I was hitting CTRL+S and not pressing the button in the toolbar. Your PR can be merged  and apologies for not getting it.  Didnt we use to have a keyboard shortcut for saving?  || Ohh  is this another bug? Ctrl+s should also trigger the error message.  || @grimes2 For me it did not. Can you please double check? If you can reproduce it  would you be willing to submit a second pull request?  This could be a keybinding issue though  not directly related to the saving logic.  || File > Save database works Ctrl+s fails Strange! Ill open a new PR.  || Thanks a lot!  ||
2114,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Ctrl-s parsing error message Fixes #2109. Ctrl-s does not trigger parsing error message. Problem: conflict of local shortcut (of the entry editor) with the global shortcut. Solution: local shortcut removed. (The action assigned to local and global shortcut is essentially the same (save database)) - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? I have tested it and can confirm that it works. Removing the local shortcut is fine  this was certainly the relic of some migration. Since it is not too much in size  there is no need for a second review and Ill merge right away.  @grimes2 Good job  as always :-)  ||
2121,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix codecov issue Fix for #2050 Ive added a gradle task  that copys the resource to where they should be. @tobiasdiez One for you to approve?  || So the problem is that the test resources are not copied on build and thus the tests do not found the test files? The gradle job does work (+2 % code coverage). If I understand the solution correctly  then a normal build in intellij or eclipse still do not copy the resource files and thus locally the importer tests are still not performed. Is this right? I have no idea about our build script  but is there no other way to always copy the resources (the language files are automatically copied  right?).  || @tobiasdiez  If you run the test locally in Eclipse it executed all parameterized tests. However  only when executed via intellij or gradle it did not locate the correct directory. Thus no tests files were found. See here for details: https://github.com/JabRef/jabref/issues/2050  || Okay  I would say I merge it in!   ||
2145,1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,Change download URL to downloads.jabref.org We want to get back control of the download site we offer. Thus  we created https://downloads.jabref.org (https://github.com/JabRef/downloads.jabref.org) with a redirection to fosshub.  Refs #1670 Pro: - more convenience for the users  Con - We have to update the deep links for each release - The users wont see the welcome page of FossHub any more. This is different to sourceforge - there  a "deep" link leads to a landing page  too: https://sourceforge.net/projects/jabref/files/v3.6/JabRef_windows_3_6.exe/download - We have to implement an operating system detection  || 
2161,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix group drag and drop This fixes #2119 and #2098  - ~~[ ] Change in CHANGELOG.md described~~ Introduced in dev builds - ~~[ ] Tests created for changes~~ - ~~[ ] Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - ~~[ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~  
2161,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix group drag and drop This fixes #2119 and #2098  - ~~[ ] Change in CHANGELOG.md described~~ Introduced in dev builds - ~~[ ] Tests created for changes~~ - ~~[ ] Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - ~~[ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~  
2162,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,1,0,1,Specialfields refactoring Rewrite of #1964   This kept bugging me  so I invested some time in it. It integrates the changes from #1964 and turns the different special fields into enum values. The different classes composing special fields are now aligned to our architecture. The enum `SpecialField` has to go to `logic` as it involves quite some localization.  There are still some possible improvements based on this PR  in particular: - Outsourcing localization from `SpecialField` so that this class can be moved into `model` (this is not necessarily needed  though) - Rewriting `SpecialFieldsUtil`  which is already marked as deprecated.  To maintain a reasonable scope for this PR  these improvements should be done in separate new PRs. They should now also be much simpler based on the new structure. - [X] Manually tested changed features in running JabRef Iconbar icons for multi value specialfields are too small. (sorry no time to find the cause in the code)  || After a night of almost enough sleep  I have some more ideas and will push up the localization upwards to get the essence into model/logic. Ill readd the ready-for-review when I am done.  || So  now there is a much better structure. `SpecialFieldValue` is also an enum now  the absolute most important information has moved into model  switches are done based on enums  the localization is in logic  and the remaining stuff in gui.  The next thing for a new PR (this time for real) is a rewriting of `SpecialFieldUtil` and moving that logic into keyword synchronization.   When all checkstyle issues are taken care of  the PR would be ready to go from my side.  || Now that the army of fridges and web cams has stopped trying to bring down the internet and our build system is running again  I can finally certify that this works.  So  thanks to the excellent review by @tobiasdiez this has been a huge improvement of the special fields feature. `SpecialField` and `SpecialFieldValue` are now in model and are limited to the absolute essence. All gui-related aspects are moved into `ViewModel` classes in the gui.  The only thing that remains now is the refactoring of the deprecated `SpecialFieldUtils` class and the moving of its methods into `BibEntry`. This  however  cannot easily be achieved  since it depends on `UpdateField`  which is in logic and depends on preferences. If this class stays in logic  then so do the special field update methods. Alternatively  it would be possible to move the methods from `SpecialFieldUtils to`UpdateField`  but I do not really see the point in this. We might consider restructuring the`UpdateField` field class  but in the end this is not the most pressing issue we have.  The refactoring/rewriting of `SpecialFieldUtils` requires more discussion in the group and can be done separate from the changes in this PR. Hence  I consider this PR as finished and it is once again ready for review.   || @JabRef/developers This PR is reviewable / mergeable. To avoid having to fix merge conflicts that build up over time  I would like to get this into master.   I will merge this in  if no one objects within the next seven days.  || I trust your skills  go for it!  || I tested it locally and it works with keyword sync and without keyword sync. I am OK for merge and would address my minor comments (mostly regarding test coverage) later.  || It would be nice if there was a howto to add a new special field.  ||
2163,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix highlighting issues Fixes #2133.  Earlier  highlighting was done manually by adding tags to matches in the html text being sent to the pane. Instead  I have opted to make use of the highlighting features of the JEditorPane class. This gives the additional benefit that the highlight colour is changed automatically based on the system theme.   Changes  - Created JEditorPaneWithHighlighting class - Removed MatchHighlighter class and its tests - Removed highlighting related tests from LayoutEntryTest - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? :checkstyleMain[ant:checkstyle] [ERROR] /home/travis/build/JabRef/jabref/src/main/java/net/sf/jabref/gui/worker/CitationStyleWorker.java:6: javax.swing.JEditorPane should be separated from previous imports. [ImportOrder]  || Thanks for your contribution!  What @stefan-kolb is telling you  that the tests are currently failing as you do not respect the order of the import we defined in your changed classes.  Please check https://github.com/JabRef/jabref/wiki/Guidelines-for-setting-up-a-local-workspace#get-an-ide-in-place and/or run `gradlew eclipse` to adjust the settings of IntelliJ/eclipse to order the imports correctly.  || Thanks @stefan-kolb and @matthiasgeiger. I forgot to run the checks before submitting.  || No worries @shitikanth 😄 These check style things are a little bit nitpicky 😉   ||
2169,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,fix failing ADS test Added missing fields  Fixes #2168 `#10` are really strange field values. But this is a discussion for a post cleanup. For now  this hotfix is good.  ||
2175,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix memory leak in entry editor This is to fix #2166.  List of changes - - Updated microba to latest version - Unregister EntryEditor as a listener to Entry  - Implement SearchQueryHighlightObservable using EntryBus - Make EntryEditor unregister all fields that are listening on the global search bar. LGTM.  ||
2179,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Clear bibtexkey exception Fixes #2177. NullPointerException caused by clearing bibtexkey field in entry editor. - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? The version 3.6 does not have exactly the same bug. But the old code was also buggy  because in a short test I run in severe freezes. Ive removed CHANGELOG entry.  ||
2196,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix for #2184: Add space after separator ... seems to be as simple as that.  Change has been introduced as the delimitor is no longer saved as a String "  " but as a `Character` which chops away the space after the comma. - ~~[ ] Change in CHANGELOG.md described~~ introduced in dev Builds - [x] Tests created for changes - ~~[ ] Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef - ~~[ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)~~ - ~~[ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~ That looks simple indeed.   Since we cannot let you get away with a one-liner: Please add a test that detects the bug you fixed  so that the build would break if this happens again.  || Yes this fix works. Im unsure if we should use the KeywordList class here (since in the end we assume that the field is a list of words and we are adding a new keyword).   || @tobiasdiez Sorry I do not get it. Ive put it in the `KeywordGroup` class as the `add(List<BibEntry> entriesToAdd)` method is not overriden in the subclass `ExplicitGroup`.  Apart from that: If talking only about keywords (without the group context) the keywordSeparator is there followed by a `+" "`  too. (Sorry  Im currently on my way home and have just closed IntelliJ - so I cannot provide a pointer for now.)  || @matthiasgeiger sorry for being cryptic. What I meant was that the class [KeywordList](https://github.com/JabRef/jabref/blob/955b94d7221e5ee3c102731f885eb395e1c2ad64/src/main/java/net/sf/jabref/model/entry/KeywordList.java) probably should be used to modify the field (instead of being text-based). The code then looks similar to:  ``` String oldContent  ... KeywordList wordlist  new KeywordList(oldContent)  wordlist.add(searchExpression)  String newContent  wordlist.getAsString(seperator)  ```  || Ahhh  I see... and this is exactly the position where the `+ "  "` addition is made for keywords.  Will check whether using this is actually possible without sideeffects.  || Done. Will merge after Travis is green.  // Edit: Harvard Astrophysics database is curently down...  || 
2198,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Integrity hotkey The "Check integrity"-action seems to be in need of a hotkey. (See #1908) I used `CTRL + F8` for this action  because F8 is currently used to Cleanup entries. These 2 functions seem to be related so it would make sense to group them. - [x] Change in CHANGELOG.md described - [x] Manually tested changed features in running JabRef - [x] If you changed the localization: Did you run `gradle localizationUpdate`? - [x] internal qs Thanx. So  please  no copynpaste solutions here and useage of .menuTitle  || I changed it to menuTitle and removed the unused keys.  ||
2212,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Improvements to the JavaFX Error Console The log messages in the list view of the error console can now be selected and copied. The error message will also automatically scroll to the newest log message. Refs #2210 Ok  rebase and merge.  ||
2213,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix strange styling behaviour of the error console This should fix the wrong styling behaviour of the different log messages when scrolling. It seems like the styling error came because we never resetted the style classes of the cells when adding new ones. I also created a generic ListFactory class (similar to #1917) so this issue wont occur in the future. Refs #2210  
2223,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,0,0,1,0,Fixes #2222 URLDownload now resolves redirects by default   Could you please also add a test for the arxiv entry which failed to download before the fix.  || A test for the entry would be no different. It must be done for the URLDownloader  but Im not entirely sure how right now.  ||
2225,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix editor freeze Possibly fixes: #2220.  Mainly I removed `SwingUtilities.invokeLater(() ->`. I also added some lines to remove the event listener from the old entry editors. For @grimes2  [this fixed the issue](https://github.com/JabRef/jabref/issues/2220#issuecomment-258010791). My issue is also fixed.  ||
2226,1,0,0,1,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,Fix for #2218: Reenable ADS fetcher (see #2218)  Fetcher is now working again...  - ~~[ ] Change in CHANGELOG.md described~~ affected search based fetcher still unreleased - [x] Tests ~~created for changes~~ pass again - ~~[ ] Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef - ~~[ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)~~ - ~~[ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~  
2229,1,0,0,1,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0,Fix medline fetcher by using https Fix for #2228    - [X] Change in CHANGELOG.md described - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] Write Blog post regarding https://www.ncbi.nlm.nih.gov/home/develop/https-guidance.shtml After November 9  2016  NCBI HTTP servers will redirect or reject all HTTP requests.  
2236,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,BibLaTeX mode: Add month and year field to deprecated tab Issue #2233: In BibLaTeX the `date` field is recommended. For backward compatibility the BibTeX fields `month` and `year` are also accepted. Ive added both fields to the deprecated fields tab  although the year field is present in the required fields tab too.  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? @koppor has an opinion here?!  || In my experience  in a typical setting  one does not know the correct date  but only the year. Together with an experienced librarian (@georgd)  I maintain a high-quality example .bib file at https://github.com/latextemplates/biblatex-lni/blob/master/LNI-examples.bib. There  we use `year` and `urldate`  but never `date`.  I currently do not see  where the month file is currently shown.  So I would vote for keeping as is and not merge.  || The problem is  that an existing month field is not shown at all. The month field should be shown in deprecated or in other fields tab. I prefer the deprecated tab  because the month field is mentioned in the BibLaTeX manual. I think  it is better to remove the year field from deprecated fields  because it is present in required field.  || The year is IMHO not in the depricated fields  is it? Could you provide a screenshot?  We can add the month to the deprecated fields.  || The biblatex manual states  > biblatex will also consider the fields year and month > for backwards compatibility with traditional BibTeX but this is not encouraged as > explicit year and month are not parsed for date meta-information markers or > times and are used as-is.  which is a polite way to say "they are deprecated". Thus I support @grimes2 here and think these two fields should be added to the deprecated tab. @koppor you can also put only the year in the date field if you do not know the month/day of publication.  || Typically  bibtex things from the web have year and not date. This IMHO wont change in the future... Im also in favour for putting journal in the required fields and not other fields. Reason: Main bib file biblatex  but paper bib file in bibtex. No converter for biblatex to bibtex and not forcing everyone to use biblatex/jabref.  || 
2262,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,0,0,Change log level to debug "Fixes" a side aspects mentioned in #2249.  Currently a search will throw errors if one types "author" as the search term is still incomplete - those exceptions should not be visible to the normal user.   
2266,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,When an ISBN is not available on ebook.de  the error message is more clear. When fetching a valid ISBN from ebook.de  but the site has no data of the ISBN  the error message just showed "FileNotFoundException". This PR fixes that.  The issue itself is a kind of regression as it has been fixed for verison 3.3 - see #684.  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [n/a] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [n/a] If you changed the localization: Did you run `gradle localizationUpdate`? Lgtm failing Test seems to be the astrophysics fetcher  || The test failed because of the changed implementation. I adapted the test accordingly in cdf6261.  MathSciNet timeouts  which seems to be unrelated to the improvement above.  ||
2283,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Implement #1359: collect telemetry In this PR  [Microsoft Azure Application Insights](https://docs.microsoft.com/en-us/azure/application-insights/app-insights-overview) is used to record the following information about how JabRef is used: - Number of users and sessions - Dialogs opened (so far only the About dialog is tracked  as proof of concept) - New database is opened  along with how many entries it contains - All exceptions are automatically recorded - A few user information (Country  OS  screen size  JabRef version  Java version)  If you give your ok  I will continue and implement the following: - Track all dialogs - Add "opt-out" preference  In https://github.com/JabRef/jabref/issues/1359  we decided to use google analytics for this  but as Microsoft already provided a nice interface for java  I went for this route.  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  Well  since it was decided in the devcall to implement this  it is ok for me if you go ahead. Regarding the choice of the tracking technology  I trust your skills. The code that is needed to track a dialog seems to be very simple in any case.  I am just not sure if an opt-out is the way to go  or if it should rather be an opt-in. Maybe we could display a dialog asking for consent on first startup. That would be more privacy-friendly in my point of view and we do not want JabRef to appear that it tries to grab user data. I am sure there would be enough people who are willing to contribute their data even in case of opt-in.  || :+1: for opt-in  || Nice that you give it a try 😄 👍 GA had no appropriate library?  || Why do you want to spy almost everything I do?  || @grimes2 My guess (I havent participated in the discussion on this) is that this would enable us to see which features are actually used and which are not. If we had had data on content selector usage  we would not have removed them. At the same time  we would be able to see if there is a point at all in optimizing JabRef usage for really large databases or if this is a waste of time.  || I added tracking of other dialogs and changed the default to "do not share telemetry data". Also  after the first minute of using JabRef  the user is asked whether he wants to share is data. I actually preferred to have a more non-invasive notification similar to  ![ie](http://media.askvg.com/articles/images3/Speedup_Browsing_Disable_Addons_Popup_IE9.png) JavaFX provides a NotificationPanel exactly for this scenario  however  it does not work if the rest of the application is in swing.   Anyway  this PR is now finally ready for your feedback!  ----- For later reference (I will add this links also to the wiki): - Walk-through of [how to use Azure Application Insights in Java](https://docs.microsoft.com/en-us/azure/application-insights/app-insights-java-get-started) - [Azure Application Insight github project](https://github.com/Microsoft/ApplicationInsights-Java) || I tried it out locally  the dialog appears as desired  and the option can be disabled via the preferences. Code-wise  I have no objections. However  JabRef does not terminate when I close it and I get the a lot of messages in the console  e.g.: ``` AI: TRACE 31-03-2017 13:39  28: Telemetry Configuration: illegal instrumentation key: null AI: TRACE 31-03-2017 13:39  28: InProcessTelemetryChannel sending telemetry AI: ERROR 31-03-2017 13:39  44: Failed to send  Bad request  : {"itemsReceived":1 "itemsAccepted":0 "errors":[{"index":0 "statusCode":400 "message":"Invalid instrumentation key"}]} AI: TRACE 31-03-2017 13:39  28: Telemetry Configuration: illegal instrumentation key: null AI: TRACE 31-03-2017 13:39  28: InProcessTelemetryChannel sending telemetry AI: ERROR 31-03-2017 13:39  46: Failed to send  Bad request  : {"itemsReceived":1 "itemsAccepted":0 "errors":[{"index":0 "statusCode":400 "message":"Invalid instrumentation key"}]} ```  Since this is a very sensitive topic  I think we should make the dialog a little more explanatory. Currently it says   > To improve the user experience  we would like to collect data on the features you use. No personal data will be collected.   While everything is in that statement  I think we should be more explicit and repeat ourselves. Suggestion:   > To improve the user experience  we would like to collect anonymous statistics on the features you use. We will only record what features you access and how often you do it. We will neither collect any personal data nor the content of bibliographic items. The collected data will be stored on XXX and we will only use it to prioritize our development efforts. If you choose to allow data collection  you can later disable it via Options -> Preferences -> General  I know this is quite long  but since this is a delicate topic  I think it is necessary. Btw.: where is the data actually stored?  @JabRef/developers I think this is so important that everyone should consider it briefly.  And a last comment: We will get flack from the Linux freaks when they find out that we dare to include a microsoft library. So be prepared for it  -) || I like your suggestion for the dialog text and updated it accordingly. The data is store on Microsoft Azure server...no idea where exactly 😄 .  The reason for the error message is that a correct instrumentation key is only inserted by travis and thus you get these messages when you run JabRef from the IDE.  || By the way  this is what I just got after installing soapUI: ![soapui](https://cloud.githubusercontent.com/assets/1515701/24553492/a8aff9de-162a-11e7-944b-d0b2c92bc463.png)  Of course  they have a much more explicit privacy policy page for that.  || 
2295,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,Fix "No suitable driver found" I got the error message "No suitable driver found for jdbc:pgsql://fizzy-cherry.db.elephantsql.com:5432/zdndklfq" when using the session restore of shared databases of JabRef. Google pointed me to http://stackoverflow.com/a/22384826/873282  which states that all drivers should be loaded before they are used.  This PR ensures that all available DBMS drivers are loaded before any connection attempt is made.  This does not fix #2294  which means that one has to enable autosave to be able to automatically reconnect.  
2300,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Fix local metadata synchronization (fixes: #2219) Issue: https://github.com/JabRef/jabref/issues/2219.  This issue is fixed by overloading and using the `parse(...)` method in `MetaDataParser`.  The reason was a reset of the local field `metaData` in `DBMSSynchronizer`. This caused other instances containing this field not to be up-to-date.   - [X] Change in CHANGELOG.md described - [X] Manually tested changed features in running JabRef I merged it  because it is a hotfix. @obraliar Do you think  it is possible to add a testcase for that?  || I am testing PostgreSQL using ElephantSQL.com. I am having autosave activated. I restart JabRef. I get following exception:  ``` 20:56:15.998 [AWT-EventQueue-0] INFO  net.sf.jabref.logic.importer.OpenDatabase - Opening: C:\Users\koppor\BTSync\Projects\2016-11 - Dagstuhl-Paper\dagstuhl.bib Nov 20  2016 8:56:22 PM com.google.common.eventbus.EventBus$LoggingHandler handleException SEVERE: Exception thrown by subscriber method listen(net.sf.jabref.model.metadata.event.MetaDataChangedEvent) on subscriber net.sf.jabref.shared.DBMSSynchronizer@6695f8f3 when dispatching event: net.sf.jabref.model.metadata.event.MetaDataChangedEvent@6f7e5617 java.lang.NullPointerException         at net.sf.jabref.shared.PostgreSQLProcessor.notifyClients(PostgreSQLProcessor.java:126)         at net.sf.jabref.shared.DBMSSynchronizer.listen(DBMSSynchronizer.java:127)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ... at net.sf.jabref.model.metadata.MetaData.postChange(MetaData.java:202)         at net.sf.jabref.model.metadata.MetaData.setMode(MetaData.java:143)         at net.sf.jabref.logic.importer.util.MetaDataParser.parse(MetaDataParser.java:69)         at net.sf.jabref.shared.DBMSSynchronizer.synchronizeLocalMetaData(DBMSSynchronizer.java:264)         at net.sf.jabref.shared.DBMSSynchronizer.initializeDatabases(DBMSSynchronizer.java:157)         at net.sf.jabref.shared.DBMSSynchronizer.openSharedDatabase(DBMSSynchronizer.java:353)         at net.sf.jabref.shared.DBMSSynchronizer.openSharedDatabase(DBMSSynchronizer.java:358)         at net.sf.jabref.gui.shared.SharedDatabaseUIManager.openSharedDatabaseFromParserResult(SharedDatabaseUIManager.java:140)         at net.sf.jabref.JabRefGUI.openWindow(JabRefGUI.java:117)         at net.sf.jabref.JabRefGUI.<init>(JabRefGUI.java:63)         at net.sf.jabref.JabRefMain.lambda$start$1(JabRefMain.java:136) ```  || @koppor oh yes this now also fixed. Thanks for the objection.  ||
2301,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Readd Drop Down content selectors First attempt at readding the code for  #2221  Refs #2068   Code does not compile yet  some adjustments need to be made regarding Metadata stuff etc   <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? @tobiasdiez  There are some things with the Metadata to make it compile again. Could you please have a look? thanks! || How to handle the metadata is indeed a problem. I remember that I removed the content selectors mainly because they were the last not-so-easy-to-convert-to-the-new-metadata item. The next few days I will not find the time to assist you here  sorry. || Still some language related errors.  || The localization keys existed before the feature was removed. I wonder why the revert did not restore them in the language files? || I did a manual revert  because there were some more changes which would have led to conflicts otherwise. Was somehow decided. || As this was a rather old feature I suppose there were translations for most languages... Can you readd the translated values as well? Or should I go  digging in the history? 😉 || So I re-implemented parsing and serialization of content selectors and added tests for it. It is probably not the most beautiful fashion  but I need to (want to) link to the old code and not have to re-write the GUI.   Speaking of the GUI: The content selectors seem to be working fine if the MetaData is in the bib file. The GUI in the EntryEditor is not actually beautiful  but I guess it has never been (does anybody feel like polishing the UI?). However  I do not see Options –> Manage content selectors. Maybe that has not been ported from  #2068 yet? Maybe someone who is more familiar with the menu than me can have a look? :)  Finally  the test currently say: ``` net.sf.jabref.logic.help.HelpFileTest > referToValidPage FAILED ``` Although there seems to be a help page here: http://help.jabref.org/en/ContentSelector Someone certainly has a pointer for that? || Regarding the help file  there is an enum called HelpFiles or similar  for the name of the help page  I can take a look at the dialog thing in the menu  Am 30.11.2016 5:10 nachm. schrieb "Jörg Lenhard" <notifications@github.com>: > > So I re-implemented parsing and serialization of content selectors and added tests for it. It is probably not the most beautiful fashion  but I need to (want to) link to the old code and not have to re-write the GUI. > > Speaking of the GUI: The content selectors seem to be working fine if the MetaData is in the bib file. The GUI in the EntryEditor is not actually beautiful  but I guess it has never been (does anybody feel like polishing the UI?). However  I do not see Options –> Manage content selectors. Maybe that has not been ported from #2068 yet? Maybe someone who is more familiar with the menu than me can have a look? :) > > Finally  the test currently say: > > net.sf.jabref.logic.help.HelpFileTest > referToValidPage FAILED > > Although there seems to be a help page here: http://help.jabref.org/en/ContentSelector Someone certainly has a pointer for that? > > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub  or mute the thread.  || I pushed a commit which should take care of the menu item (hopefully  I directly edited it on github). || @tobiasdiez Indeed  it does! Nice :) That means the feature is back!  Regarding the help files  there is `CONTENT_SELECTOR("ContentSelector") ` in `net.sf.jabref.logic.help.HelpFile`  so the test really should not fail  should it? || Ok  seems we are back on track  only the google scholar test is failing now  which  I hope  is just a random connection problem on the side of travis. The same might have applied for the help file test.  So now we can do some more code review and at a certain point  have the users from #2221 try out the feature to make sure that it works. || @tobiasdiez I addressed most of your comments. I agree that "content selectors" is probably not the most appropriate name for the stuff this feature does  but it is the name under which it has existed for a long time and is known  at least by some people. I would say that consistency in naming tops appropriateness of the name.  Furthermore  I removed the entry editors update code  as you asked for. The updating of the content selectors did not even work with this code. I tried to replace it with something else and failed. So  for now you have to restart JabRef to get a change in the content selectors to work. Maybe someone from @JabRef/developers can provide a hint on how the refresh of the entry editor should work?  Finally  I will leave the problems in the localization for @Siedlerchr to fix :) || Closing and reopening of the entry editor does not work? (Potentially with selecting another entry?) || @matthiasgeiger Unfortunately not. The changed data makes it into the MetaData  but the GUI does not notice. It is only up-to-date when the MetaData is re-read from disk and the EntryEditor is re-built. Closing and reopening the bib file does the trick  or restarting JabRef || So we would like to get this into v3.8  which hopefully can be released in december. What is missing:  - [ ] correct the language files  - [ ] have selector keywords updated without reloading of the bib file  - [ ] Have the users play around with it to see if it really works  I was hoping that @Siedlerchr could do the first two points  and hopefully soon :-) @Siedlerchr what is your opinion on that? || Yeah  I will try to work on it. At least I tried to fix the language files  yesterday.  I will continue working on it the weekend || 
2314,1,0,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,1,Rework DBLPFetcher to new structure also fixes #2311   - [x] Change in CHANGELOG.md described - [x] Tests created for changes - ~~[ ] Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - ~~[ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~ Thanks to the feedback from Dagstuhl we now directly use the "standard" form of bibtex entries containing all relevant information (esp. DOIs) and full book/journal/conf-titles. || 
2328,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,Add bibtex key deviation check Refs #2206   Adds integrity check to determine all entries which bibtex keys deviate from the set bibtex key generation pattern.  - [x] Change in CHANGELOG.md described - [x] Manually tested changed features in running JabRef - [x] If you changed the localization: Did you run `gradle localizationUpdate`?  
2331,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Improve entrytype customization Goals: - Entry customization based on BibDatabaseMode   - [x] working for custom entry types defined in bib DB   - [x] storage is working for new customized entries (instead of creating three/four prefs Strings for each customized entry type in the form ("custom_type_1_name"  "custom_type_1_REQ"  ...) two distinct pref nodes (one for BibTeX one for BibLaTeX) for customized entry types are used which simply use the custom type name as key and the string serialization as value (--> parsing can be reused))   - [x] loading is working for newly created customized entries   - [x] write prefs migration (is performed on first startup of new version  existing prefs will be put as new custom types for `defaultBibDatabaseMode`  old prefs are not deleted) - enable testing with cleanup after test execution   - [x] bibtex   - [x] biblatex - various bug fixes and improvements  e.g.  #2318 #772 #366 #365    - [x] refactor/rewrite parts of `EntryCustomizationDialog` to improve performance (refs #2318)   - [x] fixes #2261 (and also clearing of bibtexKeyPatterns using "reset preferences")   - [x] #772: Deleting custom type  restoring customized default type from exported prefs  no multiple import of customized entry types   - [x] #366: Check "Resetting overridden default entry types does not work  sometimes even crashes" - not reproducible in reworked state (ask @stefan-kolb whether still an issue) - related to #2318? --> caused by running through all entries in all open DBs   - [x] If a customized type is declared in a file it will be tried to import the declarations - if a customType already exists  a warning should be shown that it will be overwritten      - before this PR (no import of already existing customizations): ![custom-import-before](https://cloud.githubusercontent.com/assets/676652/21097503/131ecd16-c065-11e6-9c8e-f23cb8d453e1.png)      - now (more control):  ![custom-import-new](https://cloud.githubusercontent.com/assets/676652/21097446/bf88c724-c064-11e6-8cc4-4a16c4d18dc5.png)    - [x] a customized standard type should not appear in the "custom" section of the "New entry" dialog  and not in the "custom entries" section of the "change entry type" menu  - [x] CHANGELOG Okay... I think the current state is now a good improvement of the old status-quo.  At the moment the prefs migration and a dialog showing a warning if customized entries would be overridden is still missing.   Apart from that I would appreciate some feedback  -) || Apart from a CHANGELOG and some more tests this is good to go from my side. || @mlep @frith th It is not yet decided whether we will include this improvement in 3.8 or not. However  there are three more translations which are added in this pull request. Could you provide me translations for these three strings? Then Ill add them manually. Thanks!  ``` Select_all_customized_types_to_be_stored_in_local_preferences Currently_unknown Different_Customization _current_settings_will_be_overwritten ``` || On Thu  Dec 15  2016 at 11:17 AM  Matthias Geiger <notifications@github.com> wrote:  > @mlep <https://github.com/mlep> @frith th > <https://github.com/frith th> It is not yet decided whether we will > include this improvement in 3.8 or not. However  there are three more > translations which are added in this pull request. Could you provide me > translations for these three strings? Then Ill add them manually. > Thanks! > > Select_all_customized_types_to_be_stored_in_local_preferences > >  Select_all_customized_types_to_be_stored_in_local_ preferencesSeleziona_tutti_i_tipi_personalizzati_da_registrare_nelle_preferenze_locali  > Currently_unknown > >  Currently_unknownAttualmente_sconosciuto  Thats the singular mode  the plural is "Attualmente_sconosciuti". But since Italian is profoundly evil  thats OK if referred to a masculine noun  the feminine forms are different  but Im digressing :-)  > Different_Customization _current_settings_will_be_overwritten > >  Different_Customization _current_settings_will_be_ overwrittenPersonalizzazione_differente _i_parametri_correnti_saranno_sovrascritti  >  — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2331#issuecomment-267291718>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/ADyA2AnC2wjebXAMoi4YuB2CzYqky1Bgks5rIRPHgaJpZM4LCcrA> > . >    --  Fer do Santagata  || Thank you @frith th ! || Youre welcome!  On Fri  Dec 16  2016 at 9:30 PM  Matthias Geiger <notifications@github.com> wrote:  > Thank you @frith th <https://github.com/frith th> ! > > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2331#issuecomment-267688937>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/ADyA2EhYM65slWyTwdWTJwH8EDTLmMC4ks5rIvT2gaJpZM4LCcrA> > . >    --  Fer do Santagata  || How did we proceed regarding standard types? Is it a v4.0 issue? See https://github.com/koppor/jabref/issues/248 || 
2331,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Improve entrytype customization Goals: - Entry customization based on BibDatabaseMode   - [x] working for custom entry types defined in bib DB   - [x] storage is working for new customized entries (instead of creating three/four prefs Strings for each customized entry type in the form ("custom_type_1_name"  "custom_type_1_REQ"  ...) two distinct pref nodes (one for BibTeX one for BibLaTeX) for customized entry types are used which simply use the custom type name as key and the string serialization as value (--> parsing can be reused))   - [x] loading is working for newly created customized entries   - [x] write prefs migration (is performed on first startup of new version  existing prefs will be put as new custom types for `defaultBibDatabaseMode`  old prefs are not deleted) - enable testing with cleanup after test execution   - [x] bibtex   - [x] biblatex - various bug fixes and improvements  e.g.  #2318 #772 #366 #365    - [x] refactor/rewrite parts of `EntryCustomizationDialog` to improve performance (refs #2318)   - [x] fixes #2261 (and also clearing of bibtexKeyPatterns using "reset preferences")   - [x] #772: Deleting custom type  restoring customized default type from exported prefs  no multiple import of customized entry types   - [x] #366: Check "Resetting overridden default entry types does not work  sometimes even crashes" - not reproducible in reworked state (ask @stefan-kolb whether still an issue) - related to #2318? --> caused by running through all entries in all open DBs   - [x] If a customized type is declared in a file it will be tried to import the declarations - if a customType already exists  a warning should be shown that it will be overwritten      - before this PR (no import of already existing customizations): ![custom-import-before](https://cloud.githubusercontent.com/assets/676652/21097503/131ecd16-c065-11e6-9c8e-f23cb8d453e1.png)      - now (more control):  ![custom-import-new](https://cloud.githubusercontent.com/assets/676652/21097446/bf88c724-c064-11e6-8cc4-4a16c4d18dc5.png)    - [x] a customized standard type should not appear in the "custom" section of the "New entry" dialog  and not in the "custom entries" section of the "change entry type" menu  - [x] CHANGELOG Okay... I think the current state is now a good improvement of the old status-quo.  At the moment the prefs migration and a dialog showing a warning if customized entries would be overridden is still missing.   Apart from that I would appreciate some feedback  -) || Apart from a CHANGELOG and some more tests this is good to go from my side. || @mlep @frith th It is not yet decided whether we will include this improvement in 3.8 or not. However  there are three more translations which are added in this pull request. Could you provide me translations for these three strings? Then Ill add them manually. Thanks!  ``` Select_all_customized_types_to_be_stored_in_local_preferences Currently_unknown Different_Customization _current_settings_will_be_overwritten ``` || On Thu  Dec 15  2016 at 11:17 AM  Matthias Geiger <notifications@github.com> wrote:  > @mlep <https://github.com/mlep> @frith th > <https://github.com/frith th> It is not yet decided whether we will > include this improvement in 3.8 or not. However  there are three more > translations which are added in this pull request. Could you provide me > translations for these three strings? Then Ill add them manually. > Thanks! > > Select_all_customized_types_to_be_stored_in_local_preferences > >  Select_all_customized_types_to_be_stored_in_local_ preferencesSeleziona_tutti_i_tipi_personalizzati_da_registrare_nelle_preferenze_locali  > Currently_unknown > >  Currently_unknownAttualmente_sconosciuto  Thats the singular mode  the plural is "Attualmente_sconosciuti". But since Italian is profoundly evil  thats OK if referred to a masculine noun  the feminine forms are different  but Im digressing :-)  > Different_Customization _current_settings_will_be_overwritten > >  Different_Customization _current_settings_will_be_ overwrittenPersonalizzazione_differente _i_parametri_correnti_saranno_sovrascritti  >  — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2331#issuecomment-267291718>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/ADyA2AnC2wjebXAMoi4YuB2CzYqky1Bgks5rIRPHgaJpZM4LCcrA> > . >    --  Fer do Santagata  || Thank you @frith th ! || Youre welcome!  On Fri  Dec 16  2016 at 9:30 PM  Matthias Geiger <notifications@github.com> wrote:  > Thank you @frith th <https://github.com/frith th> ! > > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2331#issuecomment-267688937>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/ADyA2EhYM65slWyTwdWTJwH8EDTLmMC4ks5rIvT2gaJpZM4LCcrA> > . >    --  Fer do Santagata  || How did we proceed regarding standard types? Is it a v4.0 issue? See https://github.com/koppor/jabref/issues/248 || 
2331,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Improve entrytype customization Goals: - Entry customization based on BibDatabaseMode   - [x] working for custom entry types defined in bib DB   - [x] storage is working for new customized entries (instead of creating three/four prefs Strings for each customized entry type in the form ("custom_type_1_name"  "custom_type_1_REQ"  ...) two distinct pref nodes (one for BibTeX one for BibLaTeX) for customized entry types are used which simply use the custom type name as key and the string serialization as value (--> parsing can be reused))   - [x] loading is working for newly created customized entries   - [x] write prefs migration (is performed on first startup of new version  existing prefs will be put as new custom types for `defaultBibDatabaseMode`  old prefs are not deleted) - enable testing with cleanup after test execution   - [x] bibtex   - [x] biblatex - various bug fixes and improvements  e.g.  #2318 #772 #366 #365    - [x] refactor/rewrite parts of `EntryCustomizationDialog` to improve performance (refs #2318)   - [x] fixes #2261 (and also clearing of bibtexKeyPatterns using "reset preferences")   - [x] #772: Deleting custom type  restoring customized default type from exported prefs  no multiple import of customized entry types   - [x] #366: Check "Resetting overridden default entry types does not work  sometimes even crashes" - not reproducible in reworked state (ask @stefan-kolb whether still an issue) - related to #2318? --> caused by running through all entries in all open DBs   - [x] If a customized type is declared in a file it will be tried to import the declarations - if a customType already exists  a warning should be shown that it will be overwritten      - before this PR (no import of already existing customizations): ![custom-import-before](https://cloud.githubusercontent.com/assets/676652/21097503/131ecd16-c065-11e6-9c8e-f23cb8d453e1.png)      - now (more control):  ![custom-import-new](https://cloud.githubusercontent.com/assets/676652/21097446/bf88c724-c064-11e6-8cc4-4a16c4d18dc5.png)    - [x] a customized standard type should not appear in the "custom" section of the "New entry" dialog  and not in the "custom entries" section of the "change entry type" menu  - [x] CHANGELOG Okay... I think the current state is now a good improvement of the old status-quo.  At the moment the prefs migration and a dialog showing a warning if customized entries would be overridden is still missing.   Apart from that I would appreciate some feedback  -) || Apart from a CHANGELOG and some more tests this is good to go from my side. || @mlep @frith th It is not yet decided whether we will include this improvement in 3.8 or not. However  there are three more translations which are added in this pull request. Could you provide me translations for these three strings? Then Ill add them manually. Thanks!  ``` Select_all_customized_types_to_be_stored_in_local_preferences Currently_unknown Different_Customization _current_settings_will_be_overwritten ``` || On Thu  Dec 15  2016 at 11:17 AM  Matthias Geiger <notifications@github.com> wrote:  > @mlep <https://github.com/mlep> @frith th > <https://github.com/frith th> It is not yet decided whether we will > include this improvement in 3.8 or not. However  there are three more > translations which are added in this pull request. Could you provide me > translations for these three strings? Then Ill add them manually. > Thanks! > > Select_all_customized_types_to_be_stored_in_local_preferences > >  Select_all_customized_types_to_be_stored_in_local_ preferencesSeleziona_tutti_i_tipi_personalizzati_da_registrare_nelle_preferenze_locali  > Currently_unknown > >  Currently_unknownAttualmente_sconosciuto  Thats the singular mode  the plural is "Attualmente_sconosciuti". But since Italian is profoundly evil  thats OK if referred to a masculine noun  the feminine forms are different  but Im digressing :-)  > Different_Customization _current_settings_will_be_overwritten > >  Different_Customization _current_settings_will_be_ overwrittenPersonalizzazione_differente _i_parametri_correnti_saranno_sovrascritti  >  — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2331#issuecomment-267291718>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/ADyA2AnC2wjebXAMoi4YuB2CzYqky1Bgks5rIRPHgaJpZM4LCcrA> > . >    --  Fer do Santagata  || Thank you @frith th ! || Youre welcome!  On Fri  Dec 16  2016 at 9:30 PM  Matthias Geiger <notifications@github.com> wrote:  > Thank you @frith th <https://github.com/frith th> ! > > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2331#issuecomment-267688937>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/ADyA2EhYM65slWyTwdWTJwH8EDTLmMC4ks5rIvT2gaJpZM4LCcrA> > . >    --  Fer do Santagata  || How did we proceed regarding standard types? Is it a v4.0 issue? See https://github.com/koppor/jabref/issues/248 || 
2331,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Improve entrytype customization Goals: - Entry customization based on BibDatabaseMode   - [x] working for custom entry types defined in bib DB   - [x] storage is working for new customized entries (instead of creating three/four prefs Strings for each customized entry type in the form ("custom_type_1_name"  "custom_type_1_REQ"  ...) two distinct pref nodes (one for BibTeX one for BibLaTeX) for customized entry types are used which simply use the custom type name as key and the string serialization as value (--> parsing can be reused))   - [x] loading is working for newly created customized entries   - [x] write prefs migration (is performed on first startup of new version  existing prefs will be put as new custom types for `defaultBibDatabaseMode`  old prefs are not deleted) - enable testing with cleanup after test execution   - [x] bibtex   - [x] biblatex - various bug fixes and improvements  e.g.  #2318 #772 #366 #365    - [x] refactor/rewrite parts of `EntryCustomizationDialog` to improve performance (refs #2318)   - [x] fixes #2261 (and also clearing of bibtexKeyPatterns using "reset preferences")   - [x] #772: Deleting custom type  restoring customized default type from exported prefs  no multiple import of customized entry types   - [x] #366: Check "Resetting overridden default entry types does not work  sometimes even crashes" - not reproducible in reworked state (ask @stefan-kolb whether still an issue) - related to #2318? --> caused by running through all entries in all open DBs   - [x] If a customized type is declared in a file it will be tried to import the declarations - if a customType already exists  a warning should be shown that it will be overwritten      - before this PR (no import of already existing customizations): ![custom-import-before](https://cloud.githubusercontent.com/assets/676652/21097503/131ecd16-c065-11e6-9c8e-f23cb8d453e1.png)      - now (more control):  ![custom-import-new](https://cloud.githubusercontent.com/assets/676652/21097446/bf88c724-c064-11e6-8cc4-4a16c4d18dc5.png)    - [x] a customized standard type should not appear in the "custom" section of the "New entry" dialog  and not in the "custom entries" section of the "change entry type" menu  - [x] CHANGELOG Okay... I think the current state is now a good improvement of the old status-quo.  At the moment the prefs migration and a dialog showing a warning if customized entries would be overridden is still missing.   Apart from that I would appreciate some feedback  -) || Apart from a CHANGELOG and some more tests this is good to go from my side. || @mlep @frith th It is not yet decided whether we will include this improvement in 3.8 or not. However  there are three more translations which are added in this pull request. Could you provide me translations for these three strings? Then Ill add them manually. Thanks!  ``` Select_all_customized_types_to_be_stored_in_local_preferences Currently_unknown Different_Customization _current_settings_will_be_overwritten ``` || On Thu  Dec 15  2016 at 11:17 AM  Matthias Geiger <notifications@github.com> wrote:  > @mlep <https://github.com/mlep> @frith th > <https://github.com/frith th> It is not yet decided whether we will > include this improvement in 3.8 or not. However  there are three more > translations which are added in this pull request. Could you provide me > translations for these three strings? Then Ill add them manually. > Thanks! > > Select_all_customized_types_to_be_stored_in_local_preferences > >  Select_all_customized_types_to_be_stored_in_local_ preferencesSeleziona_tutti_i_tipi_personalizzati_da_registrare_nelle_preferenze_locali  > Currently_unknown > >  Currently_unknownAttualmente_sconosciuto  Thats the singular mode  the plural is "Attualmente_sconosciuti". But since Italian is profoundly evil  thats OK if referred to a masculine noun  the feminine forms are different  but Im digressing :-)  > Different_Customization _current_settings_will_be_overwritten > >  Different_Customization _current_settings_will_be_ overwrittenPersonalizzazione_differente _i_parametri_correnti_saranno_sovrascritti  >  — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2331#issuecomment-267291718>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/ADyA2AnC2wjebXAMoi4YuB2CzYqky1Bgks5rIRPHgaJpZM4LCcrA> > . >    --  Fer do Santagata  || Thank you @frith th ! || Youre welcome!  On Fri  Dec 16  2016 at 9:30 PM  Matthias Geiger <notifications@github.com> wrote:  > Thank you @frith th <https://github.com/frith th> ! > > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2331#issuecomment-267688937>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/ADyA2EhYM65slWyTwdWTJwH8EDTLmMC4ks5rIvT2gaJpZM4LCcrA> > . >    --  Fer do Santagata  || How did we proceed regarding standard types? Is it a v4.0 issue? See https://github.com/koppor/jabref/issues/248 || 
2331,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,Improve entrytype customization Goals: - Entry customization based on BibDatabaseMode   - [x] working for custom entry types defined in bib DB   - [x] storage is working for new customized entries (instead of creating three/four prefs Strings for each customized entry type in the form ("custom_type_1_name"  "custom_type_1_REQ"  ...) two distinct pref nodes (one for BibTeX one for BibLaTeX) for customized entry types are used which simply use the custom type name as key and the string serialization as value (--> parsing can be reused))   - [x] loading is working for newly created customized entries   - [x] write prefs migration (is performed on first startup of new version  existing prefs will be put as new custom types for `defaultBibDatabaseMode`  old prefs are not deleted) - enable testing with cleanup after test execution   - [x] bibtex   - [x] biblatex - various bug fixes and improvements  e.g.  #2318 #772 #366 #365    - [x] refactor/rewrite parts of `EntryCustomizationDialog` to improve performance (refs #2318)   - [x] fixes #2261 (and also clearing of bibtexKeyPatterns using "reset preferences")   - [x] #772: Deleting custom type  restoring customized default type from exported prefs  no multiple import of customized entry types   - [x] #366: Check "Resetting overridden default entry types does not work  sometimes even crashes" - not reproducible in reworked state (ask @stefan-kolb whether still an issue) - related to #2318? --> caused by running through all entries in all open DBs   - [x] If a customized type is declared in a file it will be tried to import the declarations - if a customType already exists  a warning should be shown that it will be overwritten      - before this PR (no import of already existing customizations): ![custom-import-before](https://cloud.githubusercontent.com/assets/676652/21097503/131ecd16-c065-11e6-9c8e-f23cb8d453e1.png)      - now (more control):  ![custom-import-new](https://cloud.githubusercontent.com/assets/676652/21097446/bf88c724-c064-11e6-8cc4-4a16c4d18dc5.png)    - [x] a customized standard type should not appear in the "custom" section of the "New entry" dialog  and not in the "custom entries" section of the "change entry type" menu  - [x] CHANGELOG Okay... I think the current state is now a good improvement of the old status-quo.  At the moment the prefs migration and a dialog showing a warning if customized entries would be overridden is still missing.   Apart from that I would appreciate some feedback  -) || Apart from a CHANGELOG and some more tests this is good to go from my side. || @mlep @frith th It is not yet decided whether we will include this improvement in 3.8 or not. However  there are three more translations which are added in this pull request. Could you provide me translations for these three strings? Then Ill add them manually. Thanks!  ``` Select_all_customized_types_to_be_stored_in_local_preferences Currently_unknown Different_Customization _current_settings_will_be_overwritten ``` || On Thu  Dec 15  2016 at 11:17 AM  Matthias Geiger <notifications@github.com> wrote:  > @mlep <https://github.com/mlep> @frith th > <https://github.com/frith th> It is not yet decided whether we will > include this improvement in 3.8 or not. However  there are three more > translations which are added in this pull request. Could you provide me > translations for these three strings? Then Ill add them manually. > Thanks! > > Select_all_customized_types_to_be_stored_in_local_preferences > >  Select_all_customized_types_to_be_stored_in_local_ preferencesSeleziona_tutti_i_tipi_personalizzati_da_registrare_nelle_preferenze_locali  > Currently_unknown > >  Currently_unknownAttualmente_sconosciuto  Thats the singular mode  the plural is "Attualmente_sconosciuti". But since Italian is profoundly evil  thats OK if referred to a masculine noun  the feminine forms are different  but Im digressing :-)  > Different_Customization _current_settings_will_be_overwritten > >  Different_Customization _current_settings_will_be_ overwrittenPersonalizzazione_differente _i_parametri_correnti_saranno_sovrascritti  >  — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2331#issuecomment-267291718>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/ADyA2AnC2wjebXAMoi4YuB2CzYqky1Bgks5rIRPHgaJpZM4LCcrA> > . >    --  Fer do Santagata  || Thank you @frith th ! || Youre welcome!  On Fri  Dec 16  2016 at 9:30 PM  Matthias Geiger <notifications@github.com> wrote:  > Thank you @frith th <https://github.com/frith th> ! > > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2331#issuecomment-267688937>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/ADyA2EhYM65slWyTwdWTJwH8EDTLmMC4ks5rIvT2gaJpZM4LCcrA> > . >    --  Fer do Santagata  || How did we proceed regarding standard types? Is it a v4.0 issue? See https://github.com/koppor/jabref/issues/248 || 
2339,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix biblatex cleanup for date field This fixes #2335  Moved biblatex Cleanup to new test - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef - [X] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Failing test is something from Medline  not related  || However  in  this  case  that  would  result  in  the  original  bug  again  when checked for ifPresent !  If the field is not yet in the biblatex entry (which is obviously the case when you only have year)  it returns an EmtyOptional and thus you would have the same situation as in the original code. This is why I splitted it.     || Failing Snap CI is due to HTTP error 502 in AstrophysicsDataSystemTest  || Could you please merge master again - I merged https://github.com/JabRef/jabref/pull/2333 and thus SnapCI only does the basic tests as described at https://github.com/JabRef/jabref/wiki/CI#snapci 😇  || @Siedlerchr: sorry I do not understand you comment. Lets go through this case by case with the following code: ```` Optional<String> date  entry.getField(FieldName.DATE)  Boolean isBlank  StringUtils.isBlank(date)  ````  case | date | isBlank | ---- | --- | --- | no date at all | Optional.empty | true empty string | Optional.of("") | true something else | Optional.of("something") | false  You want to move year and month to the date field exactly in the first two cases  i.e.  if and only if `isBlank  true`. What do I miss?  || Ah now I understand your comment  the first case was not obvious for me  that an empty should return true.  || @tobiasdiez The confusion came from the naming stuff. I previously had the apache.commons StringUtil class and not the jabref specific one. Changed that. || Besides the micro comment: LGTM :+1: || 
2344,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Follow up for #1323 Batch Fulltext downloader - 	Rename menu item to plural for finding full texts - 	Disable menu item when there are no documents selected for fulltext retrieval - 	Fix layout of file dialog and increase size of file path significantly old: ![image](https://cloud.githubusercontent.com/assets/2141507/20975849/030bb4ce-bca1-11e6-9b2f-e0f30601d72d.png)  new: ![image](https://cloud.githubusercontent.com/assets/2141507/20975639/549853a2-bca0-11e6-8107-2742d7381258.png)  
2348,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Fix #1446 Only add non empty paths Suggest current BIB folder when no defaults are set.  
2349,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,Integrity checker improvements Follow up for #1779  Linking to Bibentries inside the integrity checker should be done via a reference to the entry not the key. - [x] Focus by Id rather than Bibtexkey - [x] Also the field Bibtexkey can now be focused. I changed the internal list from unmodifiable and returned another unmodifiable list. This needs some close examination in my opinion as Im not 100% sure if I introduced any side effects. Please also test the feature if it is still working as expected. I did a quick check and it appears to work.  || Uhh... Browsing this from my mobile Im not Sure... But @tobiasdiez you have closed the PR and not merged it 😉 || Anything that needs to be changed here? || From my point of view  its good. I merge it in ||
2358,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix Issue 2012: Use bibtexformat for month field in medlinefetcher Fix #2012  Checks if the month field is present. In the case its present  the month field is set to bibtex format using MonthUtil. Could you add a test case?  Medline tests are failing: https://travis-ci.org/JabRef/jabref/builds/182632279#L329 || I just updated the test cases. As far as I understood it  this should be the normal behavior. So no additional tests should be necessary. ||
2361,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,Fix a few group related issues This PR fixes #2334  #1873 and #1681. Since I didnt understood the groups code  I also refactored it. Main changes: - Split `KeywordGroup` class into `WordKeywordGroup`  which splits field content into words and then matches them  and `RegexKeywordGroup` that uses a regular expression for this job. - Extract serialization of groups to `GroupSerializer` (previously every group decided about its own serialization via the `toString` method) - Move a few things from model and logic to gui since they mostly contained ui-related stuff (e.g. GroupDesrciptions)  ---  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? The groups code is a mess :-( Thanks for being willing to put up with this!  Unfortunately  the amount of changes is too large for meaningful review and my knowledge on groups and the related code is too limited. I would trust your ability  and the amount of tests that you added here together with the working build. Cosmetic changes can be made on a later occasion. I am sure this is not the last visit to the groups code.  Since this is on your private branch  we have no build on builds.jabref.org. If we had  we could ask the people that reported the issues to try out this version. Any chance of getting a build for this? || Decision: merge so that many people will be able to test it. We can include code review comments later in a separate PR.  I am very aware of the risk. Refs #1495. || - [ ] dragging an entry to a group does not refresh the main table. (keyword-based group) - [ ] context menu shows "Remove group  keep subgroups" even though there are no subgroups - [ ] deletion of a static group does not remove the assignment of entries to it - [ ] clicking on a group and pressing <kbd>Del</kbd> triggers the dialog "Do you want to remove the selcted entries". If I press <kbd>Cursor Down</kbd>  the next group is selected. Thus <kbd>Del</kbd> should really apply to the current group.  Nothing important or me. Think  this was also happening using the old groups code. || 
2361,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,Fix a few group related issues This PR fixes #2334  #1873 and #1681. Since I didnt understood the groups code  I also refactored it. Main changes: - Split `KeywordGroup` class into `WordKeywordGroup`  which splits field content into words and then matches them  and `RegexKeywordGroup` that uses a regular expression for this job. - Extract serialization of groups to `GroupSerializer` (previously every group decided about its own serialization via the `toString` method) - Move a few things from model and logic to gui since they mostly contained ui-related stuff (e.g. GroupDesrciptions)  ---  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? The groups code is a mess :-( Thanks for being willing to put up with this!  Unfortunately  the amount of changes is too large for meaningful review and my knowledge on groups and the related code is too limited. I would trust your ability  and the amount of tests that you added here together with the working build. Cosmetic changes can be made on a later occasion. I am sure this is not the last visit to the groups code.  Since this is on your private branch  we have no build on builds.jabref.org. If we had  we could ask the people that reported the issues to try out this version. Any chance of getting a build for this? || Decision: merge so that many people will be able to test it. We can include code review comments later in a separate PR.  I am very aware of the risk. Refs #1495. || - [ ] dragging an entry to a group does not refresh the main table. (keyword-based group) - [ ] context menu shows "Remove group  keep subgroups" even though there are no subgroups - [ ] deletion of a static group does not remove the assignment of entries to it - [ ] clicking on a group and pressing <kbd>Del</kbd> triggers the dialog "Do you want to remove the selcted entries". If I press <kbd>Cursor Down</kbd>  the next group is selected. Thus <kbd>Del</kbd> should really apply to the current group.  Nothing important or me. Think  this was also happening using the old groups code. || 
2361,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,Fix a few group related issues This PR fixes #2334  #1873 and #1681. Since I didnt understood the groups code  I also refactored it. Main changes: - Split `KeywordGroup` class into `WordKeywordGroup`  which splits field content into words and then matches them  and `RegexKeywordGroup` that uses a regular expression for this job. - Extract serialization of groups to `GroupSerializer` (previously every group decided about its own serialization via the `toString` method) - Move a few things from model and logic to gui since they mostly contained ui-related stuff (e.g. GroupDesrciptions)  ---  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? The groups code is a mess :-( Thanks for being willing to put up with this!  Unfortunately  the amount of changes is too large for meaningful review and my knowledge on groups and the related code is too limited. I would trust your ability  and the amount of tests that you added here together with the working build. Cosmetic changes can be made on a later occasion. I am sure this is not the last visit to the groups code.  Since this is on your private branch  we have no build on builds.jabref.org. If we had  we could ask the people that reported the issues to try out this version. Any chance of getting a build for this? || Decision: merge so that many people will be able to test it. We can include code review comments later in a separate PR.  I am very aware of the risk. Refs #1495. || - [ ] dragging an entry to a group does not refresh the main table. (keyword-based group) - [ ] context menu shows "Remove group  keep subgroups" even though there are no subgroups - [ ] deletion of a static group does not remove the assignment of entries to it - [ ] clicking on a group and pressing <kbd>Del</kbd> triggers the dialog "Do you want to remove the selcted entries". If I press <kbd>Cursor Down</kbd>  the next group is selected. Thus <kbd>Del</kbd> should really apply to the current group.  Nothing important or me. Think  this was also happening using the old groups code. || 
2364,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Be more friendly when using journal alias field Id like to copy bibtex entries to biblatex databases and vice versa. When using required fields only  this works perfectly. When in biblatex mode  JabRef does not display the value of `journal` in the required fields  because JabRef demands the field `journaltitle`. This is not only confusing for me  but also for other users: #2209.  I know that a clean solution is #521. This  however  wont happen this year.  I also know that a bibtex-to-biblatex converter and biblatex-to-bibtex converter is another solution. This  however  forces users to run these when copying and pasting between databases. This could be solved by running these converters silently when copying and pasting. When JabRef is used in parallel to other software (such as Notepad++)  this does not help. I cannot force everyone to use JabRef. Thus  simply supporting `journal` in JabRef is the solution for me.   The biblatex manual states:  > journal field (literal) > An alias for journaltitle  provided for BibTeX compatibility. See § 2.2.2.  Thus  it is not deprecated  but an alias and should IMHO be considered as full alternative for `journaltitle`.  <s>I am aware that this patch makes it hard for users using full biblatex with `journaltitle` instead of `journal`. I am assuming that not much users are aware of the different modes of JabRef and that they switch back and forth for the same file or for the bibentries.</s>  We now show both `journaltitle` and `journal` if these fields exists in as required fields.  This whole discussion somehow refs https://github.com/JabRef/jabref/issues/160   * Minor improvement: Enhanced integrity checks testing for biblatex-only fields to be aware of more fields (e.g.  `location`).  * All fetchers return now bibtex. (Before: ArXiv and msbib created biblatex)  ## Screenshot: Current JabRef ![grabbed_20161211-183240](https://cloud.githubusercontent.com/assets/1366654/21081886/48135c02-bfd0-11e6-9a2e-f2e411f76487.png)  ## Screenshot: Updated JabRef ![grabbed_20161212-030057](https://cloud.githubusercontent.com/assets/1366654/21085882/3c1b3b58-c017-11e6-96ce-e83e1e9206d3.png)  ## Checklist  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [n/A] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [n/a] If you changed the localization: Did you run `gradle localizationUpdate`? Hehe  let us see how political this will get :-)  Code-wise the PR looks fine and I give my +1 for merging. The only blocker is that  for some reason  the GUI tests are failing. EDIT: I restartet the build for the push  lets see if it works on a second try. || You could also create a discussion point at https://github.com/plk/biblatex  || In case  I want to start a discussion  Im going to do that on the [DANTE e.V. mailing list](https://lists.dante.de/mailman/listinfo/dante-ev) or same [DANTE e.V. event](https://www.dante.de/events.html). 😇  || The GUI tests are also failing on master: https://travis-ci.org/JabRef/jabref/builds/183054056  Refs https://github.com/JabRef/jabref/pull/1700 || I do not like this.  Despite Im not using the Biblatex mode I think it is the wrong approach to use the "deprecated" field instead of the intended field only because we are too lazy to implement our fetchers in the right way or because the user is too lazy to convert copied BibTeX entries to biblatex :wink: || `journaltitle` is the main biblatex field for journal names and hence JabRef should support it as a first class citizen. This means  it should be displayed as a required field and "to biblatex" should convert `journal` to `journaltitle`. Moreover  the journal is not the only controversial field: date is the preferred way to store the publication date but bibtex only supports `year` and `month`. In my opinion  we shouldnt reinterpret the "biblatex standard" just because some users have problems.   But of course I can see that the new conventions are sometimes inconvenient if users switch between BibTeX and BibLaTeX. As far as I see it  the main problem is that "journal" lands in "deprecated" although it is an alias to a required field. Would it be a solution to show the journal field right below "journaltitle" in "required" if it has a value? Then it would work similar to year+month vs date. || @matthiasgeiger `journal` is not deprecated  it is just an alias field. || @tobiasdiez Yes  that would be a solution. || Therefore I put it in quotes  -)  || All comments addressed. Should be good to go now. || 
2364,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Be more friendly when using journal alias field Id like to copy bibtex entries to biblatex databases and vice versa. When using required fields only  this works perfectly. When in biblatex mode  JabRef does not display the value of `journal` in the required fields  because JabRef demands the field `journaltitle`. This is not only confusing for me  but also for other users: #2209.  I know that a clean solution is #521. This  however  wont happen this year.  I also know that a bibtex-to-biblatex converter and biblatex-to-bibtex converter is another solution. This  however  forces users to run these when copying and pasting between databases. This could be solved by running these converters silently when copying and pasting. When JabRef is used in parallel to other software (such as Notepad++)  this does not help. I cannot force everyone to use JabRef. Thus  simply supporting `journal` in JabRef is the solution for me.   The biblatex manual states:  > journal field (literal) > An alias for journaltitle  provided for BibTeX compatibility. See § 2.2.2.  Thus  it is not deprecated  but an alias and should IMHO be considered as full alternative for `journaltitle`.  <s>I am aware that this patch makes it hard for users using full biblatex with `journaltitle` instead of `journal`. I am assuming that not much users are aware of the different modes of JabRef and that they switch back and forth for the same file or for the bibentries.</s>  We now show both `journaltitle` and `journal` if these fields exists in as required fields.  This whole discussion somehow refs https://github.com/JabRef/jabref/issues/160   * Minor improvement: Enhanced integrity checks testing for biblatex-only fields to be aware of more fields (e.g.  `location`).  * All fetchers return now bibtex. (Before: ArXiv and msbib created biblatex)  ## Screenshot: Current JabRef ![grabbed_20161211-183240](https://cloud.githubusercontent.com/assets/1366654/21081886/48135c02-bfd0-11e6-9a2e-f2e411f76487.png)  ## Screenshot: Updated JabRef ![grabbed_20161212-030057](https://cloud.githubusercontent.com/assets/1366654/21085882/3c1b3b58-c017-11e6-96ce-e83e1e9206d3.png)  ## Checklist  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [n/A] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [n/a] If you changed the localization: Did you run `gradle localizationUpdate`? Hehe  let us see how political this will get :-)  Code-wise the PR looks fine and I give my +1 for merging. The only blocker is that  for some reason  the GUI tests are failing. EDIT: I restartet the build for the push  lets see if it works on a second try. || You could also create a discussion point at https://github.com/plk/biblatex  || In case  I want to start a discussion  Im going to do that on the [DANTE e.V. mailing list](https://lists.dante.de/mailman/listinfo/dante-ev) or same [DANTE e.V. event](https://www.dante.de/events.html). 😇  || The GUI tests are also failing on master: https://travis-ci.org/JabRef/jabref/builds/183054056  Refs https://github.com/JabRef/jabref/pull/1700 || I do not like this.  Despite Im not using the Biblatex mode I think it is the wrong approach to use the "deprecated" field instead of the intended field only because we are too lazy to implement our fetchers in the right way or because the user is too lazy to convert copied BibTeX entries to biblatex :wink: || `journaltitle` is the main biblatex field for journal names and hence JabRef should support it as a first class citizen. This means  it should be displayed as a required field and "to biblatex" should convert `journal` to `journaltitle`. Moreover  the journal is not the only controversial field: date is the preferred way to store the publication date but bibtex only supports `year` and `month`. In my opinion  we shouldnt reinterpret the "biblatex standard" just because some users have problems.   But of course I can see that the new conventions are sometimes inconvenient if users switch between BibTeX and BibLaTeX. As far as I see it  the main problem is that "journal" lands in "deprecated" although it is an alias to a required field. Would it be a solution to show the journal field right below "journaltitle" in "required" if it has a value? Then it would work similar to year+month vs date. || @matthiasgeiger `journal` is not deprecated  it is just an alias field. || @tobiasdiez Yes  that would be a solution. || Therefore I put it in quotes  -)  || All comments addressed. Should be good to go now. || 
2368,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Never manually set ID of a BibEntry The internal ID of a BibEntry should never be set manually. Closes #1721  DONE: - Removed constructors that allow setting the ID of an entry - __Every__ BibEntry now gets an ID on creation - A clone of a BibEntry __always gets a unique ID__ now - Only option to change ID of an entry is now via `setID()`  PENDING: - [ ] Is IDGenerator really global and consistent between calls now? - [ ] Can we import Bibentries without an open Database? See c884745. Importers used a static ID value before. Not 100% sure if this change has any side effects. - [ ] setID may still be replaced for some occurences?! Maybe we can even remove this execpt for a few test cases or so. This is ready for review now. Please carefully see the changes in the initial post and think about possible side effects I might have missed! I also need some advice for the setID() replacement. || LGTM. Shouldnt we (i) use this Id as HashCode? or (ii) get rid of the Id completely? || We could use it as hash code. We also use it to distinguish duplicated/cloned entries + in our integrity checks to jump to an entry (that might have no key for example). || I do not quickly get why we cant use `equals()` etc. OK  probably the code needs to be rewritten accordingly. || Maybe we could do this eventually... || Code looks good. Your issues seem hard to tackle. We merge after v3.8 and then test in production. 😇  ||
2372,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Relevance and Read status Field actions were switched Fixes #2370  
2375,1,0,0,1,1,1,1,0,0,0,1,1,1,0,1,1,0,0,0,Preserve % sign inside BibTeX fields via cleanup Resolves #2011 You can now use LateXCleanup inside quality->cleanups to escape `%` to `\%` How about a Changelog entry and we are ready to go :) || Put  ruhe  Latex  cleanup  in  Single  quotes  as  it  is a  command  in  JabRef  || When importing via the firefox plugin the percent sign are excaped. Importing via the medline websearch they are not. I do not find any mentioning in the cleanup dialogue of percent sign changed to \% signs.  JabRef 3.8 windows 7 6.1 amd64  Java 1.8.0_66 || @bernhard-kleine  The cleanup is not done automatically.  You should use Cleanup->and then select the field you want to cleanup  e.g. abstract together with **LaTeX Cleanup** || I updated to JabRef 3.8 today  i choose the 64bit version.  I took a new database.  I imported via the medline web search PMID 27697972.  The abstract has unescaped percent signs. Therefore  I went to quality->cleanup and as the abstract field is already selected I checked all the entries in the field to the right but can not find percent sign. Latex cleanup did not find anything to cleanup. What do I miss?  || I had to add it first and then run the cleanup. Sorry for the noise! || I added LaTeX cleanup for the abstract field. Still  percent sign are saved as they are which leads to errors when running biber. In case the percent sign is escaped  jabref removes the backslash when saving. || @j0hannes   This has been fixed with #2521   Thank you for reporting this issue. We think  that is already fixed in our development version and consequently the change will be included in the next release.  We would like to ask you to use a development build from https://builds.jabref.org/master and report back if it works for you. || @Siedlerchr I tried version 4.0 and it seems to be quite unstable  I had to force quit the application each time as it was hanging. Before crashing it destroyed some of the keys  so Im going back to 3.8.2 now. Is there any other way to address the percent problem? || @j0hannes  Could you please open a new issue for the problems you encounter with the 4.0.0 version in detail? E.g. Operation system  any errors in/from the log?  You could manually escape the %-signs by adding a Backslash \ before it. That works. You could simply search for the %-sign to see all problematic entries and then escape them manually  || I have raised issues for the backslash and the % sign before. My problems are gone with Version 4.0.0 using  Quality->cleanup entries-> and adding abstract: Latex cleanup the the Run field formatter: before clicking OK.  The errors due not excaped % signs turn out to be tiresome  since the error message for example in texstudio plus latexmk are not direct  only by checking the log you know that a % sign was not escaped.   Am 20.03.2017 um 13:34 schrieb Christoph: > > @j0hannes <https://github.com/j0hannes> Could you please open a new > issue for the problems you encounter with the 4.0.0 version in detail? > E.g. Operation system  any errors in/from the log? > > You could manually escape the %-signs by adding a Backslash \ before > it. That works. > You could simply search for the %-sign to see all problematic entries > and then escape them manually > > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2375#issuecomment-287746381>  > or mute the thread > <https://github.com/notifications/unsubscribe-auth/AIyh51Vqm2pRk83pefo3h891xvpSBSOCks5rnnJIgaJpZM4LLtFh>. >  --  spitzhalde9 D-79853 lenzkirch bernhard.kleine@gmx.net www.b-kleine.com  www.urseetal.net - thunderbird mit enigmail GPG schlüssel: D5257409 fingerprint: 08 B7 F8 70 22 7A FC C1 15 49 CA A6 C7 6F A0 2E D5 25 74 09   || After changing my bib file manually  version 4.0 is not crashing anymore. Still  it modifies all my citation keys and I do not find any way to stop it. || @j0hannes Did you run a cleanup operation or a save action? Did you check the keypattern settings? I would suggest opening a new issue  if this problem still exists  || @Siedlerchr No  it happens right when typing  loading or after inspecting manual changes to the bib file. When typing keys are changed when the focus moves to a different field. || I can confirm that the problem still persists with "abstract: LaTeX cleanup" enabled in version 4.0.0-dev. Every time I enter \%  it is immediately changed to % and % ends up as % in the bib file which causes LaTeX to fail. || I can not reproduce this. % sign is correctly escaped (and only once) to `\%` Using Latex Cleanup for abstract.   || It certainly was caused by the LaTeX to Unicode filter. || 
2388,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Rename "XMP data" to "XMP-metadata" I worked with the "import inspection dialog"  which offers to offer entry-creation based on XMP meta data (refs #938). The dialog renders as follows:  ![grabbed_20161216-072757](https://cloud.githubusercontent.com/assets/1366654/21253754/34de5c92-c361-11e6-80dd-d987519a9405.png)  My issue is that is uses both "XMP data" and "XMP-metadata" for the same thing. I wanted to rename "XMP-metadata" to "XMP data"  but "XMP-metadata" appears in JabRef much more often. Thus  I decided to keep "XMP-metadata" and just adapt two other strings to that writing.  New rendering:  ![grabbed_20161216-072851](https://cloud.githubusercontent.com/assets/1366654/21253772/5382e5f0-c361-11e6-95d1-2ac102723e59.png)  Discussion: Maybe  we should use "XMP metadata" (without dash) or even "XMP meta data".  
2396,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,0,[WIP] Introduce explicit list of ALL_BIBLATEX_ONLY_FIELDS This fixes #2390. The last implementation used `EntryConverter.FIELD_ALIASES_LTX_TO_TEX`. This implementation is based on `BibtexEntryTypes` and `BiblatexEntryTypes`.   ## Issue `JabRefPreferences.CUSTOM_TAB_NAME_num_` should be used to really determine the fields to check. This  however  is really a **huge** architectural rework.  It has to be checked  in following (seldom) situation:  - Field X is defined in JabRefs BiblatexEntryTypes - Field X is added by the user to a general tab  JabRef now complains that X is Biblatex only.  ## Further changes  * ISBN and ISBN are now BibTeX fields  too.    - Reason: Even though  both are not listed in [WikiPedia](https://en.wikipedia.org/wiki/BibTeX) and the [lncs style](ftp://ftp.springer.de/pub/tex/latex/llncs/latex2e/splncs03.bst)  I see them so hard tied to a book and article  that I would add it. In the case of a DOI  JabRef (more or less) enforces it by offering that field in the "General" tab. Moreover  [it is part of plainnat.bst](http://tex.stackexchange.com/a/52046/9075) and [natbib](https://www.ctan.org/pkg/natbib) is a popular package.  * `FieldName.COMMENT` instead of `FieldName.COMMENTS` (affects OaiImporter only)  * Preferences: Use FieldName constants at `setLanguageDependentDefaultValues()`  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [n/a] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [n/a] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [n/a] If you changed the localization: Did you run `gradle localizationUpdate`?  
2400,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix #2394 groups matching with brackets in name Fixes #2394.  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
2405,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Datepicker fix Fix for #2403 - and as I was just touching this stuff again: I replaced our custom `EasyDateFormat` class with a standard `DateTimeFormatter`  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - ~~[ ] Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef - ~~[ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)~~ - ~~[ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~ Documentation at http://help.jabref.org/en/TimeStamp  Does not work with master and v3.8 on my side. v3.7 does not compile any more ("Could not find de.undercouch:citeproc-java:1.0.0-SNAPSHOT"). Does also not work with v3.6.   The solution is to reset the preferences.  Solution works for me. @matthiasgeiger Thank you for the fix. || Does not work for me even after resetting the preferences... (JabRef-3.8.1-dev--snapshot--2016-12-20--master--b655bfd.jar) || @mlep: After resetting the preferences  the timestamp field appears for me and the datepicker works as desired.   The dev version you mention in your comment is not the most recent one  maybe it did not yet include the fix. Can you try again with JabRef-3.8.1-dev--snapshot--2016-12-20--master--62d55e1.jar || Indeed  the calendar is displayed now. HOWEVER  the `Clear` function does not work as expected: the timestamp field is not cleared. If I click on `Today`  then `Clear` works. || @mlep Indeed! Clear only works if a proper date is already in the field. If you insert something else  such as `abc`  then clear does not work.  @matthiasgeiger Can you please address this? Since this PR is already merged  I guess we need a follow-up PR. || Note: for me  it does not clear even if the field content looks good  like:  ` timestamp      {2016-10-26} ` || 
2414,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Replace calls of BibtexParser.parse This is a follow-up to #2139  so that we can finally get the PR into master.  I created a new branch since I have no access rights on the previous one  took over all commits from there  and tried to merge this with the current master. The point is just to get the code into master now. I will not implement additional suggestions from #2139 I double-checked the code and there should be nothing problematic left. Essentially this is just a few replacements of the static `BibtexParser.parse` with `new BibtexParser(...).parse`.  When you merge  please do not squash so that the commits by @oscargus are preserved. || I also extracted the initialization of the parser to the setup method in the tests (as proposed in #2139). Oscar was right  it is not nice to simply mark a method as deprecated and let other people cleanup the dirt - thanks for your work @oscargus and @lenhard.  || Waaaaahhhh I clicked on squash & merge. How do I revert and merge as "normal" ?? || 
2415,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix several File Cleanup + Rename issues Separated Move + Rename Cleanup Logic Move + Rename files in General Tab -> File now use internally the cleanup operations logic Separated GUI context menu operations for move + cleanup Rename files no longer moves files  it only renames them. Files are not overwritten if they exist or have the same name.  - [x] TODO: Apply new targetFileDir in Test  - [x] TODO: Adapt test finally - [x] TODO: Rework GUI action code   Fix for #2385 and followup from #1899   Includes Fix for #2454 and #2526   ![jabrefgeneralfilefield](https://cloud.githubusercontent.com/assets/320228/23267459/20a7563c-f9eb-11e6-9a74-440de3fa06fa.png)  ![grafik](https://cloud.githubusercontent.com/assets/320228/23267433/0c69d212-f9eb-11e6-9182-c641a339807a.png)  ![jabrefmovefile](https://cloud.githubusercontent.com/assets/320228/23267453/1b926aba-f9eb-11e6-86b5-1b5c805b2f94.png)     <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`? GUI: CleanupPreset Panel + Metadata.getDefaultFileDirectory seems not to check bibtex location somehow   ||   - [x] TODO: Find a wy to cleanup only one file   || - [ ] TODO: Add some preview dialog stuff || - [x] Prevent FileDirPattern subfolder creation on each run if already exists || I had a look at the code  which in general is good  and fixed a few minor issues directly (missing getters/setters that were missing well before this PR  but this is a good time for a fix). I also played around a little with the UI and tried to find errors  but was unsuccessful.  In the spirit of progress and as suggested by @Siedlerchr  https://github.com/JabRef/jabref/pull/2415#discussion_r103486029 I am merging now directly. More far fetching suggestions by @tobiasdiez should be addressed in a follow-up PR  as discussed above.   @Siedlerchr Thanks again for this heap of work! ||
2415,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix several File Cleanup + Rename issues Separated Move + Rename Cleanup Logic Move + Rename files in General Tab -> File now use internally the cleanup operations logic Separated GUI context menu operations for move + cleanup Rename files no longer moves files  it only renames them. Files are not overwritten if they exist or have the same name.  - [x] TODO: Apply new targetFileDir in Test  - [x] TODO: Adapt test finally - [x] TODO: Rework GUI action code   Fix for #2385 and followup from #1899   Includes Fix for #2454 and #2526   ![jabrefgeneralfilefield](https://cloud.githubusercontent.com/assets/320228/23267459/20a7563c-f9eb-11e6-9a74-440de3fa06fa.png)  ![grafik](https://cloud.githubusercontent.com/assets/320228/23267433/0c69d212-f9eb-11e6-9182-c641a339807a.png)  ![jabrefmovefile](https://cloud.githubusercontent.com/assets/320228/23267453/1b926aba-f9eb-11e6-86b5-1b5c805b2f94.png)     <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`? GUI: CleanupPreset Panel + Metadata.getDefaultFileDirectory seems not to check bibtex location somehow   ||   - [x] TODO: Find a wy to cleanup only one file   || - [ ] TODO: Add some preview dialog stuff || - [x] Prevent FileDirPattern subfolder creation on each run if already exists || I had a look at the code  which in general is good  and fixed a few minor issues directly (missing getters/setters that were missing well before this PR  but this is a good time for a fix). I also played around a little with the UI and tried to find errors  but was unsuccessful.  In the spirit of progress and as suggested by @Siedlerchr  https://github.com/JabRef/jabref/pull/2415#discussion_r103486029 I am merging now directly. More far fetching suggestions by @tobiasdiez should be addressed in a follow-up PR  as discussed above.   @Siedlerchr Thanks again for this heap of work! ||
2415,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix several File Cleanup + Rename issues Separated Move + Rename Cleanup Logic Move + Rename files in General Tab -> File now use internally the cleanup operations logic Separated GUI context menu operations for move + cleanup Rename files no longer moves files  it only renames them. Files are not overwritten if they exist or have the same name.  - [x] TODO: Apply new targetFileDir in Test  - [x] TODO: Adapt test finally - [x] TODO: Rework GUI action code   Fix for #2385 and followup from #1899   Includes Fix for #2454 and #2526   ![jabrefgeneralfilefield](https://cloud.githubusercontent.com/assets/320228/23267459/20a7563c-f9eb-11e6-9a74-440de3fa06fa.png)  ![grafik](https://cloud.githubusercontent.com/assets/320228/23267433/0c69d212-f9eb-11e6-9182-c641a339807a.png)  ![jabrefmovefile](https://cloud.githubusercontent.com/assets/320228/23267453/1b926aba-f9eb-11e6-86b5-1b5c805b2f94.png)     <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`? GUI: CleanupPreset Panel + Metadata.getDefaultFileDirectory seems not to check bibtex location somehow   ||   - [x] TODO: Find a wy to cleanup only one file   || - [ ] TODO: Add some preview dialog stuff || - [x] Prevent FileDirPattern subfolder creation on each run if already exists || I had a look at the code  which in general is good  and fixed a few minor issues directly (missing getters/setters that were missing well before this PR  but this is a good time for a fix). I also played around a little with the UI and tried to find errors  but was unsuccessful.  In the spirit of progress and as suggested by @Siedlerchr  https://github.com/JabRef/jabref/pull/2415#discussion_r103486029 I am merging now directly. More far fetching suggestions by @tobiasdiez should be addressed in a follow-up PR  as discussed above.   @Siedlerchr Thanks again for this heap of work! ||
2416,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix "collapse sub tree" functionality for groups tree Fix of #2319: Function "collapse subtree" is working again  - [x] Change in CHANGELOG.md described - ~~[ ] Tests created for changes~~ UI only - ~~[ ] Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef - ~~[ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)~~ - ~~[ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~  
2425,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,Fix #2417: DOI no longer contains URL <!-- describe the changes you have made here: what  why  ... -->  Counterproposal to https://github.com/JabRef/jabref/pull/2424 😈   - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? I did not want to introduce this dependency. Less dependencies seemed better to me. ||
2428,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,0,0,0,1,Fix #2427: Arxiv fetcher works with prefix <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? I merged it and will do the requested changes now to get this into 3.8.2. ||
2438,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,Follow up #2428 <!-- describe the changes you have made here: what  why  ... --> Follow-up from https://github.com/JabRef/jabref/pull/2428: - Extract parsing of identifier to new class - Add ArXiv fetcher to Id-based fetcher (and add tests that all fetcher are contained there)  ----  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Fixed newline issues but didnt renamed the fetcher since most of the fetchers do not have a "Fetcher" suffix. || 
2459,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Fix conversion of tilde n And although I said that I would not work on JabRef for the next two weeks  here is a PR. This stuff is addictive and I need help :-/  Fixes #2458. Author name formatting in the main table is handled different from the formatting of the remaining columns and we simply forgot to perform the unicode conversion also for the author column.  - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef Failing tests are again the damn fetchers... However  I merge itin ||
2464,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,Fix conversion of "n" and "\{n}" from LaTeX to Unicode This is a follow up for fixing  #2458  The combinations `\n` and `\\{n}` are converted from LaTeX to different symbols in Unicode.  This was really hard to track down. It was not a problem in our conversion maps  but in `LatexToUnicode`. The ultimate reason is that this code is just an utter mess of hacks and I could only fix this by adding another ugly map on top of this heap.  We have already identified this class to cause performance issues and  as you can see here  it is very difficult to maintain. We should consider removing the functionality and rewriting it from scratch or (preferably) replace it with an external library. After all  converting a LaTeX string to Unicode seems sufficiently well-defined that there is some library for this out there.  - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef  
2473,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,Remove html code from ACM fetcher Remove html code from ACM fetcher  Fixes #2472   <!-- describe the changes you have made here: what  why  ... -->  - [X] Change in CHANGELOG.md described ~~- [ ] Tests created for changes~~ ~~- [ ] Screenshots added (for bigger UI changes)~~ - [X] Manually tested changed features in running JabRef - [X] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) ~~- [ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~ Looks good codewise. I tested it locally and it did not get any html code with the entry. So I am merging it right away. ||
2487,1,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,0,1,Make sure that unregistered event sources do not stop JabRef from shu… …tting down  Fixes #2486. Unregistering event sources that have not been registered before should not stop JabRef from shutting down orderly. This PR logs such a problem instead of halting the shutdown of the program  - [X] Change in CHANGELOG.md described - [X] Manually tested changed features in running JabRef Would it be possible to first check if the event is registered and only doing a shutdown then? This should be implemented at best in unregister itself  || @Siedlerchr: Unfortunately  the implementation of the event bus (from Google) supports no such checking functionality. Hence  we would have to remember subscribers in a custom list  which in my point of view would be an unnecessary overhead. However  I have now moved the exception handling code to all the different event sources in JabRef (I hope I found them all). That way  we catch the Exception as early as possible. I cannot think of a circumstance where trying to remove a listener that never listened should crash the complete application.  It is not always logged  though  since not all of the classes that are event sources use a logger. But again  I do not think that this is very tragic  or indeed important.   || There is already discussion about checking it ... https://github.com/google/guava/issues/784 For fixing check style you should add the comments for switching it off at hat position  http://stackoverflow.com/questions/4023185/how-to-disable-a-particular-checkstyle-rule-for-a-particular-line-of-code?noredirect1&lq1 || @Siedlerchr Sorry  but I am not getting your comment regarding checkstyle.   The builds seem to fail because of the usual random fetcher errors. || @lenhard I meant the codacy  which will complain about the empty catch blocks. But I think I confused it with checkstyle module || @Siedlerchr Ok  I understand. However  I am not too fond of codacy and refuse to add comments  just because the tool produces false positives. I am well aware that it is near impossible for a tool to tell if an empty catch block makes sense or not  but it is false positive nonetheless. The existing comment in there is meaningful to humans  which is way more important.  I just pushed a few minor formatting fixes. || Ill take the "thumps-up" as an "ok-for-merge"  which Ill do right away. || 
2496,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Change key binding for cleanup from F8 to ALT+F8 Fixes #2251. This solution is the quick solution by changing the shortcut. The alternative is to change the ActionTable etcl.  - [x] Change in CHANGELOG.md described - [no] Tests created for changes - [n/a] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [n/a] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [n/a] If you changed the localization: Did you run `gradle localizationUpdate`? As quick fix imho okay. Maybe that will sooner or later be resolved with JavaFX.  ||
2507,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,Fix apostrophe conversion Fixes #2500. This repairs the apostrophe handling in the LaTeX to unicode conversion broken by #2464 and maintains the special handling of apostrophes in conjunction with the character n that #2464 intended to fix.   It increases complexity and reduces performance in the unicode conversion a tiny bit (through the additional checks that are now in there). Ultimately  the goal should be to replace the conversion with an external library.  - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef Ich merge das mal rein und hoffe  dass cih das dann dan fürs erste erledigt hat  ||
2510,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Fix journal title in ris importer Fix for #2506. The problem was that the T2 field was used for the journal title  if it comes first. Now T2 is only used for the journal title  if the field JO does not appear. Ive also added the file from science direct as test case. Thanks! ||
2519,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix repeated escaping of % sign Extracted Regexe in Patterns Fix for #2451  <!-- describe the changes you have made here: what  why  ... -->  - [X] Change in CHANGELOG.md described - [X] Tests created for changes ~~- [ ] Screenshots added (for bigger UI changes)~~ - [X] Manually tested changed features in running JabRef - [X] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) ~~- [ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~  
2521,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fix % sign cleanup Fix previous stackoverflow errror with large input  Follow up from #2451  
2527,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Fix error when path is no valid directory Fixes the exception Folder parameter must be a valid folder Internal fix  4.0.0 only When no working directory is set and last used path was an actual file  File Dialog could not be opened. Fixes #2522 LGTM  but what is the normal behavior for system dialogs? If I select a file ijnstead of a directory  is it possible and selects the parent folder or is the select button inactive? || @stefan-kolb  My fix has only impact when **opening** the dialog  that it opens in a directory without an exception . It has no impact on the selection of files etc.  Parent does not mean parent directory  but the directory itself (the parent of the file): Example: Your last selected file was X:\abc\defg.pdf   When you try to set the initalDirectory to this complete path (including filename)  it gives an exception  because it is obviously no a folder (directory). Therefore  the fix now sets the dir  to X:\abc (which is the parent of X:\abc\defg.pdf     || Ah **** sorry for that! Yeah I know  i was aware of that. ||
2531,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,Check more results returned by CrossRef API for matching Resolves #2431  Changes: - We will now check 5 results instead of just the first one for a matching title. LGTM  Do you want to implement https://github.com/JabRef/jabref/issues/2455 as well?  :heart_eyes_cat: || Ok I interpret this as a "no" :wink: || nah will do that later  maybe at jabcon. is a separate task. || 
2532,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,Switch to Latex2unicode Motivation is discussed in #2465. Fixes many conversion problems  such as those discussed in #2063 and #207.  - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef Please remove the old latex2unicode formatter code  otherwise good to go. || Since the build is passing and there are two approved reviews  I will merge this into master now and close the related issues. ||
2532,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,Switch to Latex2unicode Motivation is discussed in #2465. Fixes many conversion problems  such as those discussed in #2063 and #207.  - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef Please remove the old latex2unicode formatter code  otherwise good to go. || Since the build is passing and there are two approved reviews  I will merge this into master now and close the related issues. ||
2532,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,Switch to Latex2unicode Motivation is discussed in #2465. Fixes many conversion problems  such as those discussed in #2063 and #207.  - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef Please remove the old latex2unicode formatter code  otherwise good to go. || Since the build is passing and there are two approved reviews  I will merge this into master now and close the related issues. ||
2550,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,Bib database -> library Resolves #2095  
2554,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Replaced LRUMap with a Guava Cache This is intended as a fix for #2546.  Note that the Guava Caches would allow for automated reloading of the entries  but this is not undertaken in this implementation. Instead everything should work as before with the LRUMap.  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks ❤️  Can you please also change the external-libraries.txt and remove commons from there?   || Also small issues: ``` checkstyleMain[ant:checkstyle] [ERROR] /home/travis/build/JabRef/jabref/src/main/java/net/sf/jabref/logic/pdf/FileAnnotationCache.java:6: Wrong order for net.sf.jabref.model.database.BibDatabaseContext import. [ImportOrder] [ant:checkstyle] [ERROR] /home/travis/build/JabRef/jabref/src/main/java/net/sf/jabref/logic/pdf/FileAnnotationCache.java:10: Wrong order for java.util.HashMap import. [ImportOrder] ``` || Checkstyle help: https://github.com/JabRef/jabref/tree/master/config || thanks for the feedback  there is quite a potential to improve stuff with these caches. Maybe Ill have a look at the big picture there later. ||
2558,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,0,1,Move whole codebase to package `org.jabref` Implements #1179  - ~~[ ] Change in CHANGELOG.md described~~ not relevant - [x] Tests created for changes - existing tests are still passing - ~~[ ] Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - ~~[ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~ When merging "old" PRs  please use      git config --global merge.renamelimit 2049 || 
2583,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Keyword - Special field synchronization Fixes #2580  Synch should now work appropriately.  Few questions here @koppor and all others:  - [x] If keyword sync is enabled  there is the possibility that we have multiple `rank1  rank4` keywords. Only the first one is synched with the special field. Was this always like this? Seems like a bug to me.   - [x] If we change the preferences from write special fields to file to keyword synchronization the data gets lost. Did I introduce this or was this a bug? @lenhard talked to @koppor This was always the case. writable fields and keyword fields were never synchronized. we have to defer this until a reimplementation.  See #574 ||
2588,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,Implement #1904: filter groups <!-- describe the changes you have made here: what  why  ... --> Add textbox add the bottom of the groups panel which allows for filtering the groups by name. Implements #1904.  ![snipimage 002](https://cloud.githubusercontent.com/assets/5037600/23312248/551f4540-fab9-11e6-9a05-518080dfeb3e.JPG)   - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Great idea. However  I would place the search bar on top of the screen and not at the bottom  or alternatively is there a way to reuse the existing search bar and add an option to search for groups? || Maybe its indeed a good idea to move the search bar and button to the top...as this is an easy change I would postpone it for the moment and see what kind of further user controls are necessary in the group pane.  || On the bottom looks good to me. || I think having the search box at the bottom is fine for now  since we can also change it easily.  The feature works nicely with normal-size bib files  but I just checked it with the large bib file and there the feature scales very badly. If I enter something into the search field  it freezes and nothing happens for one or two minutes until the rearrangement of the groups appears (as desired).   Do you see a chance to speed this up? Maybe some parallelism  using `parallel()` in streams  could help?  || Looks like other people see a group-related performance degradation: https://github.com/JabRef/jabref/issues/2561#issuecomment-283417338 So  this is most likely not specific to this PR and you could go for a merge.  However  we really need to follow up with a performance improvement PR. || Since  as indicated in https://github.com/JabRef/jabref/issues/2561#issuecomment-283494292 the degraded performance for large bibs is expected at the moment and will be tackled separately  I think this is ready for merge (which I am doing right away). || One suggestion as I just stumbled over it: I think the searching should be case insensitive (although this might further slow down the searching  -)) || Should the performance issue with the groups filtering (which is still massive) also be added to the 4.0 milestone? || @AEgit I am not exactly sure which issue you are referring to  but yes: We should try to improve performance before a final release. So if there is an open issue that should be in 4.0  please point me to it! || @lenhard The performance issue Im referring to happens with large databases (>10k entries  ~1k static groups) in conjunction with the groups filtering. When you try to find a group using the newly implemented groups search/filter  you have to wait for several minutes for the search to complete. During that time JabRef behaves as if it had crashed. You mentioned this problem yourself in this comment: https://github.com/JabRef/jabref/pull/2588#issuecomment-283042778  Should I open a new ticket for this? || @AEgit Yes  please open a new ticket for this  so that we do not forget it. || Done  ) https://github.com/JabRef/jabref/issues/2852 ||
2601,1,0,0,1,0,0,1,0,0,0,1,1,1,0,1,1,0,0,1,Remove OrdinalsToSuperscriptFormatter from recommended biblatex save actions Fixes #2596  The LatexToUnicode is conflicting with the OrdinalsToSuperscriptFormatter but both are recommended for the same fields for biblatex. This PR removes the latter. Since biblatex is usually used together with UTF-8 and Unicode conversion should be sufficient. I see that this is an issue. The initial idea is as follows:  1. No BibEntry should contain LaTeX encoded umlauts 2. Each BibEntry should use superscripts whereever possible.  Why is this not possible any more? Why cant I have properly formatted BibEntries with JabRef any more? || Thats really weird. I never had problems with that setting || Yeah  I worked with that for ages. 🌞  || Is this maybe due to the new lib? || Yes  I would expect that this is due to the new lib. I assume that it leads to the following: 1. Ordinals formatter converts `2nd` to `2\textsuperscript{nd}` 2. Latex formatter converts `2\textsuperscript{nd}` to `2ⁿᵈ` 3. Ordinals formatter interprets `2ⁿᵈ` as `2nd` and converts it to `2\textsuperscript{nd}` 4. And so on  I might be wrong though  I did not debug this.   @Siedlerchr @koppor: Do you have problems with it now? What would you recommend instead? || When using the defaults in the "Cleanup entries" dialog  everything works fine.  ![grafik](https://cloud.githubusercontent.com/assets/1366654/23586529/4a66f6e0-0197-11e7-965b-b0b0889e2c72.png)  Maybe  it is possible to have different defaults for save actions and for cleanup? I really need that functionality. || @koppor The problem are the defaults for biblatex  not for BibTeX  which are depicted in your screenshot above.  An alternative solution  and maybe even a better one  might be to have the ordinals formatter correctly recognize 2ⁿᵈ as ordinals  so that it does not try to replace that. Should be doable  but right now I cannot make any promises time-wise. So  if anybody wants to take this over  be my guest. || I am not sure whether all unicode fonts support 2ⁿᵈ. Therefore  I really like the idea to have the ordinals formatter recognize that. || I second Jörgs and Tobias opinion... || I really like the ordinals-to-suprscript formatter as it provides great formatted bibliographies.  People write "2nd conference on something"  which should appear as "2ⁿᵈ conference on something" in the proceedings. If I understand the fix correctly  biblatex papers wont have the superscript (more or less) automatically from now on.  Since most publishers use bibtex  the solution for me is to have an unclean personal biblatex file and always to the bibtex conversion when working on a paper. The superscript will be injected when copying the entry to the paper by  a [cleanup](http://help.jabref.org/en/CleanupEntries)..  Refs https://github.com/JabRef/jabref/issues/160. || 
2610,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix title-related key patterns in BibtexKeyPatternUtil <!-- describe the changes you have made here: what  why  ... --> Related to [#2604](https://github.com/JabRef/jabref/issues/2604) and [#2589](https://github.com/JabRef/jabref/issues/2589)  In the class BibtexKeyPatternUtil Ive added cases for [title] and [camel] to try and make them conform to the [documentation](http://help.jabref.org/en/BibtexKeyPatterns).  @Siedlerchr was also working on this issue [here](https://github.com/JabRef/jabref/pull/2597). I found out that   `CaseFormat.LOWER_CAMEL.to(CaseFormat.UPPER_CAMEL  entry.getField(FieldName.TITLE).orElse("").replaceAll("\\s+"  "")) ` didnt work because to be able to transform the title into upper_camel this way the title has to be in  lower_camel case initially  which is often not the case.  Ive added some test cases and changed a few others to conform to the documentation.  I still need to take a look at the failing tests.  - [x] Change in CHANGELOG.md described - [X] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Codewise looks good! 👍  Thank you very much for your contribution. Would you please check the failing tets? (Just click Details on the Red-Marked Travis Build and you are able to see the log). From what I saw there is jut another unit test which tests key generation which has to be adapted!  || Thanks! Ill try to fix it tomorrow 👍  || @Siedlerchr  Ive taken a look at the failing tests and after making a small change to the code and to some tests its now working.  Some tests failed because most of the formatter classes only work if the input is a non concatenated string. || From my point of view it looks good.  However  another dev should take a look  too.  If you could just add a changelog entry it would be nice. Otherwise we can create it on merge.  || I wonder whether it would be possible to add test cases to MakeLabelWithDatabaseTest.java with all patterns listed at http://help.jabref.org/en/BibtexKeyPatterns.  I saw that you also added `[camel]` and added a test for that in BibtexKeyPatternUtilTest.java. To test the "user experience"  I would like to ask to add some tests for that in MakeLabelWithDatabaseTest.  Strangely  `camel".equals(val)` is not test covered even though it should?!  ![grabbed_20170305-212351](https://cloud.githubusercontent.com/assets/1366654/23591026/44dc023a-01ea-11e7-8f43-d82290a09587.png)  https://codecov.io/gh/JabRef/jabref/src/ee7445652023f95e7c623c75c93058b9f2f4adf9/src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyPatternUtil.java  If it is too much effort  we can just go ahead and merge!    || I have added a test for the [camel] case to MakeLabelWithDatabaseTest.java Hope the `camel".equals(val)` is covered now :)  Are there any additional test cases I should add?  Edit: About checking all the patterns listed at http://help.jabref.org/en/BibtexKeyPatterns  I can work on that but Im pretty busy the next couple of days. So Id rather have this merged now and work on adding the additional test cases later. || Yeah  its covered: https://codecov.io/gh/JabRef/jabref/src/6aa925b7ec6fc2e1deb497a898e076bc747630da/src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyPatternUtil.java  Ill go ahead with the merge and look forward to other tests / general improvements. We have a huge list of smaller tasks at https://github.com/koppor/jabref/issues.  Thank you for the good work! || We just discovered that our documentation was wrong and that `camel` should be a modifier: `title:camel`.  It should work with `title:capitalize`.  See https://github.com/koppor/jabref/issues/237 || Hmm OK  Ive responded in the issue since it is not entirely clear to me what has to happen. || 
2610,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix title-related key patterns in BibtexKeyPatternUtil <!-- describe the changes you have made here: what  why  ... --> Related to [#2604](https://github.com/JabRef/jabref/issues/2604) and [#2589](https://github.com/JabRef/jabref/issues/2589)  In the class BibtexKeyPatternUtil Ive added cases for [title] and [camel] to try and make them conform to the [documentation](http://help.jabref.org/en/BibtexKeyPatterns).  @Siedlerchr was also working on this issue [here](https://github.com/JabRef/jabref/pull/2597). I found out that   `CaseFormat.LOWER_CAMEL.to(CaseFormat.UPPER_CAMEL  entry.getField(FieldName.TITLE).orElse("").replaceAll("\\s+"  "")) ` didnt work because to be able to transform the title into upper_camel this way the title has to be in  lower_camel case initially  which is often not the case.  Ive added some test cases and changed a few others to conform to the documentation.  I still need to take a look at the failing tests.  - [x] Change in CHANGELOG.md described - [X] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Codewise looks good! 👍  Thank you very much for your contribution. Would you please check the failing tets? (Just click Details on the Red-Marked Travis Build and you are able to see the log). From what I saw there is jut another unit test which tests key generation which has to be adapted!  || Thanks! Ill try to fix it tomorrow 👍  || @Siedlerchr  Ive taken a look at the failing tests and after making a small change to the code and to some tests its now working.  Some tests failed because most of the formatter classes only work if the input is a non concatenated string. || From my point of view it looks good.  However  another dev should take a look  too.  If you could just add a changelog entry it would be nice. Otherwise we can create it on merge.  || I wonder whether it would be possible to add test cases to MakeLabelWithDatabaseTest.java with all patterns listed at http://help.jabref.org/en/BibtexKeyPatterns.  I saw that you also added `[camel]` and added a test for that in BibtexKeyPatternUtilTest.java. To test the "user experience"  I would like to ask to add some tests for that in MakeLabelWithDatabaseTest.  Strangely  `camel".equals(val)` is not test covered even though it should?!  ![grabbed_20170305-212351](https://cloud.githubusercontent.com/assets/1366654/23591026/44dc023a-01ea-11e7-8f43-d82290a09587.png)  https://codecov.io/gh/JabRef/jabref/src/ee7445652023f95e7c623c75c93058b9f2f4adf9/src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyPatternUtil.java  If it is too much effort  we can just go ahead and merge!    || I have added a test for the [camel] case to MakeLabelWithDatabaseTest.java Hope the `camel".equals(val)` is covered now :)  Are there any additional test cases I should add?  Edit: About checking all the patterns listed at http://help.jabref.org/en/BibtexKeyPatterns  I can work on that but Im pretty busy the next couple of days. So Id rather have this merged now and work on adding the additional test cases later. || Yeah  its covered: https://codecov.io/gh/JabRef/jabref/src/6aa925b7ec6fc2e1deb497a898e076bc747630da/src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyPatternUtil.java  Ill go ahead with the merge and look forward to other tests / general improvements. We have a huge list of smaller tasks at https://github.com/koppor/jabref/issues.  Thank you for the good work! || We just discovered that our documentation was wrong and that `camel` should be a modifier: `title:camel`.  It should work with `title:capitalize`.  See https://github.com/koppor/jabref/issues/237 || Hmm OK  Ive responded in the issue since it is not entirely clear to me what has to happen. || 
2611,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,Fix exception when parsing groups which contain a top level group Fixes the import of #2600   The problem occurred when after the definition of a subgroup of level >0 a group definition with level 0 followed. ``` 2 ExplicitGroup:15\ 0\   0 ExplicitGroup:16\ 0\   2 ExplicitGroup:17\ 0\   ```  <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [x] Tests created for changes ~~- [ ] Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef ~~- [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org]~~(https://github.com/JabRef/help.jabref.org/issues)?) ~~- [ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~ Failing test was Google Scholar ||
2614,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,Cleanup window has a scrollbar now. Fix for issue #2501.  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? It should be fixed now. || Thanks again for your contribution!  Ill merge this in as the failing Google Scholar tests are not related to your changes. ||
2618,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Fixed wrong logger import fixes the first part of #2617  
2623,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix2613 Provided a MacOS specific routine for opening Tex editors to import citations to fix #2613. The solution has been tested with Texstudio and Texmaker  - [x ] Change in CHANGELOG.md described - [x ] Manually tested changed features in running JabRef Looks good to me as a small fix. In general I wondered if it isnt useful to integrate the PushToApplication somewhere in the desktop.os classes. I mean there are already methods for opening a file/with an application for each os. || LGTM 👍 Would also love to see more OS-specific stuff integrated in the Desktop classes. ||
2625,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Change dialog of download fulltext to save dialog Fix for #2572  When running Get fulltext  the dialog is now a save dialog which enables to select a different folder or even a different filename. The initial filename which JabRef assigns is now also visible in the file dialog  <!-- describe the changes you have made here: what  why  ... -->  - [X] Change in CHANGELOG.md described ~- [ ] Tests created for changes~ ~- [X] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef ~- [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org]~(https://github.com/JabRef/help.jabref.org/issues)?) ~- [ ] If you changed the localization: Did you run `gradle localizationUpdate`?~   ![savefile](https://cloud.githubusercontent.com/assets/320228/23722891/60519cd2-0447-11e7-8628-ed9d53c99326.png)  ![grafik](https://cloud.githubusercontent.com/assets/320228/23722873/530ed71a-0447-11e7-8e1a-be3bd5273eaa.png) LGTM 👍  ||
2634,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,Finally write the new group properties to the bib file: icon with color  description  expanded status and automatic groups <!-- describe the changes you have made here: what  why  ... -->  Serialize and parse: - Icon (with customizable color) that is shown in the groups panel (implements a [feature request in the forum](http://discourse.jabref.org/t/assign-colors-to-groups/321)). - Description text that is shown on mouse hover (implements old feature requests [489](https://sourceforge.net/p/jabref/feature-requests/489/) and [818](https://sourceforge.net/p/jabref/feature-requests/818/)) - "automatic groups" that automatically create subgroups based on a certain criteria (e.g. a subgroup for every author or keyword). Implements [91](https://sourceforge.net/p/jabref/feature-requests/91/)  [398](https://sourceforge.net/p/jabref/feature-requests/398/) and [#1173](https://github.com/JabRef/jabref/issues/1173). - Expansion status [#1428](https://github.com/JabRef/jabref/issues/1428)  While implementing these changes  I had to introduce a new "StaticGroup" label in the bib file that replaces the old "ExplicitGroup". The problem was that the old group with legacy bib references ```` ExplicitGroup:StaticGroup\ 0\ 1137631\ 1233448\ 1314293\   ```` otherwise couldnt be distinguished from a new explicit group with icon and color:  ```` StaticGroup:StaticGroup\ 0\ expansion\ icon\ color\ description\   ```` I think we really should switch to https://github.com/koppor/jabref/issues/232 at some point.  -----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Codewise LGTM: Just one thing I do not get from your description: The old groups can be imported right? What happens when you modify one of these old (sub) groups? Does it get changed to a new group then?   Please take a look at the codacy/checkstyle failures.    || Yes  the old line "ExplicitGroup.." in the file will automatically replaced by "StaticGroup..." when you save the bib file. Besides the minor differences outlined above they are treated completely the same (and this change is only related to parsing/serialization  in particular there is no new "StaticGroup" class).  Fixed the imports. || 
2634,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,Finally write the new group properties to the bib file: icon with color  description  expanded status and automatic groups <!-- describe the changes you have made here: what  why  ... -->  Serialize and parse: - Icon (with customizable color) that is shown in the groups panel (implements a [feature request in the forum](http://discourse.jabref.org/t/assign-colors-to-groups/321)). - Description text that is shown on mouse hover (implements old feature requests [489](https://sourceforge.net/p/jabref/feature-requests/489/) and [818](https://sourceforge.net/p/jabref/feature-requests/818/)) - "automatic groups" that automatically create subgroups based on a certain criteria (e.g. a subgroup for every author or keyword). Implements [91](https://sourceforge.net/p/jabref/feature-requests/91/)  [398](https://sourceforge.net/p/jabref/feature-requests/398/) and [#1173](https://github.com/JabRef/jabref/issues/1173). - Expansion status [#1428](https://github.com/JabRef/jabref/issues/1428)  While implementing these changes  I had to introduce a new "StaticGroup" label in the bib file that replaces the old "ExplicitGroup". The problem was that the old group with legacy bib references ```` ExplicitGroup:StaticGroup\ 0\ 1137631\ 1233448\ 1314293\   ```` otherwise couldnt be distinguished from a new explicit group with icon and color:  ```` StaticGroup:StaticGroup\ 0\ expansion\ icon\ color\ description\   ```` I think we really should switch to https://github.com/koppor/jabref/issues/232 at some point.  -----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Codewise LGTM: Just one thing I do not get from your description: The old groups can be imported right? What happens when you modify one of these old (sub) groups? Does it get changed to a new group then?   Please take a look at the codacy/checkstyle failures.    || Yes  the old line "ExplicitGroup.." in the file will automatically replaced by "StaticGroup..." when you save the bib file. Besides the minor differences outlined above they are treated completely the same (and this change is only related to parsing/serialization  in particular there is no new "StaticGroup" class).  Fixed the imports. || 
2639,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Add option to copy title of bibentries Implements issue [#210](https://github.com/koppor/jabref/issues/210) from [@koppor](https://github.com/koppor).  Adds an option to copy the title of a bibtex entry when right clicking one (or more) to the clipboard. Also adds the option to copy the title using `Edit -> Copy title`.  ![edit_menu](https://cloud.githubusercontent.com/assets/5990999/23835666/c444515e-076b-11e7-919f-fe0ee3b74333.png) ![right_click_menu](https://cloud.githubusercontent.com/assets/5990999/23835669/cc9c01a8-076b-11e7-8bbd-68bf62335c8e.png)  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`? So as we all agreed on this and the code is looking good  I will merge this in now. Thank you very much for your contribution! ||
2644,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Refactor OO connection Also fixes #2484  Trying to simplify OO detection logic. - Removed cancel option in auto detection logic - Removed some of the preferences variables for OO directories and try to keep only the root directory and search for the necessary files inside this directory - Added two file finder helper methods inside FileUtil - Lots of variable  method  and class renamings - Used java.nio were possible - Some graphical UI improvements  Tested on - [x] Windows with LibreOffice 5 and multiple installations - [ ] Windows Open Office 4 (will only work with 32-bit JRE!) ``` java.lang.UnsatisfiedLinkError: C:\Program Files (x86)\OpenOffice 4\program\jpipe.dll: Cant load IA 32-bit .dll on a AMD 64-bit platform ``` - [x] Linux LibreOffice 5 `unoil.jar` is missing. However  it would even work without that jar. Not sure whats the problem here and why it is gone. Two other jars `java_uno` and `unoloader`are there. Looks like we can maybe include the uno libraries from Gradle (https://mvnrepository.com/artifact/org.openoffice) rather than loading them from the classpath of the installation?! Maybe a license problem @koppor ? For Ubuntu you need to install the additional package: http://packages.ubuntu.com/de/xenial/libreoffice-java-common. - [x] Linux Open Office - [x] OSX OpenOffice - [x] OSX LibreOffice @JabRef/developers @chochreiner I think this has improved quite a bit now. Need your help on a few question (especially LibreOffice 5 Linux Jar poblem) and your testing here! || I can test Windows and ubuntu with libre office  Regarding the inclusion of jars  arent the jars version depended on the installed version of Open Office/libre Office? || open office works fine on macos libreoffice cannot be detected automatically || @chochreiner Great thanks! Is LibreOffice missing the `unoil.jar` inside the `program/classes` folder probably? The logic basically is: 1. Look inside `/Applications` for folder names that contain (case insensitive) `libreoffice | openoffice` folder names 2. Check for `soffice.bin` executable mostly inside `program/` 3. Check for the UNO Jars `"unoil.jar"  "jurt.jar"  "juh.jar"  "ridl.jar"` mostly inside `/prgram/classes/`. || libreoffice seems to have a new internal package structure compared to OO they have migrated to dylibs  || Hm  Im not sure what this means for our current logic. As far as it is implemented right now every connection will fail if any of those libs are missing. Still it was perfectly fine for a few tests even without the `unoil.jar`. || LibreOffice provides this libs:  https://mvnrepository.com/artifact/org.libreoffice  According to his project https://github.com/LibreOffice/loeclipse the libs can be found:  > Search for the LibreOffice jars unoil.jar juh.jar jurt.jar ridl.jar unoloader.jar. You find them here: >  >     macOS: /Applications/LibreOffice.app/Contents/Resources/java >     Ubuntu: /usr/lib/libreoffice/program/classes >     Windows: C:\Program Files\LibreOffice 5\program\classes\ >    || @Siedlerchr I installed LO 5 on Windows and Ubuntu and the `unoil.jar` is missing  the rest is there. || @stefan-kolb  Under Windows 10  LO 5.3 64Bit  the unoil.jar is there in `C:\Program Files\LibreOffice 5\program\classes ` for Ubuntu you need to install the additional package: http://packages.ubuntu.com/de/xenial/libreoffice-java-common  || @Siedlerchr Hm  thats bad for us as the user needs to install that manually...probably there is an equal problem with OSX. || i can confirm that all jars are availalable in: /Applications/LibreOffice.app/Contents/Resources/java  || We then should add this at least for linux to the installation instructions that the -common-java package is required || @chochreiner Hm  ok then the automatic detection should work... || @Siedlerchr @tobiasdiez I have added a new directory chooser in the FX dialog service. Can you please take a look? One thing that I noticed is that all of these dialogs have no parent (i.e.  not model)  therefore hide in the background if the user clicks somewhere else. Dunno if we want them to behave like this... || the OpenOffice provides both soffice.bin and soffice  LibreOffice only provides soffice --> with this fix  the automatic detection works for me  || @chochreiner Ah nice  thanks so much Christoph! || @JabRef/developers Otherwise Im done with this. Thanks everybody for your help and input 😄 👍 || I also added our finds to the documentation under __Known issues__. || 
2645,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix #2455: Add crossref as fetcher for everything (ID-  entry-  search-based) <!-- describe the changes you have made here: what  why  ... -->  Amounted to an almost-rewrite of the existing crossref fetcher  then adding the new functionality was done in 5 lines 😄 . Besides this change I have done a few refactorings related to fetchers and the DOI: more fetcher things in logic (EntryFetchers -> WebFetchers) and moved the identifier classes from logic to model.  (This PR also contains commits from my previous PR...since  well  I will never learn it).  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Also the diff is hardly reviewable  tho this is not your fault. ||
2659,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,OO formatting OpenOffice text formatting now handles nested tags properly [#2483](https://github.com/JabRef/jabref/issues/#2483)  Formerly it was a Set  so nested tags were not kept and consequently the first closing tag removes (both) opening tags.  ``` Formerly: <i>some<i>test</i>text</i> ->[i]  [i]  [] Now: -> [i]  [i i]  [i]  []  ```  
2661,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Add possibility to clear the log at runtime Resolves #2660  @tobiasdiez The dialog is not modal  but does not update itself when new events arrive  i.e.  needs to be closed and opened again to see new events. Is this expected? Can we fix this? Yeah @stefan-kolb is now an active JavaFX developer 😼 . Code looks good  so Ill merge this. Actually  new logs should be displayed automatically in the console (this is why it is modal) - thus this is probably a bug (can you please open a new issue  I do not have time right now to further investigate this  thanks). ||
2666,1,0,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,Add sorting of all groups and subgroups  recursively Implements some features from #2599 Recursively sort all groups or selected groups   Replaced Screenshot  ![grafik](https://cloud.githubusercontent.com/assets/320228/24755268/c2671b38-1ad9-11e7-9d39-69a740567084.png)  Sometimes the sorting is not always directly correct visible after sorting  This is somehow an update problem of the gui I think. When you switch db back and forth its correctly there.     <!-- describe the changes you have made here: what  why  ... -->  ~~- [ ] Change in CHANGELOG.md described~~ ~~- [ ] Tests created for changes~~ - [X] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef ~~- [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)~~ - [X] If you changed the localization: Did you run `gradle localizationUpdate`? Yeah I will change that  however the fxml tag are not in the formatting yet I will try to change that as well  Am 19.03.2017 12:07 vorm. schrieb "Tobias Diez" <notifications@github.com>:  *@tobiasdiez* approved this pull request.  The code looks good. I would  however  argue that "sort subgroups" should suffice - if you want to sort the whole tree then just right click the root. And maybe add "recursively" to the menu text to make it a bit clearer.  By the way  we should discuss at some point which other menu entries make sense and which we should remove instead of reimplementing them (e.g. I do not see a point in the move actions). ------------------------------  In src/main/java/org/jabref/gui/groups/GroupTreeController.java <https://github.com/JabRef/jabref/pull/2666#discussion_r106793485>:  > @@ -43 14 +43 21 @@       private static final Log LOGGER  LogFactory.getLog(GroupTreeController.class)   -    @FXML private TreeTableView<GroupNodeViewModel> groupTree  -    @FXML private TreeTableColumn<GroupNodeViewModel  GroupNodeViewModel> mainColumn  -    @FXML private TreeTableColumn<GroupNodeViewModel  GroupNodeViewModel> numberColumn  -    @FXML private TreeTableColumn<GroupNodeViewModel  GroupNodeViewModel> disclosureNodeColumn  -    @FXML private CustomTextField searchField  +    @FXML +    private TreeTableView<GroupNodeViewModel> groupTree   Please leave the formatting as it is right now. It is kind of a JavaFX-thing that normally the @FXML <https://github.com/FXML> tag is on the same line (and I like it that way because otherwise the private fields declaration takes more space)  — You are receiving this because you authored the thread. Reply to this email directly  view it on GitHub <https://github.com/JabRef/jabref/pull/2666#pullrequestreview-27736134>  or mute the thread <https://github.com/notifications/unsubscribe-auth/AATi5NTWFJ6ef70b1vsgEXCg-s3TNYEBks5rnGOVgaJpZM4Mhd6n> .  || @tobiasdiez  Changed localization  but I dunno how to display the menu entry only when the root nod eis selected? I read about adding a change listener and then setting the contextmenu. However  I am not sure how that plays together with the binding stuff || In `createContextMenuForGroup` you can use `isRoot` of the `GroupNodeViewModel group` to determine if the right-clicked group is the root or not...and then create the menu depending on this value.  However  I would completely leave of the `sort subgroups` option. || I thin we should stuck with simply having the sort groups recursively. Then we could omit the explicit chek for root node || 
2681,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix #2680 and fix #2667: Swing errors are catched properly and without freezing Hopefully  fixes that the error console is not updated properly #2667 as well as that Swing errors lead to frezzing #2680. At least for me  it works now without problems. @stefan-kolb @lynyus can you please also check it.  For the error console  I took the suggestion https://github.com/JabRef/jabref/issues/2667#issuecomment-288742546 by @matthiasgeiger. The freezing after a Swing message occurred since  ̀`LOGGER.warn("No localized message exception message defined. Falling back to getMessage().") ` lead to recursive calls (actually  Log4j has some logic to prevent deadlocks but these do not take effect since the original message is thrown in the Swing thread  while the above "no localized messsage" is posted in the JavaFX thread.). I simply changed it to log level "debug"  which effectively hides it in most cases. As a positive side effect  the scroll issue mentioned in https://github.com/JabRef/jabref/issues/2667#issuecomment-288714639 is also fixed.  <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Will look at it. - [x] Console update seems to be fixed #2667  - [x] Unavailable fetcher results in normal console log again without UI freezes || @matthiasgeiger You are right  my changes are more a workaround than a proper solution. However  since the deadlock only appears if an exception is logged in the Swing thread and afterwards the GUIAppender also logs something  I decided not to invest more time. Probably a application-wide lock for the appender is needed. ||
2681,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix #2680 and fix #2667: Swing errors are catched properly and without freezing Hopefully  fixes that the error console is not updated properly #2667 as well as that Swing errors lead to frezzing #2680. At least for me  it works now without problems. @stefan-kolb @lynyus can you please also check it.  For the error console  I took the suggestion https://github.com/JabRef/jabref/issues/2667#issuecomment-288742546 by @matthiasgeiger. The freezing after a Swing message occurred since  ̀`LOGGER.warn("No localized message exception message defined. Falling back to getMessage().") ` lead to recursive calls (actually  Log4j has some logic to prevent deadlocks but these do not take effect since the original message is thrown in the Swing thread  while the above "no localized messsage" is posted in the JavaFX thread.). I simply changed it to log level "debug"  which effectively hides it in most cases. As a positive side effect  the scroll issue mentioned in https://github.com/JabRef/jabref/issues/2667#issuecomment-288714639 is also fixed.  <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Will look at it. - [x] Console update seems to be fixed #2667  - [x] Unavailable fetcher results in normal console log again without UI freezes || @matthiasgeiger You are right  my changes are more a workaround than a proper solution. However  since the deadlock only appears if an exception is logged in the Swing thread and afterwards the GUIAppender also logs something  I decided not to invest more time. Probably a application-wide lock for the appender is needed. ||
2684,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,FileAnnotationTab now only shows the FileName  not the full path. Fixes #2676 Okay  LGTM ||
2688,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Export single corporate author to ms office xml If the author in JabRef is enclosed in curly braces .e.g `{JabRef Developers} ` it is now recognized as corporate author and exported in the corresponding field. This should also work for editor and other ms office author fields   Refs #1497     <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [x] Tests created for changes ~~- [ ] Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) ~~- [] If you changed the localization: Did you run `gradle localizationUpdate`?~~ @tobiasdiez  I now used the Author/Authorlist parsing classes. I created a new class for MsBib which is essentially a wrapper class around the Author class  but handles a few more things only relevant to MS bib.  Checking for corporate authors is not possible inside the Author parser as there are surrounding braces already stripped on calling.  || Good job! Code looks ok now and only fetcher tests fail -> merge. ||
2703,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Fix #628: implement hierarchical keywords <!-- describe the changes you have made here: what  why  ... -->  The automatic keywords group now supports hierarchical keywords.  The changes mainly concentrate on the keywords class...so this may have some unwanted side effects in other parts (but I didnt noticed anything unusual in my tests).  Note: Bib files containing an automatic keyword from prior 4.0 tests can no longer be opened and the lines containing `AutomaticKeywordGroup` have to be deleted.  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? > Note: Bib files containing an automatic keyword from prior 4.0 tests can no longer be opened and the lines containing AutomaticKeywordGroup have to be deleted.  Isnt there a possibility to migrate this? From a user point of view this is not really acceptable... || @matthiasgeiger I formulated it a bit awkwardly. Automatic keywords groups are a new feature in 4.0  so this only hits users of the current development version - not users of 3.8.2. ||
2711,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Avoid conversion of single underscores Fixes #2664  Single underscores that are not followed by `{` are not converted to unicode during the LaTeX to unicode conversion. This is not actually correct according to the rules of LaTeX  but seems to be an important exception required by our users.  This is achieved by the following:  1. Replace all single underscores with `JABREFUNDERSCORE`  2. Do the unicode conversion  3. Replace `JABREFUNDERSCORE` with an underscore  TODO: We should find a better magic word instead of `JABREFUNDERSCORE`  because every character will be processed by latex2unicode and that costs performance. However  it should still be long and unique enough so that we avoid accidental conversions. Suggestions anyone?  - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef What about the Unicode Replacement Char? http://www.fileformat.info/info/unicode/char/fffd/index.htm || Excellent idea @Siedlerchr I have implemented this using the replacement char (and it still works). || As discussed in the devcall: This can be merged aber fixing checkstyle ||
2719,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,Extend architecture tests to javafx and javafx.collections Extends the architecture tests to also cover `javafx` and `javafx.collections`  as discussed in #2617.  It seems that it is high time for this  since javafx classes are already being misused  as this PR uncovers. Thus  this currently fails the build. The misuses are:  - org.jabref.logic.exporter.GroupSerializer/GroupSerializerTest/GroupsParserTest uses javafx.scene.paint.Color  - org.jabref.logic.journals.Abbreviation uses javafx.beans.property.SimpleStringProperty  - test/org.jabref.logic.l10n.LocalizationParser uses FXMLLoader/PlatformImpl  Although we might think about making exceptions for the beans and tests  I do not see why the Color class should be directly accessed in the gui.  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Thanks for your reply:  - Looking at the Color class  it is just a representation of the RGB code  so not too problematic. I am still not 100% sure. Assuming we would switch to a new GUI technology  would we be using javafx.Color objects  or would we have to refactor the model classes to only use the RGB code string? I would really like to have a third opinion from someone from @JabRef/developers on this  so that we can sort of say that we have a majority consensus.  - I do not think very highly of our custom event bus (and have always said so)  so bean properties would be acceptable to me  especially considering the fact that we allow observable collections  which are essentially just "bean data structures"  - It might make sense to exclude the whole test sources from the architecture tests. Imho  they are not really relevant for static architecture checks. I will have a look at that. || I have been thinking a little more about `Color`. Isnt this the very same thing as we have in https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/IconTheme.java ?  There  we also have all the color codes  but in the gui package and not in model. So what is our reasoning to allow the javafx version of Color in model  but not the awt version? Also  had we used the awt version in model  wouldnt that have meant that we would have had to rewrite all such usages for the javafx migration? If yes  isnt that a good argument for not allowing the javafx version of `Color` in model?  And interestingly  I found this: https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/logic/groups/DefaultGroupsFactory.java#L13 This is a plain violation of our architecture rules. @tobiasdiez Did you do the import like that on purpose  so that the tests do not find it  or was that an accident? || I think the issue with the `Color` class is that previously there was no need to have anything color-related in the model as no class in model relied upon it - thus there was never situation where the usage of `awt.color` in model was on the table. From an architectural standpoint  the cleanest solution is probably to implement our own version of `Color` in model and use this. The gui contains then a converter from this `Color` to whatever color is used in the corresponding UI framework. However  this is additional work and apart from making a migration to a new GUI easier I do not see any advantages.  @simonharrer as I have our discussion about various architectural points in good memory  I would highly value your opinion on this matter (if you find the time to look into it).  I cant remember that I was creative enough to use the full path to hide the dependency from our architecture tests. But good to know that this works  I will now definitely (ab)use it and make my life way easier 😄 . Of course I will fix it (tomorrow).  || @tobiasdiez The fix will go into this PR? || * Color: +1 to add it as exception  because it is "just" a data model. I would not implement a separate color class  even though this would be the cleanest solution. (Effort saving) * Beans: +1 to allow them * Tests: Yes  please exclude them.   || Side comment: [Macker](https://innig.net/macker/index.html) seems to be a tool  which also implements architecture checks. Example: https://innig.net/macker/example/layering/src/macker.xml. OK  it is outdated  but I thought  it is nice to know. 😇  || I still think that making an exception for `Color` is a bad decision that will come back to bite us. In the course of moving to JavaFX  we are currently losing a lot of independence in our model packages - something that we invested a lot of effort when trying to get rid of the swing dependencies.  But if this is the consensus in the team  Ill bow to that. I created exceptions for the remaining FX classes and this PR should be ready to go when the build succeeds on travis.   || 
2727,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Fixed freeze on Mac OS X when creating/editing groups Fixed that JabRef for Mac OS X was freezing / not responding when using the "add subgroup" or "edit group" feature. Also fixed some menu items which had the wrong functionality. Refs #2722   - [x] Manually tested changed features in running JabRef  
2732,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix 2701 too may files found <!-- describe the changes you have made here: what  why  ... -->  I would like to offer my fix for the issue  2701: JabRef would find too many files when they are search with the [year]_[auth].* pattern. The reason seems to be a null database passed to the BibtexKeyPatternUtil.makeLabel(BibEntry  String  Character  BibDatabase) method  and a null pointer exception is triggered. As a result  the [auth] part of the pattern was erased and ignored. With the suggested fix  JabRef uses the [auth] part of the pattern and finds just the files with the matching author  as expected. A relevant unit test was added  no other tests were broken.  - [ ] Change in CHANGELOG.md described -- no functionality changes  restored the previous state - [x ] Tests created for changes -- 1 unit test added  - [ ] Screenshots added (for bigger UI changes) -- no GUI changes  - [ ] Manually tested changed features in running JabRef -- none - [x ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) -- the issue #2701 still open. - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? -- no localisation changes. Thank you very much for your contribution 👍 . Codewise it looks very good to me. If the test passes and another dev gives his okay  we can merge it. || Thanks for the contribution @sauliusg . Great  when users find an issue and even fix it themselves (   > The reason seems to be a null database passed to the BibtexKeyPatternUtil.makeLabel(BibEntry  String  Character  BibDatabase) method  and a null pointer exception is triggered  I will investigate this tomorrow  because Im not entirely sure if your fix solves the symptoms or we should dig a bit deeper and eliminate the main problem  which could be that bloody null database. || Dear  Siedlerchr  dear Lynyus   thank you for the instant reply!  I have got feedback from Codacy and fixed: removed an unused variable from the new unit test. Also  I added another second unit test to cover the second if statement added by me. Sorry if it breaks the "changes approved" status...  > I will investigate this tomorrow  because Im not entirely sure if your fix solves the symptoms or we  > should dig a bit deeper and eliminate the main problem  which could be that bloody null database.  Please have a look. It seems to me that the null can be traced to the explicit null argument passed to it from the private static List<File> findFile(BibEntry entry  File directory  String file  String extensionRegExp  Character keywordDelimiter) method (line 250  String filenameToLookFor  expandBrackets(filePart  entry  **null**  keywordDelimiter).replaceAll(EXT_MARKER  extensionRegExp) ).  Regards  Saulius || @lynyus your suggestions sounds reasonable. We should try to not pass null as an argument. Moreover  the label generation code probably needs a complete refactoring (especially  get rid of the huge amount of static methods). But this will be probably a bigger project. While I would welcome PRs from you or @sauliusg in this direction  I think the current PR is an acceptable workaround within the boundaries of the current code infrastructure. || Okay  lgtm! I merge it in! Thank you very much for your contribution! 👍  Feel free to take a look at other issues  || Thanks! || 
2747,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,Replace "Datenbank" by "Bibliothek" This addresses #2095 for German.  
2751,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Sauliusg fix 2700 null pointer exception on get fulltext Followup from @sauliusg  PR  #2744 Fix for #2739  
2751,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Sauliusg fix 2700 null pointer exception on get fulltext Followup from @sauliusg  PR  #2744 Fix for #2739  
2774,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fixes #2766 If file is not found annotations might be null Still  the real reason is a missing file...  
2778,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,Fixes handling of unknown PDAnnotation types. refs. #2777 Please change method name  resolve the conflict and then merge. ||
2816,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Fix #2806: date editor also accepts incomplete dates <!-- describe the changes you have made here: what  why  ... --> Should fix https://github.com/JabRef/jabref/issues/2806 and https://github.com/JabRef/jabref/pull/2781#issuecomment-296427732.  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
2826,1,1,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Fix invalid folder when passed file/path is empty string Return the correct working dir Fix for #2825   <!-- describe the changes you have made here: what  why  ... --> Internal/4.0.0 beta change only   ~~- [ ] Change in CHANGELOG.md described~~ ~~- [ ] Tests created for changes~~ ~~- [ ] Screenshots added (for bigger UI changes)~~ - [x] Manually tested changed features in running JabRef ~~- [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)~~ ~~- [ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~ I found the problem. It was not due to preferences  but due to an empty filename which would create a folder outside the junit tmp dir and would stay persistent.  ||
2862,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fix export and import of MS office day/year/month acessed fields Fix possible NPE in Date parsing Fixes #2859   <!-- describe the changes you have made here: what  why  ... -->  - [X] Change in CHANGELOG.md described - [X] Tests created for changes ~~- [ ] Screenshots added (for bigger UI changes)~~ - [X] Manually tested changed features in running JabRef - [X] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) ~~- [ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~ Change the code to optionals. Merge it in now ||
2864,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,Implement #2785: resort groups using drag & drop <!-- describe the changes you have made here: what  why  ... --> With this PR it is now possible to resort groups using drag and drop. When the user drags a group over the center of another one  then the target group is highlighted as follows ![image](https://cloud.githubusercontent.com/assets/5037600/26400032/79f291e0-407f-11e7-8c5f-a4036e950f20.png) and the source group is added as a child.   In contrast  when the user hovers over the bottom or top part of a group  then a line is added that indicates that the source group is added at this point (i.e. between Test 1 and Test 2 in this picture) ![image](https://cloud.githubusercontent.com/assets/5037600/26400066/93205328-407f-11e7-9714-7f87f0158565.png)  There are still some problems with the selection status after a drag and drop.  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Thanks for the positive feedback.  Ill fix the "not mark as dirty" issue as part of #2787 as in my opinion the cleanest solution for this is a global listener (instead of manually calling `markAsChanged` after every action). || 
2875,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix entry editor <!-- describe the changes you have made here: what  why  ... --> Fixes #2843 and #2851. This was a tricky bug: JavaFX creates empty dummy cells at the end of a list view. For some reason the list view for the linked files had an initial size of `1.7976931348623157E308` and  well  creating that many dummy cells takes a while (probably longer than the universe took to create humans) and eventually lead to a freeze of the JavaFX thread. The fix was easy  just add `maxHeight"100"` and be happy (finally  after trying to debug the problem for ages).  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
2875,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix entry editor <!-- describe the changes you have made here: what  why  ... --> Fixes #2843 and #2851. This was a tricky bug: JavaFX creates empty dummy cells at the end of a list view. For some reason the list view for the linked files had an initial size of `1.7976931348623157E308` and  well  creating that many dummy cells takes a while (probably longer than the universe took to create humans) and eventually lead to a freeze of the JavaFX thread. The fix was easy  just add `maxHeight"100"` and be happy (finally  after trying to debug the problem for ages).  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
2882,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,Fix loading of preferencesService The else part tried to instantiate the interface otherwise Fix for #2881     <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
2891,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,Adjust tests: Ads fetcher returns url  DBLP no longer works with negative operators #2890  Internal change only  some adjusted tests  
2918,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,Fix NPE cases in FileDialog Configuration Add test for fileDialogConfiguration Builder  Fixes #2917  <!-- describe the changes you have made here: what  why  ... -->  - [X] Change in CHANGELOG.md described - [X] Tests created for changes ~~- [ ] Screenshots added (for bigger UI changes)~~ ~~- [ ] Manually tested changed features in running JabRef~~ - [X] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) ~~- [ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~  
2921,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix #2854: Readd context menu to linked files editor <!-- describe the changes you have made here: what  why  ... -->  This was the last feature missing from the old file list editor. The old class could thus be deleted.  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`? Codewise looks good  but you do have an architectural violatin  your model class depends on gui: ` import org.jabref.gui.externalfiletype.ExternalFileType  `  And I tested it locally. Apart fromt he keybindings problem it works. But I found one bug. I can not delete a file entry which has no underlying file  Just add this line in your bibdatabase and try to delete the entry then: ``` file {:Kitamura2009 - A Supporting Tool for Requirements Elicitation Using a Domain Ontology.pdf:PDF}  ```  it gives you an error message File not found ||
2923,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix key combination related exceptions Use keyCombination match method Manual tests sucessful  some unit tests fail for unknown reasons   Fixes #2901     <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Hm  thats strange   I will go deeper in this Edit// I tested in on Windows 10 and I could change the key combination and after a restart of JabRef the new keybindings did work.  || I did some debuging and it turns out that its the fault of `KeyBindingRepository:getKeyCombination`. JabRef constructs the `KeyCombination` via the `valuesOf` method  e.g. as `KeyCombination.valueOf("ctrl C")`. However  the correct format for the `valueOf` method is with a plus sign: `KeyCombination.valueOf("ctrl+C")`. In the first example the key combination has as character `ctrl c` and no modifiers active  while in the second case we get the expected result that the character is `c` and the modifier `ctrl` is down. || Ah thanks for the debugging. I will try to fix this || I fixed this stuff and added the modifiers and now all tests (including previouslly ignored) work  || 
2935,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Open Urls for recommneded Articles in the browser Added a generic HyperLinkListener which opens any hyperlink in a new browser window. By defeault javafx opens all urls in the same webview window Fix #2931   - [X] Change in CHANGELOG.md described ~~- [ ] Tests created for changes~~ ~~- [ ] Screenshots added (for bigger UI changes)~~ - [X] Manually tested changed features in running JabRef - [X] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) ~~- [ ] If you changed the localization: Did you run `gradle localizationUpdate`?~~  
2937,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix propagation of key events back to the Jabref main frame Related to the new entry editor We need to consume the key events on the jfx panel to stop propagation back to the Main Frame.  Fix for #2855 and the other lkeybindings (CTRL + C  CTR+X ) <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? This makes the "Add new entry" dialog working again: I can paste DOIs. This is a necessary hotfix and therefore  I merge before we got another review. || 
2939,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Ask before deleting associated files from disk in entry Add new dialog  Fixes #2938  ![grafik](https://user-images.githubusercontent.com/320228/27508424-c8b15d34-58e4-11e7-8c89-ea97a9df8bde.png)   <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`? We can change the text always laster  but I suggest we leave it for the moment to have the functionality || I just noticed that in the right click menu it is still `Permanently delete the local file` which is kind of confusing as you later get the option to decide wheter to delete the file or just the link. So to options: a) provide two context menus for "Unlink" and "Delete local file" but not the dialog you added in this PR or b) rename also the context menu entry  Can you please have a look and provide a follow-up PR? Thanks! || Yes  but the dialog is still necessary when you hit the del key   Am 29.06.2017 1:33 nachm. schrieb "Tobias Diez" <notifications@github.com>:  > I just noticed that in the right click menu it is still Permanently > delete the local file which is kind of confusing as you later get the > option to decide wheter to delete the file or just the link. So to options: > a) provide two context menus for "Unlink" and "Delete local file" but not > the dialog you added in this PR or > b) rename also the context menu entry > > Can you please have a look and provide a follow-up PR? Thanks! > > — > You are receiving this because you modified the open/close state. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/2939#issuecomment-311940128>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/AATi5G6RMQNUHQGh4xkMr8j02uFIz4pKks5sI4uJgaJpZM4OETkA> > . >  || 
2943,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Add a shortcut to "Quality - Look up full text documents" This PR adds a shortcut key <kbd>Alt</kbd> + <kbd>F7</kbd>  to the function "Quality"-"Look up full text documents". Ive found that a issue was already raised in #1323 after finishing the code revision (hence  I happened to use the modifier <kbd>Alt</kbd> rather than <kbd>Ctrl</kbd> :-) )  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Ive no idea why the build fails  but since these changes should not be the reason for the failing test Ill merge it now. ||
2957,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix closing entry editor with ESC Rename Escape to ESC for javafx Renamed Enum variables as key for the constant was amibiuous  First part of #2949  Internal change only  from the new entry editor.  Edit// You may need to reset the keybinding for CLOSE_ENTRY_EDITOR in the Manage keybinding dialog  as the old stored value from the prefs no longer works for javafx.   <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [X] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [X] If you changed the localization: Did you run `gradle localizationUpdate`?  
2972,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Add Remove link context menu entry in file editor <!-- describe the changes you have made here: what  why  ... -->   Fix for #2968  ![image](https://user-images.githubusercontent.com/320228/27868522-3995973e-619d-11e7-8911-c2c85ba29109.png)  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
2991,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,Check for different editions in the duplicate check Fixes #2960 by checking for different editions before the actual duplicate check. If both BibEntries have a Edition field that mismatches  it cannot be a duplicate.  - [X] Change in CHANGELOG.md described - [X] Tests created for changes  
2995,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Less backups Addresses #2993  The frequent events are due to the bidirectional binding which transfers every change directly into the BibEntry. If we want fewer events  the only solution will probably be to break the binding  which would be very disappointing for the JavaFX implementation. In my point of view the problem is not on the side of event creation. After all  every change should trigger an event and JavaFX triggers many changes. Imho  this should be fixed in how we react to events.  I also noticed the exception  but do not get a dialog. This seems to happen because of the save operation invoked by the backup.  A solution might be to do less backups  by:  1. Doing backups only every X events and not for every event  2. Ignoring FieldChangeEvents in the Backup  3. Adding the size of the field change in the FieldChangeEvent class  so that you can ignore it if only 1 character changed.  This PR combines options 1. and 3.  i.e.: The backup manager ignores events that are very minor and only does a backup if enough of them have happened (currently set to five).  What do you think?   - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3002,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix #2998: improve auto completion <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3005,1,0,0,0,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,javafx replacement for file dialog Fixes #2970   The open functionality has been removed -> Directly possible in the entry editor Contextmenu on maintable ->attach file now opens a file chooser dialog and afterwards this dialog for editing  e.g. adding a description   ![grafik](https://user-images.githubusercontent.com/320228/37621264-b4418358-2bbe-11e8-9925-6dbb77943ee7.png)  Only resizable to max screen size: (on my 24" with 1920x1200) ![grafik](https://user-images.githubusercontent.com/320228/37621410-209c0f32-2bbf-11e8-8b65-92ed8c83b51a.png)    <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Discussion @Siedlerchr with @tobiasdiez required. || Dialog only for edit and not for adding linked files (for this: just create a new linked file instance with path to file and empty directory) || Failing tests are only the l10n ones from the maintable branch || Yeah  I thought I could get rid of the old classes completely  but that has to wait for a future PR. As far as I remember its used in the import inspection window (lot of ugly code)  || @tobiasdiez  I tried to convert the EditfileDialog to the new dialog structure from #3880  but I do still get an NPE on loading the dialog: ``` caused by: java.lang.NullPointerException 	at org.jabref.gui.filelist.LinkedFileEditDialogView.initialize(LinkedFileEditDialogView.java:55) ~[main/:?] ``` || And what is null there? If line 54 runs without any problems  then the setup seems to be fine and the FXML nodes are injected. Maybe the `description` field is not defined in the fxml? || @tobiasdiez  No  it fails directly in the initalize  The viewModel which gets initialized in the ctor is null. When debugging it crashes directly after/when calling `ViewLoader.view(this)                   .load()` Btw  I noticed the same problem also occurs with the CopyLinkedFilesDialogView (Tools->Copy LInked Files)  || ok  this makes sense since the `initialization` method is called during `ViewLoader.load` and at this point the view model is not yet created. Just move the `viewModel  ...` line to the beginning of the `initialization` method and it should work. || Works now.  I just additionally  had to add a close/cancel button to the dialogPane  for the copyFiles  because otherwise the dialog is not closeable: https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/Dialog.html || I fixed all things open and did the renamings.  So  I merge this now ||
3007,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Add preference migration for keybdingings Fix for #2980    <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3019,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Update source tab when an entry is changed Attempts to fix the remaining part of #2888. The source tab is now updated each time an entry is changed in the editor.  There no part of a BibEntry that represents the source tab per se to which we could bind. Therefore  this PR adds a listener to the source tab. It now listens to `EntryChangedEvents` and if the entry that it represents is changed  then it updates its content.  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3024,1,0,1,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,0,Link missing DocBookEditors formatter in LayoutEntry It seems that we overlooked the `CreateDocBookEditors` layout formatter in the formatter map in `LayoutEntry`. Reported in #3020.   - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3030,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Fix keybinding in entry editor in localized installation Check keycode to avoid localization problems  Follow up from #2853   <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Alternative solution without using the deprecated function:  ```java     private Optional<KeyCode> determineKeyCodeFromKeyEvent(java.awt.event.KeyEvent keyEvent) {         // special treatment of localized KeyEvents         if (keyEvent.getKeyCode()  java.awt.event.KeyEvent.VK_DELETE) {             return Optional.of(KeyCode.DELETE)          }                  return Arrays.stream(KeyCode.values()).filter(k -> k.getName().equals(java.awt.event.KeyEvent.getKeyText(keyEvent.getKeyCode()))).findFirst()      } ```  But this only solves the problem for the "delete" key - so we still might have other yet unidentified problems.  So we should decide which route to take  -) || I would give a +1 for @Siedlerchrs solution  since we surely do not catch all possible keys and the maintable is our next target after the entry editor 😇. || 
3048,1,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,Fix ads fetcher Fix for #3035   <!-- describe the changes you have made here: what  why  ... -->  - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Can we add a small test for this? || There are already tests present which failed before and now succeed || Ah right 👍  ||
3083,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix #3034: Make font size in entry editor and group panel customizable <!-- describe the changes you have made here: what  why  ... -->  This fix for #3034 is inspired and based on https://github.com/JabRef/jabref/pull/3042. Due to my limited git knowledge I was not able to directly hijack the other PR  sorry @lenhard.   - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3092,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fetcher timestamp Fixes #3074. Ok  I tried to create a own preference class. Not sure if Ive done that correctly (as intended at the moment). Should I also replace calls to the preferences inside the General tab? ||
3094,1,0,1,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,Enable join and replace of keywords This implements #1076  ![grafik](https://user-images.githubusercontent.com/1366654/29179368-7ed795ae-7df4-11e7-9976-6513470a4c0b.png)   - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`? There was someone in the issue who noticed a bug and wanted to Work on this. Maybe he is interested in porting to javafx? || Please have a look at the codacy issues  after that we can merge || As @koppor  already approved these changes and Im happy  too  I merge this in. ||
3095,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,Fix for issue 3052 <!-- describe the changes you have made here: what  why  ... --> This is an atempt to fix the problem with entry editor focus as described in #3052. In detail  when `EntryEditor` opens up  it is not focused automatically. The desired behavior is to focus the first `Textfield` on any of the `EntryEditor`s tabs.  The way the fix is implemented: when `EntryEditor` is opened  the `JFXPanel` in which is the `TabPane` of the `EntryEditor` is getting the focus  The focus is given implicitly to a focusTraversable node contained in the `JFXPanel`. The selection of the node seems to be "random" (even though consistent for a given tree of nodes). As far as Ive tested it consistently focuses the first `Textfield` on any tab  which is the desired behavior. I make this pull requested as suggested in #3052 discussion by @Siedlerchr .  I should mention that I ran `gradle check` which results in "6 tests failed" in my setup but this was also the result when I ran the test before making any change.  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Thanks for the PR! ||
3096,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,Followup to 2663 Regexformatter The Regexformatter now handles protected groups correctly. This is a followup to #2663. There  the regex modifier was introduced and a minor issue with shorttitle was fixes  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3097,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Store changes in source tab when new entry is selected Fixes #3086   The problem was that the source tab only stored changes on focus change and this did not happen when you just select a new entry in the main table.  The PR modifies an attribute in the `EntryEditor` (`movingToDifferentEntry`) and turns it into a `BooleanProperty` so that you can bind to it and react to changes.  EDIT: Also fixes a second (unreported) issue: Now the base panel is marked as dirty when you type something in the source tab.  EDIT 2: Fixes also  #3063  Now the Other fields tab is rebuilt whenever an other field is newly added or removed at the BibEntry. This is achieved with the event system and a new subtype of FieldChangedEvent.  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`?  
3097,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Store changes in source tab when new entry is selected Fixes #3086   The problem was that the source tab only stored changes on focus change and this did not happen when you just select a new entry in the main table.  The PR modifies an attribute in the `EntryEditor` (`movingToDifferentEntry`) and turns it into a `BooleanProperty` so that you can bind to it and react to changes.  EDIT: Also fixes a second (unreported) issue: Now the base panel is marked as dirty when you type something in the source tab.  EDIT 2: Fixes also  #3063  Now the Other fields tab is rebuilt whenever an other field is newly added or removed at the BibEntry. This is achieved with the event system and a new subtype of FieldChangedEvent.  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`?  
3104,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Source tab doi Fixes #3103 by making sure that updates to the source tab are always performed on the FXApplication Thread.  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? The panel is now updated correctly  however  upon hitting "replace entry" after fetching the BibTeX data there are still some exceptions:  <details>   <summary>Log File</summary>      ``` Uncaught exception Occurred in Thread[AWT-EventQueue-0 6 main] java.lang.IllegalStateException: Not on FX application thread  currentThread  AWT-EventQueue-0 	at com.sun.javafx.tk.Toolkit.checkFxUserThread(Toolkit.java:236) 	at com.sun.javafx.tk.quantum.QuantumToolkit.checkFxUserThread(QuantumToolkit.java:423) 	at javafx.scene.Parent$2.onProposedChange(Parent.java:367) 	at com.sun.javafx.collections.VetoableListDecorator.add(VetoableListDecorator.java:317) 	at com.sun.javafx.scene.control.skin.TabPaneSkin$TabHeaderArea.addTab(TabPaneSkin.java:879) 	at com.sun.javafx.scene.control.skin.TabPaneSkin$TabHeaderArea.access$1100(TabPaneSkin.java:685) 	at com.sun.javafx.scene.control.skin.TabPaneSkin.addTabs(TabPaneSkin.java:332) 	at com.sun.javafx.scene.control.skin.TabPaneSkin.lambda$initializeTabListener$485(TabPaneSkin.java:415) 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233) 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205) 	at javafx.collections.ModifiableObservableListBase.add(ModifiableObservableListBase.java:155) 	at org.jabref.gui.entryeditor.EntryEditor.readdOtherFieldsTab(EntryEditor.java:253) 	at org.jabref.gui.entryeditor.EntryEditor.rebuildOtherFieldsTab(EntryEditor.java:241) 	at org.jabref.gui.entryeditor.EntryEditor.listen(EntryEditor.java:222) 	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at com.google.common.eventbus.Subscriber.invokeSubscriberMethod(Subscriber.java:91) 	at com.google.common.eventbus.Subscriber$SynchronizedSubscriber.invokeSubscriberMethod(Subscriber.java:150) 	at com.google.common.eventbus.Subscriber$1.run(Subscriber.java:76) 	at com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:399) 	at com.google.common.eventbus.Subscriber.dispatchEvent(Subscriber.java:71) 	at com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher.dispatch(Dispatcher.java:116) 	at com.google.common.eventbus.EventBus.post(EventBus.java:217) 	at org.jabref.model.entry.BibEntry.setField(BibEntry.java:427) 	at org.jabref.model.entry.BibEntry.setField(BibEntry.java:448) 	at org.jabref.gui.mergeentries.MergeFetchedEntryDialog$ReplaceAction.actionPerformed(MergeFetchedEntryDialog.java:137) 	at javax.swing.AbstractButton.fireActionPerformed(Unknown Source) 	at javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source) 	at javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source) 	at javax.swing.DefaultButtonModel.setPressed(Unknown Source) 	at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source) 	at java.awt.Component.processMouseEvent(Unknown Source) 	at javax.swing.JComponent.processMouseEvent(Unknown Source) 	at java.awt.Component.processEvent(Unknown Source) 	at java.awt.Container.processEvent(Unknown Source) 	at java.awt.Component.dispatchEventImpl(Unknown Source) 	at java.awt.Container.dispatchEventImpl(Unknown Source) 	at java.awt.Component.dispatchEvent(Unknown Source) 	at java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source) 	at java.awt.LightweightDispatcher.processMouseEvent(Unknown Source) 	at java.awt.LightweightDispatcher.dispatchEvent(Unknown Source) 	at java.awt.Container.dispatchEventImpl(Unknown Source) 	at java.awt.Window.dispatchEventImpl(Unknown Source) 	at java.awt.Component.dispatchEvent(Unknown Source) 	at java.awt.EventQueue.dispatchEventImpl(Unknown Source) 	at java.awt.EventQueue.access$500(Unknown Source) 	at java.awt.EventQueue$3.run(Unknown Source) 	at java.awt.EventQueue$3.run(Unknown Source) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source) 	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source) 	at java.awt.EventQueue$4.run(Unknown Source) 	at java.awt.EventQueue$4.run(Unknown Source) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source) 	at java.awt.EventQueue.dispatchEvent(Unknown Source) 	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) 	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) 	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) 	at java.awt.WaitDispatchSupport$2.run(Unknown Source) 	at java.awt.WaitDispatchSupport$4.run(Unknown Source) 	at java.awt.WaitDispatchSupport$4.run(Unknown Source) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.awt.WaitDispatchSupport.enter(Unknown Source) 	at java.awt.Dialog.show(Unknown Source) 	at java.awt.Component.show(Unknown Source) 	at java.awt.Component.setVisible(Unknown Source) 	at java.awt.Window.setVisible(Unknown Source) 	at java.awt.Dialog.setVisible(Unknown Source) 	at org.jabref.gui.mergeentries.FetchAndMergeWorker.done(FetchAndMergeWorker.java:67) 	at javax.swing.SwingWorker$5.run(Unknown Source) 	at javax.swing.SwingWorker$DoSubmitAccumulativeRunnable.run(Unknown Source) 	at sun.swing.AccumulativeRunnable.run(Unknown Source) 	at javax.swing.SwingWorker$DoSubmitAccumulativeRunnable.actionPerformed(Unknown Source) 	at javax.swing.Timer.fireActionPerformed(Unknown Source) 	at javax.swing.Timer$DoPostEvent.run(Unknown Source) 	at java.awt.event.InvocationEvent.dispatch(Unknown Source) 	at java.awt.EventQueue.dispatchEventImpl(Unknown Source) 	at java.awt.EventQueue.access$500(Unknown Source) 	at java.awt.EventQueue$3.run(Unknown Source) 	at java.awt.EventQueue$3.run(Unknown Source) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source) 	at java.awt.EventQueue.dispatchEvent(Unknown Source) 	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) 	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source) 	at java.awt.EventDispatchThread.pumpEvents(Unknown Source) 	at java.awt.EventDispatchThread.pumpEvents(Unknown Source) 	at java.awt.EventDispatchThread.run(Unknown Source)  Uncaught exception Occurred in Thread[AWT-EventQueue-0 6 main] java.lang.IllegalStateException: Not on FX application thread  currentThread  AWT-EventQueue-0 	at com.sun.javafx.tk.Toolkit.checkFxUserThread(Toolkit.java:236) 	at com.sun.javafx.tk.quantum.QuantumToolkit.checkFxUserThread(QuantumToolkit.java:423) 	at javafx.scene.Parent$2.onProposedChange(Parent.java:367) 	at com.sun.javafx.collections.VetoableListDecorator.add(VetoableListDecorator.java:317) 	at com.sun.javafx.scene.control.skin.TabPaneSkin$TabHeaderArea.addTab(TabPaneSkin.java:879) 	at com.sun.javafx.scene.control.skin.TabPaneSkin$TabHeaderArea.access$1100(TabPaneSkin.java:685) 	at com.sun.javafx.scene.control.skin.TabPaneSkin.addTabs(TabPaneSkin.java:332) 	at com.sun.javafx.scene.control.skin.TabPaneSkin.lambda$initializeTabListener$485(TabPaneSkin.java:415) 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233) 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205) 	at javafx.collections.ModifiableObservableListBase.add(ModifiableObservableListBase.java:155) 	at org.jabref.gui.entryeditor.EntryEditor.readdOtherFieldsTab(EntryEditor.java:253) 	at org.jabref.gui.entryeditor.EntryEditor.rebuildOtherFieldsTab(EntryEditor.java:241) 	at org.jabref.gui.entryeditor.EntryEditor.listen(EntryEditor.java:222) 	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at com.google.common.eventbus.Subscriber.invokeSubscriberMethod(Subscriber.java:91) 	at com.google.common.eventbus.Subscriber$SynchronizedSubscriber.invokeSubscriberMethod(Subscriber.java:150) 	at com.google.common.eventbus.Subscriber$1.run(Subscriber.java:76) 	at com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:399) 	at com.google.common.eventbus.Subscriber.dispatchEvent(Subscriber.java:71) 	at com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher.dispatch(Dispatcher.java:116) 	at com.google.common.eventbus.EventBus.post(EventBus.java:217) 	at org.jabref.model.entry.BibEntry.setField(BibEntry.java:427) 	at org.jabref.model.entry.BibEntry.setField(BibEntry.java:448) 	at org.jabref.gui.mergeentries.MergeFetchedEntryDialog$ReplaceAction.actionPerformed(MergeFetchedEntryDialog.java:137) 	at javax.swing.AbstractButton.fireActionPerformed(Unknown Source) 	at javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source) 	at javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source) 	at javax.swing.DefaultButtonModel.setPressed(Unknown Source) 	at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source) 	at java.awt.Component.processMouseEvent(Unknown Source) 	at javax.swing.JComponent.processMouseEvent(Unknown Source) 	at java.awt.Component.processEvent(Unknown Source) 	at java.awt.Container.processEvent(Unknown Source) 	at java.awt.Component.dispatchEventImpl(Unknown Source) 	at java.awt.Container.dispatchEventImpl(Unknown Source) 	at java.awt.Component.dispatchEvent(Unknown Source) 	at java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source) 	at java.awt.LightweightDispatcher.processMouseEvent(Unknown Source) 	at java.awt.LightweightDispatcher.dispatchEvent(Unknown Source) 	at java.awt.Container.dispatchEventImpl(Unknown Source) 	at java.awt.Window.dispatchEventImpl(Unknown Source) 	at java.awt.Component.dispatchEvent(Unknown Source) 	at java.awt.EventQueue.dispatchEventImpl(Unknown Source) 	at java.awt.EventQueue.access$500(Unknown Source) 	at java.awt.EventQueue$3.run(Unknown Source) 	at java.awt.EventQueue$3.run(Unknown Source) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source) 	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source) 	at java.awt.EventQueue$4.run(Unknown Source) 	at java.awt.EventQueue$4.run(Unknown Source) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source) 	at java.awt.EventQueue.dispatchEvent(Unknown Source) 	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) 	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) 	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) 	at java.awt.WaitDispatchSupport$2.run(Unknown Source) 	at java.awt.WaitDispatchSupport$4.run(Unknown Source) 	at java.awt.WaitDispatchSupport$4.run(Unknown Source) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.awt.WaitDispatchSupport.enter(Unknown Source) 	at java.awt.Dialog.show(Unknown Source) 	at java.awt.Component.show(Unknown Source) 	at java.awt.Component.setVisible(Unknown Source) 	at java.awt.Window.setVisible(Unknown Source) 	at java.awt.Dialog.setVisible(Unknown Source) 	at org.jabref.gui.mergeentries.FetchAndMergeWorker.done(FetchAndMergeWorker.java:67) 	at javax.swing.SwingWorker$5.run(Unknown Source) 	at javax.swing.SwingWorker$DoSubmitAccumulativeRunnable.run(Unknown Source) 	at sun.swing.AccumulativeRunnable.run(Unknown Source) 	at javax.swing.SwingWorker$DoSubmitAccumulativeRunnable.actionPerformed(Unknown Source) 	at javax.swing.Timer.fireActionPerformed(Unknown Source) 	at javax.swing.Timer$DoPostEvent.run(Unknown Source) 	at java.awt.event.InvocationEvent.dispatch(Unknown Source) 	at java.awt.EventQueue.dispatchEventImpl(Unknown Source) 	at java.awt.EventQueue.access$500(Unknown Source) 	at java.awt.EventQueue$3.run(Unknown Source) 	at java.awt.EventQueue$3.run(Unknown Source) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source) 	at java.awt.EventQueue.dispatchEvent(Unknown Source) 	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) 	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source) 	at java.awt.EventDispatchThread.pumpEvents(Unknown Source) 	at java.awt.EventDispatchThread.pumpEvents(Unknown Source) 	at java.awt.EventDispatchThread.run(Unknown Source) ``` </details> || Indeed  thanks for pointing out! Should be fixed now.  It seems that we (I) need be more careful when updating FX components based on model events. || 
3105,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Remove entries from prior groups if move operation is selected Fixes #3101  There is one problem left to conclude this. It does the proper operation on the selected entries and updates the group tree. However  it does not update the coloring in the group tree. @tobiasdiez Could you give me a hint on how I can achieve this?  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Unfortunately  using the `StateManager` does not solve the coloring for me.  But to be honest  it seems rather broken anyway  irrespective of this PR. I have a database with 3 entries and 2 groups. The only way to get a coloring is to click an entry with a group in a newly started JabRef without opening the entry editor. That coloring never changes even if I click different entries. Does coloring actually work for you?  I think this PR is ready to go. Someone else should check the fix in a running JabRef. The coloring problem should be investigated in another issue/PR. || In general it works for me but I also noticed that sometimes the color is not updated. Probably related to https://github.com/JabRef/jabref/issues/2857. ||
3111,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Trigger group display update when grouping changes Attempts to fix #1903  Makes the maintable update whenever grouping changes and not just when group selection changes.  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3116,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Move event processing from source tab into entry editor Solves the most critical part of #3113  The source tab did not properly unregister itself from the event bus. For some reason  I did not manage to get this working when the source tab takes care of deregistration. Therefore  I moved all event handling out of the source tab and into the entry editor.  Using jvisualvm  I can see that garbage collection works with this PR. Cycling through the main table with the entry editor open increases used RAM. When you force garbage collection  the used heap goes down to close to zero again  instead of staying at a higher plateau. See attached screenshot  ![heap](https://user-images.githubusercontent.com/1515701/29381572-f60537f6-82c9-11e7-9ad9-20e6208ca648.png)  So this fixes the memory leak. The overall heap size does not go down  but thats a different issue.  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? AS this is a small but important change I merge this i in now. ||
3120,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Additional filter functionality for Check Integrity popup Fixes #2718   I added new Filter All and Filter None buttons.  They can be clicked by the user to check/uncheck all options in the filter menu.  When one of the buttons gets clicked the system will iterate through the existing menu components and toggle the checkmarks and info displayed.  I wasnt sure on the best placement of the buttons in the window so went with the simplest solution ![image](https://user-images.githubusercontent.com/17808285/29439562-4f3e84fe-8373-11e7-9d15-5e811d90578a.png)  Updated localization info with text for aforementioned buttons. We still have many open translations ( http://help.jabref.org/en/TranslatingGUI)  so that is not a con. The feature has a very low risk break anything. I would just include it.  Am 18.08.2017 11:32 schrieb "Jörg Lenhard" <notifications@github.com>:  > *@lenhard* approved this pull request. > > Thanks for your PR. The simplest solution is usually best. > > I have tested the PR locally and it works. The code looks fine as well. > > @JabRef/developers <https://github.com/orgs/JabRef/teams/developers> We > wanted to do a feature freeze for 4.0. So should we wait with merging this? > I would say we can merge it anyway. After all  its not too big. The only > "problem" is that the translators would need to do another round. > > — > You are receiving this because you are on a team that was mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/3120#pullrequestreview-57153711>  > or mute the thread > <https://github.com/notifications/unsubscribe-auth/ABTafkXTsgkgb7BtM91DhU9RfdwsMW2Jks5sZVoagaJpZM4O6-V_> > . >  || Ok  perfect!  @Andrew-Lev Thank you very much for your contribution! Youre very welcome to provide more :-) || @koppor Does the timeframe for the release of 4.0  allow a call to translators? || Absolutely!!  Am 18.08.2017 14:47 schrieb "MLEP" <notifications@github.com>:  > @koppor <https://github.com/koppor> Does the timeframe for the release of > 4.0 allow a call to translators? > > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/3120#issuecomment-323344345>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/ABTafmLTjIiCVx3punVN2Me-vdWh35SOks5sZYfigaJpZM4O6-V_> > . >  || 
3137,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Re-add "Normalize to BibTex name format" context menu item and menu i… …tem tooltips  Fixes #3136  Also re-adds tooltips to context menu items which had been commented out.  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Now we only need to fix the underlying algorithm I guess... || Exactly :) But thats not part of this PR. ||
3141,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,Increase size of file and keywords editors In the new EntryEditor  we have the problem that sometimes text in the TextAreas is hard to read  because the areas are very narrow. The reason for this is that Java tries to fit them in the available display space. Examples: #3130 #3117 #2941  This PR sets a minimum size for all TextAreas in the EntryEditor. The value of 70px is rather arbitrary and Ill be happy to get some thoughts if this is good or if more or less is desirable. With this minimum size all TextAreas are nicer to read  even in the cramped up General tab. The only "problem" is that you now need to scroll in the General tab most of the time.   All in all I think this should definitly go into 4.0!  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? To be honest  Im not a big fan of the increased size. I prefer to have as much information on the screen as possible and not to have to scroll. On the other hand  I acknowledge that the current layout is also suboptimal as the text fields are not expanding on their own when they contain much information. Maybe it is already enough to increase the `prefered` height (instead of minimum)? Also you should be able to increase the size of the files panel independently of the other fields.  Furthermore  it is probably better to use scaling units (like `em`) instead of pixels. || @tobiasdiez Ok  you have the same opinion as @koppor I guess.  Increasing the preferred height didnt help unfortunately. We can leave most field editors as they are  but we have to increase the size of the file and the the keywords editor. Those are the two editors in the cramped general tab where users could enter information with more than a single line. That does not look good at all and really does annoy users.  Ive tried to change just these two editors in code  but failed. Whenever I call `setMinWidth` in https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java or change the `minHeight` in the related fxml file  the min height of all field editors in the tab increase. Any hint?  || The problem is probably https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/FieldsEditorTab.java#L166  where the rows are set to have the same height. || Quick idea: If the row constraints are the problem  it might be an option to use two rows for the File/Keyword editors || @matthiasgeiger Not sure if thats easily possible. The best solution is probably to write new subclass of EntryEditorTab. || Or extend the `FXFieldEditor` by a `getWeight` method  which you can use in https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/FieldsEditorTab.java#L114. Maybe it is already sufficient to remove these row constraints (although there was probably a reason why I added them in the first place). || Ok  Ive implemented a hack that assigns twice the space of normal rows to the keyword and file field editors.  As I said  this is a hack. But before I turn this into something more acceptable (along your suggestion @tobiasdiez )  I would like to get confirmation from the team that this is a solution that we can live with visually in the JabRef UI. If not  than I am just wasting my time with GUI hacking. || And now I refactored it anyway... JabRef continues to ruin my lunch time. || I tried out the new solution locally and it looks good enough. On two-column tabs  the things shrink too much  but we discussed in the devcall that it is difficult to determine the right "min-height". (screen resolution etc).  So  good to merge. || As discussed in the dev call  I am merging this now. || 
3141,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,Increase size of file and keywords editors In the new EntryEditor  we have the problem that sometimes text in the TextAreas is hard to read  because the areas are very narrow. The reason for this is that Java tries to fit them in the available display space. Examples: #3130 #3117 #2941  This PR sets a minimum size for all TextAreas in the EntryEditor. The value of 70px is rather arbitrary and Ill be happy to get some thoughts if this is good or if more or less is desirable. With this minimum size all TextAreas are nicer to read  even in the cramped up General tab. The only "problem" is that you now need to scroll in the General tab most of the time.   All in all I think this should definitly go into 4.0!  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? To be honest  Im not a big fan of the increased size. I prefer to have as much information on the screen as possible and not to have to scroll. On the other hand  I acknowledge that the current layout is also suboptimal as the text fields are not expanding on their own when they contain much information. Maybe it is already enough to increase the `prefered` height (instead of minimum)? Also you should be able to increase the size of the files panel independently of the other fields.  Furthermore  it is probably better to use scaling units (like `em`) instead of pixels. || @tobiasdiez Ok  you have the same opinion as @koppor I guess.  Increasing the preferred height didnt help unfortunately. We can leave most field editors as they are  but we have to increase the size of the file and the the keywords editor. Those are the two editors in the cramped general tab where users could enter information with more than a single line. That does not look good at all and really does annoy users.  Ive tried to change just these two editors in code  but failed. Whenever I call `setMinWidth` in https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java or change the `minHeight` in the related fxml file  the min height of all field editors in the tab increase. Any hint?  || The problem is probably https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/FieldsEditorTab.java#L166  where the rows are set to have the same height. || Quick idea: If the row constraints are the problem  it might be an option to use two rows for the File/Keyword editors || @matthiasgeiger Not sure if thats easily possible. The best solution is probably to write new subclass of EntryEditorTab. || Or extend the `FXFieldEditor` by a `getWeight` method  which you can use in https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/FieldsEditorTab.java#L114. Maybe it is already sufficient to remove these row constraints (although there was probably a reason why I added them in the first place). || Ok  Ive implemented a hack that assigns twice the space of normal rows to the keyword and file field editors.  As I said  this is a hack. But before I turn this into something more acceptable (along your suggestion @tobiasdiez )  I would like to get confirmation from the team that this is a solution that we can live with visually in the JabRef UI. If not  than I am just wasting my time with GUI hacking. || And now I refactored it anyway... JabRef continues to ruin my lunch time. || I tried out the new solution locally and it looks good enough. On two-column tabs  the things shrink too much  but we discussed in the devcall that it is difficult to determine the right "min-height". (screen resolution etc).  So  good to merge. || As discussed in the dev call  I am merging this now. || 
3141,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,Increase size of file and keywords editors In the new EntryEditor  we have the problem that sometimes text in the TextAreas is hard to read  because the areas are very narrow. The reason for this is that Java tries to fit them in the available display space. Examples: #3130 #3117 #2941  This PR sets a minimum size for all TextAreas in the EntryEditor. The value of 70px is rather arbitrary and Ill be happy to get some thoughts if this is good or if more or less is desirable. With this minimum size all TextAreas are nicer to read  even in the cramped up General tab. The only "problem" is that you now need to scroll in the General tab most of the time.   All in all I think this should definitly go into 4.0!  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? To be honest  Im not a big fan of the increased size. I prefer to have as much information on the screen as possible and not to have to scroll. On the other hand  I acknowledge that the current layout is also suboptimal as the text fields are not expanding on their own when they contain much information. Maybe it is already enough to increase the `prefered` height (instead of minimum)? Also you should be able to increase the size of the files panel independently of the other fields.  Furthermore  it is probably better to use scaling units (like `em`) instead of pixels. || @tobiasdiez Ok  you have the same opinion as @koppor I guess.  Increasing the preferred height didnt help unfortunately. We can leave most field editors as they are  but we have to increase the size of the file and the the keywords editor. Those are the two editors in the cramped general tab where users could enter information with more than a single line. That does not look good at all and really does annoy users.  Ive tried to change just these two editors in code  but failed. Whenever I call `setMinWidth` in https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java or change the `minHeight` in the related fxml file  the min height of all field editors in the tab increase. Any hint?  || The problem is probably https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/FieldsEditorTab.java#L166  where the rows are set to have the same height. || Quick idea: If the row constraints are the problem  it might be an option to use two rows for the File/Keyword editors || @matthiasgeiger Not sure if thats easily possible. The best solution is probably to write new subclass of EntryEditorTab. || Or extend the `FXFieldEditor` by a `getWeight` method  which you can use in https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/entryeditor/FieldsEditorTab.java#L114. Maybe it is already sufficient to remove these row constraints (although there was probably a reason why I added them in the first place). || Ok  Ive implemented a hack that assigns twice the space of normal rows to the keyword and file field editors.  As I said  this is a hack. But before I turn this into something more acceptable (along your suggestion @tobiasdiez )  I would like to get confirmation from the team that this is a solution that we can live with visually in the JabRef UI. If not  than I am just wasting my time with GUI hacking. || And now I refactored it anyway... JabRef continues to ruin my lunch time. || I tried out the new solution locally and it looks good enough. On two-column tabs  the things shrink too much  but we discussed in the devcall that it is difficult to determine the right "min-height". (screen resolution etc).  So  good to merge. || As discussed in the dev call  I am merging this now. || 
3147,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Export pdf/linked files Fixes #2539   Followup from #2706  because somehow my new changes did not update the PR correctly.   ![grafik](https://user-images.githubusercontent.com/320228/31773816-3ef12f96-b4e4-11e7-800f-90413d074280.png)    <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`? Is it possible to add this to the context menu? I once added "Send as email" to the menu as I also needed a similar functionality for sending entries as email:  ![grafik](https://user-images.githubusercontent.com/1366654/29908597-676fbb74-8e22-11e7-8a09-dc6e0ea79d15.png)  || @Siedlerchr Your PR did not update as you named the branches differently: `exportPdf` vs.  `exportPDF`. The letters `D` and `F` are cased differently. Thus  these are different branches. 🎉  || Current accessibility:  ![grafik](https://user-images.githubusercontent.com/1366654/29908807-4a1879e8-8e23-11e7-84c5-d26b312bc4f3.png)  Reading https://github.com/JabRef/jabref/pull/2706#issuecomment-292110772 and the following comments  I do not like the word "Export" in the Tools menu. It took me 5 minutes to find the functionality.  1. Context menu: No entry for that 2. File menu: No entry for that 3. File -> Export: Cannot select "PDFs" somehow.  Suggestion:  Rename to "Copy attached files to folder..."  Further minor issues  - [x] progress always shows "exporting file 0 of x"   ![grafik](https://user-images.githubusercontent.com/1366654/29908896-be2f2dd6-8e23-11e7-9ea2-e8ee5a230e69.png) - [x] Last chosen folder is not remembered. The browse-dialog always starts in `%HOME` - [x] Pressing "Cancel" when choosing the folder also triggers the export.    || Added devcall label to discuss milestone || Stays at v4.1 milestone as v4.1 will be our PDF feature release. || I think I fixed all issues raised by @koppor  and I also create a log file in the export dir.  || @tobiasdiez  I followed your idea and added a TableView showing the log messages and the file. I plan to replace the true/false values with Icons: (green checkmark and red x) ![grafik](https://user-images.githubusercontent.com/320228/31765002-3b12623a-b4c3-11e7-99a8-f85dc6da83f4.png)  || Looks good! Do you want to display this dialog everytime  even through everything went fine and all files were exported successfully? Or just when an error occurs? Im unsure but would tend to the latter. || From my point of view  all remaining issues should be resolved and this can be merged. || The result dialog is displayed way too small on my display.  ![screen shot 2017-10-25 at 18 24 34](https://user-images.githubusercontent.com/1254003/32010460-28889a8c-b9b2-11e7-837d-e1081c96f654.png)  When I try to resize it  a magical fourth column appears. ![screen shot 2017-10-25 at 18 29 19](https://user-images.githubusercontent.com/1254003/32010567-8248dd66-b9b2-11e7-988b-de409d1c0d3e.png)  || @lynyus  I changed the column size and there is also a tooltip for the file column || 
3147,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Export pdf/linked files Fixes #2539   Followup from #2706  because somehow my new changes did not update the PR correctly.   ![grafik](https://user-images.githubusercontent.com/320228/31773816-3ef12f96-b4e4-11e7-800f-90413d074280.png)    <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`? Is it possible to add this to the context menu? I once added "Send as email" to the menu as I also needed a similar functionality for sending entries as email:  ![grafik](https://user-images.githubusercontent.com/1366654/29908597-676fbb74-8e22-11e7-8a09-dc6e0ea79d15.png)  || @Siedlerchr Your PR did not update as you named the branches differently: `exportPdf` vs.  `exportPDF`. The letters `D` and `F` are cased differently. Thus  these are different branches. 🎉  || Current accessibility:  ![grafik](https://user-images.githubusercontent.com/1366654/29908807-4a1879e8-8e23-11e7-84c5-d26b312bc4f3.png)  Reading https://github.com/JabRef/jabref/pull/2706#issuecomment-292110772 and the following comments  I do not like the word "Export" in the Tools menu. It took me 5 minutes to find the functionality.  1. Context menu: No entry for that 2. File menu: No entry for that 3. File -> Export: Cannot select "PDFs" somehow.  Suggestion:  Rename to "Copy attached files to folder..."  Further minor issues  - [x] progress always shows "exporting file 0 of x"   ![grafik](https://user-images.githubusercontent.com/1366654/29908896-be2f2dd6-8e23-11e7-9ea2-e8ee5a230e69.png) - [x] Last chosen folder is not remembered. The browse-dialog always starts in `%HOME` - [x] Pressing "Cancel" when choosing the folder also triggers the export.    || Added devcall label to discuss milestone || Stays at v4.1 milestone as v4.1 will be our PDF feature release. || I think I fixed all issues raised by @koppor  and I also create a log file in the export dir.  || @tobiasdiez  I followed your idea and added a TableView showing the log messages and the file. I plan to replace the true/false values with Icons: (green checkmark and red x) ![grafik](https://user-images.githubusercontent.com/320228/31765002-3b12623a-b4c3-11e7-99a8-f85dc6da83f4.png)  || Looks good! Do you want to display this dialog everytime  even through everything went fine and all files were exported successfully? Or just when an error occurs? Im unsure but would tend to the latter. || From my point of view  all remaining issues should be resolved and this can be merged. || The result dialog is displayed way too small on my display.  ![screen shot 2017-10-25 at 18 24 34](https://user-images.githubusercontent.com/1254003/32010460-28889a8c-b9b2-11e7-837d-e1081c96f654.png)  When I try to resize it  a magical fourth column appears. ![screen shot 2017-10-25 at 18 29 19](https://user-images.githubusercontent.com/1254003/32010567-8248dd66-b9b2-11e7-988b-de409d1c0d3e.png)  || @lynyus  I changed the column size and there is also a tooltip for the file column || 
3154,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,Add preference to disable validation in the entry editor by default Adds a preference option for enabling/disabling validation in the entry editor: #3100 (but not the UI)  The reason is because the validation is simply broken at the moment #3145  The preference option is set to false by default and there is no UI to change it. So this turns off validation in the entry editor. We can add the UI to turn it on later  when the display bug in controlsfx has been fixed.  When this is merged  the related issues can be removed from the 4.0 milestone.  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Since the review comments have been addressed and for the sake of getting things done  I am merging this now. ||
3154,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,Add preference to disable validation in the entry editor by default Adds a preference option for enabling/disabling validation in the entry editor: #3100 (but not the UI)  The reason is because the validation is simply broken at the moment #3145  The preference option is set to false by default and there is no UI to change it. So this turns off validation in the entry editor. We can add the UI to turn it on later  when the display bug in controlsfx has been fixed.  When this is merged  the related issues can be removed from the 4.0 milestone.  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Since the review comments have been addressed and for the sake of getting things done  I am merging this now. ||
3158,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,Fix freezing on browse in protected terms dialog when adding from entrry editor  changed open file dialog to save file dialog Fix #3157  <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Tested locally and works. Good job! ||
3162,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,Update protected terms list in context menu when a new list is added. Fixes  #3161  The result of the dialog needs to be evaluated *after* the dialog is actually finished and the update of the context menu needs to be called.  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3163,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,Fix unparseable FileAnnotation dates This should be the last aspect for being able to close #3130. @HViethen85 should consider using another PDF Annotation tool (  However  the fault is of course on our side since we didnt validate the date format before.   - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef  
3169,1,0,0,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,Allow removal of online links from entry Dont call Paths.get on http link to prevent an exception  Fix #3165  <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3171,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Add undo functionality to the source tab Fixes #3170 The problem here  as far as I understand  was that the undo didnt happen on the FXApplication thread.  On top of that  I found the the source tab isnt integrated in the undo framework at all  so I have added this as well. However  it does not work problem-free. It seems that the FX CodeArea consumes undo events as well. So when you hit undo in the sourcetab  the CodeArea does the undo and then the UndoManager tries to do it again and fails. It has no consequence  though  apart from an exception  the undo happens anyway.  Since this is an improvement (add undo to source tab again)  I would like to merge this even if its not perfect. I have zero time to dig deeper into these FX problems  and I assume that no one else will do it. So  we can just merge the current state.   - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Tested it locally  works as expected! Good job  I would also vote to merge this in at the moment.   ||
3182,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Fix focus and keybinding in search Fix #3081  Arrow keys (left  right  up and down no work as expected and the up/down + Enter can be used to select an entry from the autocomplete menu)  <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? done ||
3195,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,0,0,0,Fix local db and shared db sync #2284 <!-- describe the changes you have made here: what  why  ... --> Fixed database sync issue. While syncing with shared db there was no listener for GroupUpdateEvent but there is MetaData listener. Two Scenarios : - 1. Either we can add GroupUpdateEvent listener. 2. or we can reused MetaData listener (as GroupUpdate is also part of Metadata).   I have used 2 scenario as per code reuse. I just added a post event to MetaData.  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Cool stuff! Thanks for your contribution! Will check and test it tomorrow || There are free cloud offerings to test - see http://help.jabref.org/en/SQLDatabase#try-it-out.  I am currently not using the shared database feature  but I think  this fixes https://github.com/JabRef/jabref/issues/2284 and presumably also https://github.com/JabRef/jabref/issues/2647.  @g-mos  @tgkolda   @Fab7c4 could you comment whether the JabRef build at http://builds.jabref.org/bg-shared-db-sync/ works for you? ||
3202,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,Followup to Issue #3167 Entry editor now adds missing curly braces on closing.  https://github.com/JabRef/jabref/issues/3167   - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`? Hey @snisnisniksonah  is this PR ready for review? If so  please notify us by adding the label and remove the [WIP] tag from the title ||
3203,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,When groups are removed  also remove them from entries Fixes #3190  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Ok  I managed to get this done and I think Ive addressed everything as the reviewers desired. It can be merged from my point of view. So please have a look and merge if you think it is ok. || One more try :) Now  only ExplicitGroups are removed from entries  keyword-based groups are kept. I hope this is the last missing puzzle piece. || Sorry for being pestic  but with this implementation keyword groups that are children of the deleted explicit group are still handled wrongly. I directly committed a fix. If you are fine with it  you have my ok for merge.  By the way  in order to convince you about the testability of Javafx code  you are invited to write a test covering the new behavior... 😈   || Thanks  challenge accepted :) I did not only add one test  but three.  I will merge when the build goes through. ||
3204,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Drop latex editor support Fixes #3204  This removes  LatexEditor support ("Push to LatexEditor") in JabRef.   As stated in #3199 the last update to LatexEditor was made in 2009 (see http://www.latexeditor.org/news.html ) and the software can be considered outdated.  I removed LatexEditor from the applications list in PushToApplications class. I deleted the PushToLatexEditor class since it is now unused. gradlew check was successful.  I am new here (first pull request) and also still fairly new to Java  so any c&c would be greatly appreciated. Especially let me know if either the practice of commits or this request is not up-to-standard :)  Cheers  Ben  edit:  removed LatexEditor from Preferences and corrected the URL link style in Changelog :) For your first PR you did all right 🍾.  If you want to further contribute to JabRef  I would suggest looking at the Wiki here https://github.com/JabRef/jabref/wiki where we have collected some JabRef specific things regarding the architecture and also some Java tips || Ill merge this now  thanks for the contribution!  🎉  Have a look at the other [issues](https://github.com/JabRef/jabref/issues)  those labeled with [beginner](https://github.com/JabRef/jabref/issues?qis%3Aissue+is%3Aopen+label%3Abeginner) are usually easier to fix if you do not have much prior experience with JabRef! ||
3209,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix #2775: Hyphens in last names are properly parsed <!-- describe the changes you have made here: what  why  ... --> I missed JabRef so much  that I even dared to touch the name parsing algorithm.   The only real changed consists in the few added lines https://github.com/JabRef/jabref/compare/fix3142?expand1#diff-b8249d741d31352dd2bcafcab07d9457R147  the rest is only code formatting/renaming of variables. The added tests come from [biblatex](https://github.com/plk/biber/blob/f418da9b1975847461fad884fedf910aed73c13b/t/names.t).  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3210,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Add file description to gui and fix sync bug Fixes #3208      <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? The problem is that the changes in the underlying `LinkedFile` are not propagated to the list `LinkedFilesEditorViewModel.files` so that the serialization https://github.com/JabRef/jabref/blob/2c5e7f2940481d66d50573e6fc40858f55b1cc47/src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditorViewModel.java#L74-L82 is never called. By the way  also changes to the file name or icon do not trigger an update and thus are not serialized.  As a solution  I propose to convert the data fields in `LinkedFile` to real properties  add `Observable[] getObservables()` to `LinkedFile` and return these observables here: https://github.com/JabRef/jabref/blob/2c5e7f2940481d66d50573e6fc40858f55b1cc47/src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java#L109-L111  Ps: Can you pls add a screenshot how the file editor now looks like with the description added (especially when the file link is relatively long). Thanks. || @tobiasdiez  I did as you suggested  but still does not work.  I think it has something to do with the LIstProperty  but I am not that deep inside javafx binding stuff to know why it is not synced || Yeah! Got it now! ![grafik](https://user-images.githubusercontent.com/320228/30381786-b3f80c6e-989d-11e7-95d8-c7b4ddcf1b84.png)  || I just discovered that there is additional space between the icon and the file name if the file does not have a description. Can you please fix this. Thanks! || Fixed in master. ||
3211,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Added logic to check whether linked file already exists #3172  Added a check in LinkedFileViewModel.rename() to see if a file which is being renamed already exists in the target location. If such a file is found then an error popup displays informing the user of the conflict. User will be prompted to choose whether to overwrite or cancel.  Also see #3188 for additional details. This work fine and includes all the requested changes from the previous pull request with one caveat.  If the file being overridden is related to a different entry and has different case  such as Entry 1  [abc] renamed to [def]  Entry 2  [DEF]  then the 2nd entry file association will target a now non-existing file.  Its possible to get around this by searching the database for any entries that have the old filename [DEF] and changing the association to the new filename  but I dont know if thats something desireable so I decided to push this as is for now. || Ok I changed to an Optional and removed !Files.exists(targetFilePath) as its redundant.  Im still getting the hang of git and egit so hopefully the merge didnt mess anything up. || @Andrew-Lev  I stick to git and git gui from command line. A lot easier than struggling with the eclipse git client  || Thanks  this looks really good now!  ||
3211,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Added logic to check whether linked file already exists #3172  Added a check in LinkedFileViewModel.rename() to see if a file which is being renamed already exists in the target location. If such a file is found then an error popup displays informing the user of the conflict. User will be prompted to choose whether to overwrite or cancel.  Also see #3188 for additional details. This work fine and includes all the requested changes from the previous pull request with one caveat.  If the file being overridden is related to a different entry and has different case  such as Entry 1  [abc] renamed to [def]  Entry 2  [DEF]  then the 2nd entry file association will target a now non-existing file.  Its possible to get around this by searching the database for any entries that have the old filename [DEF] and changing the association to the new filename  but I dont know if thats something desireable so I decided to push this as is for now. || Ok I changed to an Optional and removed !Files.exists(targetFilePath) as its redundant.  Im still getting the hang of git and egit so hopefully the merge didnt mess anything up. || @Andrew-Lev  I stick to git and git gui from command line. A lot easier than struggling with the eclipse git client  || Thanks  this looks really good now!  ||
3233,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Implemented issue #3229 Added an error dialog if the file is open in another process and cannot be renamed. [#3229]. This is my first contribution. Please give me feedback if you see any problems. Hi @derebaba   Thanks for your pull request! Your contribution is certainly very welcome and looks good overall.  I still have two points that should be addressed:  - You add two new localization entries here. The way in which you use the localization strings in the code is fine  but you need to add the keys to the language files  otherwise the build will fail. To do so  you need to add the keys manually to the English file `jabref/src/main/resources/l10n/JabRef_en.properties` and then execute `./gradlew localizationUpdate` on the command line  which will synchronize the keys in all files. Theres also a pretty good description of that when you run the tests and the localization test fails.  - Apart from that  you are using the older file api `java.io` for doing the rename check. We try to get rid of that and try to use the new file api `java.nio` instead. I would expect something like `Files.isWritable()` to do the trick. Can you please adjust your solution to use the NIO API?  || Hi @lenhard   Thanks for your feedback. Are the keys ordered in any way in properties file? Or should I add new keys at the end? || @derebaba  You should first check if there is already a key with the same/or similar text which you can reuse. Otherwise add it to the end and. || I synchronized the keys and removed the check which used the old api. However  `Files.isWritable()` returns true even if the file is open in another process. I searched a lot but I do not think the check is possible with the new api. Therefore  I moved the error dialog code to the catch block in FileUtil.java. ||
3241,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Update link to renamed file This patch fixes the issue described in #3230. The link to the renamed file is successfully updated now.  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Thank you for the contribution @derebaba! This look very good now and will be merged as soon as another maintainer gives his OK. We have quite some further open issues that wait for fixing  so feel free to have a look at those. Meanwhile you can also join us at slack if you have questions.  https://jabref.slack.com/ || I have merged this and moved the changelog entry to the right category. ||
3243,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,0,0,Fix for issue 3143: Import entry from clipboard in different formats see #3143 Use all importers to parse pasted entries. This allows the user to paste entries in different formats and not ony BibTex.  - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Hi @125m125  as I see you have some troubles with our checkstyle rules. I recommend you to use our IDE config files from https://github.com/JabRef/jabref/tree/master/config. Which IDE are you using? We recommend IntelliJ IDEA or Eclipse. You can see if the tests a pass by calling `gradle check`. If you only want to check for the code style rules  you can call `gradle checkstyleMain`.  If you have any questions  feel free to ask them at slack: https://jabref.slack.com || I am using Eclipse and just had to format a file. Because the saveAction is set to only reformat edited lines a missing newline in the imports wasnt corrected. Also thanks for pointing out gradle check. I somehow missed that command. || @125m125  If you use eclipse  just run` gradlew eclipse `to import the correct code formatting rules  || Thanks for the feedback. I integrated the requests with the last commit. I also changed the PdfXmpImporter to return false when checking the format instead of throwing an exception to prevent the need for special treatment and make it consistent with the PdfContentImporter. || Ok  then Ill add this to the 4.1 milestone. || I think the error message comes from https://github.com/JabRef/jabref/blob/ae6d01be46c96ef57e9871dfeb208ab0b7aab295/src/main/java/org/jabref/logic/importer/fileformat/MrDLibImporter.java#L53-L60 In my opinion  you can just delete these `Logger.log` statements (since its quite expected that a file in a wrong format is passed to `isRecognizedFormat` and this importer is not used outside of internal code anyways). ||
3248,1,0,0,1,0,1,1,1,1,0,1,0,1,0,1,1,0,0,1,Fix for issue 2811: bibtexkey generator does not use crossref information see #2811  The BibTex key generator now uses crossreferenced entries if required fields are empty.  - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [X] Manually tested changed features in running JabRef - [X] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) @125m125 That is really an impressive amount of tests  good job!  There are two merge conflicts. Could you resolve those? Once thats done this PR is ready to go into master. || And once again thanks! ||
3272,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Open statistics dialog from correct thread The dialog to ask for collecting anonymous statistics needs to be created in the Swing EDT. Do so using SwingUtilities.invokeLater().  This is a follow-up on 7ef2b3a and should finally fix #2955.  <!-- describe the changes you have made here: what  why  ... -->  No addition to CHANGELOG.md as 7ef2b3a already included a corresponding entry.  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3287,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Change OO paths to Libre Office in preferences Hopefully enough to fix #3263  <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3288,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Empty String instead of N/A in file annotations Resolves #3280  @JabRef/developers Any votes against this? @lynyus  
3303,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Open Unix filenames with spaces Resolves #3264 We need to check if we need to escape the other unix paths too. I have to try if this works  but whille you are onto the code  you could take this as a chance to resolve the "alert/warning" from LGTM regarding String conceatenation in cmd parameters: https://lgtm.com/projects/g/JabRef/jabref/alerts/?modetree&severityerror&rule7870097 https://lgtm.com/rules/7870097/ Could you try to resolve this as an array? I think that would also resolve the problem I guess  || @Siedlerchr What would you say? I guess we can merge! || Should I add something similar for the other executables in Linux too? || @stefan-kolb  Yes  make it consistent and then we can merge || @LinusDietz Does my solution work then? Can you test it. I changed it to your \ suggestion. || @Siedlerchr Does my solution work then? Can you test it. I changed it to your \ suggestion. || @Siedlerchr @LinusDietz Ping :-) Is this working? Can we merge? || I think it should  but I lack a linux system in question. (KDE or Gnome). @Siedlerchr  do you have Gnome or KDE? || I have tested the nautilus command  so Im merging now. Dont have a kde environment at the moment. || 
3308,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Add \textendash to the html conversion table Fixes #3307 by adding \textendash to the html conversion table  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3318,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix NPE in MainTable <!-- describe the changes you have made here: what  why  ... -->  As observed by @stefan-kolb in https://github.com/JabRef/jabref/issues/3275#issuecomment-336180146 the NPE resulted from the strange `matches(null)` code. This is fixed now. Not sure if this actually fixes the problem of #3275.  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3343,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Fix NPE when calling with bib file as cmd argument Fixes #3342  follow up issue from #3325  Use toAbsolutePath before calling of getParent  <!-- describe the changes you have made here: what  why  ... -->  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3368,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,Rework AutoSetFileLinks Fixes #3346   <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? @tobiasdiez  I now moved the common code to an own method in a class in the gui. It cant be moved to logic because it depends on ExternalFileType I tried adding a test for it  but even with extensive mocking  ExternalFileTypes are again the problem - Because its a singleton class...Mockito is not able to mock it. || Thanks for the further refactoring. The code looks better now!  Concerning the tests  you should be able to extract `ExternalFileTypes.getInstance()` to a method parameter and then simply pass a `mock(ExternalFileTypes.class)` in the test. || Thanks for the hints. I was no able to create a test and to faciliate the code ||
3378,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,Treat CrossRef titles as optional Fixes #3376  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3388,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Added checking integrity dialog This change is related to #3358. JabRef looked like it is hanging during long integrity checks. I added a dialog with a progress bar to show that it is working.  ![checkingintegrity](https://user-images.githubusercontent.com/4533745/32270624-aa9fe0d4-bf07-11e7-933a-57b392fd4750.png)  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Thanks for fast response. I fixed the problems. || Thanks for your contribution! I tested the changes locally and it works fine! Feel free to look at other issues as well!  ||
3403,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Replace LinkedFiles backslashes with forward slashes Follow up from #3364 (damn case sensitivy)  Fixes #3311   <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3403,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Replace LinkedFiles backslashes with forward slashes Follow up from #3364 (damn case sensitivy)  Fixes #3311   <!-- describe the changes you have made here: what  why  ... -->  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3404,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,0,0,Strip invalid prolog when loading CitationStyles Fixes #3389 by skipping invalid parts of the prolog of citation styles.  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3405,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix #3046: No longer allow duplicate fields in customized entry types <!-- describe the changes you have made here: what  why  ... --> Fixes #3046 (problems in the entry editor caused by duplicate fields in customized entry types) by no longer allowing duplicate fields  i.e. moved from List to Set.  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Seems like you have forgotten to replace a list with a set in the test.otherwiese lgtm  ||
3438,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix removal of special fields when syncing them via keywords Fixes a bug where JabRef special fields (such as printed  relevant  ...) were not cleared (e.g. removing the printed flag) when using synchronization of special fields via the bibtex keywords field.  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef  See #3432 for more details. Made the requested changes. || Thanks @tobiasdiez for pointing that out - fixed it. ||
3443,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Fix for issue #3381 Because the javafx Tooltip used in the [GlobalSearchBar](https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/search/GlobalSearchBar.java) cannot render HTML  @tobiasdiez recommended in #3381  to create a TextFlow object in the [SearchDescriber](https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/logic/search/rules/describer/SearchDescriber.java) classes for structuring the Text.   I made the changes to return a TextFlow and its working fine so far without changing the logic that is used to build the text.  I moved the search.rules.describer package like proposed from the logic package to the gui package. The existing tests were moved accordingly but still needs to be rewritten for the new TextFlow results.  There are some open questions i would like to ask:  1. With no Styling of the Tooltip  the readability was really bad (black text on grey background)  so I changed the styling to look like the other Tooltips in the bar. Hope it was okay to do this in the context of this issue? I created a new styleclass for this in the Main.css to not change any other styled elements. 2. the [SearchQuery](https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/logic/search/SearchQuery.java) class stores a description of the search. It is created with the SearchDescribers. But they are now inside the gui package and return a TextFlow. So there is a javafx dependency in the SearchQuery class which resides in the logic package at the moment. This doesnt sound right to me? Should the class be moved to the gui package too? 3. The [GroupDialog](https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/groups/GroupDialog.java) class uses a SearchQuery object to get a search description. This class is written with Swing and is not compatible to the now returned TextFlow. If I understand it right  the project is migrating to use javaFX. So I want to propose that I write a compatibility method in the GroupDialog class to create an HTML string from the given TextFlow to be compatible while the GroupDialog is still using Swing.  4. Sadly the localized strings used in the SearchDescribers included the HTML tag elements.. So in many cases it is not possible to use existing translations.. just because the tags are gone. Im not sure what to do about this. It could be possible to remove the tags manually from the translations. Not sure how long this would take..  Thats how the tooltip looks with the changes: ![screenshot-2017-11-18--13 15 28](https://user-images.githubusercontent.com/4948016/32980197-9c017e62-cc62-11e7-86a6-b5c0c0010ac8.png)  There seems to be something wrong with the logic of the tooltip text creation  the first few words repeat itself. And it already happened prior to my changes (see the image in #3381) But I didnt had time to look very closely into this. Should I open a new issue for this problem?  I hope I didnt forget anything. Im happy to hear your feedback!  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [x] If you changed the localization: Did you run `gradle localizationUpdate`? First of all thanks for your contribution! Moving all logic code to gui seems like the only option here  but in general should be avoided.  What about having a different approach: Keepiing all stuff string based in logic and in the GUI you have a helper method for converting the HTML tags (are only a few) from the localization into the RTF equivalent and by adding it to a textflow. I see no reason why this should not work.  If you look into the localization stuff  you see there are only a couple of `<BR> and <b>/<i>` tags  so nothing really advanced.  https://github.com/JabRef/jabref/blob/master/src/main/resources/l10n/JabRef_en.properties || After thinking a little longer about the package problem. I think the architecture is actually not right if the SearchDescribers generate HTML code and stay in the logic package. Because HTML code is only usable in a GUI use case and has not really anything to do with logic. So maybe they were not really in the right package to begin with if their only purpose is to create a structured text for the gui?  I think the SearchQuery objects should not hold a description stored. If it is removed  there is no further moving of classes necessary. At the places the description member of SearchQuery is used  it can be generated with the SearchDescribers class like in the SearchQuery class at the moment.  IMHO the package structure would be most honored that way  It would save the translations if the SearchDescriber creates an HTML string which can be converted later to a textflow like you said. But if the project really is moving towards javafx it seems wrong to me to keep html strings for structuring text because in javafx this is the task of a TextFlow. I would try to look into removing the HTML tags from the translations to not lose them and make a step forward using javafx || Also a big thanks from me! I do not have much time at the moment  so just a short remark concerning your point 2. I think it should be possible to completely remove the `description` field from the `SearchQuery` class. Just expose the `rule` (and `query`) via getters and then call the ̀ SearchDescriptor.getDescriptionFor(...)` every time you need the description in the gui. In this way  the description completely disappears from the logic package.  (Concerning 4: You can also embed JavaFX controls in swing  which is probably easier to do then creating a conversion to html) || Status update: * I removed the description from the SearchQuery class so it can remain in the logic package * I recreate an html string in the GroupDialog class for compatibility (was very easy this way) * modified the Tests for the SearchDescriber Implementations to properly check the TextFlow description * created Tests for the utility class I created  Now there is only one problem left: the broken localizations. I looked into the localization files and it could be possible to rescue a lot of translations by just manually deleting the html tags from the translations (when they are at the beginning or end). But in some cases  after translating the text  the tags are positioned in the middle of words. There it would be necessary to create a new translation because Im not able to just delete the tag from the beginning or end.  The only other alternative i see is using the old html strings for the localization and then break them up and convert them into javafx texts.. IMHO this would be really ugly and not a good readable solution  What do you think? Any other possible solutions? || When I see it right  you only need to replace the html tags for the Search Descriptions  right`? So the rest of the translations can and should stay as it is. Cant it be possible to strip/replace the tags on the fly? So if I encounter a <b> in my text  I have to switch to bold face at that position? || Sadly its not so simple with TextFlows. They consist of multiple Text objects and you can set the font on each Text. So if there is a String like this: XXX XXX XXXX <b>XX</b>  that translates into: XX XXX <b>XXX</b> XX XXXX Then there are three Text objects needed: Text("XX XXX")  Text("<b>XXX</b>")  Text("XX XXXX")  I will try to find an acceptable abstraction so the code will not be completely unreadable and the old translations can be used  || So  now the old strings are used and the localization is working again. I tried to make it as readable as possible.   What do you think now? Any more things to do? Anything else I should have considered? || So  I think I made all your requested changes  it now looks like this with the new styling: ![screenshot-2017-11-27--17 49 24](https://user-images.githubusercontent.com/4948016/33278295-625ea62c-d39b-11e7-9133-e5b80614af08.png)  || Thank you very much for the quick follow-ups and  of course  for your contribution in general. We are looking forward to see more PRs from you 😉  || Your Welcome! :grin: || 
3444,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,0,Implements #1664: group based on aux file <!-- describe the changes you have made here: what  why  ... -->  This PR implements #1664 by adding a group that contains all entries referenced in a given aux-file. So far the code is only a prototype  but it already works really well. What is missing is that changes in the aux file are automatically recognized and handled (this should be easy to accomplish). The user interface is very very basic and only contains a text field where the user can specify the path to the aux file (in light of the upcoming rewrite of the groups dialog in javafx #2643  I do not want to spent to much time at ui stuff).   I have two questions: - ~~The implementation so far is against our architecture. The new group (`TexGroup`) is in the model but uses the `AuxParser` from the logic. Any ideas how to resolve this issue? More and more  I do not like the strict rule that model is not allowed to access logic - how Im supposed to create "intelligent" objects in the model if they are not allowed to use advanced stuff from the logic package?~~  - The file path right now is stored as an absolute path. Is this ok? If not  what should be the "base" of a relative path? The bib file?  ---  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Regarding the File  Directory stuff: We have a method: getFirstExistingFileDir which gives you the file directoy (either main file idr  bib file or library setting || @Siedlerchr thanks! Do you think it makes sense to apply the same rules for the aux files as for pdf files when it comes to relative paths?  || The architecture is not set in stone  we can always decide to change it. Having said that  I still think that the current separation of model and logic makes sense and I think that the tests are useful. Through the tests  we always get a notification about changes that easily turn into circular dependencies and we have an opportunity to discuss them. If we do not have that  then the code will just silently turn into a big ball of mud with circular dependencies everywhere.  Looking at the code  I do not really see an architectural problem. Right now  you are computing the `Set<String> keysUsedInAux` on demand in a call to `contains()`. You can just do that when you create the group and pass the set into the constructor  dependency problem solved.  When you want to recognize changes in the aux file  you will need to monitor the file (which is functionality that is located in the higher layers anyway). Then  you could add a setter to the group that resets the keys when a file change happens.   || @lenhard I now used your approach: the TeX group class only relies on interfaces (defined in model)  while the concrete implementation of these interfaces resides in logic.   This PR is now ready-for-review. We should really consider using a dependency injection framework...most of the line changes are just propagating the file monitor from Globals to the TeX group. || In order to somewhat keep the momentum up and reduce the number of open PRs  Ill merge this now. ||
3444,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,0,Implements #1664: group based on aux file <!-- describe the changes you have made here: what  why  ... -->  This PR implements #1664 by adding a group that contains all entries referenced in a given aux-file. So far the code is only a prototype  but it already works really well. What is missing is that changes in the aux file are automatically recognized and handled (this should be easy to accomplish). The user interface is very very basic and only contains a text field where the user can specify the path to the aux file (in light of the upcoming rewrite of the groups dialog in javafx #2643  I do not want to spent to much time at ui stuff).   I have two questions: - ~~The implementation so far is against our architecture. The new group (`TexGroup`) is in the model but uses the `AuxParser` from the logic. Any ideas how to resolve this issue? More and more  I do not like the strict rule that model is not allowed to access logic - how Im supposed to create "intelligent" objects in the model if they are not allowed to use advanced stuff from the logic package?~~  - The file path right now is stored as an absolute path. Is this ok? If not  what should be the "base" of a relative path? The bib file?  ---  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Regarding the File  Directory stuff: We have a method: getFirstExistingFileDir which gives you the file directoy (either main file idr  bib file or library setting || @Siedlerchr thanks! Do you think it makes sense to apply the same rules for the aux files as for pdf files when it comes to relative paths?  || The architecture is not set in stone  we can always decide to change it. Having said that  I still think that the current separation of model and logic makes sense and I think that the tests are useful. Through the tests  we always get a notification about changes that easily turn into circular dependencies and we have an opportunity to discuss them. If we do not have that  then the code will just silently turn into a big ball of mud with circular dependencies everywhere.  Looking at the code  I do not really see an architectural problem. Right now  you are computing the `Set<String> keysUsedInAux` on demand in a call to `contains()`. You can just do that when you create the group and pass the set into the constructor  dependency problem solved.  When you want to recognize changes in the aux file  you will need to monitor the file (which is functionality that is located in the higher layers anyway). Then  you could add a setter to the group that resets the keys when a file change happens.   || @lenhard I now used your approach: the TeX group class only relies on interfaces (defined in model)  while the concrete implementation of these interfaces resides in logic.   This PR is now ready-for-review. We should really consider using a dependency injection framework...most of the line changes are just propagating the file monitor from Globals to the TeX group. || In order to somewhat keep the momentum up and reduce the number of open PRs  Ill merge this now. ||
3454,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Replace swingx with standard swing In order to be able to properly move to Java 9 (see #2594)  we need to get rid of all accesses of internal APIs. Unfortunately  we also use libraries that make such internal accesses and we need to find a solution for that.  One of these libraries is swingx. Originally by Sun  it is no longer maintained since quite a while we could not even upgrade to the newest version  because of bugs in the library. It is time to get rid of this dependency. This PR replaces the usage of swingx with regular Swing components. Only the new entries dialog and the side pane are affected. For the new entries dialog  the change is trivial (just using a regular layout manager). For the side pane  a few changes are needed  but I can make it roughly resemble the old layout.   Theres one bigger change  though  that I happen to like very much: The side panes are no longer exclusive  you can display them together. That means that I can have the web search and the groups panel open at the same time. Personally  I think thats pretty cool and I would like to keep it that way. You can of course still disable the side panes independent of each other. Heres a screenshot: ![sidepane](https://user-images.githubusercontent.com/1515701/33206932-2e6bd6fa-d10c-11e7-96b2-58f28f0f3bee.png)  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Yeah! Cool  pretty good work!  || > Theres one bigger change  though  that I happen to like very much: The side panes are no longer exclusive  you can display them together. That means that I can have the web search and the groups panel open at the same time.  This was already possible before 😉 || Huh? Good to know  then at least no one can blame it on me when something related to that breaks  -) ||
3486,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix threading issues Fixes #3485 and #3435   <!-- describe the changes you have made here: what  why  ... -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? This should be fixed now  I reverted to my initial idea. I heavily clicked around and switched tabs in the entry editor and randomly selected things in the main table and in the integrity check table. No longer exception || I have tested it locally and can confirm that it is working now. ||
3486,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix threading issues Fixes #3485 and #3435   <!-- describe the changes you have made here: what  why  ... -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? This should be fixed now  I reverted to my initial idea. I heavily clicked around and switched tabs in the entry editor and randomly selected things in the main table and in the integrity check table. No longer exception || I have tested it locally and can confirm that it is working now. ||
3497,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Fix NPE in search bar <!-- describe the changes you have made here: what  why  ... --> In #3471 a NPE was mentioned. Im not sure which object was null (it should not be the scene  since this is just set and the css file should also be always found). Moreover  I could not reproduce the exception  so this fix is a shot in the blue.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Seems like this could be a LInux thing and related to our customjfx panel  see also the log in #3500  || I merge it now since it is still a slight improvement over the existing code. Ill have a look at the azure reports if a similar exception gets reported in the next days. ||
3503,1,0,0,1,0,1,1,0,1,0,1,1,1,1,1,1,0,1,0,Update internal state of DatabaseChangeMonitor when external changes … …are resolved  Attempts to fix #3498  It seems that the internal state of DatabaseChangeMonitor was not updated correctly when external changes were marked as resolved  causing the monitor to misbehave when you tried to save afterwards. I am not sure how this bug came into being and what caused the update to get lost. Adding an additional update step seems to resolve the problem  but I would really appreciate some more testing of this branch by other people.  ----  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? It seems were having a bit of a shortage of reviewers at the moment  )  Since this is such a small one-line change that actually fixes a bug  Ill merge this now even if theres only one review. ||
3506,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix #3359: Automatically remove colon and apostrophe from key pattern <!-- describe the changes you have made here: what  why  ... -->  Fixes #3359. Colons and apostrophes are now removed from the generated key pattern. I also refactored the key generator  mainly converting the static methods to instance methods.  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? @lenhard I manually tested most use cases  where the code changes (except OpenOffice since I do not use it). What are our current plans for the 4.1 release? When do we want to release? If there is still some time before the release I would prefer if this PR is merged before the release.  || You may want to add the percent sign and the ampersand (&)  which is problematic as it creates a problem with biber/biblatex  || Should this still go into 4.1? || @tobiasdiez When you fix the checkstyle issues and conflicts then this PR can be merged. ||
3507,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Add option to remove the link when file is no longer found Fixes  #3493  When pressing the DEL key and the file can not be found  this dialog pops up and you can remove the  file from the entry   <!-- describe the changes you have made here: what  why  ... -->    ``` Opening: X:\Users\CS\Documents\_JABREFTEMP\bibliography.bib Opening: X:\Users\CS\Documents\_JABREFTEMP\newBiblatexTEst.bib Could not find file O’Keefe2009 - Feature selection and weighting methods in sentiment analysis.pdf. Could not find file Saggion2007 - Ontology-based Information Extraction for Business Intelligence.pdf.  ``` ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? +1 or not showing the dialog at all. We have the undo possibility and I would not think that users accidently press <kbd>Del</kbd>. Would be nice if I could quickly delete attachments if JabRef goes crazy ^^ ||
3508,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Implement #3491: Clicking the PDF icon in the linked files editor opens the file Resolves #3491. A click on the PDF icon on a linked file in the entry editor opens the file. This is consistent with the behavior in the main table and thus I didnt added a new button and / or changed the double-click behavior as it was suggested in the issue.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Thats a nice solution. Btw  do you have any idea why the second file in the listvie does not indicate the blue selection ? Although it is selected || @lenhard The beauty of JavaFX!  @Siedlerchr No idea. Similarly  there are these annoying padding problems of the first row. The "beauty" of JavaFX! 😄  || 
3509,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixes #3472: Files starting with BibTeX key of a similar entry are no longer found by mistake <!-- describe the changes you have made here: what  why  ... --> Fixes #3472. The auto-link algorithm just checked if the file starts with the BibTeX key. This leads to a lot of false positives since "Einstein1902a.pdf" is found for the entry "Einstein1902" although this pdf probably belongs to a second paper by Einstein that was published in the same year.  This is fixed in this PR. With the proposed implementation also the pdf file "Einstein1902aboutSomething.pdf" is no longer found (since there is really no possibility in telling the difference to "Einstein1902a - a second paper.pdf"). Thus the user is advised to add some non-letter character after the key.  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? How does this relate with the preferences?  ![grafik](https://user-images.githubusercontent.com/1366654/33819590-8f48cb6c-de4b-11e7-80a2-993c8a1396c3.png)  Documentation at http://help.jabref.org/en/FileLinks#auto-linking-files  Are these settings still respected? || @koppor Yes  these settings are still valid. The fix applies only if you select the first option "Auto link files that start with the BibTeX key".  || @koppor Why did you removed the "ready-for-review" flag and marked this PR as WIP? I was and I am still waiting for a second review  otherwise this PR is ready from my point of view. The minor issues pointed-out by @Siedlerchr are now also fixed. || Think  because I watched this PR  liked it and just wanted others to focus on other PRs. || 
3512,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Fixes #3505: Another try to fix the NPE in the search bar Fiexes #3505  <!-- describe the changes you have made here: what  why  ... -->  I think  I managed to locate the problem of the NPE and the missing search bar. Apparently  in some conditions the syntax `../` to access the parent in a path does not work for resources. Thus the css file is not found  resulting in a NPE.  ----  - [ ] Change in CHANGELOG.md described (bug introduced in 4.1dev) - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Search bar appears here. I think  @j0hannes  should run the build at his system. Currently  one has to checkout the code and execute `./gradlew run` as we currently have issues with our code signing certificate. || @koppor I just rebuilt the package from git and the search bar is still not there. || @j0hannes did you checked-out the branch `fix3505` or still used the master? Since this PR is not yet merged  the fix is not included in the master branch. If you used the correct branch to build  is the same error message still there? || Anyway  I merge this now since the code still works under normal conditions and might help in others. So a new checkout of the master branch should work now. || @tobiasdiez Now its back. The package will certainly only use the master branch  I though it was already merged there. || @j0hannes thanks for the feedback and your help debugging this issue! Much appreciated.  ||
3529,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Add null checks in GroupChangeViewModel This avoids the NPEs in #3526. However  I cant get the groups side pane to repaint and depict the modified groups tree. Ive tried different ways via calling the `GroupsSidePane` or setting selected groups in the `StateManager`  but no success.  @tobiasdiez How do I force the `GroupSidePane` to display a changed group tree?   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Sadly updates to the group tree in general are ignored  see e.g. https://github.com/JabRef/jabref/issues/3189. Normally  one would like that all changes are automatically propagated using the event bus / javafx binding  but for some reason this does not work (sorry  I forgot the details). || Ok  thanks for clarifying. I am not sure what to do with this PR then. Under the hood it works (avoids the exceptions)  but all of this is not visible to the user. Right now it requires a restart of the application. || Is the view updated when you switch between databases? This always worked for me so far. I would say merge this PR here (since it fixes the NPE) and comment in the above issue that there are more update problems. Ill have a look at this problem  but not right now as this week is kind of a hell for me. || Yes  it is updated when switching between databases  e.g. all groups are removed and the all entries group is displayed when I remove the group statement. A rename of the group in the file does not carry over  so there are probably deeper problems.  I still have the problem that it tends to display the groups tree of the wrong database  but at least the change is reflected somehow. || Can this be merge now? || Sure  go ahead. ||
3533,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,0,0,Fix preview performance This unifies the access to the CSL engine. The adapter class will hold one instance of it and only recreate it when the style changes. This improves the performance of from the second call to the Preview drastically and should provide an acceptable speed to fix #2533.  In addition  I extended the search for citation styles when JabRef is run during development.  I will add changelog and friends  but for the moment my biggest problem is that the unit tests are broken on master (at least for me).  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? @lenhard @tobiasdiez Thanks for the fast review. Here are to comments to Lenhards first message:  > In that case  the configured citation style can be used  but I cannot select a new one in the preferences dialog. There  the list is empty.  Yes. I did not consider this case. I assume the fat-jar contains the styles still packed as jar. Im sure I can fix this.  > Then  when trying to preview items I get exceptions. But these exceptions happen reliably for certain bib items  so it seems just like a bad combination of the randomly selected style I used for testing (ACM SIG 3+ authors) and the bib items.  Took a while  but I could pin it down. Im not sure I caught the exception before but now you will see "Cannot create preview" and the exception appears in the log as usual. The error comes from your BibEntry. When you look at your BiBTeX code  you see  ``` month      {December 17-19}  ```  If this is indeed valid BibTeX  then our CSL converter does not handle it correctly. You can find [the Json format](https://hastebin.com/udibubehiw.json) of what `org.jabref.logic.citationstyle.CSLAdapter#bibEntryToCSLItemData` makes from your code. Its so short that you spot the error easily. CSL is choking on the invalid date-parts. As soon as you remove the days  the item is rendered correctly.  This error should have happened before as I did not touch that part. Im not sure how this can reliably be fixed as we only extract the latex-free fields and turn them into strings. That should probably be a different PR. || @halirutan Thanks for the investigation and I hope you did not waste too much time on that. That is not correct bibtex (well bibtex is very open and relaxed and of course you can write it in this way  but this is not how the content of the month field is expected)  I just opened an old bib file and clicked around  not caring too much about the actual data. You can ignore that error in your PR here.  I think a viable strategy would actually be to absorb the exception completely. Exceptions in JabRefs log should indicate problems in JabRef. This is not a problem of JabRef  but of user data and the citation styles library. Therefore  I think it would be sufficient to create a log entry stating that the attempt to parse an entry results in an error from the citation styles library. But this can be part of a different PR. || Things that need to work:  1. Fast scrolling through the entry liest with preview open 2. Edit -> Copy Preview for single and many items 3. On a selection right click and Copy citation  @lenhard I cannot reproduce that the styles are not found with the fat jar. Can you try to delete and rebuild it and show exactly what you try? I see all styles and I can switch them as usual. The fat jar has the same structure as the normal jar with all styles included as files. || I am doing the following:  - Execute `gradlew build`  - cd to `build/libs`  - execute `java -jar JabRef-4.1-dev.jar`  - For some reason there is nothing available to select in the preview panel (see picture)  although the CSL files are contained in the fat jar (not as a jar  but as the single .csl files right in the root of the jar). The log says  ``` Opening: C:\Users\joerg\Desktop\jl-main\diss\tex\references.bib something went wrong while adding the discovered CitationStyles to the list  ``` ![preview](https://user-images.githubusercontent.com/1515701/34074258-bcdc0de6-e2ab-11e7-8c2d-d9fba3636aea.png)  Furthermore  I am getting several warnings on the console:  ``` Dec 16  2017 10:02:18 PM javafx.scene.CssStyleHelper calculateValue WARNING: Could not resolve -fx-info while resolving lookups for -fx-text-fill from rule *.log in stylesheet jar:file:/C:/workspaces/jabref/build/libs/JabRef-4.1-dev-fat.jar!/org/jabref/gui/errorconsole/ErrorConsole.css ```  After these warnings I updated my current installation from Java 1.8.0_144 to Java 1.8.0_152 and the warnings were gone  but the rest stays the same (no citation styles in the list). My configuration is now  ``` JabRef 4.1-dev Windows 10 10.0 amd64  Java 1.8.0_152 ``` || I tested it and I found there is a problem with how you get the path. Will commit a fix. || @halirutan  @lenhard  I fixed the path handling and improved the code for searching inside the jar file. For me it works now when I directly run JabRef Main in Eclipse 🙌 😃  || @Siedlerchr Can you point out what exactly went wrong with the path so that I do not make the mistake in the future? Otherwise nice clean up! I removed your `println`  I guess you simply forgot this and I renamed `jarfs` to `jarFs` to satisfy my spell check (I like to have absolutely no warning if possible :smiley: ).  @lenhard Can you test it again. Your approach is basically what I did too and here it worked. || 
3539,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix options databinding by adding elements if they are not in the initial map Fixes #3538   I dunno if this is the best idea  but it works...   <!-- describe the changes you have made here: what  why  ... -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Can you please explain the reason for the bug? In general  the string converter should not modify the source or target map. || The reason for the bug is that the fromString method does a lookup in the map with the current txt in the field. If you enter a non predefined String into it  the map lookup returns null because not found.   ||
3541,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,[WIP] Add "Convert to BibTeX format" cleanup <!-- describe the changes you have made here: what  why  ... -->  As [wished in the forum](http://discourse.jabref.org/t/convert-back-from-biblatex-to-bib/) and required for #1018.  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? What about adding some round-trip integration tests where a bibtex entry is converted into biblatex and back asserting that nothing has changed? This would give us a bit more confidence  that all of this is working fine. You could start with the example from the forums http://discourse.jabref.org/t/convert-back-from-biblatex-to-bib/955/6  || @LinusDietz good suggestion. I now added round-trip tests in both directions. || @lenhard Thanks for the review and the suggestion to improve the UI. I now made the checkboxes modal.   Ill merge this PR now since it has 1.5 positive reviews and was on "ready-for-review" for almost a month.  || 
3551,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,Make path relative when adding automatically found file Fixes #3476  <!-- describe the changes you have made here: what  why  ... -->   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3553,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix group search performance This includes currently 2 changes: Fixes #2852  1. The input field for the group search is delayed now. It waits until the user has finished typing and starts the search afterward. This increases the usability and prevents lags during typing. 2. The RecursiveTreeElement caches the current predicate so that branches of the group tree are not tested over and over again. This is an ugly solution so far but we need to test if this or something similar (but beautiful) boosts the performance considerably.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? @tobiasdiez   > The creation of nodes is expensive since the hit counter triggers a run over all entries. @halirutan based on your experience with the performance investigation  is my observation correct?  I guess  this is what I saw this morning in the profiler. I didnt investigate further  but I was surprised that I saw constructor-hits. I thought the group-tree is static until it is changed by adding/deleting nodes but instead it seems the tree is rebuilt. I havent worked through the whole implementation because there is a lot of stuff in it I havent worked with before JabRef. This is another reason why I had the hope someone could join on this branch because I do not feel confident to implement a good fix for this fundamental flaw in the design. || Ok  I think I found a solution which reuses the children  does not need to store the predicate but nonetheless has a good performance. || @lenhard Have you seen the comment in the issue this PR should solve?  > @tobiasdiez Unfortunately the new version is not working as expected. While it still filters the groups  when a filtered group is selected  the associated entries are not updated accordingly in the main table view. This was not the case with the previous version.. || @halirutan Sorry  I did not look at the issue again and just tested for performance  not correctness. Of course that bug should be fixed before merging. || Bug fixed -> merge! 😃  || Great! ||
3578,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Refactor export code to fix #3576 <!-- describe the changes you have made here: what  why  ... --> Fixes  #3576. I refactored the export package so that it now has a similar structure of the importer and a similar code can now be used for imports and exports. Since the issue #3576 didnt occurred for imports  this refactoring automatically fixes the problem for the export.  Notable changes: - `ExportFormat` is renamed to `Exporter` - `ExportFormats` is renamed to `ExportFactory` and no longer static. - `FileExtensions` is renamed to `FileType`  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? Some mior things  The only thing we should discuss is the renaming of the FileExtensions to FileType. For me FileType would include actual information about the type  or a specific class.  but in this case its solely the extension || @Siedlerchr Thanks for the feedback. I now changed the code accordingly.  Why do not you like the name `FileType`? The class currently contains a description and a list of extensions (e.g.  "BibTeX library" with ".bib"). This is a bit for information than just extensions (which would be just a `Set<FileExtension>`). But I have no strong opinion about the name (the rename was triggered by the code `importer.getExtensions().getExtensions()`). || 
3591,1,0,0,1,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,Maintable leaves the Swing year and comes back in a new JavaFX dress <!-- describe the changes you have made here: what  why  ... -->  2017: ![old](https://user-images.githubusercontent.com/5037600/34457968-d66229c8-edc1-11e7-9a2b-cae5ec8b1bfd.png)   2018: ![image](https://user-images.githubusercontent.com/5037600/34472026-e1498894-ef57-11e7-961c-c64a5030227f.png)   There are still many many things missing for a fully working version but I thought I give you an early preview. Feedback welcome. Happy new year everybody!  Fixes #3356  fixes #3532 and fixes #3112.  Known bugs: (ticked  resolved) - [ ] Changes to entries do not mark database as changed. - [x] Changes to entries are not reflected in main table. - [x] Cleanup does not work. - [x] Ctrl + A in entry editor selects all entries in table. [not reproducable] - [x] Escape does not close entry editor. - [x] Column width is not correct if the option "Resize to fit window width" is activated - [ ] Select multiple entries by holding mouse button: [code to fix](https://community.oracle.com/thread/2621389)  Status of features: - [x] Sorting (Shift + click for multi-column sort) - [x] Filtering by search and groups  - [ ] Context menus for the icons - [ ] Right-click menu - [ ] Setting special fields like reading status / priority / ... through the main table - [ ] Marked entries are not highlighted - [ ] Drag & drop to and from the table - [ ] Float mode does not work - [ ] Color cells in table depending on whether the field is optional/required   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?                    Cool! Could you point me to new implementation? In your large commit I see only a lot of Icon changes || Oh  sorry - I forgot to commit all files. The main changes are in the `gui.maintable` package. || While you are working on this  you might also take a look at #3356   We could use the Latex2Html converter and then convert that HTML formatting to the TextFlow which was done in the search component tooltips || Yes  this issue is already fixed merely by switching to JavaFX - the unicode is correctly displayed (see above the second entry in the table  the first screenshot shows the boxes while the correct string is shown in the second screenshot). || One more step in the right direction. This PR has the potential to fix a lot of display bugs and we should be able to get rid of the annoying and unmaintained glazed lists library.  Nevertheless  I need to add a word of caution: We cannot allow the same situation as for the entry editor again. Weve spent almost half a year in un-releaseable limbo because of that. The replacement for the main table needs to be absolutely bullet proof. However  the amount of  lines of code in this PR is too much for a meaningful review  so we need A LOT of manual testing by basically all developers.  Ive played around a bit and I like the new layout of the maintable. Whats a little strange is that every second row is highlighted differently. This should change for the final version.   EDIT: Things that should be fixed with this PR  ) https://github.com/JabRef/jabref/issues?qis%3Aissue+is%3Aopen+label%3Amaintable || @Siedlerchr Thanks for the feedback. Ill improve the code accordingly.  @lenhard I completely agree! We should find a way to have a realeasable version while still work on the migration to JavaFX. The main problem is that the code is tightly coupled to the maintable (i.e. there is no abstraction layer before the BasePanel/MainTable that used in the other Swing dialogs). This has the potential upset that every single dialog may now trigger a bug (for example because it runs some code not on the JavaFX thread). So  even through I will try to thoroughly test the new code before marking it as "ready-for-review"  there might still be countless bugs left which we need to find (and fix) in teamwork. Moreover  for the same reason  I think we also need to release a beta again.  That being said  the immediate question is: how much functionality should I try to migrate in this PR and what should follow as new PRs? As you said  the size of the changes makes the PR already unreviewable. But I would really like to have your feedback about some design questions. Especially since our aim should be not just to improve the gui but also decouple the code and make it more reusable.  Currently the new maintable is in a state where the very basic functionality works and the code is decoupled enough to actually write unit gui tests for it. There are still some bugs/feature that definitely need to be fixed before a users touches it (e.g. restore column width  context menus for the icons  a few display bugs). Then there are a few features that are not essential and rather isolated (e.g. "marking of entries"). These are probably good candidates for follow-up PRs. And finally there are features that I do not really see any benefit in reimplementing (e.g. coloring of table cells when the field is optional/required) or that are not really possible to implement with JavaFX (e.g. ["float search"](https://bugs.openjdk.java.net/browse/JDK-8091326)). Finally  the possible bug fixes @lenhard mentions should also follow as new PRs.  Any thoughts on this? (Sorry for the long text). || I think we could have a separate main Table Beta Test-Release in an additional branch highly experimental and let some users test this functionality who are interested. Especially we would need some Mac/Linux guys   || We can create a `javafx` branch  where we can integrate not ready features  but completed work packages (such as a basic entry table in JavaFX)  The master branch must be release-ready at all times. Release-ready means: all features of the old versions should be working (or the dev team decided to remove/disable a feature  such as the auto completion). || So  I used this version now in production during the past few days and fixed a lot of bugs. Although not all features are yet migrated (see list above)  I mark this PR now as ready for review. All further changes are coming as extra PRs onto this branch.   I would suggest that you try this version out and if nothing serious pops up  I would create a post in the forum advertising this PR and ask users about their opinion (something like a very early access program instead of several beta releases). What do you think? || I would be really cool if you could provide a table that lists all features related to the maintable that were present in the Swing version  e.g. sorting options  right click options  entry drop  column sorting  and could indicate if these features are working in the new version. Then we would have an overview of what features actually exist in the main table and we could have a meaningful discussion about which features we want to drop.  Personally  I do not really have an overview of all the things that the maintable can do. Could you perhaps provide this overview? I guess also @koppor know a thousand maintable features that I do not know. || I changed the base branch to "maintable-beta". I would propose to proceed as follows:  1. @JabRef/developers review 2. Work-in review comments 3. Merge into `maintable-beta`. 4. Ask users to feedback to `maintable-beta` 5. Add new PRs on `maintable-beta`  Why?   1. I think  PRs should be short and be closed fast. Not left open as the ones of @koppor. So  we can move on quickly. And we can also link to comments of this PR if necessary. 2. The discussions here are mixed on the implementation details and overall issues. I think  we should focus on implementation details 😇   In case we need a overview-pr  we can create a PR from `maintable-beta` to `master` and describe the overall status there. || I am *very* used to the floating search. See screenshots at https://github.com/JabRef/jabref/issues/3618. || @lenhard I updated the first post to also include the features that are already migrated (it is only the very basic functionality). Right now we do not need to decide what features should be dropped since there is still a lot fundamental functionality to migrate (but we should speak about it in the next devcall). I just do not want this PR to explode even more and get feedback about some of the other refactorings / changes. Thus the early ready-for-review.   @koppor Sounds like a good plan.  || I fixed the Close Entry Editor with Escape bug || @lenhard @Siedlerchr Is this architecturally OK? Then  I would propose to merge it into `maintable-beta` to reduce the size of PRs.  Note: The "real" PR of getting this into JabRef is https://github.com/JabRef/jabref/pull/3621 - there  code updates are only made as PRs to that branch. || 
3591,1,0,0,1,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,Maintable leaves the Swing year and comes back in a new JavaFX dress <!-- describe the changes you have made here: what  why  ... -->  2017: ![old](https://user-images.githubusercontent.com/5037600/34457968-d66229c8-edc1-11e7-9a2b-cae5ec8b1bfd.png)   2018: ![image](https://user-images.githubusercontent.com/5037600/34472026-e1498894-ef57-11e7-961c-c64a5030227f.png)   There are still many many things missing for a fully working version but I thought I give you an early preview. Feedback welcome. Happy new year everybody!  Fixes #3356  fixes #3532 and fixes #3112.  Known bugs: (ticked  resolved) - [ ] Changes to entries do not mark database as changed. - [x] Changes to entries are not reflected in main table. - [x] Cleanup does not work. - [x] Ctrl + A in entry editor selects all entries in table. [not reproducable] - [x] Escape does not close entry editor. - [x] Column width is not correct if the option "Resize to fit window width" is activated - [ ] Select multiple entries by holding mouse button: [code to fix](https://community.oracle.com/thread/2621389)  Status of features: - [x] Sorting (Shift + click for multi-column sort) - [x] Filtering by search and groups  - [ ] Context menus for the icons - [ ] Right-click menu - [ ] Setting special fields like reading status / priority / ... through the main table - [ ] Marked entries are not highlighted - [ ] Drag & drop to and from the table - [ ] Float mode does not work - [ ] Color cells in table depending on whether the field is optional/required   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?                    Cool! Could you point me to new implementation? In your large commit I see only a lot of Icon changes || Oh  sorry - I forgot to commit all files. The main changes are in the `gui.maintable` package. || While you are working on this  you might also take a look at #3356   We could use the Latex2Html converter and then convert that HTML formatting to the TextFlow which was done in the search component tooltips || Yes  this issue is already fixed merely by switching to JavaFX - the unicode is correctly displayed (see above the second entry in the table  the first screenshot shows the boxes while the correct string is shown in the second screenshot). || One more step in the right direction. This PR has the potential to fix a lot of display bugs and we should be able to get rid of the annoying and unmaintained glazed lists library.  Nevertheless  I need to add a word of caution: We cannot allow the same situation as for the entry editor again. Weve spent almost half a year in un-releaseable limbo because of that. The replacement for the main table needs to be absolutely bullet proof. However  the amount of  lines of code in this PR is too much for a meaningful review  so we need A LOT of manual testing by basically all developers.  Ive played around a bit and I like the new layout of the maintable. Whats a little strange is that every second row is highlighted differently. This should change for the final version.   EDIT: Things that should be fixed with this PR  ) https://github.com/JabRef/jabref/issues?qis%3Aissue+is%3Aopen+label%3Amaintable || @Siedlerchr Thanks for the feedback. Ill improve the code accordingly.  @lenhard I completely agree! We should find a way to have a realeasable version while still work on the migration to JavaFX. The main problem is that the code is tightly coupled to the maintable (i.e. there is no abstraction layer before the BasePanel/MainTable that used in the other Swing dialogs). This has the potential upset that every single dialog may now trigger a bug (for example because it runs some code not on the JavaFX thread). So  even through I will try to thoroughly test the new code before marking it as "ready-for-review"  there might still be countless bugs left which we need to find (and fix) in teamwork. Moreover  for the same reason  I think we also need to release a beta again.  That being said  the immediate question is: how much functionality should I try to migrate in this PR and what should follow as new PRs? As you said  the size of the changes makes the PR already unreviewable. But I would really like to have your feedback about some design questions. Especially since our aim should be not just to improve the gui but also decouple the code and make it more reusable.  Currently the new maintable is in a state where the very basic functionality works and the code is decoupled enough to actually write unit gui tests for it. There are still some bugs/feature that definitely need to be fixed before a users touches it (e.g. restore column width  context menus for the icons  a few display bugs). Then there are a few features that are not essential and rather isolated (e.g. "marking of entries"). These are probably good candidates for follow-up PRs. And finally there are features that I do not really see any benefit in reimplementing (e.g. coloring of table cells when the field is optional/required) or that are not really possible to implement with JavaFX (e.g. ["float search"](https://bugs.openjdk.java.net/browse/JDK-8091326)). Finally  the possible bug fixes @lenhard mentions should also follow as new PRs.  Any thoughts on this? (Sorry for the long text). || I think we could have a separate main Table Beta Test-Release in an additional branch highly experimental and let some users test this functionality who are interested. Especially we would need some Mac/Linux guys   || We can create a `javafx` branch  where we can integrate not ready features  but completed work packages (such as a basic entry table in JavaFX)  The master branch must be release-ready at all times. Release-ready means: all features of the old versions should be working (or the dev team decided to remove/disable a feature  such as the auto completion). || So  I used this version now in production during the past few days and fixed a lot of bugs. Although not all features are yet migrated (see list above)  I mark this PR now as ready for review. All further changes are coming as extra PRs onto this branch.   I would suggest that you try this version out and if nothing serious pops up  I would create a post in the forum advertising this PR and ask users about their opinion (something like a very early access program instead of several beta releases). What do you think? || I would be really cool if you could provide a table that lists all features related to the maintable that were present in the Swing version  e.g. sorting options  right click options  entry drop  column sorting  and could indicate if these features are working in the new version. Then we would have an overview of what features actually exist in the main table and we could have a meaningful discussion about which features we want to drop.  Personally  I do not really have an overview of all the things that the maintable can do. Could you perhaps provide this overview? I guess also @koppor know a thousand maintable features that I do not know. || I changed the base branch to "maintable-beta". I would propose to proceed as follows:  1. @JabRef/developers review 2. Work-in review comments 3. Merge into `maintable-beta`. 4. Ask users to feedback to `maintable-beta` 5. Add new PRs on `maintable-beta`  Why?   1. I think  PRs should be short and be closed fast. Not left open as the ones of @koppor. So  we can move on quickly. And we can also link to comments of this PR if necessary. 2. The discussions here are mixed on the implementation details and overall issues. I think  we should focus on implementation details 😇   In case we need a overview-pr  we can create a PR from `maintable-beta` to `master` and describe the overall status there. || I am *very* used to the floating search. See screenshots at https://github.com/JabRef/jabref/issues/3618. || @lenhard I updated the first post to also include the features that are already migrated (it is only the very basic functionality). Right now we do not need to decide what features should be dropped since there is still a lot fundamental functionality to migrate (but we should speak about it in the next devcall). I just do not want this PR to explode even more and get feedback about some of the other refactorings / changes. Thus the early ready-for-review.   @koppor Sounds like a good plan.  || I fixed the Close Entry Editor with Escape bug || @lenhard @Siedlerchr Is this architecturally OK? Then  I would propose to merge it into `maintable-beta` to reduce the size of PRs.  Note: The "real" PR of getting this into JabRef is https://github.com/JabRef/jabref/pull/3621 - there  code updates are only made as PRs to that branch. || 
3591,1,0,0,1,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,Maintable leaves the Swing year and comes back in a new JavaFX dress <!-- describe the changes you have made here: what  why  ... -->  2017: ![old](https://user-images.githubusercontent.com/5037600/34457968-d66229c8-edc1-11e7-9a2b-cae5ec8b1bfd.png)   2018: ![image](https://user-images.githubusercontent.com/5037600/34472026-e1498894-ef57-11e7-961c-c64a5030227f.png)   There are still many many things missing for a fully working version but I thought I give you an early preview. Feedback welcome. Happy new year everybody!  Fixes #3356  fixes #3532 and fixes #3112.  Known bugs: (ticked  resolved) - [ ] Changes to entries do not mark database as changed. - [x] Changes to entries are not reflected in main table. - [x] Cleanup does not work. - [x] Ctrl + A in entry editor selects all entries in table. [not reproducable] - [x] Escape does not close entry editor. - [x] Column width is not correct if the option "Resize to fit window width" is activated - [ ] Select multiple entries by holding mouse button: [code to fix](https://community.oracle.com/thread/2621389)  Status of features: - [x] Sorting (Shift + click for multi-column sort) - [x] Filtering by search and groups  - [ ] Context menus for the icons - [ ] Right-click menu - [ ] Setting special fields like reading status / priority / ... through the main table - [ ] Marked entries are not highlighted - [ ] Drag & drop to and from the table - [ ] Float mode does not work - [ ] Color cells in table depending on whether the field is optional/required   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?                    Cool! Could you point me to new implementation? In your large commit I see only a lot of Icon changes || Oh  sorry - I forgot to commit all files. The main changes are in the `gui.maintable` package. || While you are working on this  you might also take a look at #3356   We could use the Latex2Html converter and then convert that HTML formatting to the TextFlow which was done in the search component tooltips || Yes  this issue is already fixed merely by switching to JavaFX - the unicode is correctly displayed (see above the second entry in the table  the first screenshot shows the boxes while the correct string is shown in the second screenshot). || One more step in the right direction. This PR has the potential to fix a lot of display bugs and we should be able to get rid of the annoying and unmaintained glazed lists library.  Nevertheless  I need to add a word of caution: We cannot allow the same situation as for the entry editor again. Weve spent almost half a year in un-releaseable limbo because of that. The replacement for the main table needs to be absolutely bullet proof. However  the amount of  lines of code in this PR is too much for a meaningful review  so we need A LOT of manual testing by basically all developers.  Ive played around a bit and I like the new layout of the maintable. Whats a little strange is that every second row is highlighted differently. This should change for the final version.   EDIT: Things that should be fixed with this PR  ) https://github.com/JabRef/jabref/issues?qis%3Aissue+is%3Aopen+label%3Amaintable || @Siedlerchr Thanks for the feedback. Ill improve the code accordingly.  @lenhard I completely agree! We should find a way to have a realeasable version while still work on the migration to JavaFX. The main problem is that the code is tightly coupled to the maintable (i.e. there is no abstraction layer before the BasePanel/MainTable that used in the other Swing dialogs). This has the potential upset that every single dialog may now trigger a bug (for example because it runs some code not on the JavaFX thread). So  even through I will try to thoroughly test the new code before marking it as "ready-for-review"  there might still be countless bugs left which we need to find (and fix) in teamwork. Moreover  for the same reason  I think we also need to release a beta again.  That being said  the immediate question is: how much functionality should I try to migrate in this PR and what should follow as new PRs? As you said  the size of the changes makes the PR already unreviewable. But I would really like to have your feedback about some design questions. Especially since our aim should be not just to improve the gui but also decouple the code and make it more reusable.  Currently the new maintable is in a state where the very basic functionality works and the code is decoupled enough to actually write unit gui tests for it. There are still some bugs/feature that definitely need to be fixed before a users touches it (e.g. restore column width  context menus for the icons  a few display bugs). Then there are a few features that are not essential and rather isolated (e.g. "marking of entries"). These are probably good candidates for follow-up PRs. And finally there are features that I do not really see any benefit in reimplementing (e.g. coloring of table cells when the field is optional/required) or that are not really possible to implement with JavaFX (e.g. ["float search"](https://bugs.openjdk.java.net/browse/JDK-8091326)). Finally  the possible bug fixes @lenhard mentions should also follow as new PRs.  Any thoughts on this? (Sorry for the long text). || I think we could have a separate main Table Beta Test-Release in an additional branch highly experimental and let some users test this functionality who are interested. Especially we would need some Mac/Linux guys   || We can create a `javafx` branch  where we can integrate not ready features  but completed work packages (such as a basic entry table in JavaFX)  The master branch must be release-ready at all times. Release-ready means: all features of the old versions should be working (or the dev team decided to remove/disable a feature  such as the auto completion). || So  I used this version now in production during the past few days and fixed a lot of bugs. Although not all features are yet migrated (see list above)  I mark this PR now as ready for review. All further changes are coming as extra PRs onto this branch.   I would suggest that you try this version out and if nothing serious pops up  I would create a post in the forum advertising this PR and ask users about their opinion (something like a very early access program instead of several beta releases). What do you think? || I would be really cool if you could provide a table that lists all features related to the maintable that were present in the Swing version  e.g. sorting options  right click options  entry drop  column sorting  and could indicate if these features are working in the new version. Then we would have an overview of what features actually exist in the main table and we could have a meaningful discussion about which features we want to drop.  Personally  I do not really have an overview of all the things that the maintable can do. Could you perhaps provide this overview? I guess also @koppor know a thousand maintable features that I do not know. || I changed the base branch to "maintable-beta". I would propose to proceed as follows:  1. @JabRef/developers review 2. Work-in review comments 3. Merge into `maintable-beta`. 4. Ask users to feedback to `maintable-beta` 5. Add new PRs on `maintable-beta`  Why?   1. I think  PRs should be short and be closed fast. Not left open as the ones of @koppor. So  we can move on quickly. And we can also link to comments of this PR if necessary. 2. The discussions here are mixed on the implementation details and overall issues. I think  we should focus on implementation details 😇   In case we need a overview-pr  we can create a PR from `maintable-beta` to `master` and describe the overall status there. || I am *very* used to the floating search. See screenshots at https://github.com/JabRef/jabref/issues/3618. || @lenhard I updated the first post to also include the features that are already migrated (it is only the very basic functionality). Right now we do not need to decide what features should be dropped since there is still a lot fundamental functionality to migrate (but we should speak about it in the next devcall). I just do not want this PR to explode even more and get feedback about some of the other refactorings / changes. Thus the early ready-for-review.   @koppor Sounds like a good plan.  || I fixed the Close Entry Editor with Escape bug || @lenhard @Siedlerchr Is this architecturally OK? Then  I would propose to merge it into `maintable-beta` to reduce the size of PRs.  Note: The "real" PR of getting this into JabRef is https://github.com/JabRef/jabref/pull/3621 - there  code updates are only made as PRs to that branch. || 
3597,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Lookup filetypes in enum set to prevent NPE due to uninitialized expo… …rterFactory  Fixes #3596  This is my initial idea. Maybe we can optimize this  <!-- describe the changes you have made here: what  why  ... -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? I refactored the list where possible.  This can be further improved if this rather simple dialog is ported to javafx (for example  getting rid of the glazedcel EventListl dependency) ||
3600,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Make it possible to disable autocompletion in the search bar Fixes #3598 by covering the autocompletion in the search bar with the same preference option as in the entry editor.    ----  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3606,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Add exporter desc to enum analog to import Fixes #3605  Follow up from #3576   <!-- describe the changes you have made here: what  why  ... -->  ![jabrefextension](https://user-images.githubusercontent.com/320228/34617477-df47f5b2-f23b-11e7-907e-a0d1e595406e.png)    ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3606,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Add exporter desc to enum analog to import Fixes #3605  Follow up from #3576   <!-- describe the changes you have made here: what  why  ... -->  ![jabrefextension](https://user-images.githubusercontent.com/320228/34617477-df47f5b2-f23b-11e7-907e-a0d1e595406e.png)    ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`?  
3632,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Export translator field to msoffice 2007 xml Upcoming issue from #1750 While testing this I noticed that the import was broken (due to the recent export filetype/extension changes)  fixed that  too.  Directly use Bookauthors and Translator for import from xml Add test   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - [ ] If you changed the localization: Did you run `gradle localizationUpdate`? As the feedback was okay I merge this in ||
3642,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,Extend RIS import with multiple fields Meeting time is programming time :)  This addresses the import related things described in #3634 #2607  I basically went through the lists linked by @dsifford in the first issue  tried to adapt our import if possible and added custom fields when not. Our importer tests are still running.   ----  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) @tobiasdiez Thanks a lot! I didnt have biblatex in mind when setting the fields. Your comments are all integrated. || Is the `RISImporterTestFiles` class not executed during the travis build? Because those tests were actually partly broken. Anyway  I adapted them to the new import structure (which changes a few fields) and I added the RIS code from  #3634 as a new test case. || Regarding the test  seems to be a general problem with the parameterized tests and the new junit ä. I noticed the same with the office XML tests || Ok  then this is something that really needs fixing. Ill open an issue for it. Otherwise this PR is ready to merge from my point of view. || In the spirit of getting things done and because all reviewer comments have been addressed  Ill merge this now. ||
3642,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,Extend RIS import with multiple fields Meeting time is programming time :)  This addresses the import related things described in #3634 #2607  I basically went through the lists linked by @dsifford in the first issue  tried to adapt our import if possible and added custom fields when not. Our importer tests are still running.   ----  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) @tobiasdiez Thanks a lot! I didnt have biblatex in mind when setting the fields. Your comments are all integrated. || Is the `RISImporterTestFiles` class not executed during the travis build? Because those tests were actually partly broken. Anyway  I adapted them to the new import structure (which changes a few fields) and I added the RIS code from  #3634 as a new test case. || Regarding the test  seems to be a general problem with the parameterized tests and the new junit ä. I noticed the same with the office XML tests || Ok  then this is something that really needs fixing. Ill open an issue for it. Otherwise this PR is ready to merge from my point of view. || In the spirit of getting things done and because all reviewer comments have been addressed  Ill merge this now. ||
3661,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Export no empty lines in RIS format This fixes the remaining part of #3634  I had a closer look at the export / layout logic and wow  this is arcane! The code is more than 12 years old and almost as bad as the bibtex parser used to be.  This PR is based on two decisions:  - I do not want to change the old layouting code. If I do  I am almost guaranteed to break it in many ways. - I do not know if the removal of empty lines in exported text is really desirable in all cases. Maybe users wrote their custom formatters to explicitly include empty lines? I cannot tell.  We now have one case (RIS export) where empty lines are not desired. So  I implemented a solution that only changes the behavior of the RIS export  but leaves all others untouched. Nonetheless  it is very easy (single constructor parameter) to let other formats use empty line elimination as well.   The empty line elimination is done using a hardly understandable  but fully functional regex.   ----  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
3665,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Migrate importer tests to JUnit5 In the course of https://github.com/JabRef/jabref/pull/3642#issuecomment-358581869 we realized that our current (JUnit4) parameterized tests are not executed on the (JUnit5) travis build. This is tracked here: #3645 I think this is a huge problem  because we are missing out on a lot of validation here.   This PR is a migration of the paramterized RIS tests from JUnit 4 to JUnit 5. Id like to put this forward to discussion  so that we can agree on how our parameterized JUnit 5 tests are to look like. When we have agreed  we can migrate all tests. So  please look at the code and write if you are happy with this.  [Note that parameters cannot be resolved for lifecycle methods](http://junit.org/junit5/docs/current/user-guide/#writing-tests-parameterized-tests-lifecycle-interop) (`@BeforeEach`) in JUnit 5  hence the structure in the PR.   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) @tobiasdiez Thanks a lot for the feedback!   - Regarding test arguments: I do not really see the point in splitting the single argument into two. We have used the convention that the `.bib` and `.importerFormat` files have the same name and why not keep leveraging that? Also  I find it better to do the path conversion in one place only  but if we want to pass a stream of paths we always have to do that beforehand  - Regarding unification of importer tests: I have refactored around a little and arrived at a solution that should work for all importers. I quite like how that condenses the `RISImporterTestFiles` class.  Fun fact: I may have used JUnit 5 paramterization  but so far the assertions were still JUnit 4. Ill change that in the following. || The importer tests where running for each file  but that seems to have been ignored in the migration process by the junit 5 comp. I looked at this  too but didnt find a way to get it to work again. || Yes  indeed. Ill gradually go through all parameterized importer tests and try to get them working in JUnit 5 syntax again as part of this PR. || Turns out  quite a lot of tests for different importers (BibTexML  Medline tested so far) actually fail and this is down to the implementations of the importers. Seems like these tests have never been executed before...  I am not sure what to do about this here. The point of this PR was a refactoring of the testing code  not a repair of broken importers. || I would merge this if all tests are at least executed. Or better you merge this in a new branch where we will fix the importer then  || I converted and fixed some fetcher tests in another PR. I found that the GVK Test would also be a goo candidate for using the same schema as here  || I have now migrated the complete importer tests to JUnit5 syntax.  Sadly  they are in a dire state. A lot of them are actually failing and seemed to have never been executed anyway. And even except from the refactorings that I have already done  there as a lot of things that can still be improved.  I think its best if we take the current (failing) state and try to repair each importer and its tests here in the PR. This might be some work  but the importer tests cannot really continue as broken as they are now. Help on this is very much appreciated and should be possible without conflicts. || You can ignore the failing fetcher test  this is already fixed. But I wonder why there is now an NPE with the Method Source || I should have more meetings  so that I get more programming done :)  I think I have repair all importers and their tests now. Ill see what travis says and Ill also do one more round of refactoring on the code (not now). When I am done  this can hopefully be merged. || LGTM!  if you merge master in your branch you will get the fetcher test fixed as well || Ok  this can be merged from my point of view.  Although this is already a huge refactoring of the existing tests  theres certainly more that can be improved. I have a few things in mind  but I would rather keep them out of this already big PR. Ill tackle them later when this is merged. || That looks weird indeed. Looking at the first one: https://codecov.io/gh/JabRef/jabref/src/migrate-parameter-tests/src/main/java/org/jabref/logic/importer/fileformat/BibTeXMLImporter.java the `importDatabase` method is recorded as not covered  but when I execute the tests in Intellij there are twenty test files for that method alone.   The key seems to be that the missing methods are the ones that use JUnit5 parameterized tests. It seems that Codecov does not record the coverage of these tests  but they are the core tests of the whole package.  But maybe the problem is still travis? How do I see from our travis output that the tests are really executed? I can push a failing test deliberately  but there surely is a better way? || Since the travis log contains statement like  >13:43:57.686 [main] WARN  org.jabref.logic.msbib.MSBibDatabase - Could not parse document  I suppose the tests are correctly invoked (in fact  the travis log exploded even more). Probably there is a problem with the gradle task `jacocoJunit5TestReport` (but there is no need to fix this in this PR...) || I would merge this in and I think tthere might be a solution for the reports: https://github.com/junit-team/junit5/issues/1024 ||
3670,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,Fixes #3648: Chained modifiers work again <!-- describe the changes you have made here: what  why  ... -->  Fixes #3648.   The problem was that `resultingLabel  formatter.get().format(label) ` always used the original input and not the result of the previous modifier.  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
3690,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,[WIP] File link deletion dialog improvements This pull request fixes the following issues:  * When a file link in a bibliography entry is deleted by the user  a dialog is displayed. Previously  the default (first) dialog option deleted the linked file from disk. The default behaviour has been changed to just removing the file link from the entry.    This is a fix to issue #3679  Fixes #3679   * When clicking the "Cancel" button in the file link deletion dialog  the file  was being deleted from the list. This behaviour has been fixed by changing the return value of the `delete()` method when the "Cancel" button is chosen.  ## Example screenshot:  ![2018-02-04-001057_477x142_scrot](https://user-images.githubusercontent.com/20418176/35773368-0191977e-0950-11e8-90cb-ba778105f3e3.png)  ## Checklist:  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Screenshots added - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  ---  I am unsure whether the remaining checklist items are applicable to this pull request. I would be willing to provide tests for the `delete()` method  however  the `DialogService` member cannot be stubbed-in/mocked as it is (as it is marked `final`)  and therefore I cant control the returned chosen option from inside the unit test.  I would appreciate any pointers and suggestions. Thanks for your contribution! I have tested the changes locally and it works as expected. A little step for you  a great step for ~~humanity~~ JabRef users  ) Just add the suggestions by  @tobiasdiez  and we can merge it in.   PS: If you include the word  `Fixes #xxxx` then the corresponding issue will be closed automatically when the PR is merged.  || Thank you for your pointers! I have locally added `ButtonData.YES`  and now I will attempt to prepare a test suite for the `remove()` method at least  and push everything out when its ready. :smile:  || Okay  I pushed out the changes. Adding the button data restored the original button order (at least on Linux)  but the remove button is now clearly the default  and as far as I can tell from [JavaFX docs](https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/ButtonBar.html) this is the desired behaviour.  The test code Im not too proud of -- theres some weird hacking going on there to get the tests running  and I had to balance between not making them brittle and not worsening the implementations readability just for tests sake. If you have ideas for improvements  Id be happy to go back and fix the ugliness. || Well  if Im this close  might as well try and make this PR as good as possible!  Ive added the suggested changes. However  I did leave some of the parentheses as they were -- near those long mock setup calls to be precise  because I couldnt make them look decent otherwise. || Nice  thanks again for your contributions. We are looking forward to see more PRs from you 😄 . ||
3694,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,differentiate inbooks with different chapters This is my simple solution for #3344 issue. Ive added statement that checks authors  titles and chapters of two inbooks. What do you think?  I have several questions: 1. Im not sure about using `compareSingleField` function for comparing chapters  because sometimes they are very similar  but different  for instance: chapter 1 and chapter 2. Any idea? My is to remove chapter word from strings and then make the comparison.  2. Should I also add test for incollections? 3. What about pages? As I noticed they can be a replacement for chapters. Should I consider them in the code? 4. Can I add another commits with some cleanup and refactor for the files Ive touched? I mean adding some finals to make code less error prone etc. Thanks for your contribution! Regarding your questions  I can only answer some of them.  1  I currently are on my mobile so I cant dig into that much but sounds like an idea.  You could look what the biblatex manual says about the possibile contents of the field. Thats our reference when in doubt about a field   2  maybe also a good idea 3 could make sense if the same  4 sure  code improvement is always good if its within the scope of the implementation Regarding of finals  you can omit  them in parameters   Regarding test  you could migrate them to junit 5 if not already done. For examples you can look at the fetcher tests. Just a bit different Syntax  || Ok  so I added some more tests and PAGES field checks. Nevertheless I do not know how to upgrade tests to JUnit5 (I mean that there is something more to to than import BeforeEach instead of Before and I have no idea what it is). Any tips?  @tobiasdiez - in that case compareSingleField would return for example EMPTY_IN_ONE constant  where my if statement require NOT_EQUAL so there is no problem :) anyway Ive added test to cover that case  Also Ive made some cleanup and refactor. I know  a lot of finals  but imo it prevents silly mistakes like reassigning values to function parameters (especially error prone in constructors).  And Ive merge master into my branch.  So... How about now?  ----------------  EDIT: Codacy/PR Quality Review yells that there is something wrong  but when I click Details there is website with Request error: Missing parameter: prid message :/ || Thank you for your contribution 😄 👍  ||
3708,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Try to change color of magnifier icon I am trying to change the color of the magnifier icon as requested here: #3535  However  the icon refuses a color change. It even opts out of the color scheme of JabRef  since it is black instead of purple (despite the fact that the icon is configured as purple in the code).  @tobiasdiez How can I change the color of this icon? Any change will do  really. For reasons unknown to me the icon straight-out refuses the change.    ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Screenshot:  ![grafik](https://user-images.githubusercontent.com/1366654/36230180-d60d2df6-11d9-11e8-99b5-d01f8055d960.png)  There is a space between the other icons. Until the cool solution from https://github.com/JabRef/jabref/issues/3535#issuecomment-352068826 is implemented  I am in favor of using this approach. Reason: This makes the JabRef feature explicit.  ![papers search](http://s3.amazonaws.com/mekentosj-papers3-support-images/KnowledgeBase/Papers%203%20for%20iOS/advanced_search7_p3ios.PNG). || Well  if @koppor really wants this Im fine with it although I bet that more users get confused by a cyan-highlighted icon than they are getting enlighted by it.  ||
3709,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,Group separator escaping fixes #3646  
3710,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,[WIP] Dublin Core Fixes #938 : Only supporting [Dublin Core](https://en.wikipedia.org/wiki/Dublin_Core)  Removed JabRef namespace for XMP xmlns:bibtex.  Removed some unused methods in gui/importer/EntryFromPDFCreator.java (discussed with @koppor and @stefan-kolb) Deleted tests for XMPUtil. (New ones are in progress).  <!-- describe the changes you have made here: what  why  ... -->   ----  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [x] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) This pull request is ready for the final review and for merging into master :) || For my general understanding and my newbie state:  ```  public static void writeXMP(Path path              Collection<BibEntry> bibtexEntries  BibDatabase database              boolean writePDFInfo  XMPPreferences xmpPreferences) throws IOException  TransformerException {          Collection<BibEntry> resolvedEntries          if (database  null) {             resolvedEntries  bibtexEntries          } else {             resolvedEntries  database.resolveForStrings(bibtexEntries  false)          }          try (PDDocument document  PDDocument.load(path.toFile())) {             if (document.isEncrypted()) {                 throw new EncryptedPdfsNotSupportedException()              }              if (writePDFInfo && (resolvedEntries.size()  1)) {                // 1                 XMPUtilWriter.writeDocumentInformation(document  resolvedEntries                         .iterator()                         .next()  null  xmpPreferences)                  XMPUtilWriter.writeDublinCore(document  resolvedEntries  null  xmpPreferences)              }              PDDocumentCatalog catalog  document.getDocumentCatalog()              PDMetadata metaRaw  catalog.getMetadata() ` ```  For me  it makes no sense to write more than one BibEntry to the metadata of a PDF file.  Currently the implementation in XMPUtilWriter is also limited to a single element  but implemented as a list. (See line 260 and 110).  Can I drop the list?  @Siedlerchr  @koppor  @tobiasdiez  || I have no real idea concerning your question about the list. I would say you could safely remove it  but Im not sure. What happens if multiple entries have the same file linked and write their metadata into it (e.g. the pdf is a book and I have a bunch of `bookchapters` as separate entries)? ||  XMPUtilWriter  line 147 148  Before new metadata is written to the PDF  all DublinCoreSchemas are removed. So I think  that there is currently no option to write more than one metaschema. In your case  I would assume that the last written data is visible (others lost).  || Well  does the Dublin core schema specify. Multiple entries?  || Specifications are available at. http://dublincore.org/specifications/. The abstract model is there: http://dublincore.org/documents/abstract-model/  ![grafik](https://user-images.githubusercontent.com/1366654/36341139-e8883824-13e9-11e8-8101-7c1db9b4a86f.png)  In case  I interpret that correctly  one record contains one description  which may contain multiple record sets.  This is the edge case  where one wants to write XMP to a proceedings.  Example:  - One chapter: https://link.springer.com/chapter/10.1007/978-3-540-79230-7_4 - Full proceedings: https://link.springer.com/book/10.1007/978-3-540-79230-7 || I considered all comments to the source code and refactored my code.   The last commit alters the behavior of the XMP import: The previous implementation only imports the first entry and drops the others. The current implementation imports all metadata entries. My thoughts are as follows: It is easier to import additional entries and delete not needed ones compared to importing single entries by hand  if the needed entry is not the first one.   ||
3718,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Add cleanup operation for replacing ligatures Fixes #3613  I have used the mapping listed here: https://en.wikipedia.org/wiki/Typographic_ligature#Ligatures_in_Unicode_(Latin_alphabets)  Please note that german users might be surprised by how this replaces the letter `ß`.  ----  - [X] Change in CHANGELOG.md described - [X] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [X] Manually tested changed features in running JabRef - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Ok  Ive taken out the conversion of ß and documented this in the code. If there are no other characters that we want to exclude then this PR should be good to go. ||
3734,1,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,0,1,Add parser for German months (#3536) Changed the month parse that it can also parse German months now.  This should solve issue #3536. Have I missed something?  (For PE1718: Name: Johannes Preßmar)  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Screenshots added (for bigger UI changes) - [ ] Manually tested changed features in running JabRef - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Please merge JabRefs branch `master` (should be available at `upstream/master`) to resolve conflicts in CHANGELOG.md || The tests are still failing. From looking at the code  I think that "Mär" is not parsed correctly. Could you please investigate this?  Once all tests are passing on travis  I think we can merge this. || Ill merge into `wip`  finish the PR and merge it into `master`. || I fixed the issues at https://github.com/JabRef/jabref/pull/3742  1. The java files had the wrong encoding (UTF8 was not used) 2. The implementation for "mär" and "märz" was missing. || 
3751,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Add the Menubar to the Titlebar in MacOS Fixes #3146  ![titlebar](https://user-images.githubusercontent.com/1254003/36424759-bf93ba9e-1644-11e8-828d-0d46d64dc343.png) Note that the screenshot shows "java" on the top left  because I run from IntelliJ. If you install JabRef from a .dmg it should show "JabRef". || Nice!  || 
3766,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,Update Architecture Tests to catch static imports Fixes a part of #2617  Updates the architecture tests to JUnit5 and also catches violations in static imports now. I tested this by adding a static import and checking that the build breaks. It does  but of course I had to remove the cause again.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
3767,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,Extend toolbar with more icons and add tool tips I know this is a controversial topic in the maintable-beta right now  but to get the discussion going a little more and taking inspiration from #3678  I took the liberty to extend the toolbar with more buttons here.  This is really not meant as a final say  it just moves the code in place for some buttons that seem of some value for me. They can be removed again  resorted  and the layout is probably also not perfect.  Heres a screenshot: ![toolbar](https://user-images.githubusercontent.com/1515701/36594431-5af45894-189e-11e8-8b36-53408dee2328.png)  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Manually tested changed features in running JabRef - [X] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) For the MySQL fans  I really need the two buttons for the shared database if a connection to a MySQL is established in the current database. 😇  (not for PostgreSQL and Oracle Database). || @koppor: I find two actions in the code: `StandardActions.CONNECT_TO_SHARED_DB` and `StandardActions.PULL_CHANGES_FROM_SHARED_DB`.  So if a connection to mysql database is established  you want both of these buttons to show and otherwise just the pull/push button? || oh  only the second :) - that is needed for mysql (only)  The former one is not needed at all  currently no clue what it is useful for. || Decision in devcall: - Separate social network buttons from the rest - Add tracking for user actions and evaluate in the future which buttons should be displayed || @lenhard An FYI from me and please do not feel pressured: You might have seen that I want to make a consistent layout for all panels  toolbars  etc ([issue here](https://github.com/JabRef/jabref/issues/3678#issuecomment-367973471)). Im going to wait with this until your PR here is pushed. Then I will merge the maintable-beta again into my local branch and incorporate all changes. I really would like to have more icons on the toolbar to get a better feeling for the look.  || I grabbed the template from the Material Design Icons and started to convert some of the icons we do not have in this style. As an example Emacs  TeXStudio  and Vim.   ![emacs](https://user-images.githubusercontent.com/511683/36882887-c06c4910-1dd6-11e8-9830-b07ddf131207.png) ![texstudio](https://user-images.githubusercontent.com/511683/36882888-c08829be-1dd6-11e8-8406-ddf0f8ac94c7.png) ![vim](https://user-images.githubusercontent.com/511683/36882889-c0a2abf4-1dd6-11e8-881f-fd83e8fce2d4.png)  Would it be of interest if I pursue this further? If yes  does someone know if we can include them as a vector font so that we have those icons scalable to whatever resolution we need? Im worrying about retina displays or other 4k devices where 32x32  let alone 16x16 icons look not good.  || @halirutan I would suggest you contribute that upstream. Read more at https://github.com/Templarian/MaterialDesign/blob/master/CONTRIBUTING.md.  There are also the [academic icons](https://jpswalsh.github.io/academicons/). However  there is none for tools  but some for DOIs  PubMed. || @koppor I might be wrong  but the README there reads in its final paragraph:  > Please note that  at this time  the only brand icons we accept requests for are popular social media sites/apps and widely used products/software. Thanks for understanding.  In fact  I have searched for Vim and Emacs on the site first and was stunned that such widely used apps cannot be found. It does not matter  I have successfully searched for a way to create our own ttf font for the icons. In this way  we can stay consistent with our design and we can adjust the icons as we like. || @halirutan I would agree that emacs and vim are widely used. In case there is no PR yet  why not creating a PR? I have to admit that other software is not that popular.  Maybe  we should start another font project? Maybe  we fit into the [academic icons](https://jpswalsh.github.io/academicons/). At least  I would try. 😇 Thus  also the latex users would benefit from your work: https://ctan.org/pkg/academicons   || Why not forking academic icons and proposing our latex-related to them? //Edit:: Regading vim and emacs  you might find them here: https://github.com/ryanoasis/nerd-fonts  //Edit2: they also provide a font patcher || I think  there is no real need to use a font-based icon. svg images can be included more easily in JavaFX than font-based icons  like this: https://github.com/JabRef/jabref/blob/403986f1c244723911cafadeb369064ec2f551cd/src/main/java/org/jabref/gui/IconTheme.java#L276-L282 The only exception is if the font can be accessed via [FontAwesomeFX](https://bitbucket.org/Jerady/fontawesomefx/overview).  || @tobiasdiez I havent looked at this to be honest. What about scaling? For some icons we set the size by giving the font-size like in the `EntryEditor.css`  ``` .tool-bar .glyph-icon {     -glyph-size: 18px      -fx-font-size: 2em  } ```  Can we achieve consistent sizes when we use partly svg icons? I mean  I see that we used `px` here but will this be the same when not used as a font? || Good point. The file-based icons are shown using  https://github.com/JabRef/jabref/blob/403986f1c244723911cafadeb369064ec2f551cd/src/main/java/org/jabref/gui/IconTheme.java#L359-L361 `ImageView` does provide some scale mechanisms  but these are probably not accessible via css. In general  I agree that a font-based solution is desirable. My comment should just serve as a warning  that it might be not so easy to include an arbitrary font as icon sources and it may be easier to include the svg directly. || Hi all. Thanks for the comments. I am currently in the process of relocating myself and my family to another country. As you can imagine  I do not have any free time on my hands  so please do not expect action here soon. If this blocks progress somewhere else  I have no problem if someone else takes over and rounds this off. || Of course  no problem  @lenhard. Since the only thing missing in this PR is the additional push to shared icon  I merge now.   Im looking forward to see more PRs incoming as soon as your PC is relocated  -). ||
3800,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Change open last edited dialgo to javafx Fixes #3799 @halirutan  Have a look if this works for you  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
3820,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,Fixes #3796: Pretend that we have every translation for every key Fixes #3796  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) I think you should base that on master so that we can see it working and then we can cherry pick the commit into maintable-beta || cherry-picked in master. ||
3821,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix Copy linked files dialog showing NPE when no linked files <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #3818  (ignore the branch name  I  thought it was a different error)  The part in the CopyTask should also be copied to the maintable beta branch. The rest is already there.   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) travis fails for some timeout reason not related ||
3824,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,Provides download option in context menu and fixes #3614 <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Inspired by the discussion in #3818  I added a "Download file" option in the context menu of a linked file (if it is an online link). Moreover  the bug #3614 is fixed.  This PR was brought to you with the support of coffee from the JabRef cup!  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) If you fix checkstyle we can merge || I generated a [structure-diff](https://medium.com/clarity-bot/reading-structure-diffs-101-3b28134d7b8f) below from pulling ```19945df``` **on JabRef:downloadLinks**  into ```988fb54``` on **JabRef:master**.  ![Structure Diff](https://api.clarity-bot.com/v1/github/diff/a0IWgZDpCdBzCsQdSvLfyHkbi05fQx8AW2mBOEvRHetByChk4EDZjTEG6MWXzWIo1hqW7msRreohcOQSdh9Q1z6B2g9Rhcvd3vbcRHqBHPfOB1cbpIxpk9MP95sNaMChNvEyg0ncYAsQndSJDFj341vTy8BAYs4IKEI3oZZWKehEkBHlcFb5FwRHIx4g6ywoh2Cdj3JZUH6dl5o42sJ5YHMi2WgxJYKAtAn466ZPFVO7iewTzdYHLChOanHvwp5yO4ebK2lKmDhcTw1uhaJr8QzMYimCjqcJ9KUXjWQfYtn2P7uaGBZ8cvRTukoNGrO8gXWIhral9P5qDx1dh3WlNOxNyszBqWYbSTyVLlkJY7edwsEmLTj2R0OFZV3wHaWdCapC9na05oqlT54Tdt5MPsa9Qv5id1oJ7uRJgx7xMvzw1PUZhBPOH6X5Ar4dWbmdBp5Z3V4Snvxf3pvlxGZNLFOrSREnZnM7zUVciqWaHYFP6XakMvVkE6k0X6CV7H0g) ||
3824,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,Provides download option in context menu and fixes #3614 <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Inspired by the discussion in #3818  I added a "Download file" option in the context menu of a linked file (if it is an online link). Moreover  the bug #3614 is fixed.  This PR was brought to you with the support of coffee from the JabRef cup!  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) If you fix checkstyle we can merge || I generated a [structure-diff](https://medium.com/clarity-bot/reading-structure-diffs-101-3b28134d7b8f) below from pulling ```19945df``` **on JabRef:downloadLinks**  into ```988fb54``` on **JabRef:master**.  ![Structure Diff](https://api.clarity-bot.com/v1/github/diff/a0IWgZDpCdBzCsQdSvLfyHkbi05fQx8AW2mBOEvRHetByChk4EDZjTEG6MWXzWIo1hqW7msRreohcOQSdh9Q1z6B2g9Rhcvd3vbcRHqBHPfOB1cbpIxpk9MP95sNaMChNvEyg0ncYAsQndSJDFj341vTy8BAYs4IKEI3oZZWKehEkBHlcFb5FwRHIx4g6ywoh2Cdj3JZUH6dl5o42sJ5YHMi2WgxJYKAtAn466ZPFVO7iewTzdYHLChOanHvwp5yO4ebK2lKmDhcTw1uhaJr8QzMYimCjqcJ9KUXjWQfYtn2P7uaGBZ8cvRTukoNGrO8gXWIhral9P5qDx1dh3WlNOxNyszBqWYbSTyVLlkJY7edwsEmLTj2R0OFZV3wHaWdCapC9na05oqlT54Tdt5MPsa9Qv5id1oJ7uRJgx7xMvzw1PUZhBPOH6X5Ar4dWbmdBp5Z3V4Snvxf3pvlxGZNLFOrSREnZnM7zUVciqWaHYFP6XakMvVkE6k0X6CV7H0g) ||
3826,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Show dialog when copy files did not found file Follow up from #3818  Fixes #3818   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  ![grafik](https://user-images.githubusercontent.com/320228/37219766-b6707a96-23c4-11e8-830f-0e7f8756eba8.png)  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
3865,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Do no longer log InvalidFieldValueExceptions during autosave Fixes  #3811  InvalidFieldValueExceptions are no longer printed into the log when they occur during autosave. Fields in the entry editor still have the warning sign next to them.  The normal save operation (CTRL+S) still triggers a warning dialog  saying that the file could not be saved.  ----  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
3871,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,Switch colors of search icon for the two search modes Fixes #3870   ----  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Grammar-based search is the advanced search. So  the magnifier should be cyan  when following search string is active:      authorkolb and authorkopp  Taking examples from the documentation (https://help.jabref.org/en/Search#search-modes)  All of these are advanced  but they are not recognized as such:      title|keywords  "image processing"      (author  miller or title|keywords  "image processing") and not author  brown  Following is normal mode:      progress “marine aquaculture”progress “marine aquaculture”  This is now with cyan. This is wrong.  Following is normal mode:      progress  Correctly <s>recognized</s> displayed as normal mode with this patch.  || If so  the whole detection is wrong?! || Only the beginning of the detection is somehow wrong. For complex terms it is right  but for single words  it is wrong. See the examples above. Maybe  we changed something when going from JabRef 3.6 to 3.7. || Or maybe the detection never was entirely correct. If I have a lot of time on my hands  I might have a look at the detection algorithm. Otherwise we can close this PR and / or remove the coloring of the the search icon again. After all  what is the point of changing its color if the circumstances are incorrect? || @lenhard If you indeed have time to look at the search algorithm  please replace it completely  -) https://github.com/JabRef/jabref/issues/1975 || It worked in 3.6 and no one noticed that it broke at 3.7. So  the point is to keep the idea and to fix it... The idea in other words: make users aware of the feature and that the search might not work if the grammar based search was intended  but not matched (typo in query)  Am 22.03.2018 19:53 schrieb "Jörg Lenhard" <notifications@github.com>:  Or maybe the detection never was entirely correct. If I have a lot of time on my hands  I might have a look at the detection algorithm. Otherwise we can close this PR and / or remove the coloring of the the search icon again. After all  what is the point of changing its color if the circumstances are incorrect?  — You are receiving this because you commented. Reply to this email directly  view it on GitHub <https://github.com/JabRef/jabref/pull/3871#issuecomment-375419286>  or mute the thread <https://github.com/notifications/unsubscribe-auth/ABTafiYxOvx2TOF6vCt2ytpyzzRUWwEvks5tg_McgaJpZM4S1MHL> .  || Actually there should be tests for it then  as this is not a UI feature but the detection is logic based... || Did we update the antlr stuff after v3.6? Because the query "progress" actually is a valid grammar-based query that compiles with our antlr code. Thats the reason for the "wrong" coloring.   I have now added code that checks if a query consists only of word / whitespace characters and/or digits and uses a normal contains-based query for that. Thus  grammar-based searches are only executed when special symbols are used ALTHOUGH our grammar is more powerfull than that. The terms mentioned by @koppor above are now colored as expected. @koppor: I hope this limitation is what is wanted. Please do some testing to see if this matches your expectations. || In general good. Minor issues - not sure whether they should be fixed separately.  `j` - OK:  ![grafik](https://user-images.githubusercontent.com/1366654/38212666-ddff22e4-36be-11e8-90c4-e6647c6d0c1a.png)  `jö` - not OK:  ![grafik](https://user-images.githubusercontent.com/1366654/38212682-ed37d40e-36be-11e8-81aa-0f50226aa906.png)  Minor issue:  When I clear the field using Ctrl+A and then Delete (after an advanced search)  the marker is still advanced:  ![grafik](https://user-images.githubusercontent.com/1366654/38212778-4a0ec2d2-36bf-11e8-8c36-42db1c9f8d6b.png)  Otherwise: LGTM :)  || Thanks for the comments @koppor   I fixed all the glitches you described and this PR should now be ready. || 
3887,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Improvements around external file types <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  I tried to implement #3885 but changes of the file type in the linked file editor are not saved for some reason. Ill investigate this again after https://github.com/JabRef/jabref/pull/3005 is merged. Thus only some relative minor code improvements / fixes: - Refactor external file type classes and extract a common `ExternalFileType` interface. - Extract all built-in file types to separate enum (implementing `ExternalFileType`) - Fix display of External file type editor dialog (which is not shown in the current maintable-beta version)  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Since this PR is now ready for review over a month  Ill merge it despite not having any feedback so far... ||
3909,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,Add required mock to LinkedfileViewModelTest While working on #3704  test were failing in other settings. This is a quick fix to get the tests running. I think for this build its okay  in maintable-beta we already have it refactored  || @Siedlerchr I hope  there wont be conflicts for the maintable-beta branch then. 😇  ||
3927,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Prevent accidentaly deleting a second file when pressing del key Fixes #3926   The key listener was triggered twice (on pressed + released) resulting in the selection of the second file    <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) As this is not even a one-liner and I tested the changes I merged them directly in. ||
3931,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Resolve #3929 Correct fetcher messages Resolve #3929 @Siedlerchr We do?! ||
3944,1,0,0,1,0,0,1,0,0,0,1,0,1,1,1,0,0,0,1,[WIP] Replace all IEEE URLs with https #3930 IEEE tests are broken  but they were before. needs to be fixed.   Fixes #3930 You should add a changelog entry  || I need to work on the tests first before we can merge this! ||
3954,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Add button-icon for union/intersection in the groups side panel Fixes #3269 Fix display of state for union/intersection in preferences  As we currently unfortunately do not have Icons for Set Intersection/Union  `set-center` and `set-all`  https://materialdesignicons.com/icon/set-center   in the Material Design Font  I used the WWW and the twitter icon to demonstrate the purpose. @halirutan  will then try to integrate the correoct  icons in JabRef    <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> ![grafik](https://user-images.githubusercontent.com/320228/38771504-8fe48364-4024-11e8-81b8-a25fa076254c.png)   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) @tobiasdiez  Is this now okay? Then you could merge it with CO-Authors  || @tobiasdiez  Fixed the issues you m entionend.  || I fixed the remaining issues and I am going to merge this one now ||
3965,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Fixed Url column This fixes #3860   URL Column now shows URL or DOI correctly and opens on click.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Hi @florian-beetz  since you have been involved in the maintable migrations do you want to join tomorrows Devcall at 11 am? Drop me a note by mail (linus@lynyus.de). Cheers  Linus || Okay  merging this in order to move on. I have created another issue to track the tooltips. https://github.com/JabRef/jabref/issues/3973  Maybe @florian-beetz wants to continue with that as the next PR? (  ||
3967,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Fix ebook.de Refs #3854  Unfortunately not a very clean fix  but it is fine again. Using the normal InputStream does not return anything. Probably as it is detected as automated crawler? The interface with InputStream is just not really fitting here. The ISBN fetcher tries ebook.de first and if no result is found  it switches to the chimbori/amazon fetcher.  Is this still valid? || Yes. ||
3968,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,Fix IEEE Fetcher by enabling cookie support Fixes #3966   Apparently when in VPN network of University IEEE fulltext fetcher needs cookie support enabled  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
3970,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,Fixieee Fixes #3966  Followup from my previous PR.  Now document links  in the format `https://ieeexplore.ieee.org/document/7421926/` are supported  too.  And I also tested the paper linked in the issue from university network. That works fine  too.   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
3979,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,[WIP] Add Text File Export for "Find Unlinked Files" This is to add the feature which allows exporting of the list of files found in "Find Unlinked Files" to a text file.  Closes issue #3341  Im not sure if it is exactly what you are looking for  but I thought I would give it a shot. Hopefully you will be kind though I welcome constructive feedback of course. Im not sure it really even needs the progress bar for the exporting because it is so fast  but I left it in for now since the importing has one. One change I didnt make is changing the list of files to Path type from File type. I left a note about that above. Let me know what you think. || @jssander  Please pull before you continue to work on it. I merged master to fix conflicts due to our release today. || How do I pull correctly? In IDEA when I go to pull I think Im pulling from my forked master. || I made some changes  but there is a conflict now in the changelog. Im not sure how to resolve it. || @jssander Just keep both lines. I did it for you using the GitHub web ui. Just pull and you are fine at your side  too. || Great! Thank you so much. ||
3983,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix IEEE preview does not display month Fix issue [#3239](https://github.com/JabRef/jabref/issues/3239) on [maintable-beta](https://github.com/JabRef/jabref/tree/maintable-beta) branch  On month change from comboBox on OptionalFieldsTab  Month was not appear on IEEE style. The issue get fixed.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Please have a look at the Travis output  regarding the checkstyle  there is still some error  || Thank you  Its nice to work with all of you. I learn a lot. ||
3988,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Add RFC entry generator ID-type option <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#3971](https://github.com/JabRef/jabref/issues/3971) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  fixes #3971   [UI Image of entry type in dropdown](https://github.com/jacksonrya/help.jabref.org/blob/81c1795cfd3b9defc64fd61b71eb85e9e34e7442/en/images/NewEntryChooseType-IDGeneratorHighlighted-Rfc.png)  RFC  an additional ID-based entry generator ID type  has been added in order to fetch more complete BibTeX data compared to DOI fetches of RFC type.  Following the DiVA ID type classes as template  an RFC fetcher class and fetcher test has been added. I added RFC to the ID-based entry generator list within WebFetchers so it is an option in the dialogs dropdown.  Currently  the RFC fetcher class accepts search requests with or without the "rfc" prefix--is this an okay feature?  Additionally  help in finding the best [RFC BibTeX API](https://www.rfc-editor.org/retrieve/). I am using the API referenced in [#3971](https://github.com/JabRef/jabref/issues/3971).  P.S. This is my first ever contribution to open source  so thanks for your patience... 😄   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Ive merged your help file change and restarted the travis build. so the help pages related error should be gone now! Thanks again for your contribution 🥇  || All set  thanks for all of your help! Ive learned a lot about the process  and hopefully wont be as needy next time :) || Thank you for your contribution :smile: ! Hope to see more from you in the future! ||
3996,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix #3994 Duplicate unmodifiable list for sorting Fix #3994  ``` runCommand error: null java.lang.UnsupportedOperationException 	at java.util.Collections$UnmodifiableList.sort(Unknown Source) 	at org.jabref.gui.exporter.ExportToClipboardAction.run(ExportToClipboardAction.java:59) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at spin.Invocation.evaluate(Invocation.java:175) 	at spin.off.SpinOffEvaluator$1.run(SpinOffEvaluator.java:108) 	at java.lang.Thread.run(Unknown Source) ```  
4002,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix Look and Feel related issues Enabled the change of the L&F for mac. Remove GTK L&F  Fix migration of old jgoodies l&f  Fixes #3986  Fixes #3995   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) I merge this now  and I will create a PR to remove that L&F stuff completely in maintable-beta ||
4002,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix Look and Feel related issues Enabled the change of the L&F for mac. Remove GTK L&F  Fix migration of old jgoodies l&f  Fixes #3986  Fixes #3995   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) I merge this now  and I will create a PR to remove that L&F stuff completely in maintable-beta ||
4011,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Reimplement tooltips for file and identifier columns This fixes #3973.  Reimplements tooltips for file-  URL-/DOI- and Eprint-column in the maintable-beta.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks again for your contribution! ||
4015,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,Fix custom exporter not displayed in file chooser Fixes  #4013  Fixed several issues with the Custom Exporter. - Filename check for layout files was wrong  - Commandline name for custom exports was the filename and not the name  opposed to what our help says  - Custom exports could not be added due to our hardcoded enum - Expanded the enum with [Mixins](http://blog.pengyifan.com/how-to-extend-enum-in-java/)   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) The core problem is not the gui but that each exporter has a file type and this file type was also added for the custom exporter. These file type used the parse method to find a file type based on the extension. The file type class is used for the file filter chooser. And an exporter is matched on the file type description.  But as this is an enum  it did not work for custom export as always one of the enum values was used  e.g the default HTML Export.   The core changes are in the enum which now implemented an interface.  In fact its just a rename of the old enum and a simple interface which has the name of the old one  To avoid code duplicates in the anonymous class and the enum I moved them to private static methods.  || ok  thanks for the explanation. I thought a bit more about this problem and came to the conclusion that the cleanest solution is probably to split the description from the "file type". If the later is only a list of extensions (xml  bib  txt  ...) and the importer/exporter itself contains the description  then you can easily create a `ExtensionFilter` for an importer/exporter (and do not need to pay special attention to custom exporters). What do you think? || This would only work if the custom export follows the standard file types. If I want my exporter to have filetype xyz then this would not be possible. What I did is to provide a set of standard file types and their descriptions which can be extended to support custom one. The standard file types are also used for the importer.  Another thing which just came to my mind was that we with this approach could also resuse the functionality for the ExternalFileType stuff. Than we could get rid of that completely. || ok  good point. Do you want to improve the code around `ExternalFileType` as part of this PR or is this a follow-up?  I would still separate the file extension from the description text.  || I would rather do this in a follow up on the maintable directly  || @tobiasdiez  I now removed the exporter stuff from the FileTypes. So currently its only used for the importers. The key problem with the importers is  that we have an "All available import formats" plus all the extensions. In this case I see no way to filter the importer without having a description in the extension format.  || A shot in the blue: Instead of  https://github.com/JabRef/jabref/blob/e32bdc8ef5731d41252eb53a50cefdf58ea2657d/src/main/java/org/jabref/gui/util/FileFilterConverter.java#L26-L29 try ````java  private static FileChooser.ExtensionFilter convertImporter(Importer importer) {       return toExtensionFilter(importer.getDisplayName()  Collections.singletonList(importer.getFileType))   } ```` and at the same time change https://github.com/JabRef/jabref/blob/e32bdc8ef5731d41252eb53a50cefdf58ea2657d/src/main/java/org/jabref/gui/util/FileFilterConverter.java#L39-L41 to ````java  public static Optional<Importer> getImporter(FileChooser.ExtensionFilter extensionFilter  Collection<Importer> importers) {       return importers.stream().filter(importer -> importer.getDisplayName().equals(extensionFilter.getDescription())).findFirst()   }  ````  If `getImporter` returns an empty optional  you know that there is no specific importer  i.e. the user selected "any file" or "any import format". || @tobiasdiez  I noticed that it was already possible. I just needed to create the Map with Description/Name  and FileType like I did for export. It is now analogous to export. I removed the not needed FileTypes. However  there are still some import formats left which have more than one extension. However  I think its not worth changing them  too.  Would make things a lot more complicated.  We already have a good base for future expansions and for using this in combination with ExternalFileTypes.  || If I understand correctly  this should go into `master` before merging https://github.com/JabRef/jabref/pull/3621. || Yes definitely.  || Ive refactored a bit more (it was easier to hijack this PR than describe the refactorings in detail -sorry). If you are happy with these changes  feel free to merge  otherwise just revert my commits... || Looks good so far.  If someone can merge this with co authoring ( i got this wrong last time) || 
4016,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,Do not trim or remove whitespace from the title based id fetcher Fixes #4014   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) I now moved trimming down to the concrete fetcher classes and added tests  ||
4019,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,Fix ACM fetcher import of entries Fixes #4018  Removed `&` sign from ID pattern  Tested with a couple of searches  works fine  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) I merge this now  as this is a one-liner. ||
4040,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Convert SharedDatabaseConnect Dialog to Javafx Connection works so far.  No more freezes regarding addTabs. in basePanel Somehow the dialog looks odd  @tobiasdiez  Any idea what is missing? The checkboxes are not visible correct. I just see that it looks really odd in he maintable-beta branch  too. e..g. int he Event Log  Edit// The conection and the synchronization seems to be working.    Fixes: #3419   PostgresSQL database connection now supports SSL  TODO for documentaition: Create and configure Server certs https://www.postgresql.org/docs/current/static/ssl-tcp.html  Convert to keystore format https://jdbc.postgresql.org/documentation/head/ssl-client.html  ![grafik](https://user-images.githubusercontent.com/320228/44865756-7cd7a280-ac83-11e8-99d0-9c619a929163.png)  Currently I only tested it with PostgresSQL  but I see that mySQL should also work https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-using-ssl.html    <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  TODO:  - check conflict merge dialog   - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) The display problem probably results from us playing around with different styles and changing defaults. Since there is no checkbox in the main view  it was not noticed that some of the input controls look strange. Ill have a look at it later... || The database connection works so far. Tested with PostgresSQL. I reworked the dialog and fixed an error in the listener which led to freezes.  The MergeEntryDialog is not yet converted  this will be done in a future PR.   The only thing open is the GUI styling. The dialog looks a bit odd. But thats due to some missing CSS stuff I think.  || Yes I tried both with and without the tags. Same behavior. I do not understand this.  Tobias Diez <notifications@github.com> schrieb am Fr.  25. Mai 2018  15:39:  > *@tobiasdiez* commented on this pull request. > ------------------------------ > > In src/main/java/org/jabref/gui/shared/SharedDatabaseLoginDialogView.java > <https://github.com/JabRef/jabref/pull/4040#discussion_r190896614>: > > > +    @Inject private DialogService dialogService  > + > +    private final SharedDatabasePreferences prefs  new SharedDatabasePreferences()  > + > +    private final ButtonType connect  new ButtonType("Connect"  ButtonData.YES)  > +    private final Button btnConnect  > +    private final JabRefFrame frame  > + > +    private DBMSConnectionProperties connectionProperties  > +    private SharedDatabaseLoginDialogViewModel viewModel  > + > +    public SharedDatabaseLoginDialogView(JabRefFrame frame) { > +        this.frame  frame  > +        this.setTitle(Localization.lang("Connect to shared database"))  > + > +        this.getDialogPane().getButtonTypes().addAll(connect  ButtonType.CANCEL)  > > Did you also tried it without the surrounding buttontypes tag? > > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/4040#discussion_r190896614>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/AATi5GBJ--hYtjBd1unf_oiZTC9_5v_Zks5t2AmsgaJpZM4UGDLC> > . >  || Now moved all stuff and implemented the validationto the viewmodel and will tackle the SharedUiManager stuff next  || 
4047,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,A first solution for the cli problem #4038 ExportFactory is not initialized at this execution point... The printUsage method is used twice. The JabRefCLI prints the usage  if an error occurs during argument parsing and the ArgumentProcessor prints the usage  when --help option is chosen.   I made two solutions for this problem:  - Commit 1: Some sort of a hack to only get the names of the exporters without altering the processing in the main method.  ![image](https://user-images.githubusercontent.com/30231151/40351621-2505b92c-5dad-11e8-9c3c-c780ae48f514.png)    - Commit 2: Changed the order of execution in the main method. The argument processor needs the export factory. I do not know  if the processing of the preferences will influence the cli functionality?  Fixes #4038   - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Manually tested changed features in running JabRef TL DR: I guess we should use the second method. Lets see what the others think.  I guess the second solution is fine  if not  we will find out. I think we could also extract some methods here for the initialization of the migrations  and then the preferences from the start method and afterwards instantiate the argument processor so the start method gets more clear. ||
4056,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,Extract old Bibtex key generation action Resolves #4000   This is one for the JavaFX guys. We need a new JavaFX action here or duplicate parts of the code.  I already marked the respective code locations with TODOs. - We could use the FXDialogService but there is an additional checkbox for "Do not ask this question again" in the old dialog. - Also  I do not know how to properly extract such Worker code for JavaFX  otherwise I would have to duplicate the code on all occurences I would suggest you directly implement this on the maintable beta branch. Otherwise we will get the hell of merge conflicts and we would need to rework the AbstractWorker again. Have a look at the functionality of  BackgroundTask.wrap(()   || Is there any possibility to extract and reuse actions in JavaFX  except from the Action in controlsfx? || Sure   we do this all the time. In the maintable-beta branch we use the `OpenXYZAction extends SimpleCommand ` class for the things in `org.gui.jabref.actions ` || This is also functionality from a beta framework.... || > We could use the FXDialogService but there is an additional checkbox for "Do not ask this question again" in the old dialog.  The DialogService has an option for this  where you can add a consumer? which then should store the property || Ive now extracted the code of the cite key generation of a single entry and extended it by a warning dialog that is shown if a previous key is about to be overwritten.   With these changes  the buttons in the entry editor show now a button text instead of a single icon. Fixing this requires https://bitbucket.org/controlsfx/controlsfx/pull-requests/706 to be merged. Thus  in the current state this PR is not mergable but can nonetheless be reviewed. || Thanks for your efforts!  > With these changes  the buttons in the entry editor show now a button text instead of a single icon.  What does this mean? Why text?  || Instead of the icon  the text "Generate key" appears. This is due to a limitation of the controlsfx library that we use (hopefully  my PR there gets merged in the next few days). https://bitbucket.org/controlsfx/controlsfx/pull-requests/706/add-overload-of-configurebutton-accepting/ || Can we merge this now? Is it released by controlsfx? || Yes  my PR is finally integrated into the snapshot build of controlsfx and thus Ill merge it now. || 
4057,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix #4041 to make Push to Application work again on OSX. For unknown reasons  it seems no longer possible to give the command as one single string. I created a test class and not even simple commands can be executed. Im not sure when this changed but giving the command as a list of arguments works as expected.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4058,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,CPU leak See #3943 - Fix Java to later version - Pretty restrictive for the user unfortunately! @JabRef/developers I worked a little bit with Jabref 4.2 and the new JDK and I feel like also the problems with duplicated entries in the search box and freezes are less frequent now. Maybe the constant load provokes these issues even more. Therefore  I vote to release a new JR version where we force the users to upgrade to the newest Java JRE/JDK!  Also refs #3989. Fixes #3943. || Let me finish #4015 today and we can go for a release.  || As this really improves the situation (at least for me)  I think we should definitly include this in our release. || @stefan-kolb Which tool did you use for the CPU monitoring?  I tried `java version "1.8.0_171"` and it does not seem to cause high CPU load.  Focused entry editor:  ![grafik](https://user-images.githubusercontent.com/1366654/40957997-e80feefc-6897-11e8-9c61-13a5e5543d56.png)  Unfocused entry editor:  ![grafik](https://user-images.githubusercontent.com/1366654/40958029-0ae5cbfe-6898-11e8-8a8f-d45c041bc6da.png)   || I used the visualvm. It is actually not caused by the entry editor but by switching between programs. Let me check v1.8.0_171. || 
4074,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,0,Mac graphics Resolves #4070   @LinusDietz @halirutan  Can you also take a look as you own a mac  please 😄 Should also be backported to v4.x || @stefan-kolb I certainly can test something  but what exactly should I look out for? With JabRef open  should my Macbook use the integrated graphics-card or the fast one? Or should I only test if JabRef works? || It should use the integrated card. || FYI: I just upgraded from Jabref 4.2 to 4.3.1. I had to correct the plist again to have jabref use the integrated graphics card  see [https://github.com/JabRef/jabref/issues/4070](https://github.com/JabRef/jabref/issues/4070). So I guess that we are just waiting for your corrections to be merged. || It seems to work. My *Activity Monitor* says that JabRef does not require high-performance GPU. Is there anything else I should look out for? || I guess thats it. @LinusDietz  || I guess that is the correct indicator. I originally used gfxCardStatus to verify this  but I now also compared both cases (old and new) with activity monitor  and it is consistent.    > On 7. Jun 2018  at 15:16  Patrick Scheibe <notifications@github.com> wrote: >  > It seems to work. My Activity Monitor says that JabRef does not require high-performance GPU. Is there anything else I should look out for? >  > — > You are receiving this because you commented. > Reply to this email directly  view it on GitHub <https://github.com/JabRef/jabref/pull/4074#issuecomment-395416335>  or mute the thread <https://github.com/notifications/unsubscribe-auth/AFhuZMssUCntYIDOn1YyuabJ7aca1-1Uks5t6SetgaJpZM4UXrHK>. >    ||
4100,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,Migrate Review field in entry preview to comment Migrate Review field in entry preview to comment Replace review with comment in every layout file Fixes #4098  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Added a test case || I would vote for merging this  I refactored the tests and the migrations so that they no longer call  Globals.prefs. _ More mocking is not really possible.   ||
4106,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Opens the directory of the currently edited file when opening a new file Opens the directory of the currently edited file when opening a new file Fixes #4097  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [X] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Done! ||
4107,1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,1,0,0,0,Fix a few things in entry editor <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes two things: - Reactivate next/previous entry shortcuts in entry editor (Fixes #4104) - Preserve focus of text fields in entry editor when the user switches between entries  Please merge and do not squash.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4116,1,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,Dont report journal name as abbreviated when full name  abbreviated name <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #4115.   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks for the feedback. Your solution was my initial idea but then went on to modify the `JournalRepository` because other (potential) callers of the repository also profit from the change. I wouldnt consider "Bioinformatics" abbreviated when its also the full journal name (which is of course a question of definition).  In the end its almost a question of taste and Im also fine changing it to your solution (if you think the additional work is worth it  -) ). || That was exactly my thought too (that Bioinformatics is no abbreviation of bioinformatics)  but then we should rather cleanup the list than the code?! But then I thought  ok they want to have this journal in there... || 
4123,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Fix convert to bibtex moves contents of the file field Fixes #4120  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Yep that was my thought  too ||
4124,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Saves and reloads window state on close and on open Saves and reloads window state on close and on open. Opens by default maximized.  Fixes #3859  ----  - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [X] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Code loooks good. 👍  PS: If you just enter # followed by the issue number here on github  the issue will be auto-linked and if you add sth like "Closes" or "Fixes" + # + issue number it will be auto closed when the PR is merged || 
4137,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,Fix #3805: dash correctly terminates commands in layout files <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #3805. Now commands terminated by a hyphen (like `\edition-`) work correctly.  Way back in 2011  Morten added the extra check for hyphens (commit 392bc7a6dd215eb23766378aa90e3995d0847bb7). However  Im not aware of any field that has a dash in it  so Im not sure what was the reason for the change (I couldnt find an old bug report).  Also refactored a bit the layout tests.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4138,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,single line text fields Solution for [#4126](https://github.com/JabRef/jabref/issues/4126). Ive used text formatter to force single line behavior. Hope its enough :) Particular fields  that should contain only one line  are stored in immutable set.   // 7 tests have failed  but they also had failed before on master: > MrDLibImporterTest. testImportDatabaseIsHtmlSetCorrectly() > MrDLibImporterTest. testImportDatabaseIsTitleSetCorrectly() > MrDLibImporterTest. testImportDatabaseIsYearSetCorrectly() > XmpUtilReaderTest. testReadArticleDublinCoreReadRawXmp > XmpUtilReaderTest. testReadArticleDublinCoreReadXmp > XmpUtilWriterTest. testWriteMultipleBibEntries > XmpUtilWriterTest. testWriteXmp Cant we just change the underlying GUI component from TextArea to TextField? Also please use plain Java for making fields immutable or final   not com.google.common.collect.ImmutableSet if possible. || @stefan-kolb how about now?  Ive added EditorTextField class  similar to EditorTextArea  and extracted addToContextMenu to interface (ContextMenuAddable). Also i had to change parameter type TextArea to TextInputControl in few places in order to use classes in generic way. || That looks good so far for me! Havent tested it yet  but codewise it looks good  (Although the final in front of method parameter is suerpfllous || I use finals to avoid stupid bugs  like reassigning variable. With them my IDE automatically underlines such stuff. Another thing is that Ive decided to make code more readable  so Ive put new lines between SimpleEditor constructor parameters (because there was one long line)  and now Codacy yells about that. Should I extract those parameters to another class  like SimpleEditorParameters or sth? || Ping 😄  ||
4181,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,Fix #4134: no longer freeze when clicking browse in aux import dialog <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Yet another interaction between Swing and JavaFX threads...  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4184,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Fix #3062: Ctrl + F selects search field again <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Shortcut was simply not registered. Also remove a bit of legacy code which is no longer needed.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4212,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Make attached files relative to the file directory Fixes #4201  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4245,1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,Fix style issues in about dialog <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #4202 and a few other small style related issues. I also created a little new app that make it simple to test the display of JavaFX controls. As of now  I only added a lot of buttons in different styles and states: ![image](https://user-images.githubusercontent.com/5037600/43546917-155834c2-95da-11e8-89d8-485544d0cd45.png)  Please merge instead of squashing the commits.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Lgtm  || I am merging this now ||
4246,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,Solved #3823 File annotation This pull request solved #3823  and improved the new line remover.  # Removed hyphens and newlines of highlighted text  I removed all new lines which **do not have preceded `.` or `:`** becaues I think `.` or `:` is often used to start a new paragraph.  Test text:  <img src"https://raw.githubusercontent.com/upupming/paste/master/img/test-selection.png" width300/>  Test result:  <img src"https://raw.githubusercontent.com/upupming/paste/master/img/20180802201505.png"/>  There is another problem with the regular expression `(\r?\n|\r)` when I try to use `(?<![.|:])(\r?\n|\r)` for excluding the new line end with `.` or `:`.   If its on Windows  the `\r\n` will be replaced with a whitespace  and it is OK. However if we encounter `.\r\n`  the `.\r` will be reserved and the `\n` will be replaced by a whitespace. In this way  the `.\r` will not be shown as new line int the field  and we do not need this whitespace. So instead we should change `.\r\n` to `\r\n` directly.  So I use javas `%n` to distinguish new line wisely.  # Font size of summary on the left changed to 10px  # Summary text wrapped  # The Final example:  <img src"https://raw.githubusercontent.com/upupming/paste/master/img/changed-file-notation.png"/>   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) @tobiasdiez Thanks for your review! I will fix them soon. || Hi  I reverted the change for `RemoveHyphenatedNewlinesFormatter` and `RemoveNewlinesFormatter`. I have also fixed the tooltip for marking summary.  **Before** <img src"https://raw.githubusercontent.com/upupming/paste/master/img/20180803091540.png"/> **After** <img src"https://raw.githubusercontent.com/upupming/paste/master/img/20180803092209.png"/>  Now Im going to add some unit tests! || All done~ 😃  || Thanks for the quick follow-up! Looking forward to your next PR  ) || 
4252,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix attach file does not relativize file path Fixes #4241   Attached files were only made relative before if you hit the browse button  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4255,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Fix for issue koppor 254 (Auto cleanup url) <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> This issue is [koppor#254](https://github.com/koppor/jabref/issues/254). Set auto cleanup url links on paste action and add cleanup url menu item to the url field Most codes are modified from a previous contributor in https://github.com/JabRef/jabref/pull/3394.  Currently the menu item list changed as follows(with defalut editor menu  change case  convert  etc): ![](https://user-images.githubusercontent.com/36831746/43885542-c2fe8826-9beb-11e8-9814-250861513426.png) But I am not sure whether its necessary to add defalut editor menu. If not the menu item list would be: ![](https://user-images.githubusercontent.com/36831746/43885580-e411765e-9beb-11e8-99b2-6a8756bf0cd1.png)   I have run `./gradlew check` but failed. But even if I switch to the master branch which is the same as JabRef/master  the build still failed with the same error message like: ![](https://user-images.githubusercontent.com/36831746/43886264-c4c4b8d6-9bed-11e8-9126-e3a0a3ac82d6.png) But it seems that I did not modify related classes. I do not know what went wrong. It confuses me a lot.  I am looking forward to your feedback.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks for your contribution. The gradlew check often fails locally due to some platform specific encoding issues in the terminal. You do not reed to run it as it just takes time to run all the test.  We use Travis CI (Continous Integration) for testing.  As long as the Travis CI test does not show any errors  its good!) In case Travis fails just click on it and you can see where it exactly failed. ||
4259,1,0,0,0,0,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Remove Spin comments Fixes #4192  Comments mentioning Spin were removed or replaced with a mention that BackgroundTask is now used.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4260,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix for issue 3959: migrate all tests to JUnit 5 <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Hi  Im trying to fix the issue #3959   and I have some problems here. Can someone help me?  **1. Some tests do not seem to have a parameter source** Such as  `BibTeXMLExporterTest.java`  `MSBibExportFormatTestFiles.java`  `ModsExportFormatTestFiles.java`  and so on. Since I cant get feedback from both Travis CI and my IDE  I couldnt do anything at the moment. ![image](https://user-images.githubusercontent.com/25541992/43997706-ee482a88-9e15-11e8-9b43-9b9f9853c150.png)   **2. Something about the external libraries** For `MainArchitectureTestsWithArchUnit.java`   `testCompile com.tngtech.archunit:archunit-junit:0.8.3` **isnt enough for migrate this test to JUnit 5.** Just a few days ago  `ArchUnit` just supported tests with only JUnit 5 package. But this feature needs a `testCompile com.tngtech.archunit:archunit-junit:0.9.0` and as far as I know  this version has not been released yet. For `CiteKeyBasedFileFinderTest.java`  I havent found an extension in JUnit 5 for the `MockitoJUnitRunner.class` in JUnit 4. And it seems that their (mock) official version hasnt been release yet  too.   **3. The Database Test** As I can see  those tests have already been migrated partly to JUnit 5. But the rest of it is the PROBLEM. Ive tried to migrate `DBMSProcessorTest.java`   but the code is no longer concise after that. For example   ![image](https://user-images.githubusercontent.com/25541992/43997780-26078368-9e18-11e8-9fce-43d293fedf88.png) this is the old version  and ![image](https://user-images.githubusercontent.com/25541992/43997784-3e0ae356-9e18-11e8-8073-d43eeb12f0d5.png) that is the new version. And that is only part of it. The reason is that I couldnt pass the parameters to the `@BeforeEach` method in JUnit 5  but JUnit 4 can use those local variable to pass the parameters. I think this is where the difference occurred.   **4. The GUI Test** I just change the `@Category` annotation to `@Tag` annotation  as I have known that those tests are mostly obsolete.   **5. About CleanupWorkerTest** This test is not hard to migrate from JUnit 4 to 5. But when I finish  and run the tests on my IDE  two tests failed. And the error message is quite weird. It seems that the worker does not work in JUnit 5 tests. ![image](https://user-images.githubusercontent.com/25541992/43997847-be8c685a-9e19-11e8-9c3a-a911d9daeafe.png)   And if there are any errors or something can be improved in other tests that I didnt mention  please let me know! Thanks!   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks for your work! Most of the conversion looks good. Concerning your questions: 1. The exporter and importer tests use a filename-based convention to find and check the tests. For example   https://github.com/JabRef/jabref/blob/57126659b4f8ff58c9403af0f4d6aabccf77058c/src/test/java/org/jabref/logic/exporter/ModsExportFormatTestFiles.java#L59-L66 finds all files that start with `Mods`. There are usually two files with the same name: one with `bib` ending and one with `xml`. The tests then should test that exporting the content of the bib file using the Mods-exporter give the contents of the `xml` file. 2. Yes  there is not yet a release of the new archunit. So  for now  the architecture tests can stay using Junit 4. The mockito runner is not really needed. Its only purpose is to support the `@Mock` annotation  but you can always use `variable  mock(...)`.  3. Currently  there is no neat way to handle this problem (see the open https://github.com/junit-team/junit5/issues/878). 4. Looks good. 5. I think  the problem is the setup in https://github.com/JabRef/jabref/pull/4260/files#diff-2e1fadfb1af8461d9d830981c338f225R64. The bib file should reside on the same level as the pdf folder (and not within). || @tobiasdiez  Thanks for your answer! Ill have a try soon. || @tobiasdiez Hi! Ive done some improments. But I still have some questions.  1. I understand what you say. But when I try to enable this line  `stream.forEach(n -> System.out.println(n)) ` with no other code changed  I still get nothing. Looks like therere no such files on my laptop. I suspect that it is the cause of this problem.  2. Done.  3. Ill keep those tests for the time being  as that kind of code is just frustrating. And of course  if you have any requirements  Ill use the "complicated" way to handle it.   4. Done.  5. I have a try  the `cleanupRelativePathsConvertAbsoluteToRelativePath()` test passed  but the `cleanupRenamePdfRenamesRelativeFile()` test still failed. So I was wondering if you can give me a further guide about this? It can be a big help. ![image](https://user-images.githubusercontent.com/25541992/44014458-9f8d8aca-9efe-11e8-9a5b-64a50af1756f.png)  BTW  the tests in `FileUtilTest.java` use `create()` method  which is totally not recommended in the API guide. So when migrating it to JUnit 5  I name a folder manually to imitate the original tests. And you can see this in the new version of `FileUtilTest.java`. If I do something wrong  tell me and Ill do my best to fix them soon. || The failing architecture test is one thing I already experienced a  while ago. Its because it checks for public class.  I was so free to create a  simple patch which fixes this. simply remove the .txt extension after download and execute  ` git am < 0001-fix-architecture-test-by-removing-check-for-public.patch`  [0001-fix-architecture-test-by-removing-check-for-public.patch.txt](https://github.com/JabRef/jabref/files/2283533/0001-fix-architecture-test-by-removing-check-for-public.patch.txt)  || The files are in `src\test\resources\org\jabref\logic\exporter` but for some reason the tests do not find them (even on travis) and thus fail.  || @tobiasdiez Thanks for the previous comment! Ive got a little bit about the "cannot find test files" problem. And Ive fixed them in 2 commits. The first uses the origin JUnit 4  the second uses JUnit 5. But some tests in `ModsExportFormatTestFiles.java` and `MSBibExportFormatTestFiles.java` failed. They failed both in the origin JUnit 4 and the version I write JUnit 5. Here is an example for `MSBibExportFormatTestFiles.java` . ![image](https://user-images.githubusercontent.com/25541992/44089397-320a7a34-9ff9-11e8-8002-8034da799d37.png) ![image](https://user-images.githubusercontent.com/25541992/44089412-46064ae0-9ff9-11e8-8e95-43068246a88f.png)  So is that OK just for the migrate task? Is there something else I can do to improve that?  And also a big thank for @Siedlerchr s patch.  )  ----------------------------------------------------------  Hmmm  looks like I still got the wrong path... || I remember that we had problems with this before  that some resources were not int he right folder. I will take a look at that. || That now some of the exporter tests fail  were my fear. This probably needs further investigations and fixes for the exporter  thus it goes beyond the current PR. Thus  I propose to mark the tests as ignored/disabled for now and we will come back later to fix them.  || I am just investigating this and I think I found the issue with the paths || Its a classpath issue  for exmaple: ```         Path path  Paths.get(MSBibExportFormatTestFiles.class.getResource("").toURI())   > Returns E:\workspace\JabRef\jabref\bin\main\org\jabref\logic\exporter ```  although it should be bin/test || Okay  I found the issue with the paths. I really wondered if it ever worked... But well  now it does. The key is to point to one existing resource. The rest can be found dynamically.   And this leads us actually to some failing tests. But I would ignore that for the moment. That is a difference.   @Metatronwings  You can use this patch as a start for all the related importer/exporter tests.  [0001-fix-resolving-of-paths-in-msbibexporterpath.patch.txt](https://github.com/JabRef/jabref/files/2287509/0001-fix-resolving-of-paths-in-msbibexporterpath.patch.txt)  || Im very glad to see this issue will be resolved by us soon. Only a few more small questions:   **1. Some tests have not been migrated yet.** The `DBMSSynchronizerTest.java` and `SynchronizationTestSimulator.java` have not been migrated yet as there is no good way to handle chaos code after migration. (See example in `DBMSProcessorTest.java`) Do I need to migrate them? The `MainArchitectureTestsWithArchUnit.java` have not  too. As there is not yet a release of the new archunit.   **2. Since I didnt migrate them  how should I write the** `CHANGELOG.md` **?**  And thanks for all of you! 👍 || @Metatronwings  Its okay  we will sure find a way for them in the long run. Not that important. You do not need to add a changelog entry  as this is only a code-quality issue which will not have any impact on the normal JabRef user.   We hope you enjoyed it and if you want you can also further contribute. Looking to see more from you  ) || I just converted the two other classes with the legacy file methods to use the nio stuff. [0001-include-main-java-in-resources-as-well.patch.txt](https://github.com/JabRef/jabref/files/2290800/0001-include-main-java-in-resources-as-well.patch.txt)   || Sorry  but I must do that tomorrow morning because its 12:00p.m. in my timezone. Thanks for the patch!  || 
4268,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,Convert Part of the Issue#3861 Quality->Cleanup entries <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> I have done some changes about convert the swing dialogs to javafx. Its about Quality->Cleanup Entries.  But when the component became the node  it does not work. I mean these checkbox wont change its value when I click them.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Please merge the latest version of upstream/master repo from jabref. And the checkbox should be working again Here is a [tutorial](https://help.github.com/articles/fork-a-repo/#step-3-configure-git-to-sync-your-fork-with-the-original-spoon-knife-repository) on how to setup the remotes.   || I went over the code again and it is now ready for merge from mine point of view. ||
4275,1,0,0,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Changed the behavior of the field formatting dialog I made the loops for formatting all fields in the FieldFormatterCleanup class test for not being the KEY_FIELD.  I originally had this in the cleanupSingleString method to prevent KEY_FIELD from being cleaned up (reformatted) entirely  but decided to let the user specifically format that field.  When the user chooses to format all fields at once  however  the KEY_FIELD will be not be reformatted. This solves issue [#4148](https://github.com/JabRef/jabref/issues/4148) I created a few unit tests.  For the last one  I hard coded the LaTeX version of the "ç" character. || My pleasure! || 
4289,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fix npe in Merge entries dialog Fixes #4233 fix fx thread error convert file to path  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Changed that ||
4291,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,fix loading and storing of XMP Field Exclusions Fixes #4072   @koppor  I am not that into the XMP stuff  are those "fields" I can add there bibtexfields which I can exclude from the export?  Then it would make sense to have a combobox analogous to the Cleanup panel with all fields  Edit// Decided to add the combobox with all fields  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> ![grafik](https://user-images.githubusercontent.com/320228/44588230-6cbc5080-a7b5-11e8-909e-ac190ceedc95.png)   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) I am going to merge this now if no further comments are coming  ) || ![grafik](https://user-images.githubusercontent.com/320228/44726074-2fb6cd80-aad7-11e8-95ea-3cea12735751.png)  ||
4299,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,0,0,Fix freeze on import into current library Execute import inspetion dialog in swing thread  Fixes #4296  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4311,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix drag and drop in entry editor Fixes #4305  Fixes  #4087 (comment  same issue described)  consistent with preview panel behavior  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) As its a copy and paste of the method handling in the Preview Panel I merge this now ||
4311,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix drag and drop in entry editor Fixes #4305  Fixes  #4087 (comment  same issue described)  consistent with preview panel behavior  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) As its a copy and paste of the method handling in the Preview Panel I merge this now ||
4312,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Convert New entry dialog to javafx Followup from  #4266  bibtex +custom  ![grafik](https://user-images.githubusercontent.com/320228/44994592-989eb980-af9f-11e8-9f29-7d95413c42aa.png)  biblatex + custom ![grafik](https://user-images.githubusercontent.com/320228/44994753-62ae0500-afa0-11e8-911b-4326879584c9.png)    <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Adressed all comments  The Duplicate check is actually different handled and is slightly coupled to the import inspection dialog. This is stuff for a new PR. || I would like to merge this now  if no further comments are added.  ||
4317,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,Fix that "Rename and move file" throws file not found exception Fixes #4307. Moreover  I refactored a bit how files are renamed/moved to the default file directory. This should make it easier to reuse the code.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Ill merge this now so that progress on https://github.com/JabRef/jabref/issues/4306 is not blocked. ||
4325,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,Wrap preferences in scrollPane as well do not override pref size  Quick fix. We definitively need to redesign/rearrange some prefs  Fixes #4322  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4327,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Save sort order column of main table Fixes  #4224 Fixes #3850  I tired to fix the above issue. But I have the problem that the column sort listener is never fired when the sort order is DESCENDING.   Edit// I also fixed an FX Threading error  when opening a new library (the snackbar output was not onFX Thread)  @tobiasdiez  Any idea if I did sth wrong oder have to set the value somewhere else?  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Sorry no idea  would also need to debug this to see whats going on. || Hm  this is odd. I created a simple test application based on the code here https://code.makery.ch/blog/javafx-8-tableview-sorting-filtering/ and I experience the same behaviour || Apparently the SortOrder alone was not sufficient: https://stackoverflow.com/a/52255643/3450689 It works now || I will try if I can store the sortOrder as well.  || I now managed to save the whole sort oder for multiple columns.  ||
4327,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Save sort order column of main table Fixes  #4224 Fixes #3850  I tired to fix the above issue. But I have the problem that the column sort listener is never fired when the sort order is DESCENDING.   Edit// I also fixed an FX Threading error  when opening a new library (the snackbar output was not onFX Thread)  @tobiasdiez  Any idea if I did sth wrong oder have to set the value somewhere else?  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Sorry no idea  would also need to debug this to see whats going on. || Hm  this is odd. I created a simple test application based on the code here https://code.makery.ch/blog/javafx-8-tableview-sorting-filtering/ and I experience the same behaviour || Apparently the SortOrder alone was not sufficient: https://stackoverflow.com/a/52255643/3450689 It works now || I will try if I can store the sortOrder as well.  || I now managed to save the whole sort oder for multiple columns.  ||
4337,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fix export of corporate author to MSOffice Fix tests Fix  #4329    The underlying problem is the same as in #4152  However  I came up with a workaround for MSOffice.  1. Getting the original field 2. Check for corporate author (braces start and end) 3. get latex free value 4. Readd braces for corporate  5. Parse author  The only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces. That one will probably be interpreted as corporate.   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) The author parser is not the problem  as long as the braces are present corporate authors are detected and correctly recognized.    its the latex to Unicode converter who kills the braces from corporate authors.  This is the core problem. See other linked issue.  And I currently see no easy way to either distinguish latex macros and corporate braces.  ||
4337,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fix export of corporate author to MSOffice Fix tests Fix  #4329    The underlying problem is the same as in #4152  However  I came up with a workaround for MSOffice.  1. Getting the original field 2. Check for corporate author (braces start and end) 3. get latex free value 4. Readd braces for corporate  5. Parse author  The only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces. That one will probably be interpreted as corporate.   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) The author parser is not the problem  as long as the braces are present corporate authors are detected and correctly recognized.    its the latex to Unicode converter who kills the braces from corporate authors.  This is the core problem. See other linked issue.  And I currently see no easy way to either distinguish latex macros and corporate braces.  ||
4338,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Added new keyboard shortcut "ctrl+E" for closing the entry editor. (#4222) Enhancement presented here [ Fixes #4222  I have added a new keyboard shortcut for closing the entry editor by using "Ctrl+E".  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thank you! First time here.  || Thanks for your contribution!  👍  Looks good to me as well! We hope you are interested in contributiong some more. ||
4355,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Auto trim url field <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> fixes [#4288] Created a formatter to auto trim all kinds of whitespace defined by java ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) _No need_ - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4367,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,0,0,0,0,ArXiv fetcher support http url In this PR I wanted to fix the issue from [koppor#328](https://github.com/koppor/jabref/issues/328).  I simply used existing code in the same file which just takes the identifier at the end of the URL and perform a search.  For example: _https://arxiv.org/abs/1802.01168_ to _1802.01168_  The error dialog does not appear anymore and a new entry is made.  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [X] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Yeah  looks good to me! I exactly had the same issue yesterday  that I could not paste the whole url ||
4369,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fixed testExportAsModsAndThenImportAsMods <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> [#4272](https://github.com/JabRef/jabref/issues/4272)  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks for quick follow-up! ||
4379,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Change latex command handling only for XML Chars Refs #3838  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [X] Manually tested changed features in running JabRef  Tried to solve this issue in PR #4108. This approach is now more dedicated to the XML docbook export and not applied to all fields as the first PR was.  I am also not sure  if this issue is related to #3781  #3644? @bernhard-kleine: I exported your provided bib entry via docbooks exporter into XML. Please check the result and let us know  if there is something missing.  [testBracesResult.xml.txt](https://github.com/JabRef/jabref/files/2487123/testBracesResult.xml.txt) [testbraces.bib.txt](https://github.com/JabRef/jabref/files/2487124/testbraces.bib.txt)  I will write tests based on your files  if the export is now correct. || Thank you @johannes-manner  this looks good to me. For the testcase  maybe we could skip those entries where there are no latex braces in the title. || This is a separate item from the docbook5 export #4319 where I am waiting for feedback. || Added two test cases for (1) removed words based on an error during the latex command processing and for (2) unicode problems based on the same error. || Ping. What is the status @johannes-manner? || Oversee the comments and the ping. Sorry for that :) ||
4379,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Change latex command handling only for XML Chars Refs #3838  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [X] Manually tested changed features in running JabRef  Tried to solve this issue in PR #4108. This approach is now more dedicated to the XML docbook export and not applied to all fields as the first PR was.  I am also not sure  if this issue is related to #3781  #3644? @bernhard-kleine: I exported your provided bib entry via docbooks exporter into XML. Please check the result and let us know  if there is something missing.  [testBracesResult.xml.txt](https://github.com/JabRef/jabref/files/2487123/testBracesResult.xml.txt) [testbraces.bib.txt](https://github.com/JabRef/jabref/files/2487124/testbraces.bib.txt)  I will write tests based on your files  if the export is now correct. || Thank you @johannes-manner  this looks good to me. For the testcase  maybe we could skip those entries where there are no latex braces in the title. || This is a separate item from the docbook5 export #4319 where I am waiting for feedback. || Added two test cases for (1) removed words based on an error during the latex command processing and for (2) unicode problems based on the same error. || Ping. What is the status @johannes-manner? || Oversee the comments and the ping. Sorry for that :) ||
4379,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Change latex command handling only for XML Chars Refs #3838  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [X] Manually tested changed features in running JabRef  Tried to solve this issue in PR #4108. This approach is now more dedicated to the XML docbook export and not applied to all fields as the first PR was.  I am also not sure  if this issue is related to #3781  #3644? @bernhard-kleine: I exported your provided bib entry via docbooks exporter into XML. Please check the result and let us know  if there is something missing.  [testBracesResult.xml.txt](https://github.com/JabRef/jabref/files/2487123/testBracesResult.xml.txt) [testbraces.bib.txt](https://github.com/JabRef/jabref/files/2487124/testbraces.bib.txt)  I will write tests based on your files  if the export is now correct. || Thank you @johannes-manner  this looks good to me. For the testcase  maybe we could skip those entries where there are no latex braces in the title. || This is a separate item from the docbook5 export #4319 where I am waiting for feedback. || Added two test cases for (1) removed words based on an error during the latex command processing and for (2) unicode problems based on the same error. || Ping. What is the status @johannes-manner? || Oversee the comments and the ping. Sorry for that :) ||
4396,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fixes for all mods exporter tests <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  [#4272](https://github.com/JabRef/jabref/issues/4272) ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Github is a bit buggy atm  so I do not know which one is the right pr || @Siedlerchr This is the right PR. This wasnt showing up previously  so I created another PR. But after Githubs issue got fixed  found that both PRs were showing up. So  I closed the other one. Sorry for the confusion. ||
4405,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,show dialog before creating entry #4360  Now When you click new entry in a right toolbar  it open an extra dialog where user can select a entry type Change tooltip to New Article ||
4408,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Add a preference to add files in entry editor This PR for #4356 mainly involves  Fixes #4356  - Allowing users to choose how they want to link/copy/rename/move files in Entry Editor through Preferences - Apply same behavior of drag and drop for the whole entry editor instead of a different behavior in file view of the entry editor. ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues/194) I will log an issue to help.jabref.org if these changes are approved. Please feel free to suggest any changes. Thank you!  ![image](https://user-images.githubusercontent.com/7998085/47543328-4004e200-d8a7-11e8-9a5d-fb89a600079a.png) Codacy seems to have stuck in Pending/Analyzing state. Is there something that I need to do from my side so that its analysis is completed? || Hit it was probably stuck because you had a merge conflict in the changelog.md file.  I resolved this.  PS: For future contributions create a new branch and do not work on master (Reduces potential conflicts) || Thanks!  || @tobiasdiez Thanks for reviewing. For: > The preference value should only be treated as the default action (when no modifier is pressed)  I do not think there is a straightforward solution using the [DragEvent](https://docs.oracle.com/javafx/2/api/javafx/scene/input/DragEvent.html) used in the code. This is because I wont be able to detect the modifiers pressed or confirm whether no modifier is pressed. I will keep looking into this  let me know if you have any guidance to resolve it. || The code you edited had this functionality before. You can get the modifier using `event.getTransferMode()` (see also the code comments). || What will happen in a case where the TransferMode is `MOVE` and would have no `Shift` key pressed at that time? The comment states - shift on win or no modifier How would I differentiate between TransferMode.MOVE (without Shift key pressed) and dragDropped behavior from Preference option (as we want this to be read only when there no modifiers)? For the other two modes (LINK and COPY)  I was thinking to do an `OR` with preference option but that would not be applicable for TransferMode.MOVE.  || Its probably not possible to differentiate between move  no modifier and move  shift. Thus  I would suggest the following behavior: move -> do what is configured in preferences (default: move  rename and link file) link -> link file except if preferences  link  in this case move  rename and link copy -> do what is configured in preferences (default: move  rename and link file)  In this way  the user can configure the default action on windows and linux  but is also possible to only link the file if he wants to. || Just need some clarification on the behavior for link. I got that if the transfer mode is link  then we should allow the user to link file. But if the preference is set to link with link as the transfer mode then why should we move  rename and link file? Shouldnt we follow move  rename and link when preference is set to move  rename and link and not when it is set link? || I wasnt sure about this either. My rationale was to allow for the following behavior: 1. Users selects "Move & Rename" as default action:   - No modifier -> Move & Rename   - Ctrl ( TransferMode.Link) -> Link  2. Users selects "Link" as default action:   - No modifier -> Link   - Ctrl ( TransferMode.Link) -> Move & Rename  Because otherwise the users has no option to perform "Move & Rename" if he selected "Link" as the default action. But Im very open for suggestions if this behavior is counter intuitive. || I think your option is good. But I just feel that it should be documented that what keys would be used for each option in preferences tab in brackets. One more suggestion that we can consider is as follows:  - pref  move         : shift or no modifier > move 	: ctrl > copy  	: alt > link - pref  copy 	: shift or no modifier > copy 	: alt > link (alt is the "default" key for linking so user has one less thing to remember) 	: ctrl > move  - pref  link 	: shift or no modifier > link 	: alt > move 	: ctrl > copy (ctrl is the "default" key for copying so user has one less thing to remember)  Let me know your thoughts on this. || @shahamish150294  Please be aware that the keys differ on other operating systems  e.g. Linux or Mac. and not all operating systems differ between all modifiers.  See my code comment regarding Ubuntu somewhere   https://ux.stackexchange.com/questions/83748/what-are-the-most-common-modifier-keys-for-dragging-objects-with-a-mouse || Your suggestion looks good to me.  Whatever behavior we choose in the end  it should be documented in the help and even better directly during the drag & drop action  e.g. something like the following and replacing "sposta" with the real action to be performed (but this is something for a new PR). ![image](https://i.stack.imgur.com/a5Rtu.png) || I have added the logic we discussed above and fixed the LinkedFilesEditor to allow moving of the files within the File Editor. I also updated the issue on help.jabref to follow the behavior as we have discussed here for documentation. || If @tobiasdiez  gives his okay  we can merge this! || 
4413,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Fix group hit counter when adding entries Fixes #3537 by replacing the EventBus subscription by a JavaFX listener. Lgtm  ||
4415,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Searchable/Filterable preferences Fixes #1019  Up so far I just created the textbox for searching and fixed a deprecation warning. I added @paulKra as collaborator on my fork.  Last step so far: I was asking myself how I can access the text of the different Preferences-Categories and I was wondering if I need a new Interface (something like PrefTabContents or PrefTabContainer for it or extend existing PrefsTab Interface.   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) First of all  thanks for your contribtion! 👍   If you look at the code fo the old PreferencesFilterDialog  you see that the data comes from the `JabRefPreferencesFilter` class in org.jabref.preferences.   If you have further questions you can also ask in out gitter chat. https://gitter.im/JabRef/jabref   Edit// Adjusted my comment || The easiest solution is probably to transverse the complete control node tree and take the text of all label controls. || @WtfJoke  @paulKra  What is the current status here? The code looks already promising. It would be really nice if you could finish this!  || @Siedlerchr Its still on my todo list. Havent found the time to investigate further and were stuck on how I display the filtered preferences.   I think @paulKra doesnt work on it  he still didnt accept my invitation link to my forked repo || Okay thanks for the udpate! Take your time. If you have any questions just ask here or in gitter and we try to help || Maybe the JFXHighlighter from https://github.com/jfoenixadmin/JFoenix/ works to highlight the matches  || @tobiasdiez Thanks for the hint  however I tested it locally but I didnt liked it that much (for example it did mark the buttons for importing/exporting/show/reset preferences also).  If I dont find alternatives I think about using it anways. || I tried the _JFoenix_ library but it didnt quite work as expected  for e.g  labels remained highlighted even after changing the query text.   What I propose is to highlight the matched labels by styling their background with a different color  we keep track of the highlighted labels  and on every input change reset the highlighted labels and update it with new ones (this could be optimized).  Note: The entire label is highlighted not a part of it.  || @CaptainDaVinci Sounds like a good plan. The [JavaFX pseudo class](https://thierrywasyl.wordpress.com/2018/08/14/style-class-vs-pseudoclass-in-javafx/) seems to work nicely for this. || Thanks for sharing the article @tobiasdiez . I added the search highlight feature in the latest commit.  However  I have made use of `Labeled` objects hash code when inserting into the `Map`  this would result in a list of all labels instead of grouping them by their text. (Could be replaced by a List instead).  To avoid this  another approach would be to map the texts to a set of labels as well. But  considering that the number of labels wont be too large I do not think there will be any significant gain in performance. || The current approach looks good to me. Im however wondering why you have the map as the relation label (or text) -> tab. For me  the converse relation tab -> label feels more natural. In the end  it probably does not really matters.  Please also use a `MutliMap<S  T>` instead of `Map<S  Set<T>>`. || Come to think of it  the converse relation does seem more natural and has a simpler implementation. Ill make the required changes and push the code.  Edit:  1. I am thinking about how to perform better matching of labels  for e.g  one of the tabs has a label named _"Sending of emails"_  a query such as _"Sending emails"_ would not match any labels but in practice I think it should. One possible solution is to split the query string (delimited by space) and check if any token is present in the label name.  2. Right now two filtering actions are performed  by tabs and by labels. I think both actions should be merged into one.  3. When no match is found  the preference window shows contents of previous tab. In this case  I think the content of preference window should be replaced by the contents of the first tab which matches the query  if none match  then it should be blank. || @CaptainDaVinci is this ready for review or do you need to further work on it?  (The first remark you had concerning "Sending emails" is a nice suggestion for further improvement  but not necessary for merging I would say). || @tobiasdiez Yes  this is ready for review. || Thank you for the suggestions @tobiasdiez  and @Siedlerchr! I have refactored the code for the most part to account for the changes and will push the code once I have implemented all changes.   Screenshot showing the preferences window when searching: ![preferences](https://user-images.githubusercontent.com/21019116/54490388-789b6b80-48db-11e9-8532-f3c3d591e68b.png)  || @CaptainDaVinci  Look at my patch: (Import via git am < file.patch) I added the bidiretional binding and a listener in the Handler. This worked for me  [0001-add-bidiretional-binding-to-searchProperty.patch.txt](https://github.com/JabRef/jabref/files/2989767/0001-add-bidiretional-binding-to-searchProperty.patch.txt)  || @Siedlerchr Thank you for sharing the patch  however  this did not work for me. The change listener for `searchText` is never called. I had a similar implementation except for not using `EasyBind` to register the callback.   The only way I could make this work was to add a listener to `searchBox` as well and refer to the `searchText` property in that. ``` searchBox.textProperty().addListener((o  p  n) -> {     searchHandler.searchTextProperty()      // required  so that changed are reflected. })  ``` || Hm this is odd. It worked fine for me with this line:     ` searchHandler.searchTextProperty().bindBidirectional(searchBox.textProperty()) ` Whenever I changed the text in the GUI field  e.g. key to asdfasd the view was updated and the new findings were highlighted.  Maybe I understand you wrong  but I think this is enough?   Under the hood the bidirectional is nothing else than a wrapper around the changeLIstener stuff.   || Also  note that its necessary to have a reference to `searchText` property accessed under the ChangeListener for `searchBox`. Could this be related to some sort of premature garbage collection?  Edit: For me changing the text in the GUI field did not update the view or highlight the labels. || Bindings are created using WeakListener  so they might get garbage collected. But I still do not understand why it works for me with the patch. I would propose you test again with my patch or at least commit the changes and let others test as well.  Unfortunately I am the next days busy at work and probably cant help much. || Okay  I have pushed changes  in the mean time I will try testing it again.   P.S: Since the `PreferencesSearchHandler` does not use the `searchText` property but only the query text  can we instead bind the `searchBox` to the `filterTabs`  i.e  not have to deal with binding the text property and string property? || Thanks to both @WtfJoke and @CaptainDaVinci for joining forces! || 
4426,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix ArrayIndexOutOfBoundsException on second pdf import Fixes #4422   The variable formally known as i is a global variable which had -1 after the first run and therefore threw an exception  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Added tests ||
4428,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fixed radiobuttons in preference menu (#4409) Previously multiple radiobuttons in preference menu belonging to the same group were selectable simultaneously. This issue is now fixed on multiple occasions  allowing only one option per group to be selected at the same time. Issue: [#4409](https://github.com/JabRef/jabref/issues/4409)  
4446,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,Set auto-update checkbox enable/disable when reading preferences This patch addresses issue [#4427](https://github.com/JabRef/jabref/issues/4427). Added a call to the existing event handler (which enables/disables the checkbox in response to user clicks) when we set the checkbox value from the preferences.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) _N/A_ - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) _N/A_ Behavior should be Use timestamp checked - > update timestamp is enabled (can be checked /unchecked) Use timestamp unchecked - > update timestamp disabled  ||
4470,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,3189 fix group renaming fix group renaming #3189 . Fixed.  || Please have a look at the failing tests and please test if the latex stuff is still transformed to Unicode after rename  || @Ali96kz why did you close the pull request? You can simply push your changes to your branch and the PR is updated.  || @tobiasdiez Could you review again? ||
4484,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,4467 - fix save button fix issue: #4467  When you click `save` and there is no database selected. That will act as `save as`.  
4498,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Improve page checker Superseeds the PR #4188 and fixes #4113. Now page ranges like `R2-R5` are considered to be correct.  
4498,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Improve page checker Superseeds the PR #4188 and fixes #4113. Now page ranges like `R2-R5` are considered to be correct.  
4519,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fixed 4365 put html in clipboard Fix #4365 . I get all tag value and put it in a string.  
4547,1,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Do not extract file ending from Urls Fixes #4544 Do not extract file ending from Urls Should also fix #4480. Please check @tobiasdiez I cannot access JSTOR stuff due to 403. However with any URL and some appended key values like ?accetptrue it works for me  again. || Please fix the checkstyle issue (import with * is not allowed) ||
4549,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,Fixes that renaming a group did not change the group name in the interface Fixes #3189.  
4555,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,1,Automatically created groups with Field to group by as entrytype (#4539) <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Potential solution for [#4539](https://github.com/JabRef/jabref/issues/4539): - Made "entrytype" as a valid keyword for automatically created groups. - Added check in <code>BibEntry</code> to see if searchField matches TYPE_HEADER - "entrytype" - Made change in <code>WordKeywordGroup</code> to collect entries for the entrytype groups - Screenshots reflecting the change attached -  1) All entries - <img width"1434" alt"all_entries_ss1" src"https://user-images.githubusercontent.com/11676385/50482130-16814780-0a0b-11e9-8559-f5c66bf74236.png">  2) Automatically create groups. Field to group by is "entrytype" - <img width"1431" alt"create_group_ss2" src"https://user-images.githubusercontent.com/11676385/50482137-1d0fbf00-0a0b-11e9-820c-defad72fe7e5.png">  3) Result - <img width"1425" alt"group_view_ss3" src"https://user-images.githubusercontent.com/11676385/50482142-226d0980-0a0b-11e9-8f49-e677d96ef077.png">     ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Hi  is there anything else that needs to be done here before this PR can be merged with master ? || if @tobiasdiez  is fine with the change  we can merge! ||
4565,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,Add uncaught exception message Added a simple dialog showing up if an uncaught exception was logged. Added the dialogs text to the german and english language files. Fixes [#2288](https://github.com/JabRef/jabref/issues/2288) ---- - [X] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [X] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thank you very much for your contribution 👍  We are looking forward seeing more from you  ) ||
4587,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Add a variable to track the change in preview style Proposed solution for #4580: I have added a previewStyle variable to check when the preview style changes. From my observation  the layout is updated every time tabs are switched or preview styles are cycled through. With the addition of a variable  these 2 situations can be differentiated to print out the notification more appropriately.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Looks also good from my site! I am merging this now. ||
4601,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Convert DuplicateResolverDialog to javafx Fixes #4598   ![grafik](https://user-images.githubusercontent.com/320228/51695559-9c40e480-2003-11e9-8aba-227503ac68c0.png)   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Yes  I thought I added the label on that issue.  ||
4604,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Enable default cursor for new entry Fixes #4600. Sets text field on focus at the end of initialization by running the javafx thread.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4613,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix preview style configuration Fixes #4609. User mentioned that after pressing one of the styles and saving it  the style is not updated. To change the preview style  he has to move the selected style to the right column before pressing "Save".  Selecting styles in the right column can be previewed in the test panel. However  the style of bibEntry is not updated after pressing `Test`. To rectify this  the citation style is updated in Preferences. To ensure preview style configuration is saved  the chosen preview style is also saved in the Preferences.  Note that if preview style (at the left column) is selected  the configuration will not be saved.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Code looks good from my side as well. Could you please test if the error I encountered is also resolved with your code #4621  ? || @Siedlerchr That error is not resolved in my PR. Do you want me to fix it? || @chelseyong  Okay  thanks for the info. If you want you could do this in another PR. || Thanks again for your contribution! ||
4642,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,[#4591] Add Integrity check for books with edition reported as 1 Fixes #4591 @tobiasdiez @Siedlerchr could you review this pr  also I am not sure why travis is failing || @RonakLakhotia  If you click on the travis build failed (Details)  you can expand the failing job  in your case its just the localization test which failed.  You need to add the string to the english localization file under src/main/resources/l10n  ``` org.jabref.logic.l10n.LocalizationConsistencyTest > findMissingLocalizationKeys() FAILED     org.opentest4j.AssertionFailedError: DETECTED LANGUAGE KEYS WHICH ARE NOT IN THE ENGLISH LANGUAGE FILE     PASTE THESE INTO THE ENGLISH LANGUAGE FILE     edition\ of\ book\ reported\ as\ just\ 1edition of book reported as just 1      > expected: <[]> but was: <[edition\ of\ book\ reported\ as\ just\ 1 (src/main/java/org/jabref/logic/integrity/EditionChecker.java LANG)]>         at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)         at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:195)         at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:184)         at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)         at org.jabref.logic.l10n.LocalizationConsistencyTest.findMissingLocalizationKeys(LocalizationConsistencyTest.java:111) ``` || Thanks for the pointer! Fixed the failing test. Ready for review || @tobiasdiez @Siedlerchr  ready for review || You can ignore the outdated dependencies. Its one of the tasks which is allowed to fail.   || Build passed  Ready for review ! || Any updates? || @RonakLakhotia We have the policy that at least two core developers have to approve a pull request before me merge. Since we are all working on JabRef in our freetime  reviewing of a PR might take a day or two (especially over the weekend).   But that shouldnt stop you from looking and working at other open issues if you have the motivation and the drive to do so! ||
4644,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix for issue 4641: Remove usage of TempDirectory extension from junit-pioneer Fixes: #4641  Removed the TempDirectory extension from junit-pioneer with the built-in extension of junit 5.4 ---- - [x] Manually tested changed features in running JabRef - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) Perfect  thanks a lot! ||
4658,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix for #4628 - cant save new content selectors Fixes #4628 Dialog converted into JavaFX * old functionalities are preserved * new validations added: ** error message thrown when dialog invoked but not active connection exists ** remove keyword button is enabled just in case some keyword is selected   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Additionally  it would be nice if you could add a screenshot  of the converted dialog || @Siedlerchr Hi  thanks for the review.  I hope I was able to incorporate all the changes mentioned above - ListProperty + bindings Here is the screenshot of converted dialog: ![image](https://user-images.githubusercontent.com/5075491/52918575-d6e32780-32f8-11e9-8a21-78da487f25ee.png)  || @tobiasdiez Thanks for the review - changes have been made || Thanks again for your contribution! Looking forward to your next PR  -) || Thanks guys for super guidance! || @ricantech  We have to thank you for your contribution! We hope you are interested in fixing some other issues as well!  ||
4660,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fixes #4610. Changed the way the GroupDialog description is displayed. fixes [#4610](https://github.com/JabRef/jabref/issues/4610)  - Changed GroupDialog description Node to TextFlow - GroupDialog is no longer resizable - Changed the layout of the GroupDialog window to be more horizontal - OK Button is only enabled after some input  ![jabrefgroupdialog2](https://user-images.githubusercontent.com/25904972/52920648-3f3d0380-330f-11e9-9c84-2d366ae3bd45.PNG)   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) > The code looks good to me and we can merge it as it is now. Nonetheless  Christoph is right and it would be better to replace the HTML completely by styled javafx text modules (with corresponding css style classes defined in the `Base.css`). Since this is a bit of work as you need to fumble around with the localization and its not utterly important  I let you decide if you want to work on this or invest your time in something else (e.g. fixing another issue  -) ).  I definetly agree that this should be done the right way at some point  but im not really confident to touch the localization. Im going to move to another issue  so this pr can be merged. 😄  || Ah i think i just noticed a bug. Please wait with merging. || Could you please also take a look at #4678  || Ok so i tried to automatically create a database when the user tried to create a new group without a open database  but i couldnt get it to run. The code to add the group to the open database always ran before the new database was created.  In the end i gave up and i just created a warning when the user tries to create a group without a database. I hope i made no mistakes while adding the localization.   > Could you please also take a look at #4678  This error never occurred when i tried it. The report is a little thin and i couldnt recreate it.    If everything looks good to you  you can merge this pr. || Thanks for the quick follow-up (and sorry for being somewhat pedantic  -) ). ||
4696,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Remove resolve duplicate keys dialog <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #4614  Removes the resolve duplicate keys dialog. This feature is made obsolete by the integrity check and the user can generate new keys very simply (for all entries or only for the duplicated ones) through the entry editor and/or menu.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Well  however on import there should be a warning and the option to resolve duplicate keys. Its essential to discover duplicates || @Siedlerchr such a feature wasnt implemented (the only check was when opening a database) and is obsolete with my other PR #4692  where now keys are automatically generated for every imported entry. Duplicate entries are also highlighted in the import dialog. || Okay  then I see no problem! ||
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Group and reorder the Main Menu (tabs & icons) Group and reorder the Main Menu (File  Edit  Library  Quality  Tools  and View tabs & icons). Now it looks like on the @MartinKarims prototypes.  ![1_file](https://user-images.githubusercontent.com/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5.png)  ![2_edit](https://user-images.githubusercontent.com/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11ac.png)  ![3_library](https://user-images.githubusercontent.com/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfab.png)  ![4_quality](https://user-images.githubusercontent.com/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41.png)  ![5_tools](https://user-images.githubusercontent.com/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7a.png)  ![6_view](https://user-images.githubusercontent.com/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60a.png)   This PR fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks a lot for your work on this. The code changes look good to me. I believe that removing the three tools "Opening a folder  file or URL/DOI apply" disables the associated shortcuts (e.g. F4 to open a file). Can you please make sure the shortcuts work as expected and if not add some code for this here: https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/JabRefFrame.java#L315   Ive a few questions for @MartinKarim  why he proposed certain changes (some of which are not too intuitive for me): - "Replace string" from edit to tools & "Set/clear/rename/append fields" from edit to library (#4669): Both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the "Manage keywords" feature (which is essentially a special version of "set fields"). Moreover  all these three features do not involve any magic on JabRefs part (in contrast to "tools") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one  -) ). Im fine with moving all three to "Tools" although I feel this menu gets overloaded a bit. Moreover  I would suggest t rename "Replace string" by "Find and replace".  - "Find unlinked files" from quality to tools: for me this feature is connected to the "set file link" feature  because once you linked a file to an entry that it is no longer reported under "unlinked files" and vice versa the "find unliked files" dialog allows to link files to entries. So personally  I would group them together.   - "New sublibrary based on AUX file" from tools to library with the reasoning that "Adding a sublibrary has a global effect on the library". However  this feature does not add entries to the current library but uses the AUX file to select certain entries and then creates a new library containing only these entries. So in some sense it is a certain kind of export. Thus  for me it should go to the export menu under file or stay in tools.   || Yes  you are right  now those shortcuts are disabled. Although Ctrl + A for selecting all is still working. In addition  I just realized that sometimes the check symbol of the CheckItem objects (Tools > Web search  Groups interface...) is not synchronized with it side panel.  I will deal with it in a while! || The check synchronization might be a problem with setting the values correctly in the preferences  I remember having similar issues with shown/not shown in the OpenOffice Panel. I had to explicitly set the preferences to new values. || I hope the check synchronization is solved now. Also  I have recovered the previous entry preview elements and behavior.  Please  tell me if it is OK. Thank you! || You seem to have a compile error now. Probably because of the parameter removal in the Check menu stuff. You can click on the Travis failed icon and will see the jobs that failed. You then can expand them and will see the errors  || Yes  my fault. I am so busy these days and cannot focus on it properly. I will solve this ASAP. Sorry for wasting your time. || No problem. Take your time.  || @Siedlerchr What about the coverage test? Do I need to get an equal or greather percent? || You can ignore the code coverage and the dependency update test. Codacy is sometimes a bit difficult  as for some FXML stuff it is generating false positives (e.g. marking functions as unused  but does not take into account that these are defined in fxml) We are generally not so focused on code coverage but prefer tests for the most important model/logic functionality.  || By the way  I have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu. || @tobiasdiez I am sorry for being late in answering your questions. Here are my thoughts on why I moved the items/features you mentioned:  1. _Replace string_: I do think that the the main difference between this feature and _Manage Keywords_ is the possibility to change a string in all entries and not just selected ones  meaning the scope of the function separates it from the other items in _Edit_. Additionally  replacing a string is not bound to a field like _Mangage Keywords_ or _Rank entry_. Therefore  it has a more general purpose  I would argue. However  I agree that it does not completely fit into the _Tools_ tab as well. Moving it there was a try to give the function more exposure because many users did not know about. The _Tools_ tab is a central part of the users workflow  which is why I chose that tab. The name change for the feature is great  I think  because it matches the name of the same feature in other programs.  2. _Set/clear/rename/append fields_: I proposed to move this feature to library because I thought that the four functions it contains had a global effect on all entries. I have noticed  that this was a misunderstanding on my part  so I will have another look at the feature. But I still think  that the feature as a whole does not fit the _Edit_ tab because of the "rename" part. Renaming is not really a content change and it has more complex implications for an entry. If the renaming function was split from the rest  keeping it in _Edit_ seems appropriate.  3. _Find unlinked files_: While _Set file links_ does only improve the quality of existing entries by associating a file  this feature is a bit more versatile. It can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a PDF. I think that the ways of using this feature go beyond QA measures  which is why I proposed to move it.  4. _New sublibrary based on AUX file_: I think that you are right in regard to this function being an export function and that it could be moved to _Export_ as well. Then it would have to be renamed though into something like "Export entries cited in AUX file". However  export has the connotation of some change in the data format  which is not really the case with this feature because it only creates a subset of the current bibliography. I found the _Library_ tab appropriate because the feature is bound to the active library and therefore "depends" on it (and an AUX file).  I think all four points are up to discussion and depend on the view of the individual. This is why I think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion. || Thanks @MartinKarim for your detailed explanation! That clarifies a lot for me and Im fine with these changes. For the sake of moving forward with this PR  I would propose to - Rename "Replace string" to "Find and replace" - Move "New sublibrary based on AUX file" to "Tools" as part of this PR and then merge. @davidemdot could you please implement these changes? Thanks!  Then  as a second step  we should discuss in the devcall: - Set/clear/rename/append fields: edit  library or tools? - New sublibrary based on AUX file: library  tools  export? - How to improve telemetry collection? || @tobiasdiez  I think it is done now! || 
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Group and reorder the Main Menu (tabs & icons) Group and reorder the Main Menu (File  Edit  Library  Quality  Tools  and View tabs & icons). Now it looks like on the @MartinKarims prototypes.  ![1_file](https://user-images.githubusercontent.com/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5.png)  ![2_edit](https://user-images.githubusercontent.com/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11ac.png)  ![3_library](https://user-images.githubusercontent.com/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfab.png)  ![4_quality](https://user-images.githubusercontent.com/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41.png)  ![5_tools](https://user-images.githubusercontent.com/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7a.png)  ![6_view](https://user-images.githubusercontent.com/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60a.png)   This PR fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks a lot for your work on this. The code changes look good to me. I believe that removing the three tools "Opening a folder  file or URL/DOI apply" disables the associated shortcuts (e.g. F4 to open a file). Can you please make sure the shortcuts work as expected and if not add some code for this here: https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/JabRefFrame.java#L315   Ive a few questions for @MartinKarim  why he proposed certain changes (some of which are not too intuitive for me): - "Replace string" from edit to tools & "Set/clear/rename/append fields" from edit to library (#4669): Both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the "Manage keywords" feature (which is essentially a special version of "set fields"). Moreover  all these three features do not involve any magic on JabRefs part (in contrast to "tools") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one  -) ). Im fine with moving all three to "Tools" although I feel this menu gets overloaded a bit. Moreover  I would suggest t rename "Replace string" by "Find and replace".  - "Find unlinked files" from quality to tools: for me this feature is connected to the "set file link" feature  because once you linked a file to an entry that it is no longer reported under "unlinked files" and vice versa the "find unliked files" dialog allows to link files to entries. So personally  I would group them together.   - "New sublibrary based on AUX file" from tools to library with the reasoning that "Adding a sublibrary has a global effect on the library". However  this feature does not add entries to the current library but uses the AUX file to select certain entries and then creates a new library containing only these entries. So in some sense it is a certain kind of export. Thus  for me it should go to the export menu under file or stay in tools.   || Yes  you are right  now those shortcuts are disabled. Although Ctrl + A for selecting all is still working. In addition  I just realized that sometimes the check symbol of the CheckItem objects (Tools > Web search  Groups interface...) is not synchronized with it side panel.  I will deal with it in a while! || The check synchronization might be a problem with setting the values correctly in the preferences  I remember having similar issues with shown/not shown in the OpenOffice Panel. I had to explicitly set the preferences to new values. || I hope the check synchronization is solved now. Also  I have recovered the previous entry preview elements and behavior.  Please  tell me if it is OK. Thank you! || You seem to have a compile error now. Probably because of the parameter removal in the Check menu stuff. You can click on the Travis failed icon and will see the jobs that failed. You then can expand them and will see the errors  || Yes  my fault. I am so busy these days and cannot focus on it properly. I will solve this ASAP. Sorry for wasting your time. || No problem. Take your time.  || @Siedlerchr What about the coverage test? Do I need to get an equal or greather percent? || You can ignore the code coverage and the dependency update test. Codacy is sometimes a bit difficult  as for some FXML stuff it is generating false positives (e.g. marking functions as unused  but does not take into account that these are defined in fxml) We are generally not so focused on code coverage but prefer tests for the most important model/logic functionality.  || By the way  I have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu. || @tobiasdiez I am sorry for being late in answering your questions. Here are my thoughts on why I moved the items/features you mentioned:  1. _Replace string_: I do think that the the main difference between this feature and _Manage Keywords_ is the possibility to change a string in all entries and not just selected ones  meaning the scope of the function separates it from the other items in _Edit_. Additionally  replacing a string is not bound to a field like _Mangage Keywords_ or _Rank entry_. Therefore  it has a more general purpose  I would argue. However  I agree that it does not completely fit into the _Tools_ tab as well. Moving it there was a try to give the function more exposure because many users did not know about. The _Tools_ tab is a central part of the users workflow  which is why I chose that tab. The name change for the feature is great  I think  because it matches the name of the same feature in other programs.  2. _Set/clear/rename/append fields_: I proposed to move this feature to library because I thought that the four functions it contains had a global effect on all entries. I have noticed  that this was a misunderstanding on my part  so I will have another look at the feature. But I still think  that the feature as a whole does not fit the _Edit_ tab because of the "rename" part. Renaming is not really a content change and it has more complex implications for an entry. If the renaming function was split from the rest  keeping it in _Edit_ seems appropriate.  3. _Find unlinked files_: While _Set file links_ does only improve the quality of existing entries by associating a file  this feature is a bit more versatile. It can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a PDF. I think that the ways of using this feature go beyond QA measures  which is why I proposed to move it.  4. _New sublibrary based on AUX file_: I think that you are right in regard to this function being an export function and that it could be moved to _Export_ as well. Then it would have to be renamed though into something like "Export entries cited in AUX file". However  export has the connotation of some change in the data format  which is not really the case with this feature because it only creates a subset of the current bibliography. I found the _Library_ tab appropriate because the feature is bound to the active library and therefore "depends" on it (and an AUX file).  I think all four points are up to discussion and depend on the view of the individual. This is why I think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion. || Thanks @MartinKarim for your detailed explanation! That clarifies a lot for me and Im fine with these changes. For the sake of moving forward with this PR  I would propose to - Rename "Replace string" to "Find and replace" - Move "New sublibrary based on AUX file" to "Tools" as part of this PR and then merge. @davidemdot could you please implement these changes? Thanks!  Then  as a second step  we should discuss in the devcall: - Set/clear/rename/append fields: edit  library or tools? - New sublibrary based on AUX file: library  tools  export? - How to improve telemetry collection? || @tobiasdiez  I think it is done now! || 
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Group and reorder the Main Menu (tabs & icons) Group and reorder the Main Menu (File  Edit  Library  Quality  Tools  and View tabs & icons). Now it looks like on the @MartinKarims prototypes.  ![1_file](https://user-images.githubusercontent.com/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5.png)  ![2_edit](https://user-images.githubusercontent.com/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11ac.png)  ![3_library](https://user-images.githubusercontent.com/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfab.png)  ![4_quality](https://user-images.githubusercontent.com/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41.png)  ![5_tools](https://user-images.githubusercontent.com/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7a.png)  ![6_view](https://user-images.githubusercontent.com/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60a.png)   This PR fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks a lot for your work on this. The code changes look good to me. I believe that removing the three tools "Opening a folder  file or URL/DOI apply" disables the associated shortcuts (e.g. F4 to open a file). Can you please make sure the shortcuts work as expected and if not add some code for this here: https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/JabRefFrame.java#L315   Ive a few questions for @MartinKarim  why he proposed certain changes (some of which are not too intuitive for me): - "Replace string" from edit to tools & "Set/clear/rename/append fields" from edit to library (#4669): Both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the "Manage keywords" feature (which is essentially a special version of "set fields"). Moreover  all these three features do not involve any magic on JabRefs part (in contrast to "tools") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one  -) ). Im fine with moving all three to "Tools" although I feel this menu gets overloaded a bit. Moreover  I would suggest t rename "Replace string" by "Find and replace".  - "Find unlinked files" from quality to tools: for me this feature is connected to the "set file link" feature  because once you linked a file to an entry that it is no longer reported under "unlinked files" and vice versa the "find unliked files" dialog allows to link files to entries. So personally  I would group them together.   - "New sublibrary based on AUX file" from tools to library with the reasoning that "Adding a sublibrary has a global effect on the library". However  this feature does not add entries to the current library but uses the AUX file to select certain entries and then creates a new library containing only these entries. So in some sense it is a certain kind of export. Thus  for me it should go to the export menu under file or stay in tools.   || Yes  you are right  now those shortcuts are disabled. Although Ctrl + A for selecting all is still working. In addition  I just realized that sometimes the check symbol of the CheckItem objects (Tools > Web search  Groups interface...) is not synchronized with it side panel.  I will deal with it in a while! || The check synchronization might be a problem with setting the values correctly in the preferences  I remember having similar issues with shown/not shown in the OpenOffice Panel. I had to explicitly set the preferences to new values. || I hope the check synchronization is solved now. Also  I have recovered the previous entry preview elements and behavior.  Please  tell me if it is OK. Thank you! || You seem to have a compile error now. Probably because of the parameter removal in the Check menu stuff. You can click on the Travis failed icon and will see the jobs that failed. You then can expand them and will see the errors  || Yes  my fault. I am so busy these days and cannot focus on it properly. I will solve this ASAP. Sorry for wasting your time. || No problem. Take your time.  || @Siedlerchr What about the coverage test? Do I need to get an equal or greather percent? || You can ignore the code coverage and the dependency update test. Codacy is sometimes a bit difficult  as for some FXML stuff it is generating false positives (e.g. marking functions as unused  but does not take into account that these are defined in fxml) We are generally not so focused on code coverage but prefer tests for the most important model/logic functionality.  || By the way  I have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu. || @tobiasdiez I am sorry for being late in answering your questions. Here are my thoughts on why I moved the items/features you mentioned:  1. _Replace string_: I do think that the the main difference between this feature and _Manage Keywords_ is the possibility to change a string in all entries and not just selected ones  meaning the scope of the function separates it from the other items in _Edit_. Additionally  replacing a string is not bound to a field like _Mangage Keywords_ or _Rank entry_. Therefore  it has a more general purpose  I would argue. However  I agree that it does not completely fit into the _Tools_ tab as well. Moving it there was a try to give the function more exposure because many users did not know about. The _Tools_ tab is a central part of the users workflow  which is why I chose that tab. The name change for the feature is great  I think  because it matches the name of the same feature in other programs.  2. _Set/clear/rename/append fields_: I proposed to move this feature to library because I thought that the four functions it contains had a global effect on all entries. I have noticed  that this was a misunderstanding on my part  so I will have another look at the feature. But I still think  that the feature as a whole does not fit the _Edit_ tab because of the "rename" part. Renaming is not really a content change and it has more complex implications for an entry. If the renaming function was split from the rest  keeping it in _Edit_ seems appropriate.  3. _Find unlinked files_: While _Set file links_ does only improve the quality of existing entries by associating a file  this feature is a bit more versatile. It can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a PDF. I think that the ways of using this feature go beyond QA measures  which is why I proposed to move it.  4. _New sublibrary based on AUX file_: I think that you are right in regard to this function being an export function and that it could be moved to _Export_ as well. Then it would have to be renamed though into something like "Export entries cited in AUX file". However  export has the connotation of some change in the data format  which is not really the case with this feature because it only creates a subset of the current bibliography. I found the _Library_ tab appropriate because the feature is bound to the active library and therefore "depends" on it (and an AUX file).  I think all four points are up to discussion and depend on the view of the individual. This is why I think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion. || Thanks @MartinKarim for your detailed explanation! That clarifies a lot for me and Im fine with these changes. For the sake of moving forward with this PR  I would propose to - Rename "Replace string" to "Find and replace" - Move "New sublibrary based on AUX file" to "Tools" as part of this PR and then merge. @davidemdot could you please implement these changes? Thanks!  Then  as a second step  we should discuss in the devcall: - Set/clear/rename/append fields: edit  library or tools? - New sublibrary based on AUX file: library  tools  export? - How to improve telemetry collection? || @tobiasdiez  I think it is done now! || 
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Group and reorder the Main Menu (tabs & icons) Group and reorder the Main Menu (File  Edit  Library  Quality  Tools  and View tabs & icons). Now it looks like on the @MartinKarims prototypes.  ![1_file](https://user-images.githubusercontent.com/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5.png)  ![2_edit](https://user-images.githubusercontent.com/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11ac.png)  ![3_library](https://user-images.githubusercontent.com/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfab.png)  ![4_quality](https://user-images.githubusercontent.com/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41.png)  ![5_tools](https://user-images.githubusercontent.com/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7a.png)  ![6_view](https://user-images.githubusercontent.com/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60a.png)   This PR fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks a lot for your work on this. The code changes look good to me. I believe that removing the three tools "Opening a folder  file or URL/DOI apply" disables the associated shortcuts (e.g. F4 to open a file). Can you please make sure the shortcuts work as expected and if not add some code for this here: https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/JabRefFrame.java#L315   Ive a few questions for @MartinKarim  why he proposed certain changes (some of which are not too intuitive for me): - "Replace string" from edit to tools & "Set/clear/rename/append fields" from edit to library (#4669): Both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the "Manage keywords" feature (which is essentially a special version of "set fields"). Moreover  all these three features do not involve any magic on JabRefs part (in contrast to "tools") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one  -) ). Im fine with moving all three to "Tools" although I feel this menu gets overloaded a bit. Moreover  I would suggest t rename "Replace string" by "Find and replace".  - "Find unlinked files" from quality to tools: for me this feature is connected to the "set file link" feature  because once you linked a file to an entry that it is no longer reported under "unlinked files" and vice versa the "find unliked files" dialog allows to link files to entries. So personally  I would group them together.   - "New sublibrary based on AUX file" from tools to library with the reasoning that "Adding a sublibrary has a global effect on the library". However  this feature does not add entries to the current library but uses the AUX file to select certain entries and then creates a new library containing only these entries. So in some sense it is a certain kind of export. Thus  for me it should go to the export menu under file or stay in tools.   || Yes  you are right  now those shortcuts are disabled. Although Ctrl + A for selecting all is still working. In addition  I just realized that sometimes the check symbol of the CheckItem objects (Tools > Web search  Groups interface...) is not synchronized with it side panel.  I will deal with it in a while! || The check synchronization might be a problem with setting the values correctly in the preferences  I remember having similar issues with shown/not shown in the OpenOffice Panel. I had to explicitly set the preferences to new values. || I hope the check synchronization is solved now. Also  I have recovered the previous entry preview elements and behavior.  Please  tell me if it is OK. Thank you! || You seem to have a compile error now. Probably because of the parameter removal in the Check menu stuff. You can click on the Travis failed icon and will see the jobs that failed. You then can expand them and will see the errors  || Yes  my fault. I am so busy these days and cannot focus on it properly. I will solve this ASAP. Sorry for wasting your time. || No problem. Take your time.  || @Siedlerchr What about the coverage test? Do I need to get an equal or greather percent? || You can ignore the code coverage and the dependency update test. Codacy is sometimes a bit difficult  as for some FXML stuff it is generating false positives (e.g. marking functions as unused  but does not take into account that these are defined in fxml) We are generally not so focused on code coverage but prefer tests for the most important model/logic functionality.  || By the way  I have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu. || @tobiasdiez I am sorry for being late in answering your questions. Here are my thoughts on why I moved the items/features you mentioned:  1. _Replace string_: I do think that the the main difference between this feature and _Manage Keywords_ is the possibility to change a string in all entries and not just selected ones  meaning the scope of the function separates it from the other items in _Edit_. Additionally  replacing a string is not bound to a field like _Mangage Keywords_ or _Rank entry_. Therefore  it has a more general purpose  I would argue. However  I agree that it does not completely fit into the _Tools_ tab as well. Moving it there was a try to give the function more exposure because many users did not know about. The _Tools_ tab is a central part of the users workflow  which is why I chose that tab. The name change for the feature is great  I think  because it matches the name of the same feature in other programs.  2. _Set/clear/rename/append fields_: I proposed to move this feature to library because I thought that the four functions it contains had a global effect on all entries. I have noticed  that this was a misunderstanding on my part  so I will have another look at the feature. But I still think  that the feature as a whole does not fit the _Edit_ tab because of the "rename" part. Renaming is not really a content change and it has more complex implications for an entry. If the renaming function was split from the rest  keeping it in _Edit_ seems appropriate.  3. _Find unlinked files_: While _Set file links_ does only improve the quality of existing entries by associating a file  this feature is a bit more versatile. It can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a PDF. I think that the ways of using this feature go beyond QA measures  which is why I proposed to move it.  4. _New sublibrary based on AUX file_: I think that you are right in regard to this function being an export function and that it could be moved to _Export_ as well. Then it would have to be renamed though into something like "Export entries cited in AUX file". However  export has the connotation of some change in the data format  which is not really the case with this feature because it only creates a subset of the current bibliography. I found the _Library_ tab appropriate because the feature is bound to the active library and therefore "depends" on it (and an AUX file).  I think all four points are up to discussion and depend on the view of the individual. This is why I think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion. || Thanks @MartinKarim for your detailed explanation! That clarifies a lot for me and Im fine with these changes. For the sake of moving forward with this PR  I would propose to - Rename "Replace string" to "Find and replace" - Move "New sublibrary based on AUX file" to "Tools" as part of this PR and then merge. @davidemdot could you please implement these changes? Thanks!  Then  as a second step  we should discuss in the devcall: - Set/clear/rename/append fields: edit  library or tools? - New sublibrary based on AUX file: library  tools  export? - How to improve telemetry collection? || @tobiasdiez  I think it is done now! || 
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Group and reorder the Main Menu (tabs & icons) Group and reorder the Main Menu (File  Edit  Library  Quality  Tools  and View tabs & icons). Now it looks like on the @MartinKarims prototypes.  ![1_file](https://user-images.githubusercontent.com/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5.png)  ![2_edit](https://user-images.githubusercontent.com/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11ac.png)  ![3_library](https://user-images.githubusercontent.com/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfab.png)  ![4_quality](https://user-images.githubusercontent.com/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41.png)  ![5_tools](https://user-images.githubusercontent.com/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7a.png)  ![6_view](https://user-images.githubusercontent.com/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60a.png)   This PR fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks a lot for your work on this. The code changes look good to me. I believe that removing the three tools "Opening a folder  file or URL/DOI apply" disables the associated shortcuts (e.g. F4 to open a file). Can you please make sure the shortcuts work as expected and if not add some code for this here: https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/JabRefFrame.java#L315   Ive a few questions for @MartinKarim  why he proposed certain changes (some of which are not too intuitive for me): - "Replace string" from edit to tools & "Set/clear/rename/append fields" from edit to library (#4669): Both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the "Manage keywords" feature (which is essentially a special version of "set fields"). Moreover  all these three features do not involve any magic on JabRefs part (in contrast to "tools") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one  -) ). Im fine with moving all three to "Tools" although I feel this menu gets overloaded a bit. Moreover  I would suggest t rename "Replace string" by "Find and replace".  - "Find unlinked files" from quality to tools: for me this feature is connected to the "set file link" feature  because once you linked a file to an entry that it is no longer reported under "unlinked files" and vice versa the "find unliked files" dialog allows to link files to entries. So personally  I would group them together.   - "New sublibrary based on AUX file" from tools to library with the reasoning that "Adding a sublibrary has a global effect on the library". However  this feature does not add entries to the current library but uses the AUX file to select certain entries and then creates a new library containing only these entries. So in some sense it is a certain kind of export. Thus  for me it should go to the export menu under file or stay in tools.   || Yes  you are right  now those shortcuts are disabled. Although Ctrl + A for selecting all is still working. In addition  I just realized that sometimes the check symbol of the CheckItem objects (Tools > Web search  Groups interface...) is not synchronized with it side panel.  I will deal with it in a while! || The check synchronization might be a problem with setting the values correctly in the preferences  I remember having similar issues with shown/not shown in the OpenOffice Panel. I had to explicitly set the preferences to new values. || I hope the check synchronization is solved now. Also  I have recovered the previous entry preview elements and behavior.  Please  tell me if it is OK. Thank you! || You seem to have a compile error now. Probably because of the parameter removal in the Check menu stuff. You can click on the Travis failed icon and will see the jobs that failed. You then can expand them and will see the errors  || Yes  my fault. I am so busy these days and cannot focus on it properly. I will solve this ASAP. Sorry for wasting your time. || No problem. Take your time.  || @Siedlerchr What about the coverage test? Do I need to get an equal or greather percent? || You can ignore the code coverage and the dependency update test. Codacy is sometimes a bit difficult  as for some FXML stuff it is generating false positives (e.g. marking functions as unused  but does not take into account that these are defined in fxml) We are generally not so focused on code coverage but prefer tests for the most important model/logic functionality.  || By the way  I have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu. || @tobiasdiez I am sorry for being late in answering your questions. Here are my thoughts on why I moved the items/features you mentioned:  1. _Replace string_: I do think that the the main difference between this feature and _Manage Keywords_ is the possibility to change a string in all entries and not just selected ones  meaning the scope of the function separates it from the other items in _Edit_. Additionally  replacing a string is not bound to a field like _Mangage Keywords_ or _Rank entry_. Therefore  it has a more general purpose  I would argue. However  I agree that it does not completely fit into the _Tools_ tab as well. Moving it there was a try to give the function more exposure because many users did not know about. The _Tools_ tab is a central part of the users workflow  which is why I chose that tab. The name change for the feature is great  I think  because it matches the name of the same feature in other programs.  2. _Set/clear/rename/append fields_: I proposed to move this feature to library because I thought that the four functions it contains had a global effect on all entries. I have noticed  that this was a misunderstanding on my part  so I will have another look at the feature. But I still think  that the feature as a whole does not fit the _Edit_ tab because of the "rename" part. Renaming is not really a content change and it has more complex implications for an entry. If the renaming function was split from the rest  keeping it in _Edit_ seems appropriate.  3. _Find unlinked files_: While _Set file links_ does only improve the quality of existing entries by associating a file  this feature is a bit more versatile. It can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a PDF. I think that the ways of using this feature go beyond QA measures  which is why I proposed to move it.  4. _New sublibrary based on AUX file_: I think that you are right in regard to this function being an export function and that it could be moved to _Export_ as well. Then it would have to be renamed though into something like "Export entries cited in AUX file". However  export has the connotation of some change in the data format  which is not really the case with this feature because it only creates a subset of the current bibliography. I found the _Library_ tab appropriate because the feature is bound to the active library and therefore "depends" on it (and an AUX file).  I think all four points are up to discussion and depend on the view of the individual. This is why I think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion. || Thanks @MartinKarim for your detailed explanation! That clarifies a lot for me and Im fine with these changes. For the sake of moving forward with this PR  I would propose to - Rename "Replace string" to "Find and replace" - Move "New sublibrary based on AUX file" to "Tools" as part of this PR and then merge. @davidemdot could you please implement these changes? Thanks!  Then  as a second step  we should discuss in the devcall: - Set/clear/rename/append fields: edit  library or tools? - New sublibrary based on AUX file: library  tools  export? - How to improve telemetry collection? || @tobiasdiez  I think it is done now! || 
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Group and reorder the Main Menu (tabs & icons) Group and reorder the Main Menu (File  Edit  Library  Quality  Tools  and View tabs & icons). Now it looks like on the @MartinKarims prototypes.  ![1_file](https://user-images.githubusercontent.com/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5.png)  ![2_edit](https://user-images.githubusercontent.com/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11ac.png)  ![3_library](https://user-images.githubusercontent.com/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfab.png)  ![4_quality](https://user-images.githubusercontent.com/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41.png)  ![5_tools](https://user-images.githubusercontent.com/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7a.png)  ![6_view](https://user-images.githubusercontent.com/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60a.png)   This PR fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks a lot for your work on this. The code changes look good to me. I believe that removing the three tools "Opening a folder  file or URL/DOI apply" disables the associated shortcuts (e.g. F4 to open a file). Can you please make sure the shortcuts work as expected and if not add some code for this here: https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/JabRefFrame.java#L315   Ive a few questions for @MartinKarim  why he proposed certain changes (some of which are not too intuitive for me): - "Replace string" from edit to tools & "Set/clear/rename/append fields" from edit to library (#4669): Both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the "Manage keywords" feature (which is essentially a special version of "set fields"). Moreover  all these three features do not involve any magic on JabRefs part (in contrast to "tools") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one  -) ). Im fine with moving all three to "Tools" although I feel this menu gets overloaded a bit. Moreover  I would suggest t rename "Replace string" by "Find and replace".  - "Find unlinked files" from quality to tools: for me this feature is connected to the "set file link" feature  because once you linked a file to an entry that it is no longer reported under "unlinked files" and vice versa the "find unliked files" dialog allows to link files to entries. So personally  I would group them together.   - "New sublibrary based on AUX file" from tools to library with the reasoning that "Adding a sublibrary has a global effect on the library". However  this feature does not add entries to the current library but uses the AUX file to select certain entries and then creates a new library containing only these entries. So in some sense it is a certain kind of export. Thus  for me it should go to the export menu under file or stay in tools.   || Yes  you are right  now those shortcuts are disabled. Although Ctrl + A for selecting all is still working. In addition  I just realized that sometimes the check symbol of the CheckItem objects (Tools > Web search  Groups interface...) is not synchronized with it side panel.  I will deal with it in a while! || The check synchronization might be a problem with setting the values correctly in the preferences  I remember having similar issues with shown/not shown in the OpenOffice Panel. I had to explicitly set the preferences to new values. || I hope the check synchronization is solved now. Also  I have recovered the previous entry preview elements and behavior.  Please  tell me if it is OK. Thank you! || You seem to have a compile error now. Probably because of the parameter removal in the Check menu stuff. You can click on the Travis failed icon and will see the jobs that failed. You then can expand them and will see the errors  || Yes  my fault. I am so busy these days and cannot focus on it properly. I will solve this ASAP. Sorry for wasting your time. || No problem. Take your time.  || @Siedlerchr What about the coverage test? Do I need to get an equal or greather percent? || You can ignore the code coverage and the dependency update test. Codacy is sometimes a bit difficult  as for some FXML stuff it is generating false positives (e.g. marking functions as unused  but does not take into account that these are defined in fxml) We are generally not so focused on code coverage but prefer tests for the most important model/logic functionality.  || By the way  I have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu. || @tobiasdiez I am sorry for being late in answering your questions. Here are my thoughts on why I moved the items/features you mentioned:  1. _Replace string_: I do think that the the main difference between this feature and _Manage Keywords_ is the possibility to change a string in all entries and not just selected ones  meaning the scope of the function separates it from the other items in _Edit_. Additionally  replacing a string is not bound to a field like _Mangage Keywords_ or _Rank entry_. Therefore  it has a more general purpose  I would argue. However  I agree that it does not completely fit into the _Tools_ tab as well. Moving it there was a try to give the function more exposure because many users did not know about. The _Tools_ tab is a central part of the users workflow  which is why I chose that tab. The name change for the feature is great  I think  because it matches the name of the same feature in other programs.  2. _Set/clear/rename/append fields_: I proposed to move this feature to library because I thought that the four functions it contains had a global effect on all entries. I have noticed  that this was a misunderstanding on my part  so I will have another look at the feature. But I still think  that the feature as a whole does not fit the _Edit_ tab because of the "rename" part. Renaming is not really a content change and it has more complex implications for an entry. If the renaming function was split from the rest  keeping it in _Edit_ seems appropriate.  3. _Find unlinked files_: While _Set file links_ does only improve the quality of existing entries by associating a file  this feature is a bit more versatile. It can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a PDF. I think that the ways of using this feature go beyond QA measures  which is why I proposed to move it.  4. _New sublibrary based on AUX file_: I think that you are right in regard to this function being an export function and that it could be moved to _Export_ as well. Then it would have to be renamed though into something like "Export entries cited in AUX file". However  export has the connotation of some change in the data format  which is not really the case with this feature because it only creates a subset of the current bibliography. I found the _Library_ tab appropriate because the feature is bound to the active library and therefore "depends" on it (and an AUX file).  I think all four points are up to discussion and depend on the view of the individual. This is why I think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion. || Thanks @MartinKarim for your detailed explanation! That clarifies a lot for me and Im fine with these changes. For the sake of moving forward with this PR  I would propose to - Rename "Replace string" to "Find and replace" - Move "New sublibrary based on AUX file" to "Tools" as part of this PR and then merge. @davidemdot could you please implement these changes? Thanks!  Then  as a second step  we should discuss in the devcall: - Set/clear/rename/append fields: edit  library or tools? - New sublibrary based on AUX file: library  tools  export? - How to improve telemetry collection? || @tobiasdiez  I think it is done now! || 
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Group and reorder the Main Menu (tabs & icons) Group and reorder the Main Menu (File  Edit  Library  Quality  Tools  and View tabs & icons). Now it looks like on the @MartinKarims prototypes.  ![1_file](https://user-images.githubusercontent.com/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5.png)  ![2_edit](https://user-images.githubusercontent.com/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11ac.png)  ![3_library](https://user-images.githubusercontent.com/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfab.png)  ![4_quality](https://user-images.githubusercontent.com/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41.png)  ![5_tools](https://user-images.githubusercontent.com/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7a.png)  ![6_view](https://user-images.githubusercontent.com/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60a.png)   This PR fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks a lot for your work on this. The code changes look good to me. I believe that removing the three tools "Opening a folder  file or URL/DOI apply" disables the associated shortcuts (e.g. F4 to open a file). Can you please make sure the shortcuts work as expected and if not add some code for this here: https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/JabRefFrame.java#L315   Ive a few questions for @MartinKarim  why he proposed certain changes (some of which are not too intuitive for me): - "Replace string" from edit to tools & "Set/clear/rename/append fields" from edit to library (#4669): Both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the "Manage keywords" feature (which is essentially a special version of "set fields"). Moreover  all these three features do not involve any magic on JabRefs part (in contrast to "tools") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one  -) ). Im fine with moving all three to "Tools" although I feel this menu gets overloaded a bit. Moreover  I would suggest t rename "Replace string" by "Find and replace".  - "Find unlinked files" from quality to tools: for me this feature is connected to the "set file link" feature  because once you linked a file to an entry that it is no longer reported under "unlinked files" and vice versa the "find unliked files" dialog allows to link files to entries. So personally  I would group them together.   - "New sublibrary based on AUX file" from tools to library with the reasoning that "Adding a sublibrary has a global effect on the library". However  this feature does not add entries to the current library but uses the AUX file to select certain entries and then creates a new library containing only these entries. So in some sense it is a certain kind of export. Thus  for me it should go to the export menu under file or stay in tools.   || Yes  you are right  now those shortcuts are disabled. Although Ctrl + A for selecting all is still working. In addition  I just realized that sometimes the check symbol of the CheckItem objects (Tools > Web search  Groups interface...) is not synchronized with it side panel.  I will deal with it in a while! || The check synchronization might be a problem with setting the values correctly in the preferences  I remember having similar issues with shown/not shown in the OpenOffice Panel. I had to explicitly set the preferences to new values. || I hope the check synchronization is solved now. Also  I have recovered the previous entry preview elements and behavior.  Please  tell me if it is OK. Thank you! || You seem to have a compile error now. Probably because of the parameter removal in the Check menu stuff. You can click on the Travis failed icon and will see the jobs that failed. You then can expand them and will see the errors  || Yes  my fault. I am so busy these days and cannot focus on it properly. I will solve this ASAP. Sorry for wasting your time. || No problem. Take your time.  || @Siedlerchr What about the coverage test? Do I need to get an equal or greather percent? || You can ignore the code coverage and the dependency update test. Codacy is sometimes a bit difficult  as for some FXML stuff it is generating false positives (e.g. marking functions as unused  but does not take into account that these are defined in fxml) We are generally not so focused on code coverage but prefer tests for the most important model/logic functionality.  || By the way  I have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu. || @tobiasdiez I am sorry for being late in answering your questions. Here are my thoughts on why I moved the items/features you mentioned:  1. _Replace string_: I do think that the the main difference between this feature and _Manage Keywords_ is the possibility to change a string in all entries and not just selected ones  meaning the scope of the function separates it from the other items in _Edit_. Additionally  replacing a string is not bound to a field like _Mangage Keywords_ or _Rank entry_. Therefore  it has a more general purpose  I would argue. However  I agree that it does not completely fit into the _Tools_ tab as well. Moving it there was a try to give the function more exposure because many users did not know about. The _Tools_ tab is a central part of the users workflow  which is why I chose that tab. The name change for the feature is great  I think  because it matches the name of the same feature in other programs.  2. _Set/clear/rename/append fields_: I proposed to move this feature to library because I thought that the four functions it contains had a global effect on all entries. I have noticed  that this was a misunderstanding on my part  so I will have another look at the feature. But I still think  that the feature as a whole does not fit the _Edit_ tab because of the "rename" part. Renaming is not really a content change and it has more complex implications for an entry. If the renaming function was split from the rest  keeping it in _Edit_ seems appropriate.  3. _Find unlinked files_: While _Set file links_ does only improve the quality of existing entries by associating a file  this feature is a bit more versatile. It can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a PDF. I think that the ways of using this feature go beyond QA measures  which is why I proposed to move it.  4. _New sublibrary based on AUX file_: I think that you are right in regard to this function being an export function and that it could be moved to _Export_ as well. Then it would have to be renamed though into something like "Export entries cited in AUX file". However  export has the connotation of some change in the data format  which is not really the case with this feature because it only creates a subset of the current bibliography. I found the _Library_ tab appropriate because the feature is bound to the active library and therefore "depends" on it (and an AUX file).  I think all four points are up to discussion and depend on the view of the individual. This is why I think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion. || Thanks @MartinKarim for your detailed explanation! That clarifies a lot for me and Im fine with these changes. For the sake of moving forward with this PR  I would propose to - Rename "Replace string" to "Find and replace" - Move "New sublibrary based on AUX file" to "Tools" as part of this PR and then merge. @davidemdot could you please implement these changes? Thanks!  Then  as a second step  we should discuss in the devcall: - Set/clear/rename/append fields: edit  library or tools? - New sublibrary based on AUX file: library  tools  export? - How to improve telemetry collection? || @tobiasdiez  I think it is done now! || 
4707,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Group and reorder the Main Menu (tabs & icons) Group and reorder the Main Menu (File  Edit  Library  Quality  Tools  and View tabs & icons). Now it looks like on the @MartinKarims prototypes.  ![1_file](https://user-images.githubusercontent.com/12954316/53632728-f68e2000-3c15-11e9-9037-8aba9676e4b5.png)  ![2_edit](https://user-images.githubusercontent.com/12954316/53632738-fc840100-3c15-11e9-8852-8a07d88f11ac.png)  ![3_library](https://user-images.githubusercontent.com/12954316/53632750-0148b500-3c16-11e9-87be-8ca071ddcfab.png)  ![4_quality](https://user-images.githubusercontent.com/12954316/53632767-07d72c80-3c16-11e9-9c03-61b1a11a3c41.png)  ![5_tools](https://user-images.githubusercontent.com/12954316/53632786-11f92b00-3c16-11e9-994c-57e0be37fe7a.png)  ![6_view](https://user-images.githubusercontent.com/12954316/53633080-c6934c80-3c16-11e9-87ef-f00252e9f60a.png)   This PR fixes #4666 & fixes #4667 & fixes #4668 & fixes #4669 & fixes #4670 & fixes #4671 & fixes #4672 & fixes #4673.  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks a lot for your work on this. The code changes look good to me. I believe that removing the three tools "Opening a folder  file or URL/DOI apply" disables the associated shortcuts (e.g. F4 to open a file). Can you please make sure the shortcuts work as expected and if not add some code for this here: https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/JabRefFrame.java#L315   Ive a few questions for @MartinKarim  why he proposed certain changes (some of which are not too intuitive for me): - "Replace string" from edit to tools & "Set/clear/rename/append fields" from edit to library (#4669): Both of these operations change field values of the currently selected entries (or all entries) and thus for me have the same quality as the "Manage keywords" feature (which is essentially a special version of "set fields"). Moreover  all these three features do not involve any magic on JabRefs part (in contrast to "tools") but they are different versions of bulk edits (but thats definitely a developer-viewpoint and not a user-centric one  -) ). Im fine with moving all three to "Tools" although I feel this menu gets overloaded a bit. Moreover  I would suggest t rename "Replace string" by "Find and replace".  - "Find unlinked files" from quality to tools: for me this feature is connected to the "set file link" feature  because once you linked a file to an entry that it is no longer reported under "unlinked files" and vice versa the "find unliked files" dialog allows to link files to entries. So personally  I would group them together.   - "New sublibrary based on AUX file" from tools to library with the reasoning that "Adding a sublibrary has a global effect on the library". However  this feature does not add entries to the current library but uses the AUX file to select certain entries and then creates a new library containing only these entries. So in some sense it is a certain kind of export. Thus  for me it should go to the export menu under file or stay in tools.   || Yes  you are right  now those shortcuts are disabled. Although Ctrl + A for selecting all is still working. In addition  I just realized that sometimes the check symbol of the CheckItem objects (Tools > Web search  Groups interface...) is not synchronized with it side panel.  I will deal with it in a while! || The check synchronization might be a problem with setting the values correctly in the preferences  I remember having similar issues with shown/not shown in the OpenOffice Panel. I had to explicitly set the preferences to new values. || I hope the check synchronization is solved now. Also  I have recovered the previous entry preview elements and behavior.  Please  tell me if it is OK. Thank you! || You seem to have a compile error now. Probably because of the parameter removal in the Check menu stuff. You can click on the Travis failed icon and will see the jobs that failed. You then can expand them and will see the errors  || Yes  my fault. I am so busy these days and cannot focus on it properly. I will solve this ASAP. Sorry for wasting your time. || No problem. Take your time.  || @Siedlerchr What about the coverage test? Do I need to get an equal or greather percent? || You can ignore the code coverage and the dependency update test. Codacy is sometimes a bit difficult  as for some FXML stuff it is generating false positives (e.g. marking functions as unused  but does not take into account that these are defined in fxml) We are generally not so focused on code coverage but prefer tests for the most important model/logic functionality.  || By the way  I have forgotten to say that this code keeps the associated shortcuts because those choices are also in the right-click menu. || @tobiasdiez I am sorry for being late in answering your questions. Here are my thoughts on why I moved the items/features you mentioned:  1. _Replace string_: I do think that the the main difference between this feature and _Manage Keywords_ is the possibility to change a string in all entries and not just selected ones  meaning the scope of the function separates it from the other items in _Edit_. Additionally  replacing a string is not bound to a field like _Mangage Keywords_ or _Rank entry_. Therefore  it has a more general purpose  I would argue. However  I agree that it does not completely fit into the _Tools_ tab as well. Moving it there was a try to give the function more exposure because many users did not know about. The _Tools_ tab is a central part of the users workflow  which is why I chose that tab. The name change for the feature is great  I think  because it matches the name of the same feature in other programs.  2. _Set/clear/rename/append fields_: I proposed to move this feature to library because I thought that the four functions it contains had a global effect on all entries. I have noticed  that this was a misunderstanding on my part  so I will have another look at the feature. But I still think  that the feature as a whole does not fit the _Edit_ tab because of the "rename" part. Renaming is not really a content change and it has more complex implications for an entry. If the renaming function was split from the rest  keeping it in _Edit_ seems appropriate.  3. _Find unlinked files_: While _Set file links_ does only improve the quality of existing entries by associating a file  this feature is a bit more versatile. It can also help to find files in a folder which do not even have a bibliography entry yet and can even be used to extract bibliographic information from a PDF. I think that the ways of using this feature go beyond QA measures  which is why I proposed to move it.  4. _New sublibrary based on AUX file_: I think that you are right in regard to this function being an export function and that it could be moved to _Export_ as well. Then it would have to be renamed though into something like "Export entries cited in AUX file". However  export has the connotation of some change in the data format  which is not really the case with this feature because it only creates a subset of the current bibliography. I found the _Library_ tab appropriate because the feature is bound to the active library and therefore "depends" on it (and an AUX file).  I think all four points are up to discussion and depend on the view of the individual. This is why I think that especially the grouping of items in the main menu would profit from more user data to have a more objective center in that discussion. || Thanks @MartinKarim for your detailed explanation! That clarifies a lot for me and Im fine with these changes. For the sake of moving forward with this PR  I would propose to - Rename "Replace string" to "Find and replace" - Move "New sublibrary based on AUX file" to "Tools" as part of this PR and then merge. @davidemdot could you please implement these changes? Thanks!  Then  as a second step  we should discuss in the devcall: - Set/clear/rename/append fields: edit  library or tools? - New sublibrary based on AUX file: library  tools  export? - How to improve telemetry collection? || @tobiasdiez  I think it is done now! || 
4713,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,Fix: bibkey generated does not handle diacritics Fixes #4709. Clean up the author value in `BracketedPattern` after it is retrieved from the `BibEntry`.   ----  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks for your contribution. Unfortunately your changes resulted in a lot of failed tests (look at Details of the travis build and then select the failing job)  Seems like there are some more cases you need to take care of. (Im not that deep into the bibtexkeygenerator stuff) || Noted. Is there another approach to handle this? || ~Currently facing some issues while writing tests: `mockito` and `jfoenix.controls.JFXSnackbarLayout` cannot be imported  whereas `jfoenix.controls.JFXSnackbar.SnackbarEvent` works fine.  I updated to jdk8_202 and it does not help.~ Just reimported the project  it works now.  After syncing fork  the same error occurs. How to fix this? ![image](https://user-images.githubusercontent.com/30564248/54003936-63f5ff80-4186-11e9-857e-acd053138ee6.png)  ||  @chelseyong  Try merging the current master in e.g.  (if upstream is the jabref/jabref repo) ``` git fetch upstream  git merge upstream/master ``` Im not an intellij user  but executing gradle should be sufficient.  maybe @halirutan  can tell you more. || Sorry for the delay  I had some software issues.  Symbol `-` is now removed from key generation.  ||
4720,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix #4703: Newline format couldnt be changed Fixes #4703.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4722,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Adding additional modifiers to be used in bibtex key generator As I currently wanted to have a possibility to have "Capitalized Shorttitles" in my bibtex keys I reused the already existing `CapitalizeFormatter`  `TitleCaseFormatter` and `SentenceCaseFormatter` as "modifiers" to be used also for the BibtexKeyGenerator.  This implements #1506 and is more flexible as the solution developed by @oscargus at the time in  #1894 as it can be applied to all other fields and not only to titles.    ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) - https://help.jabref.org/en/BibtexKeyPatterns needs to be updated If you merge the current master in  the build errors should be resolved. (I accidentally pushed some changes to master yesterday)  || As build is now passing after rebase Ill merge now. ||
4727,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,[#4306] Disable renaming Fixes #4306 If I remember correctly  this is a design flaw in the Java language  of the functional programming implementation.  Try using the classic if construct.  || I am not sure how to get around this  does this mean the equals method in OptionalUtils is redundant  because using the if Construct would mean I cant use the generic types on isSameFile method ||
4729,1,0,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,Saving changes and exiting application Fixes #4728  When the user clicks _Save changes_ option  the status of saving is not shown unlike before. I am not sure what might be the cause of that.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) The `tearDownJabRef(filenames)` executes before the files are actually saved  would this be responsible for the UI not being shown?  || I do not have the code at hands  but this could be a reason. You could debug and see where the save happens and when the instance should be closed || Okay  so this is what I think is happening.  The SaveDatabaseAction class [doSave()](https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/exporter/SaveDatabaseAction.java#L141) updates UI on _JavaFxThread_  however the call to `tearDownJabRefFrame` executes before that and a blank window is shown instead of the UI.  I placed a lock before calling [tearDownJabRefFrame](https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/JabRefFrame.java#L516)  hence  blocking that thread. But the code under [doSave()](https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/exporter/SaveDatabaseAction.java#L141) method  wasnt executed  shouldnt they be running on separate threads? || Ill take a look at it tomorrow  Yash Kothari <notifications@github.com> schrieb am Mi.  6. März 2019  19:09:  > Okay  so this is what I think is happening. > > The SaveDatabaseAction class doSave() > <https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/exporter/SaveDatabaseAction.java#L141> > updates UI on *JavaFxThread*  however the call to tearDownJabRefFrame > executes before that and a blank window is shown instead of the UI. > > I placed a lock before calling tearDownJabRefFrame > <https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/JabRefFrame.java#L516>  > hence  blocking that thread. But the code under doSave() > <https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/exporter/SaveDatabaseAction.java#L141> > method  wasnt executed  shouldnt they be running on separate threads? > > — > You are receiving this because you commented. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/4729#issuecomment-470214052>  or mute > the thread > <https://github.com/notifications/unsubscribe-auth/AATi5IUO25BN99fnkHBJeATCdwABP-JYks5vUARIgaJpZM4bhHoJ> > . >  || I have a doubt  since the `doSave()` method handles `SaveException`  what exceptions are we trying to catch under `confirmClose()`? || Please remove the runInJavaFXThread call only when the doSave is called from GUI methods. It might that the doSave could be called from a background thread which will result in a not on fx thread exception. || Will adding a new method `saveFromGUI()` in `SaveDatabaseAction` be a good approach to solving this problem? This  I think  will lead to some redundant code or will require refactoring of the `save` method.  ||
4730,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Improve toolbar icons and their layout Group and reorder the toolbar icons and add Generate BibTeX keys button. Now it looks like on the @MartinKarims prototypes. <br> Screenshots of the new layout: ![right](https://user-images.githubusercontent.com/32721326/53910396-7d863280-4032-11e9-9308-cdace307167b.jpg) ![left](https://user-images.githubusercontent.com/32721326/53910397-7e1ec900-4032-11e9-8d7a-9f86ef757cee.jpg)   This PR fixes #4584 .  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4731,1,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0,0,1,Fix default import format pattern Remove Display Array Add migration Fixes #4724   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4738,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Adding support for input methods Fixes #4474  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thank you! I am enjoying the process so far. ||
4744,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Move library specific key pattern dialog call to library menu Follow-up of #4666 and #4707: Menu entry "BibTeX Key patterns" is calling a library specific dialog to set key patterns. The global key patterns are managed using "Options" -> "Preferences".  Thus: Moving it to "library" menu:  ![Grabbed_20190310-174125](https://user-images.githubusercontent.com/676652/54088195-bdfbee00-435b-11e9-8fab-063fe84f9805.png)  (Another minor addition: setting title of dialog which was empty before)  ----  - ~~Change in CHANGELOG.md described~~ - ~~Tests created for changes~~ - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - ~~Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)~~  
4746,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,1,[WIP] Switch to the mariadb connector from the mysql one. Switch from `com.mysql.cj.jdbc.Driver` to `org.mariadb.jdbc.Driver`.  ## References  #4745   ## Checklist  Happy to work on these as required.  - [x] Change in CHANGELOG.md described - [x] Tests created for changes (modified original) - [x] Manually tested changed features in running JabRef ([travis](https://travis-ci.org/kiwiroy/jabref/builds/504417225)) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Hey @kiwiroy  thank you for this contribution! After some minutes of comparing the JDBC drivers  Im not sure why mariadb is the obvious way to go. So please add more reasoning  both here in the comments  as well as a condensed version in an architecture decision record here https://github.com/JabRef/jabref/tree/master/docs/adr  This will help us to judge upon the benefits and consequences of this change. || Im curious: Would it be possible to have both connectors e.g. MYSQL and MARIADB together so that a user can choose between them or does this create conflics? || Just some comments here first:  Im unsure if this is relevant  but this [blog] has *some* background information. MariaDB provide a comprehensive [feature comparison]  though that is mainly server features rather than client. As far as possible they maintain protocol [compatibility] for clients.  For the linked issue (#4745) the MySQL connector does not connect to the PAM enabled server despite [claims]. The MySQL connector documentation mention a configuration property [authenticationPlugins] which is a *"Comma-delimited list of classes that implement com.mysql.cj.protocol.AuthenticationPlugin"*. A PAM class  Id expect `dialog`  cannot be seen in the connector either.  <img width"286" alt"com.mysql.cj.protocol.a.authentication" src"https://user-images.githubusercontent.com/313562/54109224-f32f3b80-4442-11e9-86b6-72e0b019ec93.png">  The [MariaDB] implementations include a specific class for this.  This [StackOverflow][stackoverflow-1] thread pointed me to the MariaDB connector as a replacement that would achieve a connection and the comment in [this one][stackoverflow-2] suggests that performance will not be an issue.  > The performance in mysql and with the mysql-connectorj was worse in all cases than mariadb  It is possible to have the two resident in the class path [concurrently].  [blog]: https://hackr.io/blog/mariadb-vs-mysql [feature comparison]: https://mariadb.com/kb/en/library/mariadb-vs-mysql-features/ [compatibility]: https://mariadb.com/kb/en/library/mariadb-vs-mysql-compatibility/ [authenticationPlugins]: https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-configuration-properties.html [results]: https://dev.mysql.com/doc/search/?d218&p1&qAuthenticationPlugin [MariaDB]: https://github.com/MariaDB/mariadb-connector-j/tree/master/src/main/java/org/mariadb/jdbc/internal/com/send/authentication [stackoverflow-1]: https://stackoverflow.com/a/26930596/7456461 [stackoverflow-2]: https://stackoverflow.com/questions/50473450/mariadb-jdbc-driver-not-batching-updates-efficiently-vs-sql-server [PAM walkthough]: https://mariadb.com/resources/blog/writing-a-mariadb-pam-authentication-plugin/ [claims]: https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-using-pam.html [serverPAM]: https://dev.mysql.com/doc/refman/8.0/en/pam-pluggable-authentication.html [concurrently]: https://github.com/MariaDB/mariadb-connector-j/blob/master/documentation/use-mariadb-connector-j-driver.creole#having-mariadb-and-mysql-driver-in-the-same-classpath || First [pass](https://github.com/JabRef/jabref/compare/master...kiwiroy:concurrently) at mysql **and** mariadb. Travis test suite [passes](https://travis-ci.org/kiwiroy/jabref/builds/504587880) and local testing of MariaDB connector against the database with PAM auth succeeds  while only changing the dropdown to MySQL results in the `Unable to load authentication plugin dialog.` message.  **N.B.** As the driver is the only difference I chose to reuse the MySQLProcessor class https://github.com/JabRef/jabref/compare/master...kiwiroy:concurrently#diff-30b9c551de374dcefae08e56aad3dec9R577 || Yeah cool that it works! That would be best compromise here I think.  || Right... Should this PR be closed and a new one created - after a little tidy up?  Also  any pointers on how [this passed](https://travis-ci.org/kiwiroy/jabref/builds/504575907) while including [this line](https://github.com/kiwiroy/jabref/compare/51ff33cb61e2^...648c92231c6a#diff-a465c056fb9283b0efd14091f4eb8d66R42). || Hm  that is really odd regarding the test. Try debugging the test locally or add a System.out.println before comparing the values to see the output  You can either reuse this  PR if you want or use the other PR. Whatever you want || @kiwiroy  What is the current status here? It would be really nice to have this inlcuded || I’ve had a busy few weeks  will attend to it soon  || @kiwiroy any update? || Closing due to inactivity. Feel free to reopen it if you have time to work on it. || I resolved the conflicts and are going to merge it. I will add an ADR.  We keep only MariaDB. Reason: MySQL Connector/J 8.0 is licensed under GPL. Source: <https://downloads.mysql.com/docs/licenses/connector-j-8.0-gpl-en.pdf>  > Without limiting the foregoing grant of rights under the GPLv2 and additional permission as to separately licensed software  this Connector is also subject to the Universal FOSS Exception  version 1.0  a copy of which is reproduced below and can also be found along with its FAQ at http://oss.oracle.com/licenses/universal-foss-exception  I understand that there is that FOSS exception  but I am not aware of the consequences - and that exception is not commonly known. || 
4759,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Feature: implement search filter in show preferences Add a search box in show preferences window to allow users to filter preference options.  Resolves #1019  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  ![preferences](https://user-images.githubusercontent.com/21019116/54366500-bfe4ea80-4696-11e9-8d07-e0cd0428ed66.png)  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Codewise lgtm. Could you please provide a screenshot how it looks like when the search matched/text is found? || @Siedlerchr I have added a screenshot now. || 1. Will moving the checkbox next to the search field provide a better UX? 2. Should the `count` label be bound to `filteredOptions.size()`? || Yeah! Thats cool  looks good  I would move the checkbox to the top next to the search field. Regarding your second option: Either you directly bind it to the filtered list size property or you update the text in the method which is your current way.   But both together will result in an error: A bound value cannot be set  ) So as you automatically call the updateModel method on changes  you can leave it as is.  || But the `updatedModel()` is called only when check box is changed  I was wondering if having it update while filtering would be a good addition. || On moving the checkbox to the top next to the search field  what are your opinion on it @tobiasdiez @Siedlerchr ? ![2019-03-15-181809_1920x1080_scrot](https://user-images.githubusercontent.com/21019116/54432431-2f1e1580-474f-11e9-8f1b-b5b43c5e8b43.png)  || Yep  that is exactly what I meant! Looks good! And thanks for fixing this longstanding issue  ) || I am glad it came out as expected! :) However  I think that the `count` label should be bound to the `table` size  so that the right count is shown when filtering. I will push the changes and we can decide on whether to merge the change or stick with the current setup.  ||
4760,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Improve Remote messaging Fixes #4023 (multiple instances possible) and should fix #4481 by reducing the timeout (thus JabRef does no longer waits seconds if a proxy prevents us from connecting to localhast). Surpasses #4460.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Does not work:  Still possible to start a second instance from within Eclipse.   ``` 20:40:59.400 [JavaFX Application Thread] DEBUG org.jabref.logic.remote.client.RemoteClient - Could not ping server at port 6050 - java.net.SocketTimeoutException: connect timed out 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)  ``` || This sounds like the first instance failed to respond. Did you made sure that both instances run from the new code? Do you get an error message in the first instance? || Yes. I started both instances in Eclipse. Waited until the first instance finished starting I only passed the debug parameter as command line argument.  The logged error is from the first instance at startup.  Same happens when the second instance is starting. The second instance starts normally. No other errors  || Tested again today  seems to work now. ||
4760,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Improve Remote messaging Fixes #4023 (multiple instances possible) and should fix #4481 by reducing the timeout (thus JabRef does no longer waits seconds if a proxy prevents us from connecting to localhast). Surpasses #4460.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Does not work:  Still possible to start a second instance from within Eclipse.   ``` 20:40:59.400 [JavaFX Application Thread] DEBUG org.jabref.logic.remote.client.RemoteClient - Could not ping server at port 6050 - java.net.SocketTimeoutException: connect timed out 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)  ``` || This sounds like the first instance failed to respond. Did you made sure that both instances run from the new code? Do you get an error message in the first instance? || Yes. I started both instances in Eclipse. Waited until the first instance finished starting I only passed the debug parameter as command line argument.  The logged error is from the first instance at startup.  Same happens when the second instance is starting. The second instance starts normally. No other errors  || Tested again today  seems to work now. ||
4760,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Improve Remote messaging Fixes #4023 (multiple instances possible) and should fix #4481 by reducing the timeout (thus JabRef does no longer waits seconds if a proxy prevents us from connecting to localhast). Surpasses #4460.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Does not work:  Still possible to start a second instance from within Eclipse.   ``` 20:40:59.400 [JavaFX Application Thread] DEBUG org.jabref.logic.remote.client.RemoteClient - Could not ping server at port 6050 - java.net.SocketTimeoutException: connect timed out 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)  ``` || This sounds like the first instance failed to respond. Did you made sure that both instances run from the new code? Do you get an error message in the first instance? || Yes. I started both instances in Eclipse. Waited until the first instance finished starting I only passed the debug parameter as command line argument.  The logged error is from the first instance at startup.  Same happens when the second instance is starting. The second instance starts normally. No other errors  || Tested again today  seems to work now. ||
4761,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Enable import button only if entry selected <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes [#4755](https://github.com/JabRef/jabref/issues/4755)  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4769,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix removing entries when source-code-field is out of focus Fixes #4764  The issue was  `storeSource()` method is called when entry is out of focus  however  if another entry is selected then `currentEntry` is updated to that and `storeSource()` is called with the previous `codeArea` but updating it in the second entry  thus causing a duplication.  Fix was to pass the entry as another argument to `storeSource()`.   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4779,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,Fix IllegalArgumentException when ranking entries Add names for ranking entries event so it does not generate an IllegalArgumentException.  This PR fixes #4754 .  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4791,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix NPE in Duplicate Resolver Dialog Fixes #4785 init method was accessing the database field before it was initialized. Fixes #4786 Pass a new BibDatabsecontext()   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) As this are very simple fixes I merge directly) ||
4791,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix NPE in Duplicate Resolver Dialog Fixes #4785 init method was accessing the database field before it was initialized. Fixes #4786 Pass a new BibDatabsecontext()   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) As this are very simple fixes I merge directly) ||
4792,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Relativizes paths to aux files <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes issue [#4736](https://github.com/JabRef/jabref/issues/4736)  Changes:  1. Introduced a new `LaTexFileDirectory` to MetaData.java 2. The path of the aux file is now serialized as a relative path with respect to the `LaTexFileDirectory` 3. The `getFilePath()` of TexGroup now returns the relative path of the aux file used to create the group. 4. Each user can define their own `LaTexFileDirectory` similar to `userFileDirectory` 5. I have implemented tests to check for basic parsing/serialization and also to check that the relative path is being found correctly. 6. When user selects an aux file via the browse button  they are shown the relative path of the file in `texGroupFilePath` in Group Dialog.  ----  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4794,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix closing of library not handling backup and autosave manager shutdown Fixes #4789  The issue was when the tab is closed by clicking x it did not call the method `closeTab()` which handles the closing of backup and autosave manager.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thank you for those kind words! :smile:  || Thank you very much for this fix. Can you please write a Changelog entry  before we merge this?  EDIT: Actually  Im not sure when this bug was introduced. Probably only recently  so we do not need a changelog entry. ||
4797,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,Fix right clicking on any entry and selecting "Open folder" results in the NullPointer exception Fixes #4763 The issue was when a user right-clicks an entry and right click "open folder"  then it results in Null Pointer Exception in Linux System.  The main cause for this issue was in the Linux implementation of NativeDesktop(Linux.java#openFolderAndSelectFile)  that code looks for  an environment variable named DESKTOP_SESSION and if this variable is not set in any system then it will result in Null Pointer Exception.  The Fix was to check if DESKTOP_SESSION variable is present or not  if not present then run a default command which will try to open the folder.  Another issue was that if a system does not have a file browser installed then right-clicking on any entry and selecting "open folder" option will not do anything(if there is no file browser installed in the system).  To fix this issue Ive added an option in preference setting window to set command or program for default file browser  where a user can explicitly set command or let JefRef use a default behavior like this:  ![jabref-fix-4763](https://user-images.githubusercontent.com/17297948/54761987-39418780-4c19-11e9-999e-2b62fa24b237.png)  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Could you please check issue #4802 as well? || @Siedlerchr  Okay  Ill try to fix this issue. ||
4807,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Item Count in a group updated correctly <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes issue [#4679](https://github.com/JabRef/jabref/issues/4679)  This PR fixes the first issue. I could not reproduce the second issue. The item count should now be updated correctly.  The problem was because of the Listener not getting notified when changes were being made. This was due to the weak listener which was attached to ObservableList returned by `databaseContext.getDatabase().getEntries()`. https://stackoverflow.com/questions/44341400/whats-the-purpose-of-fxcollections-unmodifiableobservablelist   The only case where this PR might not work is when we are dealing with a library in which there are no groups other than the All Entries [#4441](https://github.com/JabRef/jabref/issues/4441). That is because the group being utilized in the line `text.textProperty().bind(group.getHits().asString()) ` in file /gui/groups/GroupTreeView.java is the group All Entries that is present even before you open any library in JabRef. This causes value to not be set properly. But the only time it happens is if the only group you have in the new library is All Entries. Once we are able to fix that  this PR should work in all cases.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) > Is this the only instance where listeners are registered against the list returned by `getEntries`? I would also be nice if you could add a small comment in the code explaining why we need to hold a reference to the list (because some IDEs would suggest to convert the field to variable with field scope).  I am not sure about that. I can check for other instances over this week. ||
4807,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Item Count in a group updated correctly <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes issue [#4679](https://github.com/JabRef/jabref/issues/4679)  This PR fixes the first issue. I could not reproduce the second issue. The item count should now be updated correctly.  The problem was because of the Listener not getting notified when changes were being made. This was due to the weak listener which was attached to ObservableList returned by `databaseContext.getDatabase().getEntries()`. https://stackoverflow.com/questions/44341400/whats-the-purpose-of-fxcollections-unmodifiableobservablelist   The only case where this PR might not work is when we are dealing with a library in which there are no groups other than the All Entries [#4441](https://github.com/JabRef/jabref/issues/4441). That is because the group being utilized in the line `text.textProperty().bind(group.getHits().asString()) ` in file /gui/groups/GroupTreeView.java is the group All Entries that is present even before you open any library in JabRef. This causes value to not be set properly. But the only time it happens is if the only group you have in the new library is All Entries. Once we are able to fix that  this PR should work in all cases.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) > Is this the only instance where listeners are registered against the list returned by `getEntries`? I would also be nice if you could add a small comment in the code explaining why we need to hold a reference to the list (because some IDEs would suggest to convert the field to variable with field scope).  I am not sure about that. I can check for other instances over this week. ||
4815,1,0,0,1,0,1,1,0,1,0,1,0,1,0,1,1,0,0,0,Enhanced message log Worked on  [#4805](https://github.com/JabRef/jabref/issues/4805) .  Removed JabRefFrame.output in favor of FXDialogService.notify and refactored calling code. Added Logging to FXDialogService.notify  Logs seemed to be duplicated afterwards. However  this was another issue with log4j. Because LogEvent-Objects are reused  they were copied in LogMessages.add . But at that point it was too late  resulting in different Log Messages being overwritten. I therefore moved the copying to GuiAppender.append and this resolves the issue of seemingly duplicated log messages.  This is probably also the reason for [#4811](https://github.com/JabRef/jabref/issues/4811)  closes #4805 closes #4811  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) @Siedlerchr @tobiasdiez  I thought while im at this anyway  i could also do it properly and checked all calls to DialogService.notify. I refactored all places where the method was called from a background thread  so that i could remove `DefaultTaskExecutor.runInJavaFXThread` from DialogService.notify. At two points however it was not as easy  see the review above. What do you think? || Thanks for the update. The `BackgroundTask` has `updateProgress` and `updateMessage` for these cases. However  an implementation along these lines needs further refactoring I guess. In my opinion  we can leave it like that for the moment and merge. || Ok  so maybe a follow-up issue could then be to improve the Identifier lookup and maybe also the fulltext lookup using `updateProgress` and `updateMessage` ? This is ready for merge then  i guess. || Yes  to change the identifer lookkup and the other would be a good followup issue ||
4815,1,0,0,1,0,1,1,0,1,0,1,0,1,0,1,1,0,0,0,Enhanced message log Worked on  [#4805](https://github.com/JabRef/jabref/issues/4805) .  Removed JabRefFrame.output in favor of FXDialogService.notify and refactored calling code. Added Logging to FXDialogService.notify  Logs seemed to be duplicated afterwards. However  this was another issue with log4j. Because LogEvent-Objects are reused  they were copied in LogMessages.add . But at that point it was too late  resulting in different Log Messages being overwritten. I therefore moved the copying to GuiAppender.append and this resolves the issue of seemingly duplicated log messages.  This is probably also the reason for [#4811](https://github.com/JabRef/jabref/issues/4811)  closes #4805 closes #4811  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) @Siedlerchr @tobiasdiez  I thought while im at this anyway  i could also do it properly and checked all calls to DialogService.notify. I refactored all places where the method was called from a background thread  so that i could remove `DefaultTaskExecutor.runInJavaFXThread` from DialogService.notify. At two points however it was not as easy  see the review above. What do you think? || Thanks for the update. The `BackgroundTask` has `updateProgress` and `updateMessage` for these cases. However  an implementation along these lines needs further refactoring I guess. In my opinion  we can leave it like that for the moment and merge. || Ok  so maybe a follow-up issue could then be to improve the Identifier lookup and maybe also the fulltext lookup using `updateProgress` and `updateMessage` ? This is ready for merge then  i guess. || Yes  to change the identifer lookkup and the other would be a good followup issue ||
4818,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Put renaming of file entries in JavaFX thread for cleanup closes #4817   Because field changes must be done in the JavaFX thread  i put the field change in a callable to be executed by the JavaFX thread.  This issue might arise for other cleanup tasks as well.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks for your pullrequest! || @tobiasdiez Im sorry  i was a bit careless with this pull request and used a class from the `gui` inside the `logic` package and now the build fails... Shall I open another pull request to revert this or can you fix this on the master branch? ||
4822,1,0,0,1,0,1,1,0,0,1,1,0,0,0,1,1,0,0,0,Convert AutoLinkFilesAction to JavaFX Fixes #4819. Also convert a few other message boxes to JavaFX.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) lgt  build failing is due to previous problematic PR with cleanup ||
4835,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,All buttons in custom dialogs react on enter All buttons in custom dialogs react now also on <kbd>enter</kbd>. (The default behavior <kbd>space</kbd> in JavaFX is not affected by this change.)  Fixes #4820   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) Could you please check the Edit strings dialog? Cause it has an editable table and  you need to press enter to confirm the column value.  Im not sure if this interfers with the main dialog button  || From my point of view there is no intereference.  The confirmation of the value via enter works. ||
4839,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Fix parser exception when loading tex-groups with non-existing file Fixes #4735.  Catch file not found exception and handle non existing aux files gracefully.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4847,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,removed default constructor of FXDialogService Fix for #4840. Needs test and discussion  ~~Removed injection mechanism for DialogService in order to remove its default constructor  because through the null value used in the default constructor  the NullPointerExceptions were caused.~~   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4848,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,Fix custom name formatters Fixes #3531.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4860,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Remove deprecated awt apple extension Fixes #3905  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) @LinusDietz  @halirutan  Could you please test if this removal breaks anything related to mac?  The only thing from the code might be the file handling  e.g. double? click on a bib file in the finder   || Tested it for a day. No issues appeared. ||
4876,1,0,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0,1,0,Fix saving of Strings Fix removing of Strings  Fixes #4873  The only problem I now have  I cant reliable detect/prevent dupliacte Strings  e.g. A User can have a String with label a and content b  and a User can enter a new String a  with content c The first String would now be overwritten. @tobiasdiez  Do you have an idea if we can directly prevent the entering of duplicates?  The addAll method simply adds all strings and updates the content  if found. Previously it would always report a duplicate label exception.  Maybe one could check the ID value if its present or equals.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks  now its functional. ||
4892,1,0,0,0,1,1,1,0,0,0,1,1,0,0,1,1,0,1,0,Fixed Closing of the Shared Database Login Dialog if the user enters wrong authentication details - #4857 Fix for the issue -  Dialog close after pressing ok button #4857 - Fixed Closing of the Shared Database Login Dialog if the user enters wrong authentication details.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4896,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Store column widths as integer Fixes #4579  Store column widths as integer  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4918,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,Fixes throwing an exception when id field is present in bib file Fixes #4905  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Should the exception also be removed from the `clearField` method? https://github.com/JabRef/jabref/blob/23e9e523e36705fd2562c300e4fc7bc73f7ac8c5/src/main/java/org/jabref/model/entry/BibEntry.java#L463-L468 || Yes  please also remove it from the clear field method! ||
4931,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Improve author parsing Fixes #4864. The author class added an additional space when converting "A O" to the dotted version "A. O.".  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4935,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Throw BibEntryNotFound exception in case entry is no longer present Fixes #4932   When an entry got removed a NPE complaining about an empty database was thrown because of some weird UnkownBibTexEntry thing. Now the correct BibEntryNotFound  Exception is thrown showing the problematic reference mark  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4943,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Fix threading issue with opening from recent libraries Fixes #4940  On Windows 10 I could not reproduce the original exception  but Im very convinced that I found the threading culprit  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4950,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,fixes remaining issues in #4844 Fixes #4844   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  As usual the situation was not as easy as it seemed to be in #4887. I reused now the existing renaming logic for "renaming to suggested filename" which performs some more checks like not to overwrite existing files and also takes the "file directory" settings into account.  Thus  this should fix the remaining problem mentioned in #4844.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4964,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Remove UI ThreadList for maintable as it prevents sorting in maintable Fixes #4886  Renenables sorting.  Tried a bit around and could not find any side issue so far.   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Added it around the original getEntries  that works now as well || JabRef 5.0-dev--snapshot--2019-05-11--master--3baa6bd22 Linux 4.18.0-18-generic amd64  Java 1.8.0_191  Yes  seems to work fine.  Its a little slow perhaps?  JabRef seems to need a up to 7 seconds to sort a newly-selected date/year column (Thinkpad T560 with i5 core CPU  bib database with 4000+ entries) and a few seconds after a sort to start receiving keystrokes again.  Alphabetic field columns sort more quickly.  Thanks! Dominik || @tobiasdiez  I didnt encounter any problems with the cleanup. Maybe we can remove the wrapper? Seems to cost performance ||
4965,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,Fix downloading pdf produces html as extension If we already have a filetype we use that instead of relying on the autodetection   Fixes #4913  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) I tried adding a test  but its a bit complicated  as the logic is an lambda in the prepareDownloadTask method. And solely testing the new method which just passes the type as parameter is trivial.  || Mhh  you should be able to test the `download` method directly: ```java LinkedFile onlineFile  new LinkedFile("http://arxiv something")  LinkedFileViewModel viewModel  new LinkedFileViewModel(onlineFile  ....)  viewModel.download()  assertEquals("expectedPath"  onlineFile.getLink())  ``` needs a bit more setup  but should work in principle. || Got it to work with heavy mocking and refactoring. The shitty externalFileTypes Singleton is really bad for testing.  Needs some cleanup of the test class now. Delete some  things which are no longer necessary  || 
4970,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,Bump Jsoup to 1.12.1 and switch Jsoups StringUtil for JabRefs StringUtil Here is a correction for #4968: it bumps Jsoup from 1.11.3 to 1.12.1 and  also  it switchs Jsoups StringUtil for JabRefs StringUtil in all files that used it.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4979,1,0,0,1,1,1,1,0,0,0,1,0,1,0,1,1,0,0,1,Fix command line help text Now in the CLI help text  arguments and descriptions have been rewritten for fixing  simplifying  and detailing them better.  It fixes issue #2016.  ![CLI help](https://user-images.githubusercontent.com/12954316/57963224-94de7780-7921-11e9-9d06-5e00be984fbe.png)  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4980,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Resize different fonts changing entry type Now JabRef uses the same typography for the two menus to change entry type (and for the tooltip).  It fixes #4977.  ![entry_type_menu](https://user-images.githubusercontent.com/12954316/57971729-07873b80-7992-11e9-84cd-a92f8ea28444.png)  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4981,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Duplicate check on import should be run in background Task #4963 created background task for the work done in org/jabref/gui/importer/ImportEntriesViewModel.java:68 @Siedlerchr thank you for the review  your suggestion is committed  as per call flow I havent found some bottleneck for viewModel as per call flow if gets called mainly org/jabref/gui/importer/ImportEntriesDialog.java:73  but I guess as you wrote it worth to have this task done in a separate thread for both use cases  ||
4993,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,Fix icon size - the second The entry-editor showed a slightly smaller icon for the GenerateBibtexKey-Button  this bug also had an effect on the display of icon size in #4991  The GenerateBibtexKey-Button is now a Button like every other Button in FXML  the ActionObject was put into a standard-FXML-method. Everything works  including Undo and asking before overwriting.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Ready to review. || Thanks for the fix! ||
4996,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix the Attach file dialog for starting on the users main directory Now the "Attach file" dialog  in the right-click menu for an entry  starts on the working directory instead of the users main directory. It is the same behavior as when adding a file from the entry editor.  It solves [#4995](https://github.com/JabRef/jabref/issues/4995)  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
4999,1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,fix IEE fetcher Fixes #4997   add exception dialog on import fail  Check if we have keywords field present in json  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5011,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,[WIP] LaTeX Integration project Hey! This is the pull request where I will be uploading everything related to the LaTeX Integration project  which Tobias mentioned in #5002.  For the moment  I have been coding the backend of the TEX parser and preparing tests for these classes. Before the end of this week  I will add support for nested files and cross-references and will keep improving the related documentation.  Any feedback is more than welcome! **:"D** A suggestion for the UI of the search result window: I like the design of ResearchGate to show the citations  ![image](https://user-images.githubusercontent.com/5037600/59087955-7e1ab780-8906-11e9-9c84-1678dfad75e4.png)  We can do something similar  just replacing the reference (Minimal two-spheres ...) with the name of the latex document  and the links ("View") with an option to jump to the citation in the latex file.  In general  tables are nice if you want to compare items while lists are preferred if the user is more interested in the details of an item. I guess for the search result window we are in the second case (although that might differ from user to user). || Thanks for your feedback  @Siedlerchr and @tobiasdiez! Now all identified issues should be fixed.  - TODO: Add support for multicite commands. - TODO: Expand integration test. || @tobiasdiez  what do you think of this GUI  according to the example that you proposed?  ![Parser UI](https://user-images.githubusercontent.com/12954316/59455214-01ab3b80-8e14-11e9-8fb8-fcf777fb1842.png)  By the way  you all can follow the development of the user interface in [other pull request](https://github.com/davidemdot/jabref/pull/1) (this one is becoming very big). || I have renamed CrossingKeys to TexBibEntriesResolver. Do you think this is a clear method signature? Regarding BibDatabase and cloneEntry()  they were related to an idea from the first few days  but it does not make sense anymore.  All your remarks should be solved now!  Furthermore  I have been working on the GUI too. Hope to commit the latest changes soon. || Thanks for the update. The code looks good to me now and from my point of view we can merge this PR onto a new branch at the JabRef repository. This allows you to open further PRs against this new branch with proper updates and build checks. Moreover  our build infrastructure kicks in and we get a proper build which we could share with users to get early feedback.  @Siedlerchr @LinusDietz  || @davidemdot if possible  can you please change the target branch to a new one (say JabRef/latexintegration). If not please open a new PR targeting this branch. Thanks || @tobiasdiez  I can change this PR to another branch  but I am not allowed to create a new one in this repo.  Could you open it  please? Just writing the name in the branch selector menu and...  ![new_branch](https://user-images.githubusercontent.com/12954316/60295745-c422d400-9924-11e9-9fc1-5924286c0391.png)  || Done! https://github.com/JabRef/jabref/tree/latexintegration || Ive merged this now  so you can target your new PRs onto `JabRef:latexintegration` (with proper github notifications and build infrastructure) || 
5014,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Adding DOI to test entry - fixes #5013 One liner to have also a DOI available in the entry to test the preview function.  @noMicrosoftBuhtz any more suggestions what should be added?   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks a lot.  I would like to have some `comments` (In the past it was `notes`  wasnt it?) and `groups` and `keywords`.  How could we handle `issue`? As I understand biblatex `issue` is used when `number` and `volume` does not exists and vis-a-vis. I also know that some journals or import/export mechanism generates entries with all three attributes.  If we are still in wish-mode... What is about the `getTestEntryBook()`. Is it still used? Beside an `@article` I would like to see a testentry for `@InCollection` (of course combined with a `@Collection` entry. || Only three wishes!  -)   I also added `issue`  `keywords` and `comment` to the test entry.   `groups` in general would also be possible - but as there are different ways to configure groups (e.g.  based on keywords  etc.) its hard to configure a preview to show all possibilities.  The `getTestEntryBook()` method is used in the LibreOffice settings - but not in the entry preview preferences. ||
5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Select push app in preferences As asked by @tobiasdiez  here is my alternative proposal  this closes #4991 by merging. fixes #674 closes #3942 and closes #4368  <img width"242" alt"PrefPushToApp" src"https://user-images.githubusercontent.com/50491877/58768088-a9637680-8595-11e9-95cb-5a7f2ac16342.png">  This branch is build up on the other branch  including the other commits  this time by intention. I hope you like it. Have a good night!  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) What I really hate is the hardcoding of applicationNames in PushToApplicationSettings.class. But before there was only some cryptic numbering scheme  depending on the order  the push-applications were created in the first place. At least  its a little bit more readable. Yet I saw no other way without a larger refactoring of this code.  Ready to review || I added some eye-candy  you will be charmed.  -) <img width"330" alt"select push application" src"https://user-images.githubusercontent.com/50491877/58866242-7a91f100-86b8-11e9-8b9a-7ef0d28385cf.png">  || Looks good to me! || Ok  should be ready again. There are still a lot of things  that could be done  e.g. refactoring of the Preferences-Dialog and changing the single tabs to MVVC  but I do not want to interfere with the other rework towards 5.0 and the fate of swing. || Looks good  please check if you can select the push to application multiple times after each other without closing the prefs dialog Select lyx and then again select Texstudio for example.  If it works all is good  || Works fine. At least if I understood you right. I hope so. || Looks very good to me now. Thanks again! || You are welcome. This was fun - again! Lets push JabRaf forward towards 5.0.  -) || 
5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Select push app in preferences As asked by @tobiasdiez  here is my alternative proposal  this closes #4991 by merging. fixes #674 closes #3942 and closes #4368  <img width"242" alt"PrefPushToApp" src"https://user-images.githubusercontent.com/50491877/58768088-a9637680-8595-11e9-95cb-5a7f2ac16342.png">  This branch is build up on the other branch  including the other commits  this time by intention. I hope you like it. Have a good night!  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) What I really hate is the hardcoding of applicationNames in PushToApplicationSettings.class. But before there was only some cryptic numbering scheme  depending on the order  the push-applications were created in the first place. At least  its a little bit more readable. Yet I saw no other way without a larger refactoring of this code.  Ready to review || I added some eye-candy  you will be charmed.  -) <img width"330" alt"select push application" src"https://user-images.githubusercontent.com/50491877/58866242-7a91f100-86b8-11e9-8b9a-7ef0d28385cf.png">  || Looks good to me! || Ok  should be ready again. There are still a lot of things  that could be done  e.g. refactoring of the Preferences-Dialog and changing the single tabs to MVVC  but I do not want to interfere with the other rework towards 5.0 and the fate of swing. || Looks good  please check if you can select the push to application multiple times after each other without closing the prefs dialog Select lyx and then again select Texstudio for example.  If it works all is good  || Works fine. At least if I understood you right. I hope so. || Looks very good to me now. Thanks again! || You are welcome. This was fun - again! Lets push JabRaf forward towards 5.0.  -) || 
5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Select push app in preferences As asked by @tobiasdiez  here is my alternative proposal  this closes #4991 by merging. fixes #674 closes #3942 and closes #4368  <img width"242" alt"PrefPushToApp" src"https://user-images.githubusercontent.com/50491877/58768088-a9637680-8595-11e9-95cb-5a7f2ac16342.png">  This branch is build up on the other branch  including the other commits  this time by intention. I hope you like it. Have a good night!  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) What I really hate is the hardcoding of applicationNames in PushToApplicationSettings.class. But before there was only some cryptic numbering scheme  depending on the order  the push-applications were created in the first place. At least  its a little bit more readable. Yet I saw no other way without a larger refactoring of this code.  Ready to review || I added some eye-candy  you will be charmed.  -) <img width"330" alt"select push application" src"https://user-images.githubusercontent.com/50491877/58866242-7a91f100-86b8-11e9-8b9a-7ef0d28385cf.png">  || Looks good to me! || Ok  should be ready again. There are still a lot of things  that could be done  e.g. refactoring of the Preferences-Dialog and changing the single tabs to MVVC  but I do not want to interfere with the other rework towards 5.0 and the fate of swing. || Looks good  please check if you can select the push to application multiple times after each other without closing the prefs dialog Select lyx and then again select Texstudio for example.  If it works all is good  || Works fine. At least if I understood you right. I hope so. || Looks very good to me now. Thanks again! || You are welcome. This was fun - again! Lets push JabRaf forward towards 5.0.  -) || 
5024,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Select push app in preferences As asked by @tobiasdiez  here is my alternative proposal  this closes #4991 by merging. fixes #674 closes #3942 and closes #4368  <img width"242" alt"PrefPushToApp" src"https://user-images.githubusercontent.com/50491877/58768088-a9637680-8595-11e9-95cb-5a7f2ac16342.png">  This branch is build up on the other branch  including the other commits  this time by intention. I hope you like it. Have a good night!  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) What I really hate is the hardcoding of applicationNames in PushToApplicationSettings.class. But before there was only some cryptic numbering scheme  depending on the order  the push-applications were created in the first place. At least  its a little bit more readable. Yet I saw no other way without a larger refactoring of this code.  Ready to review || I added some eye-candy  you will be charmed.  -) <img width"330" alt"select push application" src"https://user-images.githubusercontent.com/50491877/58866242-7a91f100-86b8-11e9-8b9a-7ef0d28385cf.png">  || Looks good to me! || Ok  should be ready again. There are still a lot of things  that could be done  e.g. refactoring of the Preferences-Dialog and changing the single tabs to MVVC  but I do not want to interfere with the other rework towards 5.0 and the fate of swing. || Looks good  please check if you can select the push to application multiple times after each other without closing the prefs dialog Select lyx and then again select Texstudio for example.  If it works all is good  || Works fine. At least if I understood you right. I hope so. || Looks very good to me now. Thanks again! || You are welcome. This was fun - again! Lets push JabRaf forward towards 5.0.  -) || 
5025,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,0,0,1,Add warning for empty BibTeX keys in entry editor Added a warning for empty BibTeX keys in entry editor.  Fixes #4440   A request came in to have the entry editor provide a warning when the BibTeX key field is empty. In order to make the warning icon appear  2 changes were necessary.  **1 - Added new key value pair to multi map in FieldCheckers:** To check for a valid BibTex key in the entry editor  the FieldCheckers object had the following key - value pair in its multimap  ( FieldName.KEY  ValidBibtexKeyChecker object )  where FieldName.KEY is the string "key".  When the BibtexKeyEditorViewModel tries to actually run this check  they key it provides to the FieldCheckers instance is BibEntry.KEY_FIELD ("bibtexkey") instead of FieldName.KEY ("key"). To accommodate for this  BibEntry.KEY_FIELD was added to the FieldCheckers multimap.   **2 - Added null and empty string check in ValidBibtexKeyChecker.checkValue():** Fixing the first issue caused an error to come arise in BibtexKeyGenerator.cleanKey() when called by ValidBibtexKeyChecker.checkValue(). This error was due to null strings being fed into BibtexKeyGenerator.cleanKey(). To fix this  a check for null or zero length strings was added. This check also returned the "empty BibTex key" message.   **Note:** an issue with the fix is that while it does create the "empty BibTeX key" warning  the "Invalid BibTeX key" warning is pushed down. Pictures of this issue are attached.  <img width"436" alt"warningIcon1" src"https://user-images.githubusercontent.com/38050737/58768790-6641dd00-856e-11e9-96da-f51c6c79c2a1.png">  <img width"420" alt"warningIcon2" src"https://user-images.githubusercontent.com/38050737/58768794-71950880-856e-11e9-8364-929ece03ec50.png">   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5033,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Convert PreferenceDialog to MVVM One of the last missing things in #3861 is the conversion of the PreferenceDialog and some of its tabs to MVVM. I understood that in the future JabRefPreference probably need Properties  to make them bindable. But for now I think this goes beyond this PR.  It works as expected. I took the liberty  to add a split-pane between the conents and the tabList to enable the user to change the width between them  so this PR is not just about refactoring the Dialog.  -)  This is very early shot on this matter. I do not know if you think its worth moving on with this and to look also into the tabs.  <img width"427" alt"preferenceDialog" src"https://user-images.githubusercontent.com/50491877/58988728-985b7500-87e2-11e9-9664-4fcc8a1410e5.png">  Tabs to convert to MVVM - [x] General - [x] File  The following conversions will be done in other PRs  as this one would grow too large. - [x] Entry table #5315 - [x] Entry table columns #5185 - [x] External programs #5047 - [x] Entry preview #5062 - [x] Groups #5141 - [x] Entry editor #5315 - [x] BibTeX key generator #5360 - [x] Import #5315 - [x] Export sorting #5315 - [x] Name formatter #5265 - [x] XMP metadata #5265 - [x] Network #5141 - [x] Advanced #5141 - [x] Appereance #5360  After conversion of the tabs - [x] Code cleanup  simplification  refactoring - [ ] Reordering the preferences  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Wow! Thanks for your take on this! This is really a great thing.   Ideally for each tab you would have an fxml marked with root  so its a custom component. (you have a similar concept in modern web front-end stuff)  For the default export options I already did that because they are reused in the library properties dialog.     || > For the default export options I already did that because they are reused in the library properties dialog.  Oh yeah  I see that now. This is great  this is almost all the work. I can almost just copynpaste yours. 😆  || I made some visual improvements and converted the GeneralTab to MVVM  still everything WIP  but you can see  where the road goes. ~~I encountered a problem  Id like to ask to help with: I wasnt able to apply l10n on the controls on the pane - which is why travis is currently failing - but on the large headings  which are basically labels too... Very strange. Do you have an idea?~~  ![GeneralsTab](https://user-images.githubusercontent.com/50491877/59047072-7b2ab300-8883-11e9-9029-8e6a1b42df27.png)  || The basic workflow is now understood  the other tabs shouldt take too long  but I do not have much spare time the next days  so it could take some days I can continue to commit and do some cleanups. In the meantime  could you take a quick trivial look into the code  if I did something utterly wrong  so I do not repeat it? || Thank you very much! I think we should follow the suggestion by @tobiasdiez  and merge this asap and you or others can then create the fxml and logic for new tabs || ok  i will get this ready to merge asap  but there really need to be some cleanups after converting the last one of the tabs. || I added the FileTab  beacause i already started with it  before we were talking about merging this asap  but should be soon ready. Now I am to tired. Should be ready saturday night. || Sorry  I was not able to present a solution including the Validator. I got them somehow working  but there is still an big issue: Somehow  the Validator does not seem to be updated after something was typed in the textfield. The StringProperty keeps somehow the old input if i dont disable and reenable it. I will have another try tomorrow. || Ok  validators work  I got the dialog and the two tabs General and File converted  including the validators  where they were in the first place. Should be ready to review and probably be merged  if there is no issue left  so the the other tabs can be converted by other PRs. After converting the last dialog  there need to be some interface changes to PrefsTab  to make validSettings bindable and to make some cleanups  I did not want to do them now  because it would blow up this PR way more. || Fixed two little things and injected dialogService. Ready again. ||
5042,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Convert merge shared entries to javafx Last "big" dialog for conversion to javafx  Refs #4894   Remove old dialog  Use the already created merge dialog  Now it looks like this:  ![grafik](https://user-images.githubusercontent.com/320228/59150373-ac8db500-8a22-11e9-8e77-25f317fe9d8e.png)  Before: ![jabref+updateRefusedOld](https://user-images.githubusercontent.com/320228/59150377-be6f5800-8a22-11e9-8cd0-871cc64b84b2.png)   One odd thing I noticed and this refs probably #4461  is that whenever I paste an entry in the shared database it gets duplicated multiple time.  This looks oddly familiar. I remember that this was having to do with the subscribers and the event bus system.     <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5048,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Preserve encoding while copy and pasting in maintable Fixes #5043.  Encodes and decodes data with UTF-8. Merging this now! ||
5056,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,Fix order of other fields Fixes #5028   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks for your contribution. Could you please adjust your title of the PR and describe how/ or why the fix works?  Thanks in advance || @tobiasdiez sure Ill add comment descriptions for the next PRs. BTW I cannot merge this PR. Any reason? || Only members of the core JabRef development team are able to merge PRs. This is normal for most github organizations/projects.  Each PR should ideally be reviewed by at least two JabRef core developers to maintain a high quality of the code base.  || @Siedlerchr sure. I thought the reason might be something like a CI build failure or any.  ||
5058,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix automaticalls set file links task not runinng Executing the created task would have been helpful... 🤦‍♂   Fixes #5023  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5068,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,Add copy linked files action to contextmneu in general tab Fixes #5066   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Added a variant for a single entry and did some refactoring. ||
5086,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Bugfix/5045 : Modified the existing logic to comply crossref resolution with biblatex specification Fixes  #5045  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks for your contribution. Could you please add a test for the changed code? || @tobiasdiez @Siedlerchr sure Ill make those amendments and the UTs || @tobiasdiez Could you please review the latest commit. Thanks :)  || > Looks good to me now. > Please merge the latest master changes in. There have been renaming of the Fields classes  so you need to fix this. Then we can merge  @Siedlerchr I pulled the changes from master. This PR can be merged to the master now. Thanks || > Please review the imports.  Fixed and organized imports. Please review and merge || >  >  > > Please review the imports. >  > Fixed and organized imports. Please review and merge  Please have a look at travis checkstyle output. Star imports are not allowed. If you use Intellij you can directly import the code style from the config folder For eclipse you can run ./gradlew eclipse to automatically import the correct code style  If you then run organize imports in the IDE it will be correct || > > > Please review the imports. > >  > >  > > Fixed and organized imports. Please review and merge >  > Please have a look at travis checkstyle output. Star imports are not allowed. > If you use Intellij you can directly import the code style from the config folder > For eclipse you can run ./gradlew eclipse to automatically import the correct code style >  > If you then run organize imports in the IDE it will be correct  Fixed imports issue. Please review ||
5101,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Fixes RIS data field <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> This pull resquest fixes issue [#4816](https://github.com/JabRef/jabref/issues/4816).  When importing RIS files Jabref checks for date fields (Y1 PY DA and Y2) and uses the first one it finds. The problem is that Y2 refers to access date  DA in most cases is a generic date  and PY is the publication year(reliable field)*.  https://github.com/JabRef/jabref/blob/40600b35420e688ee5d5758224717b484ad34f84/src/main/java/org/jabref/logic/importer/fileformat/RisImporter.java#L196-L203 We couldnt find references to Y1(primary date?). However  as already cited in [#4816](https://github.com/JabRef/jabref/issues/4816)  and by doing some exports we found Y1 to be  PYs synonym  furthermore  when PY received a higher priority than Y1  some tests cases didnt pass as there were a missing month field in .bib.    We established a priority system indicated by the dateTags (lowest index higher priority)  https://github.com/VMichelan/jabref/blob/2f243c16f08f2cfeba6f1ab4651970d90eb55546/src/main/java/org/jabref/logic/importer/fileformat/RisImporter.java#L31  We added 2 test cases for this and changed one of the old ones adding the month field.  *https://web.archive.org/web/20120717122530/http://refman.com/support/direct%20export.zip ** nicely displayed in: https://github.com/aurimasv/translators/wiki/RIS-Tag-Map  ----  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks for the feedback @Siedlerchr!  Those are great suggestions  using a List is much better  and since indexOf returns -1 if it does not find the element  we can use it to find out if the element is in dateTags and to get its index like this: ```java  } else if ((tagPriority  dateTags.indexOf(tag)) ! -1 && value.length() > 4) {      if (tagPriority < datePriority) { ```  I think this is a good solution  the problem is that like isDateTag its also O(n)  I do not know if thats really a problem  but if it is maybe we should use a HashMap?  Also  since finding out if a tag is a date is a one liner now  I will remove the isDateTag and getDatePriority methods  and because we do not need to pass dateTags to these methods anymore I think we should move it from the class to the method importDatabase.  I would like to hear what you think about these considerations  I think with this out of the way we can make the final version and fix the failed check to make it ready for merge  thanks. || If your ArrayList is ordered/sorted  you can use Collections binarySearch  but I think in this case its over engineering  ) >Premature optimization is the root of all evil ~ Donald Knuth  The complexity really is only for large N. But I think you can omit one time searching the list  see my comment at the code. || Thank you for your work! ||
5121,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Add option to allow for integers in field "edition" when running database in bibtex mode <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Issue [#4680](https://github.com/JabRef/jabref/issues/4680)  This is a new fork from the old pull request.  I added a checkbox in Preferences/GeneralTab to allow insert integers in field edition when bibtex mode is running. Also  i modified EditionChecker class to permit this configuration. As well as the test cases in IntegrityCheckTest class.       ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Ok  i focused on the preference-stuff  made a comment  everything else fits into the pattern  so i guess besides the "Override" - lgtm. Did you notice the unresolved merge-conflicts? || Please fix the changes proposed from @calixtus and merge the latest JabRef master branch in your branch  || 
5123,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Add search for citations in LaTeX files (back-end and GUI) Here is a **LaTeX parser tool** that reads each file line by line  parses and analyzes them for detecting different citation formats.  Its user interface consists of a first dialog box that will **ask the user for a directory** to search TEX files. Then  the user could **select specific files**. After that  the tool parses these files and **shows all the bibliographic entries found** in a new dialog box.  ![latex_parser](https://user-images.githubusercontent.com/12954316/61177635-9ef7bc00-a5da-11e9-9f4d-b3cfc45d96c4.gif)  Related issue: [#5002](https://github.com/JabRef/jabref/issues/5002).  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks a lot!  ||
5142,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix substring exception in find unlinked files Refactor to own method and add test The exception came when the parsed editor string did not end with a colon and two spaces Fixes #5128    <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5150,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Fix for issue 4629 Fix #4629 <!-- describe the changes you have made here:        Link issues by using the following pattern: [#4629 ](https://github.com/JabRef/jabref/issues/4629).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  -  distinguish the user action between menu and button -  reuse the Acitons class to add enum to the description of user action ![图片](https://user-images.githubusercontent.com/44337029/61925971-37118000-afa1-11e9-9ae1-32d0a68cec32.png) ![图片](https://user-images.githubusercontent.com/44337029/61925983-44c70580-afa1-11e9-943c-605349f82faa.png) ![图片](https://user-images.githubusercontent.com/44337029/61925992-4d1f4080-afa1-11e9-9db8-fe8d2d169567.png) just change the JabRefAction as your suggestion :) || Hey @ffffatgoose  it would be awesome if you could have a look at the comments and find some time to incorporate them in the PR or discuss them in the comments in case you disagree. || I feel very sorry to delay for so long. I have some question for the class `Actions`. Below are the codes of button creation in the main frame of GUI. As the Javadoc told  `OldDatabaseCommandWrapper` and `Actions` is deprecated  however  they are still in use……  https://github.com/JabRef/jabref/blob/9daa645ccb213853b2b42d5f562db60933405114/src/main/java/org/jabref/gui/JabRefFrame.java#L529-L541 The input parameter is in the form of `Actions`  so I reuse the class to return the exact actionname of user action. Waiting for suggestions :D || I feel confused about the checkstyle error……Ask for some help ![图片](https://user-images.githubusercontent.com/44337029/62770511-c5bbec00-bacd-11e9-9760-41c62175ceb3.png) || @ffffatgoose  This is not related to your changes  its a problem in the master branch. #5182  || Hi @ffffatgoose . JabRef is in the middle of converting the gui from the old swing-controls to javafx (see PR #4894 ) and also refactoring the codebase to the MVVM-pattern. This is why Actions  OldCommandWrapper etc. are deprecated  but are still used  since not everything is already refactored. This will take time. To bring some relief from confusion  the controlsFX-library brings its own Action-Class  which is different from the StandardActions-enum and the deprecated Actions-enum. The mvvmFX-ActionClass is just the EventHandler  the StandardActions-Enum of JabRef (and the Action-Interface) includes only the information about the action (Text  Icon etc.). Since not everything is converted yet  most of the menuitems still use the OldDatabaseWrapper-Stuff.  About your checkstyle-issue: I was able to reproduce it with the vanilla-sources. I think it has something to do with the gradle-build-script and some recent updates of the junit-library. Would be probably the best to create a new issue in the issuetracker on github.  Edit: Whoopsie  while writing my comment @Siedlerchr was quicker. || @ffffatgoose  @calixtus  The checkstyle problem on the master should be gone now || get it~ I only used the class `Actions` in the place that the input parameter is in the form of `Actions`  like this: https://github.com/ffffatgoose/jabref/blob/92b007ecaf0725932a99d5c30134ba77e53922d8/src/main/java/org/jabref/gui/actions/OldDatabaseCommandWrapper.java#L54-L57 Therefore  I think its no use to add a new enum for it. Is there and else problem I should solve or it is necessary to change my way to solve this?  TvT || @davidemdot  Could you take a second look if this is ready? || @tobiasdiez Do you think this is fine to merge? || Yes  looks good to me! Thanks again for your contribution!  ||
5190,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Border for group color indicator and some space for tooltip Refs #5152   One of my groupcolors is white  which made it hard to see in the jabref window. I added a thin grey border  so one can see even white groups on white background. Also I made the area  the user can put his mousepointer in to show the tooltip  a little wider (3 pixels were to small)  left before  right after ![groupcolorbefore](https://user-images.githubusercontent.com/50491877/62962782-e783de80-bdff-11e9-9e95-a333b7bdf441.png) ![groupcolorafter](https://user-images.githubusercontent.com/50491877/62962785-e94da200-bdff-11e9-9930-617c466f9f32.png)  ready to review  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5191,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,Fix issue 5152  tooltip and icon added to group cell Fixes #5152   Fix issue with a missing tooltip and icon in the color group column. I used DEFAULT_GROUP_ICON from JabRefICons to supplement the missing icon. Hi  I just saw your PR with a very close relationship to mine #5190  . There are two little issues I spotted  but I think both should work well together. 👍  || You can ignore codecov. Its for gui stuff not really relevant. We try to focus on important tests for logic and model  e.g. the methods and classes there should have tests.  || Thanks for your contribution! ||
5195,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,Add citation commands to TexParser We added a few more citation commands: `autocite`  `Autocite`  `blockcquote`  and `textcquote`.  This PR fixes #5194.  ----  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5196,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,0,1,1,1,Implement ottobib fetcher Fetcher does not return bibtex data in plain text  instead its part of an html text area  Fix ISBN tests Update user agent   Follow up from #5125   ----  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5197,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,0,Fix issue with missing year value in year column Fixes #5163  Fix issue with missing year value in year column. The query to receive this value was missing in the IEEE.java  simply added one.     ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [X] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks for your contribution  its better if you create a new branch for a fix or feature  this makes it easier to only see the related changes and not the other merge history  Here is a description how it works https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow || Sorry for the problem and thanks for the tip. Would you like me to redo the last commit? I can reset my local repo  make a change and send it back in new branch?  Or just leave it as it is now?  || For this small commit it should be sufficient to just merge the latest upstream master changes in your branch  ||
5201,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix exception when adding new entry Fixes #5198  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5210,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix Double Paste on Different OS Fixes #4845  Fixes #4699  Fixes #4836   Upon pasting MacOS calls the system paste as well as JabrefFrame.EditAction#execute(). This caused a duplicate call of the paste. Working in Linux as well! ||
5210,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix Double Paste on Different OS Fixes #4845  Fixes #4699  Fixes #4836   Upon pasting MacOS calls the system paste as well as JabrefFrame.EditAction#execute(). This caused a duplicate call of the paste. Working in Linux as well! ||
5210,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix Double Paste on Different OS Fixes #4845  Fixes #4699  Fixes #4836   Upon pasting MacOS calls the system paste as well as JabrefFrame.EditAction#execute(). This caused a duplicate call of the paste. Working in Linux as well! ||
5224,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix exception when adding field formatter in Cleanup entries dialog This fixes #5220.  
5230,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Treat unknown fields as multi-line fields Fixes #5021. Unknown fields are now treated as multi-line fields. In the future  we should provide an UI interface to specify or change properties of fields.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5259,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Avoid erroneous MaterialDesignIconFactory Fix for  [#5245](https://github.com/JabRef/jabref/issues/5245)   Refactoring of the code for managing icons. Now all usages of `de.jensd.fx.glyphs` or `de.jensd.fx.glyphs.materialdesignicons` are encapsulated in the package `gui.icon`. In there  the usage of `de.jensd.fx.glyphs.materialdesignicons.utils.MaterialDesignIconFactory` is avoided  because of the error described in the issue.  ----  - [ ] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Ok  thank you for your suggestions. I reworked it now and tried to improve it further by keeping all things related to MaterialDesignIcons inside `gui.icon`. And outside of this package only `JabRefIcon`s are used. That also made the class `JabRefMaterialDesignIconFactory` obsolete.  It is working now as expected  but there is one thing which should be improved:  In the class `org.jabref.logic.groups.DefaultGroupsFactory` there was an import of `de.jensd.fx.glyphs.materialdesignicons.MaterialDesignIcon` which passed the architecture tests. When i refactored it  i exchanged it with an import of `org.jabref.gui.icon.IconTheme` which caused the architecture test to fail. Now Im not sure how exactly the functionality in `DefaultGroupsFactory` is needed and do not know how to properly do it. To let the test pass  i used a String constant now...  I also added the architecture test you suggested and hope that it is correct  as i havent done anything with ArchUnit yet :) || >  >  > Looks good. But that workaround is no longer necessary?  Its not a workaround anymore  but more a refactoring which also fixes the issue. I would also say  that it is ready to merge  there is just the thing i described:  > In the class `org.jabref.logic.groups.DefaultGroupsFactory` there was an import of `de.jensd.fx.glyphs.materialdesignicons.MaterialDesignIcon` which passed the architecture tests. When i refactored it  i exchanged it with an import of `org.jabref.gui.icon.IconTheme` which caused the architecture test to fail. Now Im not sure how exactly the functionality in `DefaultGroupsFactory` is needed and do not know how to properly do it. To let the test pass  i used a String constant now... || I am going to merge this now. Looks good to me. I think the issue with the GroupFactory is when you store and read groups with an icon?  ||
5265,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Conversion of Preferences / XMP and NameFormatters to mvvm follow up to #5033  Quick and easy. Same issue with comboBox as in #5185  filed bug report in #5277   ![xmp](https://user-images.githubusercontent.com/50491877/64081185-e9093e00-ccfd-11e9-873c-ad66e15de5b2.png)  ![nameformatters](https://user-images.githubusercontent.com/50491877/64081184-e6a6e400-ccfd-11e9-8726-e09406eaeef3.png)  Should be ready to review    ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Im going to have to resolve some merge-conflicts after merging #5185 . || > As usual  a big thanks for your work! Again  as usual  the code looks really good. A few minor suggestions and then we can merge from my point of view. > > (Will review your other PR as soon as possible  have a bit much to do at the moment. Sorry)  As usual: There is no hurry! Really. Im just coding this in my not so free time to distract me from my real work with my thesis. This is just to have some fun and to remind me of the days I studied Informatik in 2004. || Sorry for asking: But why do I receive e-mail notifications about this PR here? I am not subscribed to it. || @Codeberg-AsGithubAlternative-buhtz  You may have accidentally subsribed or comemnted earlier on this pr? Or you are watching the repo. At the top right side next to an issue or PR you can unsubscribe. ||
5266,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Issue #5223 issue #5223  Add @Software and  @Dataset entrytype as an option in the Biblatex and Bibtex. Add fields eventitle  eventdate and venue to @unpublished entry type. I used the MISC set of fields to supplement Software and DataSet  couldnt find documentation about specific fields that should be included in @Software and @DataSet entry type.  ![entrytype](https://user-images.githubusercontent.com/41503450/64082532-e2d08d00-cd10-11e9-95f9-fec5d57d0f0d.PNG) ![entryTypePreferences](https://user-images.githubusercontent.com/41503450/64082551-0a275a00-cd11-11e9-9af6-b16a5394865d.PNG)     ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Manually tested changed features in running JabRef - [X] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Looks good so far. Please add a changelog entry Regarding the fields: You can look up in the biblatex documentation: 2.1.1: https://www.ctan.org/pkg/biblatex  For the next time please do not enter the issue number in the title of the PR  because github cant link it then. If you write Closes #xxxx or Fixes #xxx then the issue will be automatically closed when the PR is merged. || Which biblatex styles support `@dataset`? || biblatex-bath does (https://ctan.org/pkg/biblatex-bath) ||
5266,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Issue #5223 issue #5223  Add @Software and  @Dataset entrytype as an option in the Biblatex and Bibtex. Add fields eventitle  eventdate and venue to @unpublished entry type. I used the MISC set of fields to supplement Software and DataSet  couldnt find documentation about specific fields that should be included in @Software and @DataSet entry type.  ![entrytype](https://user-images.githubusercontent.com/41503450/64082532-e2d08d00-cd10-11e9-95f9-fec5d57d0f0d.PNG) ![entryTypePreferences](https://user-images.githubusercontent.com/41503450/64082551-0a275a00-cd11-11e9-9af6-b16a5394865d.PNG)     ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [X] Manually tested changed features in running JabRef - [X] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Looks good so far. Please add a changelog entry Regarding the fields: You can look up in the biblatex documentation: 2.1.1: https://www.ctan.org/pkg/biblatex  For the next time please do not enter the issue number in the title of the PR  because github cant link it then. If you write Closes #xxxx or Fixes #xxx then the issue will be automatically closed when the PR is merged. || Which biblatex styles support `@dataset`? || biblatex-bath does (https://ctan.org/pkg/biblatex-bath) ||
5276,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,Add shorten DOI field formatter <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  ### What this PR adds? This PR is related to [koppor#343](https://github.com/koppor/jabref/issues/343).  I added a field formatter called **Shorten DOI** formatter which shortens DOI using http://shortdoi.org service. You run the formatter from _Cleanup entries dialog_ by adding it to _Run field formatter_ list.  It looks to work fine. It enables one way conversion from DOI to short DOI.  ### Implementation details: I assumed that short DOI is still a legal DOI. Thats why I adjusted the DOI class to work with short DOIs.  ### Feedback wanted I Id like to ask for your feedback about the code at this stage.  ### Next step - Add a more accessible UI - a toggle button next to the DOI field _shortened/long version_ (This was suggested by @koppor)  This will require adding opposite conversion (from short DOI to DOI). As http://shortdoi.org servcie does not offer such a feature I see two approaches:  1. Store the original DOI during the conversion for further back conversion. **Drawback:** You may not convert from short DOI to DOI if you havent done the opposite conversion for at least one time. 2. Try to obtain DOI from short DOI using https://doi.org service as it is possible by catching the HTTP redirection  I find the 1st approach fine. The 2th approach is not really good as we are not using any public API and this can stop working in the future.  What do you think folks? :)  ### Important If you would like to checkout this branch and test locally please use [shortdoi-workaround](https://github.com/dawidowoc/jabref/tree/shortdoi-workaround) branch which uses workaround by @r0light for issue [#5245](https://github.com/JabRef/jabref/issues/5245). On master branch there is an issue with accessing _General tab_ in bibentry editor.  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thank you for review. I applied changes as you suggested in comments.  Now you have to decide what about this more accessible UI to this feature. IMHO adding it to right-click menu as suggested by @tobiasdiez sounds nice. But as you said its unfortunately blocked at the moment by #5254. What do you think @tobiasdiez @Siedlerchr @koppor?  Would you like to merge this PR (if you approve it of course) and create a new issue for the UI enhancement in the future or rather do UI in this PR?   || I think you can create a new issue for adding it to the context menu and then refer to that blocker issue. || I think we can already merge and Ill add a comment concerning the ui implementation in https://github.com/koppor/jabref/issues/343.  Thanks again for your contribution. ||
5280,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Revert "[WIP] Get JabRef running in eclipse" Reverts JabRef/jabref#5264  
5282,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix/field inheritance This implements the complex biblatex rule set to solve the crossref inheritance issue #5045    ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks a lot for your contribution! Codewise looks in general good to me. It would be nice if you could incoropate some more tests. You can make a parameterized test then maybe || @Siedlerchr @tobiasdiez I reworked and extended the tests according to your suggestions. Thanks for your valuable feedback. ||
5289,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Wrapper classes for UI Lists etc that ensure updates on JavaFX thread Fixes [#5108](https://github.com/JabRef/jabref/issues/5108)  Fixes [#5109 ](https://github.com/JabRef/jabref/issues/5109)  Furthermore  the threading issue part of #4958 is fixed by using `UiThreadStringProperty`  New classes are added to `gui.util.uithreadaware` which enable a wrapper class around `ObservableList` which ensures that changes are propagated on the JavaFX Application thread.  I started with `UiThreadListDecorator`  but others like `UiThreadMapDecorator` could be implemented similarly.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Ok  it took me while to reproduce #4958 reliably but now i added a `UiThreadStringProperty` in `PersonsEditor` which wraps the original property and the issue should be fixed now.  @tobiasdiez should we use as few as possible new UI thread aware classes only where necessary or should i add it consistently to classes in `gui.fieldeditors` ? || Thanks! I think it is fine if we add the wrappers only when they are really necessary. So this PR is ready from your side? || >  >  > Thanks! I think it is fine if we add the wrappers only when they are really necessary. So this PR is ready from your side?  Alright  not quite  i want have another look at it and also add some comments to the new classes. || Ok  from my side this would be ready to merge. @tobiasdiez thanks for the help and feedback for this! || I guess #5010 is obsolete now? ||
5289,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Wrapper classes for UI Lists etc that ensure updates on JavaFX thread Fixes [#5108](https://github.com/JabRef/jabref/issues/5108)  Fixes [#5109 ](https://github.com/JabRef/jabref/issues/5109)  Furthermore  the threading issue part of #4958 is fixed by using `UiThreadStringProperty`  New classes are added to `gui.util.uithreadaware` which enable a wrapper class around `ObservableList` which ensures that changes are propagated on the JavaFX Application thread.  I started with `UiThreadListDecorator`  but others like `UiThreadMapDecorator` could be implemented similarly.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Ok  it took me while to reproduce #4958 reliably but now i added a `UiThreadStringProperty` in `PersonsEditor` which wraps the original property and the issue should be fixed now.  @tobiasdiez should we use as few as possible new UI thread aware classes only where necessary or should i add it consistently to classes in `gui.fieldeditors` ? || Thanks! I think it is fine if we add the wrappers only when they are really necessary. So this PR is ready from your side? || >  >  > Thanks! I think it is fine if we add the wrappers only when they are really necessary. So this PR is ready from your side?  Alright  not quite  i want have another look at it and also add some comments to the new classes. || Ok  from my side this would be ready to merge. @tobiasdiez thanks for the help and feedback for this! || I guess #5010 is obsolete now? ||
5289,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Wrapper classes for UI Lists etc that ensure updates on JavaFX thread Fixes [#5108](https://github.com/JabRef/jabref/issues/5108)  Fixes [#5109 ](https://github.com/JabRef/jabref/issues/5109)  Furthermore  the threading issue part of #4958 is fixed by using `UiThreadStringProperty`  New classes are added to `gui.util.uithreadaware` which enable a wrapper class around `ObservableList` which ensures that changes are propagated on the JavaFX Application thread.  I started with `UiThreadListDecorator`  but others like `UiThreadMapDecorator` could be implemented similarly.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Ok  it took me while to reproduce #4958 reliably but now i added a `UiThreadStringProperty` in `PersonsEditor` which wraps the original property and the issue should be fixed now.  @tobiasdiez should we use as few as possible new UI thread aware classes only where necessary or should i add it consistently to classes in `gui.fieldeditors` ? || Thanks! I think it is fine if we add the wrappers only when they are really necessary. So this PR is ready from your side? || >  >  > Thanks! I think it is fine if we add the wrappers only when they are really necessary. So this PR is ready from your side?  Alright  not quite  i want have another look at it and also add some comments to the new classes. || Ok  from my side this would be ready to merge. @tobiasdiez thanks for the help and feedback for this! || I guess #5010 is obsolete now? ||
5325,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,Use binding to update global state manager <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Use JavaFX binding instead of a listener to update the global state manager. That seems to work more reliable and fixes a bunch of issues. In particular  fixes #3142  and fixes #4441.  Moreover  I fixed an error that was thrown when interacting with the toolbar (missing open statement but we were using reflection...).  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5325,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,Use binding to update global state manager <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Use JavaFX binding instead of a listener to update the global state manager. That seems to work more reliable and fixes a bunch of issues. In particular  fixes #3142  and fixes #4441.  Moreover  I fixed an error that was thrown when interacting with the toolbar (missing open statement but we were using reflection...).  ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5326,1,0,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,0,0,Fix problem with search and switching between libraries Fixes #4846 by using bindings instead of listeners.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5328,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,Improve group coloring and item count Fixes #5327. The problem was that `getTreeTableRow.getItem()` in `ViewModelTreeTableCellFactory` still returned the old item (and not the new one passed as method argument to `updateItem`).   Since I was already looking at the code  this PR also fixes #3112 that improves the coloring after an entry was added to the group. Also fixes #2857 (at least I couldnt replicate it anymore).  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5328,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,Improve group coloring and item count Fixes #5327. The problem was that `getTreeTableRow.getItem()` in `ViewModelTreeTableCellFactory` still returned the old item (and not the new one passed as method argument to `updateItem`).   Since I was already looking at the code  this PR also fixes #3112 that improves the coloring after an entry was added to the group. Also fixes #2857 (at least I couldnt replicate it anymore).  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5328,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,Improve group coloring and item count Fixes #5327. The problem was that `getTreeTableRow.getItem()` in `ViewModelTreeTableCellFactory` still returned the old item (and not the new one passed as method argument to `updateItem`).   Since I was already looking at the code  this PR also fixes #3112 that improves the coloring after an entry was added to the group. Also fixes #2857 (at least I couldnt replicate it anymore).  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5338,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix NPE when opening a non existing file from the recent files menu Fixes #5334   dialogService object was null  because the FileHistoryMenu class is initialized before the ctor of JabRef frame creates the dialog service object  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5340,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix various copy to clipboard issues Pt 1: Fixing #5263 by only using the text content to be added in the right-click-copy functionality in the preview (see https://github.com/JabRef/jabref/pull/5340/files#diff-b84aeae22f7f719bc60f1ae34ecb39f6)  Pt 2: Right click option in maintable:  Additionally store content also in String format that can be accessed then with simple text editors.  Pt 3: improve also functionality in "Export to clipboard" dialog Currently all "exporters" are used for "Export to Clipboard" - however  the ones which are creating files like PDFs cannot be used for copying to clipboard - thus they are filtered out now. Additionally  in case RTF or HTML content is exported the specific ClipboardContent has been used.  ----  - [x] Change in CHANGELOG.md described - [x] Tests ~~created~~ adjusted for changes  - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) @tobiasdiez If you do not have further objections  I would merge it to master 😃  ||
5347,1,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix display bug for keyword groups with empty keywords Fixes #5333 by filtering out empty keywords.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5351,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix exception when closing JabRef Fixes #5348 by using JavaFX windows instead of awt windows.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5352,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Bring back the context menu As explained in https://github.com/JabRef/jabref/issues/5254#issuecomment-526588221 it is no longer possible to customize the context menu items  because the classes related to the text field behavior are not accessible. Thus  instead I simply copied the relevant code from openjdk. Pretty ugly workaround... Fixes #5254 and refs https://github.com/javafxports/openjdk-jfx/issues/583.  Moreover  I removed the custom tab handling because it is now working as expected (i.e. #2902 is fixed in Java 9+).  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5352,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Bring back the context menu As explained in https://github.com/JabRef/jabref/issues/5254#issuecomment-526588221 it is no longer possible to customize the context menu items  because the classes related to the text field behavior are not accessible. Thus  instead I simply copied the relevant code from openjdk. Pretty ugly workaround... Fixes #5254 and refs https://github.com/javafxports/openjdk-jfx/issues/583.  Moreover  I removed the custom tab handling because it is now working as expected (i.e. #2902 is fixed in Java 9+).  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5354,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Fix group color when scrolling Fixes #5022. Problem was that the pseudo-class was not initialized correctly but was only triggered upon changes.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5355,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix default group color Now groups have a dark gray instead of white as their default color. Fixes #4868.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5356,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Show more than one group color bar Shows multiple colored bars if the entry belongs to more than one group (with color). Implements #4574. ![image](https://user-images.githubusercontent.com/5037600/65716295-25cb1980-e09f-11e9-9e94-e4a0f3a324cb.png)   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) +1 for left-aligned. If one does not know the feature  this looks better to me.  Anything else left? || ok  left aligned it is. Ready to merge from my POV. ||
5382,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix for #5369 - fallback to 0 in case stored preview cycle pos does no longer exist Fix for #5369  problem should in theory not happen as always a correct size should be stored - however  if for example CSL styles are not loaded properly the mentioned exception in #5369 might occur.  To prevent this upon creating the preview prefs now the stored cycle position is now compared to the actual list of previews before being set.   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - I think as this is not a common problem can be omitted? - ~~[ ] Tests created for changes~~ - [x] Manually tested changed features in running JabRef - ~~[ ] Screenshots added in PR description (for bigger UI changes)~~ - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - ~~[ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)~~  
5385,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,Reenable prevcycle <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Okay... this should be working again now. However  without the CSL styles working (see #5246) its a bit hard to check.  -)   Fixes https://github.com/JabRef/jabref/issues/5221   ----  - [x] Change in CHANGELOG.md described - ~~[ ] Tests created for changes~~ - [x] Manually tested changed features in running JabRef - ~~[ ] Screenshots added in PR description (for bigger UI changes)~~ - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - ~~[ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)~~  
5392,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix 5359: Writing of Editor field is duplicated Fixes #5359  Serialization of `OrFields` was not implemented properly as the currently written field was not stored correctly.  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - ~~ Screenshots added in PR description (for bigger UI changes) ~~ - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - ~~Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)~~  
5395,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,Fix exception when merging entries The problem was that `sourceChanged` was invoked asynchronous and thus the information in the change event could be obsolete if another thread changed the underlying list in the meantime. Solution: run `sourceChanged` on the JavaFX thread but synchronously. Fixes #5169.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) I merged to keep things moving. However  it would be nice if my code questions would lead no another PR adding comments on the code. ||
5421,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,Add change listener to main table to scroll to imported entry Add change listener to main table to scroll to imported entry #5383  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes       --> not really testable via unit tests - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes)      --> not needed - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Please re-review. || @Siedlerchr what do you think? || Loos good to me now as well! Thanks for your contribution ||
5432,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,Fix cursor jump Fixes #5084. The entry editor was very aggressive and stole the focus from the search bar or from the main table. This lead to problems like #5084 where users overwrite the contents of the entry while doing a search. Moreover  it made it impossible to navigate between entries using the arrow keys in the main table. Both of these issues are fixed now.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) When you create a new entry  the focus should be in the first field. Does this still hold true?  || @Siedlerchr Thats a good suggestion but does not even work in the current master. Something for another PR maybe. ||
5448,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix nullpointer on import Fixes #5447 ---- - [x] Change in CHANGELOG.md described - [ ] Tests created for changes   --> not testable with unit tests - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes)   --> not needed - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5451,1,0,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0,1,0,Add option to display entry preview as tab in entry editor Adds the entry preview as a tab. Fixes #5244. Also fixes #5446. Plus a bit of refactoring  ![image](https://user-images.githubusercontent.com/5037600/66870882-b3b16a80-efa2-11e9-9900-c2d9ec3dbfb0.png)   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5451,1,0,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0,1,0,Add option to display entry preview as tab in entry editor Adds the entry preview as a tab. Fixes #5244. Also fixes #5446. Plus a bit of refactoring  ![image](https://user-images.githubusercontent.com/5037600/66870882-b3b16a80-efa2-11e9-9900-c2d9ec3dbfb0.png)   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5454,1,0,0,1,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix highlight issues for lists Fixes #5277 and fixes #5035. The problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones).  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5454,1,0,0,1,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix highlight issues for lists Fixes #5277 and fixes #5035. The problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones).  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5471,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Mark OOSTyle as invalid if no defaultStyle In addtion  dsplay correct layout for article and book  Fixes  #5452   TODO: Add documentation issue  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5472,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix highlight problem in entry preview Fixes #5069 by using markjs.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5481,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix for issue 5463 Fixed issue #5463 (https://github.com/JabRef/jabref/issues/5463)   ----  -   - [x]  Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Good work 👍 Ill merge this PR now.  I hope you enjoyed contributing to JabRef. I would like to continue working with you. What do you think about resolving https://github.com/JabRef/jabref/issues/5485? This issue was recently reported and is about an important feature of JabRef. ||
5482,1,0,1,1,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Add X11 Primary Selection clipboard support _Related to issue #2389 (**JabRef and the X Window clipboard/selections**)._  I have been testing different alternatives and I think that this is the best choice (for using `XClipboard` a new dependency is needed  and it does not give any added value).  - All contents that JabRef sends to the system clipboard will be available in the X11 Primary clipboard too (i.e.  `copyVersionToClipboard()` in the About dialog). So it is possible to paste it in a text editor  doing click in the middle/third mouse button.  ![copy_version](https://user-images.githubusercontent.com/12954316/67137766-aca48980-f23a-11e9-9bf0-a96ee1ef920f.gif)  - It is necessary to call the `install()` method in every text field where you want to use it. For the moment  it is activated in the `GlobalSearchBar`  therefore you can try it: write something  select a piece of text and do click in the middle button.  ![global_search](https://user-images.githubusercontent.com/12954316/67137765-ab735c80-f23a-11e9-8f17-2015c9833a20.gif)  - Now `ClipBoardManager` uses the singleton pattern. It is instantiated once in `Globals.java`.  Any feedback will be more than welcome! **:"D**  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thank you on working on this. No Linux at hand currently.  The primary and secondary buffers are completely separate buffers. So  the test case is:  1. Open JabRef 2. Add a new entry 3. Have the entry editor opened  showing the author and title field 4. Select `Milton {Abramowitz} and Irene A. {Stegun}` (here in this issue) and press <kbd>Ctrl</kbd>+<kbd>C</kbd> to copy that text to the primary buffer 5. Select `Handbook of Mathematical Functions with Formulas  Graphs  and Mathematical Tables` with the mouse. To not press any keyboard shortcut 6. Switch to JabRef (maybe using <kdbd>Alt</kbd>+<kbd>Tab</kbd>) 7. Go to the title field. 8. Press the middle mouse key. 9. Check expectation: `Handbook of Mathematical Functions with Formulas  Graphs  and Mathematical Tables` is pasted. 10. Go to the author field. 11. Press <kbd>Ctrl</kbd>+<kbd>V</kbd> 12. Expectation: `Milton {Abramowitz} and Irene A. {Stegun}` appears.  @davidemdot Could you check if it works like that?  @gregoa This is the expected behavior if I remember the Linux desktop correctly. I checked https://docs.kde.org/trunk5/en/kde-workspace/klipper/clipboard-modes.html  which seems a good short resource on that. I see at https://ask.slashdot.org/story/04/06/02/1832201/dealing-with-the-unix-copy-and-paste-paradigm that Firefox pastes the secondary clipboard at <kbd>Ctrl</kbd>+<kbd>V</kbd> if text was selected in firefox.  Short summary for X11 clipboards: https://unix.stackexchange.com/a/139193/18033. Longer text (good introd pargraphs) : https://www.uninformativ.de/blog/postings/2017-04-02/0/POSTING-en.html. I learned  there is `CLIPBOARD` (typically <kbd>Ctrl</kbd>+<kbd>C</kbd>/<kbd>V</kbd>) and `PRIMARY` (mouse text highlight).  Source for the bibtex example: https://en.wikipedia.org/wiki/BibTeX  || @koppor After last commit  which activates the `PRIMARY` clipboard for all `TextField`/`TextArea` controls in the entry editor  your test case works exactly as you said. || @gregoa @noMICROSOFTbuhtz Could you test if it meets your expectations? - Find the build at http://builds.jabref.org/issue-2389/. ||
5483,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix not on fx thread error for custom entry types Fixes #5469   Revert change done in  #5423 because the actual code just opens the already loaded databases. At this point the databases are already loaded in a background thread   <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5495,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,Fix deprecated CrossRef Rest API Parameter Fixes #5485  Changed the query parameter `query.title` (which is deprecated) to `query.bibliographic`.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) Thanks for the quick fix!. For your next Pull Request please use a short description of the fix  in the title and the actual (Fixes #xxx) in the description  because this makes it easier for us to see what the PR is about without checking the issue number first.  Tip: Github takes the first line of the commit message as title in a PR. Text after an empty line (linebreak) will be considered as description text  ||
5497,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,0,Try to fix dark theme path Fix Dark theme.  Workaround until https://github.com/openjdk/jfx/pull/22 is fixed  Fixes #5496  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) gradle also works fine  || still invalid url || Should work now. ||
5501,1,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,New ADS Fetcher I added a new fetcher that uses the new ADS API.  Some open Question for implementation: * Which ids should be viable ids for IdBasedFetchers? Only DOI? Only ADS Bibcode? The current/old version can handle both  but Im not sure if this is intentional.  * We need an API key to access the API. I have one for development  but someone has to create one for the project.  * We need to set a limit on how much search results are shown. Is 20 a good value?  Refs #4949   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Cleanups tasks (Change comments and documentation...) - [x] Manually tested changed features in running JabRef - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Add API Key That looks already really good. Nice job!   - If it is (relatively) easy to implement  then DOI + bibcode support would be nice. - I will request an official key. - 20 entries sounds indeed good.  Do you have any questions codewise at the moment or anything else where we can help? || > If it is (relatively) easy to implement  then DOI + bibcode support would be nice.  That is no problem. I already have implemented this. > Do you have any questions codewise at the moment or anything else where we can help?  At the moment i do not have any questions. But I would like to get as much feedback as possible.  || Right now i have implemented the fetcher in a new class. Should we keep the old one and remove it later? || You can delete/replace the old fetcher. There is no point in having two fetcher for the same online service. || Great  thanks! Any plans / chances that the new fetcher will be back ported to the latest stable release (4.3) !? ||
5513,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Making importing a single file easier (Issue #5508) Fixes #5508  I added a condition to see if only one entry is being imported. If the condition adheres -> mark the entry as selected.  ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) I would totally agree with you. But when I try that  it does not seem to select the entry. I had though to put it there too at first. Any other suggestion as to how to make it work? || Usually  the problem is that the code is run before the control is initialized completely. To fix this it is usually sufficient to wrap everything in a `Platform.runLater(...)` call. Can you please try this out here as well? Thanks || I tried to wrap the if-statement in a Platform.runLater(..) and it did not work. Also tried to wrap all of initialze in a Platform.runLater with and without the if-statement in it. It did not select the single file being imported. Do you have any suggestions  as to what I could do differently?  Sorry for the inconvenience of this PR. ||
5519,1,0,0,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,Fix XMP null error Fixes #5449. Was caused by wrapping a set of fields in a treeset without specifying the comparator.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5521,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix text colour in Merge dialogue fixes: #5516  The colour of the textfields in the Merge dialogue was set to black  I set that to `-fx-light-text-color` (#9aa3af) in MergeEntries.css  No need for documentation update.  Tested manually on local environment. Open to suggestion for test cases. 😄   PS: Forgive me if I missed something  this is my first PR to a relatively large project ✨     <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [x] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  Changes: <img width"843" alt"Screenshot 2019-10-26 at 10 36 00" src"https://user-images.githubusercontent.com/17515408/67618546-cde01980-f7e8-11e9-8f51-f304d822f3df.png"> <img width"843" alt"Screenshot 2019-10-26 at 10 36 00" src"https://user-images.githubusercontent.com/17515408/67617774-97050600-f7de-11e9-97fd-9329a56a5a66.png">  Changed colour of field text in merge window from black to gray.   PS: Forgive me if I missed something  this is my first PR to a relatively large project || Tested the change manually  however Im open to suggestions in regards to what other GUI test. I see that DiffHighlightingTest.java checks style classes.  || The failing test on Travis is `BibEntryWriterTest.java:alphabeticSerialization()` introduced today on master (not related to this ticket). Will update with master again once the above is resolved. || Thank you for your review! Ill test the css change and push that as well soon 😄  || @matthiasgeiger Im having a hard time finding which property makes the radio buttons look black when they are not selected  do you know where it could come from?  In the meantime I spotted that I was affecting the Light theme with the new css  now that is fixed :)  || Welcome to JabRef and thanks for your contribution.   The substructure of the `radio-button` is described here https://docs.oracle.com/javase/8/javafx/api/javafx/scene/doc-files/cssref.html#radiobutton. So `.radio-button .radio` applies to the outer ring while `.radio-button .dot` is for the centered dot. These admit also additional pseudo-classes controlling the appearance in the different states. For example  `.radio:armed` is for the armed state and there are also `selected`  `determinate` and `indeterminate`. || Updated radio button to look like this. Thank you for your help @tobiasdiez! 👍   <img width"912" alt"Screenshot 2019-10-27 at 00 50 49" src"https://user-images.githubusercontent.com/17515408/67627409-da4d8c00-f853-11e9-816a-6e0f2b1dcab3.png">   || :+1: great! Looks good to me now! || 
5525,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,1,0,0,1,Remove empty customization warning Fixes #5332. Problem was that the dialog was shown whenever the library contained customized entry types  even if the customizations were equal to the customization stored in the global preferences. A bit of refactoring/renaming along the way.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5533,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix a bug that threw a NPE when using middle mouse click on Windows Hotfix for solving #5532. Code looked good. Since its a hotfix  I just merged. ||
5539,1,0,0,1,1,0,1,0,0,0,1,0,1,0,1,1,0,0,1,Improve performance Improve performance by: - Caching fields as KeywordList - Remove duplicate change listener - Remove preference access in loop  With these changes  the mega huge library of @AEgit works without too much delays (the initial loading of the database is a bit slow but still ok). Thus  this PR is a potential fix for #4430 and for https://github.com/JabRef/jabref/issues/5071.  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) @tobiasdiez Wonderful! Let me know  when I can start testing this fix. ||
5554,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Make entry editor DND behave as specified in settings <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #5546   The setting only applies to the entry editor. The maintainable is still differentiating between the DND Modifiers as implemented in the linked PR @koppor    Refs #3765 ----  - [ ] Change in CHANGELOG.md described - [ ] Tests created for changes - [ ] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?) In my opinion  dnd onto the maintable and the entry editor should behave the same. Otherwise its really confusing that some operations on the entry editor respect some settings while a similar action on the maintable does not. || Agree. Both should behave as outlined above (if possible) 😅  Tobias Diez <notifications@github.com> schrieb am Sa.  2. Nov. 2019  15:01:  > In my opinion  dnd onto the maintable and the entry editor should behave > the same. Otherwise its really confusing that some operations on the entry > editor respect some settings while a similar action on the maintable does > not. > > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/5554?email_sourcenotifications&email_tokenAAKNU7TGK3HMYCTMNLVT7OLQRWB4BA5CNFSM4JH6CP4KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEC44SFA#issuecomment-549046548>  > or unsubscribe > <https://github.com/notifications/unsubscribe-auth/AAKNU7VFUZSIXUDQ7DLSVMTQRWB4BANCNFSM4JH6CP4A> > . >  || @koppor why did you merged this although it removes functionality that we both agreed should be kept?! Ill revert since this is not a proper fix in my opinion.  || I understood your comment wrong: I thought with this PR  they would behave the same. I did not check whether the entry editor supports modifier keys.  One should update https://github.com/koppor/jabref/issues/368 w.r.t. the current behavior of the entry editor. ||
5556,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Select newly added jstyle in table to prevent exception Fixes #5452  <!-- describe the changes you have made here: what  why  ...       Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).      The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) - [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)  
5558,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,Fix #5551 - Dont remove unwanted characters before first author is s… Hey   Im copying my comment from the issue page:   I found that in BracketedPattern.java on line 846 the comma is removed and therefore the AuthorList is not correct. https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/logic/bibtexkeypattern/BracketedPattern.java#L846  I would fix this issue by not applying BibtexKeyGenerator.removeUnwantedCharacters before extracting the author but afterwards. The tests pass  but can anyone think of a problem with that approach?  As it is my first PR to this project  any suggestions are highly appreciated. Thanks for the great work!  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message)  ![image](https://user-images.githubusercontent.com/4035371/68075812-6ceaaf80-fdad-11e9-9638-0588eed7e545.png) Thanks for your contribution! Looks good to me. I currently cant think of any issues with this fix. And thats why we have tests for such cases.. 😉    || I am glad that I could help. ||
5560,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Fix 5555 status popups As discussed in #5555 this PR removes some obsolete notifications and additionally removes notifications during autosave. I have also removed the strings from the language file  however  I was not sure if this was correct?   ----  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) @Ka0o0  Thanks for your contribution again! Could you please fix the checkstyle error? Then its ready for merge || @Siedlerchr I forgot to remove the unused import. It should pass the style check now. ||
5614,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Add option to parse new references from plain text using GROBID service [solving #4826] This PR should solve [#4826](https://github.com/JabRef/jabref/issues/4826). This JabRef extension is developed as part of a software engineering course.  Even though we write this feature mainly for our university course  we are willing to adjust our feature  so that JabRef can benefit from it.  The feature is now ready for review. It reintroduces the possibility to extract references from plain text using a custom GROBID server. This is implemented via a new SearchBasedFetcher.  One could work some more on the GROBID server (See : https://github.com/NikodemKch/grobid/commit/e89810bd82b1b39cfcf82150d37b2200ac510a30)  but sadly we do not have time for that.  ----  - [x] Change in CHANGELOG.md described - [x] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message) Note: In https://github.com/JabRef/jabref/pull/5628 I tried to bring-back the old menu item (as it exists in the 4.x versions of JabRef) || Quick statement about the points you mentioned: - The documentation you read is not up to date especially in terms of the dialogue-popups. On branch milestone3 we already reused the existing pop-up window and added the entries automatically after parsing. Moreover  since the user might want to add multiple entries at once  we inserted a checkbox  which enables the user to create a new library tab  so that possibly wrong parsed references are not immediately in his (the current) library. Screenshot: ![Ceckbox](https://user-images.githubusercontent.com/55385340/69046635-be27af80-09f9-11ea-99c5-74ed025ac7cb.PNG) (We will change the buttons soon).  - We changed our mind and do not intend to implement the conversion function (.tei to .bib) by ourselves anymore. (After seeing [this](https://github.com/kermitt2/grobid/blob/master/grobid-core/src/main/java/org/grobid/core/data/BiblioItem.java#L1739) method and [this](https://github.com/kermitt2/grobid/blob/master/grobid-core/src/main/java/org/grobid/core/data/BiblioItem.java#L1959) method.) The reference text is parsed by the grobid server which already has the needed function. We just change the function to return the processed citation in bibtex format rather than tei format. [(Here)](https://github.com/kermitt2/grobid/blob/master/grobid-service/src/main/java/org/grobid/service/process/GrobidRestProcessString.java#L277) Thats why we need a custom GROBID server. (We will link this server in this PR)  - We already implemented a checkbox to use a custom grobid server ip( preferences -> advanced tab)  if unchecked the default value is selected. Probably we should set that to http://cloud.science-miner.com/grobid/   but the problem is  that this server seems to be constantly overwhelmed by the number of incoming requests. Thats why we hosted the server on localhost for testing purposes. You can find a manual how to start that server [here](https://grobid.readthedocs.io/en/latest/Grobid-service/). (It uses gradle.) Screenshot: ![grobid](https://user-images.githubusercontent.com/55385340/69046537-79037d80-09f9-11ea-9229-6b57519815cc.PNG)  - We will try to change our package structure  button placing as well as used dependencies according to your suggestions this week. We will also try to update the documentation. || Concerning: > (Maybe switch the two buttons in the existing implementation - the go-on-button should always be right. And NEVER label "Cancel". Label it "Return to Library" so that the user knows what happens)  That depends on the OS. You can add the correct [type](https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/ButtonType.html) and then JavaFX will put them in the right order automatically. (And "Cancel" is pretty ok) || Please merge https://github.com/JabRef/jabref/pull/5628 into your branch. Then I will close that PR. || 👍 - I would make the checkbox an additional button.  "Insert into current library" and "Insert into new library" || Here is the link to the custom GROBID server: https://github.com/NikodemKch/grobid || @koppor do we have the resources to host the grobid server? I do not think many people have the knowledge to install and setup gropid on localhost... || @tobiasdiez There are options. Maybe  we "just" limit the request rates  "just" limit the requests per user per hour or simply charge for it. || We will check options how to host and maybe host some public service in beta. || We finished our work for this week. (except unit-test and documentation) We added a new button in the toolbar: ![2019-11-22](https://user-images.githubusercontent.com/55414329/69440253-c446c480-0d48-11ea-974f-a93037199229.png)  After pressing this button (or the corresponding context menu button) this window appears: ![2019-11-22 (2)](https://user-images.githubusercontent.com/55414329/69440287-d6286780-0d48-11ea-933c-1e6c49e91ce8.png)  While waiting for the server response  the following dialog is displayed: ![2019-11-22 (3)](https://user-images.githubusercontent.com/55414329/69440298-da548500-0d48-11ea-920e-eea563665d5f.png)  After successfully parsing  the entries are created and one of them is displayed inside the EntryEditor: ![2019-11-22 (5)](https://user-images.githubusercontent.com/55414329/69440305-e2acc000-0d48-11ea-85f7-829352256fcd.png)  When Grobid fails to parse a String  the following message is displayed: (This is also the case  when some entries are parsed successfully and some are not.) ![2019-11-22 (7)](https://user-images.githubusercontent.com/55414329/69440325-ed675500-0d48-11ea-880b-8f118e79bde6.png)  The user must separate the entries with double semicolon (  ) (we had no better idea).  The still open to dos are: - Write the unit tests - Update the documentation - Add localization entries - Work on the GROBID server  Also we intergrated our code better into the existing code base. It would be nice to get some feedback on that.  NOTE: The GROBID server does not work right with Java 13. We used Java 11 for the server but recommended is Java 8 (As stated [here](https://grobid.readthedocs.io/en/latest/Install-Grobid/))(The server had some NullPointer exceptions for no reason sometimes).    || Unit tests have now been implemented. The documentation was updated to match the current development status and to track changes in our timeline and planning. || Hey @NikodemKch  @obsluk00  @marcelluethi! We want to help you by deploying a grobid server. I hope you understand that it is important that the server is maintained by the @JabRef/developers team. Ive already set up the default grobid server  but what I read is that you want to customize the server? Can you point me to a repo from which I can deploy you custom server? || Hey @LinusDietz  The repo is [here](https://github.com/NikodemKch/grobid). The only difference to the original server is the following: https://github.com/NikodemKch/grobid/commit/e89810bd82b1b39cfcf82150d37b2200ac510a30 We still have to look at the requested changes. Thank you for deploying the server. || > Hey @LinusDietz > The repo is [here](https://github.com/NikodemKch/grobid). > The only difference to the original server is the following: [NikodemKch/grobid@e89810b](https://github.com/NikodemKch/grobid/commit/e89810bd82b1b39cfcf82150d37b2200ac510a30) > We still have to look at the requested changes. > Thank you for deploying the server.  So  I do have the server running. It might be a bit slow  but feel free to test it and report your findings to me. (potentially via Slack  Ive invited @NikodemKch )  http://grobid.cm.in.tum.de:8070/ || Whats the current status here? Is this already ready for review  or do you need input on certain parts? || Today we will fix the requested changes and try to fix the Travis pipeline. Then  we will open the PR for review. Sadly  we will probably not find the time to change the GROBID server as requested  as the examination phase is kicking in (First exam on December 20th)...  || This PR is now ready for review. Sadly the provided server (http://grobid.cm.in.tum.de:8070/) seems to not work properly (I cant access the page even in a browser  it says the server took too long to respond). The feature was tested with a locally hosted server. || >  Sadly the provided server (http://grobid.cm.in.tum.de:8070/) seems to not work properly (I cant access the page even in a browser  it says the server took too long to respond).  Sorry! Indeed the server is running  but the port in question is unreachable from the internet. Ill have a look. || The server should be available now. Can you check again? || Thanks for the feedback  we will work on this PR the next days. || @NikodemKch Could you please merge upstream/master so that our github workflows are triggered on push?  Please also be aware of EOL issues:  <blockquote class"twitter-tweet"><p lang"en" dir"ltr">Anyone experiencing &quot error: Your local changes to the following files would be overwritten by merge: src/test/resources/org/jabref/logic/importer/fileformat/BibTeXMLImporterTestArticle2.bib&quot  can just delete src/test/resources/org/jabref/logic/importer/fileformat/*.bib. 1/3</p>&mdash  JabRef (@JabRef_org) <a href"https://twitter.com/JabRef_org/status/1209951514934087681?ref_srctwsrc%5Etfw">December 25  2019</a></blockquote> <script async src"https://platform.twitter.com/widgets.js" charset"utf-8"></script>  || Sorry for our late response but we will finish our feature as soon if the upcoming exams are over. :) (January 23th  i hope this is ok to mention that here).  || Could you shortly outline  why jruby is needed? I thought  a "simple" HTTP call is made to a GROBID server? || > Could you shortly outline  why jruby is needed? I thought  a "simple" HTTP call is made to a GROBID server?  jruby is not needed anymore. At the beginning of this feature project we thought about including a different parser that uses jruby  but we are using GROBID via HTTP now. || Status Update: We have resolved all requested changes and are now fixing the pipeline... || We have finished this feature and waiting for your review.  Since we must document all UI changes  here they are: One can access the new feature in two ways: ![Jabref1](https://user-images.githubusercontent.com/10480362/74393916-ab135880-4e0b-11ea-8c71-3a9bbc4e4369.PNG) ![Jabref2](https://user-images.githubusercontent.com/10480362/74393918-ae0e4900-4e0b-11ea-8b6d-330c93c01c36.PNG)  When pressed  the following screen will appear: ![Jabref3](https://user-images.githubusercontent.com/10480362/74393943-bebebf00-4e0b-11ea-8ec2-b92f9f6efc8f.PNG) ![Jabref4](https://user-images.githubusercontent.com/10480362/74393950-c1b9af80-4e0b-11ea-904e-ff35e6314ee3.PNG)  When pressed  the following notification appears: ![Jabref5](https://user-images.githubusercontent.com/10480362/74393988-d7c77000-4e0b-11ea-8f63-287ccf0a6178.PNG)  And here is the end result when parsing is complete: ![Jabref6](https://user-images.githubusercontent.com/10480362/74394010-e3b33200-4e0b-11ea-9671-c8e077d2692e.PNG)  || Just a little PR mainte ce. || Were on it and are confident itll be ready early next week if there are no other changes necessary. Unfortunately our lectures will begin next week which means well have to put this project on the back burner for a bit if we fail to deliver for the 5.0 release. || > Thanks a lot for the very good revision. Ive only a couple of minor remarks left before we can merge. Would be awesome if you could address them in a timely manner so that your PR still makes it into the 5.0 release in two weeks. >  > @koppor is it possible to create the domain `grobid.jabref.org` as an alias for @LinusDietz grobid server? In this way we can change the server in the future without changing the url and thus without the need of a new release.  I have resolved all these issues and am re-requesting your review. || ![grafik](https://user-images.githubusercontent.com/1366654/74851124-1a70d700-533b-11ea-9d51-1656764debc8.png)  ![grafik](https://user-images.githubusercontent.com/1366654/74851148-22307b80-533b-11ea-8bc7-7cf5f388bbe3.png)  Pasting   ```text Kolb  S.  Wirtz G.: Towards Application Portability in Platform as a Service Proceedings of the 8th IEEE International Symposium on Service-Oriented System Engineering (SOSE)  Oxford  United Kingdom  April 7 - 10  2014. ```  from https://www.uni-bamberg.de/pi/team/kolb-stefan/  ![grafik](https://user-images.githubusercontent.com/1366654/74851445-88b59980-533b-11ea-954f-81079ff9da74.png)  Result:  ```bibtex @Misc{Kolb    author  {S Kolb and G Wirtz}    title   {Towards Application Portability in Platform as a Service}  } ```  Result is so  so. However  user experience is OK. The only thing is the textbox. Can it be soft-wrapped?  || > ![grafik](https://user-images.githubusercontent.com/1366654/74851124-1a70d700-533b-11ea-9d51-1656764debc8.png) >  > ![grafik](https://user-images.githubusercontent.com/1366654/74851148-22307b80-533b-11ea-8bc7-7cf5f388bbe3.png) >  > Pasting >  > ``` > Kolb  S.  Wirtz G.: Towards Application Portability in Platform as a Service > Proceedings of the 8th IEEE International Symposium on Service-Oriented System Engineering (SOSE)  Oxford  United Kingdom  April 7 - 10  2014. > ``` >  > from https://www.uni-bamberg.de/pi/team/kolb-stefan/ >  > ![grafik](https://user-images.githubusercontent.com/1366654/74851445-88b59980-533b-11ea-954f-81079ff9da74.png) >  > Result: >  > ``` > @Misc{Kolb  >   author  {S Kolb and G Wirtz}  >   title   {Towards Application Portability in Platform as a Service}  > } > ``` >  > Result is so  so. However  user experience is OK. The only thing is the textbox. Can it be soft-wrapped?  We made the conscious design choice to go without softwrapping user input to improve quality of user experience when passing multiple entries.  But changing it isnt a problem and we should be able implement softwrapping together with the other requested changes until the weekend.   || I see the problem. We decided to split entries at line breaks (regex: "[\\\r\\\n]+") Without the line break you copied over from the website  the result is quite better: ``` @Article{KolbJune27July22015    author     {S Kolb and J Lenhard and G Wirtz}    year       {June 27 - July 2  2015}    address    {New York  NY  USA}    booktitle  {Application Migration Effort in the Cloud - The Case of Cloud Platforms Proceedings of the 8th IEEE International Conference on Cloud Computing (CLOUD)}  } ``` Softwrap makes sense  since it (mentally) prevents the user from adding more breaks after he pasted his references.  We thought using line breaks would be most convenient  but we can easily change this to double line breaks or even something else  so what do you think? @koppor   || As the example shows it would be indeed good to change the item separation to two lines (so that one empty line needs to be between the entries). Could you also add this as a short comment in the prompt text "Please enter the plain text references ..." to make it easier for users to discover the feature. Thanks || Ready for review again. See comments in open issues above.  Also the feature now separates at double empty lines only. And this is displayed to the user. (Since the commit below) || Think  we are good to go.  For a follow up  the `Accept` header should be set. I created a follow-up issue at https://github.com/koppor/jabref/issues/406.  Thank you so much for working on this issue and keeping up the work after the exam phase! 🎉  || @koppor The address is still pointing to tum and your alias is not working: https://github.com/JabRef/jabref/pull/5614/files#r381558452. Would be nice to fix this before the release. || We also want to thank you very much! It was a great experience for the whole team to participate on your project. It was very helpful that you mentioned so many import details that we didnt see. That helped us improving our skills to become a good software engineer! :-) 🎉  || @tobiasdiez Added it to https://github.com/koppor/jabref/issues/406 || @koppor good  but can we also fix that before we release this weekend?!  || Thank you for your support and feedback during the development of this feature!  I got response for my feature request at Grobid  asking for a service call that can process multiple requests at once. https://github.com/kermitt2/grobid/issues/540#issuecomment-589164981  Indeed  the second use case is not what we are looking for. As I understand  I as caller would have the choice between sending everything in one request with little slower processing  or creating and collecting multiple async. threads but slightly faster processing.   So what do you think @koppor @tobiasdiez ? || 
5629,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix #5615 side pane not remembering position Hi  I found a bug where JavaFx was doing some recalculations during the initial layouting.  Setting `setResizableWithParent` before initial layouting was finished resulted in JavaFx assuming a wrong fixed width. I changed that by adding the code to a run later block.  It works good for me on Mac. Are there any concerns with that?  Best regards Kai  - [x] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
5646,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Dark Theme Visibility Fixes There had been some visibility issues with the interface when in dark theme.  - Changed the color of the vertical scroll bar in dark mode to allow it to be more visible against the other colors.  - Changed the color of the accent behind the number selected which appears in the group tree when an item in a group is selected to allow for the number inside to be more readable.  fixes [#5522](https://github.com/JabRef/jabref/issues/5522)   Then: ![](https://user-images.githubusercontent.com/12767489/67626176-9cdf0380-f83f-11e9-9a23-a89a80dac849.png)  Now: ![Screen Shot 2019-11-19 at 5 44 54 PM](https://user-images.githubusercontent.com/20655124/69198088-2b6e3a00-0af9-11ea-9f9d-bb15896b3623.png) ----  - [x ] Change in CHANGELOG.md described - [ ] Tests created for changes - [x] Manually tested changed features in running JabRef - [x] Screenshots added in PR description (for bigger UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Sorry if I did anything wrong  this is my first pull request on a public repo.  Also happy birthday if youre reading this dad! || @ageofadz Thank you for being brave and submitting a pull request. This is how open source should work 🎉   Regarding the red cross. Its because our test coverage checker sometimes fails due to time outs. You can ignore this error. (Refs https://github.com/JabRef/jabref/pull/5618). || Thank you very much for your contribution! 🥇  Looks good to me! Would you mind fixing the preview (ciation styles) panel for OpenOffice/LibreOffice as well? This is the same one as in the entry editor  so it should be easy to adapt. || Just for clarification: @Siedlerchr is referring to the issue mentioned here: https://github.com/JabRef/jabref/issues/5522#issuecomment-547054970 || > Thank you very much for your contribution! 🥇 Looks good to me! Would you mind fixing the preview (ciation styles) panel for OpenOffice/LibreOffice as well? This is the same one as in the entry editor  so it should be easy to adapt.   Thanks so much for the feedback everyone! Started working on a few of the changes. As for the changes to the OpenOffice style selection  theres a method in /gui/preview/PreviewViewer.java called setTheme() that can apply a theme to previewArticle and previewBook in /gui/openoffice/StyleSelectDialogView.java  with a note about [an open issue on openJDK](https://github.com/openjdk/jfx/pull/22). I was able to add `previewArticle.setTheme("DARK_CSS") ` to get the text in the OpenOffice style selection to fit the dark mode  but because it only takes strings  I havent been able to get a string value for the current theme applied so that the style selections appearance matches the theme selected. Heres the methods code:  `    public void setTheme(String theme) {` `        if (theme.equals(ThemeLoader.DARK_CSS)) {` `            // We need to load the css file manually  due to a bug in the jdk` `            // TODO: Remove this workaround as soon as https://github.com/openjdk/jfx/pull/22 is merged` `            URL url  JabRefFrame.class.getResource(ThemeLoader.DARK_CSS) ` `            String dataUrl  "data:text/css charsetutf-8 base64 " +` ``                    `Base64.getEncoder().encodeToString(StringUtil.getResourceFileAsString(url).getBytes()) ` `` `            previewView.getEngine().setUserStyleSheetLocation(dataUrl) ` `        }` `    }` || What do you mean with the following? > but because it only takes strings  I havent been able to get a string value for the current theme applied so that the style selections appearance matches the theme selected.  The method allows you to load the `Dark.css`  in which you then can add/change the necessary style information. || > What do you mean with the following? >  > > but because it only takes strings  I havent been able to get a string value for the current theme applied so that the style selections appearance matches the theme selected. >  > The method allows you to load the `Dark.css`  in which you then can add/change the necessary style information.  Because it checks if "Dark.css" is passed in as an argument and switches to dark theme if it is  it needs a string that says which theme is active for it to change according to what theme the user selected. At the time I couldnt find one  but I found the hashmap in JabrRefPreferences and passed that into it now with `JabRefPreferences prefs  JabRefPreferences.getInstance() ` and `previewArticle.setTheme(prefs.get(JabRefPreferences.FX_THEME)) `  which appear to work!  Testing right now  will update my pull requests later today with that addition and your earlier suggestions. || >JabRefPreferences prefs  JabRefPreferences.getInstance()  and previewArticle.setTheme(prefs.get(JabRefPreferences.FX_THEME))   which appear to work!  In the Style Select DialogView you have access to the preferences via the Preferences Service which is a wrapper (for dependency injection via the FXML loader) for the JabRefPreferences. We try to pass dependencies always as constructor arguments (Inversion of Control principle) to avoid direct dependency calls. So the idea would be to add a method e.g. getActiveTheme to the PreferencesService which returns the theme for the preferences. Then you can call setTheme on the PreviewViewer.   || Hey  many thanks once again for everyones feedback! The [newest commit](https://github.com/ageofadz/jabref/commit/aa06737230927cd0c9cd32a9860d26e20c367797) has updates to dark.css based on @tobiasdiazs suggestion to overwrite scroll bar and group hit colors  in addition to @Siedlerchrs suggestion to update the StyleSelectDialogView using the Preferences Services wrapper injection as opposed to a hard dependency to JabRefPreferences.  Attached is a screenshot displaying the changes to scrollbar and group selected indicator (visually unchanged since first commit) and the OO style selection dialog view.  ![Screen Shot 2019-11-23 at 12 08 20 PM](https://user-images.githubusercontent.com/20655124/69483590-d11df380-0dee-11ea-86b2-5d637eeda3d9.png)   []  Tests created for changes [x]  Manually tested changed features in running JabRef [x]  Screenshots added in PR description (for bigger UI changes) [x]  Checked documentation: Is the information available and up to date? If not: Issue created at https://github.com/JabRef/user-documentation/issues. || This looks good! Thanks for the follow-up.  I think you latest commit reverted the changes in the previous commit https://github.com/ageofadz/jabref/commit/b812b62b6b854795fc9c012aa458959ed581bcfe. You can use git cherry-pick to integrate these changes as well. || > This looks good! Thanks for the follow-up. >  > I think you latest commit reverted the changes in the previous commit [ageofadz@b812b62](https://github.com/ageofadz/jabref/commit/b812b62b6b854795fc9c012aa458959ed581bcfe). You can use git cherry-pick to integrate these changes as well.  To fix that  should I use `git cherry-pick ^aa06737230927cd0c9cd32a9860d26e20c367797..b812b62b6b854795fc9c012aa458959ed581bcfe`? The commit from two hours ago should have just added getTheme() to preferencesServices and jabRefPreferences and updated the StyleSelectDialogView to remove directly calling jabRefPreferences to refer to the preferencesServices getTheme(). || Mr. @koppor git wizard  can you please assist with the git issue. || If it is only the commit b812b62b6b854795fc9c012aa458959ed581bcfe  `git cherry-pick b812b62b6b854795fc9c012aa458959ed581bcfe` is enough (no need for commit ranges). Possibly  conflicts have to be resolved. Just resolve it with the IDE and then commit the result. I use `git gui` and click on the envelope buttons at the upper left. || Newest commit cherry-picks b812b62 and resolved conflicts in CHANGELOG.md and StyleSelectDialogView.java. Thank you git wizard @koppor! || I think a `git push` is missing? Maybe you cherry-picked on the wrong branch? You can always check the current overall branch status with `gitk --all&`. Then  it displays where which branch currently points to. (Maybe the articleh https://lostechies.com/joshuaflanagan/2010/09/03/use-gitk-to-understand-git/ helps a bit?) || The latest commit is  4411dceb783f1d16ceffae10e77b1c52fb2cf390. `gitk --all&`  shows it as HEAD with 508c2bedd0c70991fb2506f0cd6351f40026ca91 as parent  `git status` says Im up to date.  Unsure why it isnt appearing in the PR  but appears on [my fork](https://github.com/ageofadz/jabref/commits/master) || You pushed it to your master branch but not to the base branch of this PR. || This looks good now. Thanks again and looking forward to your next PR 😄 ! || Couldn’t wish for a better first PR. Learned a lot and had a blast  I’m stoked to do many more. Thank you all very much for being so helpful and patient commit after commit 😂 || 
5665,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Improve change scanner If a file is changed externally  JabRef is doing a 3-way merge between the last saved value vs current value in JabRef vs new value in file. The way this is done is by first comparing the last saved file with the current (changed) file  and then trying to find additional/other changes in the currently open database. This is really complex and I believe there is some subtle bug in the logic leading to #5257.  With this PR  the change scanner is changed to a to simple 2-way merge between the current value in JabRef vs new value in file. This is way simpler and I hope this PR fixes #5257. In a few edge cases  the 2-way merge has a small disadvantage. For example  consider the following steps: - User A opens file - User A changes field `Author` to `User A` and adds field `Title` with value `new` - User B opens file - User B changes field `Author` to `User B` - User B saves file  At this point  User A gets a message that the file changed with the following changes: - field `Author` changed from `User A` to `User B` - field `Title` was removed  The 3-way merge could detect that `Title` was newly added  and thus could automatically reapply this change.  This is no longer possible with the simple 2-way merge.  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. We have to be careful how this works together with a shared database  || The shared databases have their own update/sync mechanism. But I do agree that this should be made consistent at some point. || I am making it consistent <s>in my local dev branch</s> at https://github.com/JabRef/jabref/pull/5669. That one uses the merge entries dialog as it is the case in the shared database dialog. Does also cover the edge case by @tobiasdiez || Is the reference file updated after the conflicts are reported? (Is it necessary? I would guess: yes  because changes reported should not be reported again - and the reference file is not the bib file on disk)  Is it possible to add some test cases? || I removed the reference file completely... || How hard is it to embed the [merge entries dialog](https://docs.jabref.org/finding-sorting-and-cleaning-entries/mergeentries) at the yellow place below?  ![grafik](https://user-images.githubusercontent.com/1366654/69784577-61c14e80-11b6-11ea-9e10-7c782218e908.png)  || @koppor The merge entries dialog is already consisting of a BorderPane called `MergeEntries` which can be embedded easily. See the `MergeEntriesDialog` || Minor wish: <kbd>Esc</kbd> should be enabled for closing the dialog.  (Refs https://github.com/JabRef/jabref/issues/2949) || @siedlerchr great! May I ask whether you could do it? || I if can wait until this evening or afternoon I can try to add it. || Improved the PR based on the comments. Didnt change anything to the UI as this was not the subject of this PR. So  we are going ahead with this PR and further work on https://github.com/JabRef/jabref/pull/5669 after the release of 5.0? || This PR has the advantage that its finished and seems to work 🎉   Maybe we will offer both possibilities:  - transparent merge of changes (#5669) - explicit merge of changes (this PR)  @Siedlerchr Can you do the integration of the merge entries dialog in a separate PR? - This evening is still long and I am really looking forward to it. Meanwhile  Ill work on the other PR. ||
5666,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Auto file finder follows symbolic links <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #5664. I didnt tried it  but it should work...  <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Needs to be tested on linux and mac os x. @LyzardKing and @LinusDietz maybe you could test that? Maybe even add a test case (which runs only on linux and osx?) || I just tried this out on my system with the deb from master installed.. to see if I was having the same issue.. It seems to work already.. - I added a reference with key foobar   - added in the file path in settings the link created with `ln -s` - in the path I created a foobar.pdf file  Jabref seems to import it.. the only problem I can see is that it added two files  one from the normal folder and one from the symlink  ||
5667,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Rename "lookup fulltext" to "download fulltext" Closes #3874 and surpasses #5216. Does not addresses the follow-up issues mentioned in https://github.com/JabRef/jabref/pull/5216#issuecomment-557589116  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
5667,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Rename "lookup fulltext" to "download fulltext" Closes #3874 and surpasses #5216. Does not addresses the follow-up issues mentioned in https://github.com/JabRef/jabref/pull/5216#issuecomment-557589116  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
5670,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,Improve column preference migration <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #5661.  <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
5671,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix copy drag and drop action Fixes #5653.  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
5680,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,Add throttle to AutosaveUIManager As discussed in #5679 there are a lot of save actions performed when autosave is turned on. This PR adds a timer which limits the save actions to one in 200ms which is especially handy when automated tasks like find and replace are performed.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Manually tested changed features in running JabRef (always required) When working on this  the comments on https://github.com/JabRef/jabref/issues/5071#issuecomment-554769666 should be checked 😇  || I found the ScheduledService from javafx  mabye this is an option as well? https://openjfx.io/javadoc/12/javafx.graphics/javafx/concurrent/ScheduledService.html || @koppor  by introducing a deferred execution of the actual save operation  a race condition can happen when the old save operation is still in progress. This leads me to another question: lets say an auto-save action is happening and during the save process the user presses ctrl-s what happens?  As I can see there are two `SaveDatabaseAction` created: One in the `BasePanel` and one in the `AutosaveManager`. No locking is happening. So basically the later manual saved version could be overwritten by the older autosave one?  || @Siedlerchr I think this is more for recurring tasks rather to simply defer a task  as it says that it will go from scheduled -> running -> finished -> scheduled automatically. || Actually  @Siedlerchr you were right! There is a `ScheduledThreadPoolExecutor`.   I now completely changed the way to tackle the problem. `AutosaveManager` had a normal `ExecutorService`. There was actually a bug. When saving took longer  `ExecutorService` would through an exception as the pool size was only of the size one.  Under certain circumstances newer information might not get auto-saved therefore.  The current implementation replaces the `ExecutorService` by an `ScheduledExecutorService`.  Additionally  the bug of #4877 can now be reproduced. When autosave is enabled  change something and quickly press ctrl-s -> you will see the error. So we should make the SaveDatabaseAction thread safe to prevent the error.  @koppor what do you think? || Ah cool  that sounds good. Thread safe sounds fitting. There are different ways to achieve this and maybe one of those newer locking things is helping  https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/util/concurrent/package-summary.html || @Ka0o0 Do you use Eclipse or IntelliJ? With IntelliJ (and the complete setup from https://github.com/JabRef/jabref/wiki/Guidelines-for-setting-up-a-local-workspace)  the autoformat takes care.  >  by introducing a deferred execution of the actual save operation  a race condition can happen when the old save operation is still in progress. This leads me to another question: lets say an auto-save action is happening and during the save process the user presses ctrl-s what happens?  (Unsure whether this is still the question...) - Either cancel the current autosave or let it go and then trigger it again. I would prefer the former (as long as we write to `.sav`  and then move to `.bib` - thus we do not destroy the `.bib` file of the user)  || @koppor actually I have important that already but I forgot to do auto formatting before committing. Ive now created a pre-commit hook which runs checkstyle so that this does not happens again. || Thanks again! ||
5694,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Bump checkstyle from 8.26 to 8.27 Bumps [checkstyle](https://github.com/checkstyle/checkstyle) from 8.26 to 8.27. <details> <summary>Release notes</summary>  *Sourced from [checkstyles releases](https://github.com/checkstyle/checkstyle/releases).*  > ## checkstyle-8.27 > https://checkstyle.org/releasenotes.html#Release_8.27 </details> <details> <summary>Commits</summary>  - [`98aa588`](https://github.com/checkstyle/checkstyle/commit/98aa588f1a3431cf401f0265c2e071f2c4507014) [maven-release-plugin] prepare release checkstyle-8.27 - [`916799d`](https://github.com/checkstyle/checkstyle/commit/916799d2f280dd81829cbefe731b90a867fd1207) doc: add 8.27 releasenotes - [`44961c0`](https://github.com/checkstyle/checkstyle/commit/44961c026fa0811b987f68b3cc0b678b5c17f7bc) Issue [#7083](https://github-redirect.dependabot.com/checkstyle/checkstyle/issues/7083): fix wrapping handing  xml indentation - [`1aa1e54`](https://github.com/checkstyle/checkstyle/commit/1aa1e5433f40c46658bf6ae28aef1c57779320fc) Issue [#7083](https://github-redirect.dependabot.com/checkstyle/checkstyle/issues/7083): add media-query for small devices  use wrapper for tables  svgs ... - [`7054edc`](https://github.com/checkstyle/checkstyle/commit/7054edc6733a9b8911aaf913dd1969e227f258c4) Revert "Issue [#7288](https://github-redirect.dependabot.com/checkstyle/checkstyle/issues/7288): fix xwiki build on wercker" - [`c442c78`](https://github.com/checkstyle/checkstyle/commit/c442c78f24af273ebc770bc31a2579a9d9831418) Issue [#7288](https://github-redirect.dependabot.com/checkstyle/checkstyle/issues/7288): fix xwiki build on wercker - [`cdbc25d`](https://github.com/checkstyle/checkstyle/commit/cdbc25d8af6036a40d08e6febc0519e3a3630253) config: bump picocli from 4.0.4 to 4.1.1 - [`abc6ae5`](https://github.com/checkstyle/checkstyle/commit/abc6ae5d2b4df943886e63739163c592f825daf4) config: bump maven-enforcer-plugin from 3.0.0-M2 to 3.0.0-M3 - [`5b718f2`](https://github.com/checkstyle/checkstyle/commit/5b718f25026ffcf6aa8728e8ee39fbfcdb4e369f) config: disable Mac JDK11+ until [#7276](https://github-redirect.dependabot.com/checkstyle/checkstyle/issues/7276) - [`6fbac46`](https://github.com/checkstyle/checkstyle/commit/6fbac46bd510cc9a2d66210c86da2307183a005e) config: bump sevntu to 1.36.0 - Additional commits viewable in [compare view](https://github.com/checkstyle/checkstyle/compare/checkstyle-8.26...checkstyle-8.27) </details> <br />  [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-namecom.puppycrawl.tools:checkstyle&package-managergradle&previous-version8.26&new-version8.27)](https://dependabot.com/compatibility-score.html?dependency-namecom.puppycrawl.tools:checkstyle&package-managergradle&previous-version8.26&new-version8.27)  Dependabot will resolve any conflicts with this PR as long as you do not alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) If all status checks pass Dependabot will automatically merge this pull request.  [//]: # (dependabot-automerge-end)  ---  <details> <summary>Dependabot commands and options</summary> <br />  You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR  overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme  Additionally  you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Automerge options (never/patch/minor  and dev/runtime dependencies) - Out-of-range updates (receive only lockfile updates  if desired) - Security updates (receive only security updates  if desired)    </details> ``` [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/logic/bibtexkeypattern/BracketedPattern.java:53:8: Unused @param tag for bibentry. [JavadocMethod]  [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/logic/bst/BibtexTextPrefix.java:24:8: Unused @param tag for numOfChars. [JavadocMethod] [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/logic/openoffice/OOBibStyle.java:346:8: Unused @throws tag for IOException. [JavadocMethod] > Task :checkstyleMain [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/logic/openoffice/OOBibStyle.java:372:8: Unused @throws tag for IOException. [JavadocMethod] [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/logic/openoffice/OOBibStyle.java:398:8: Unused @throws tag for IOException. [JavadocMethod] ```  || One of your CI runs failed on this pull request  so Dependabot wont merge it.  - [GUI tests](https://developer.github.com/actions/) - [Checkstyle](https://developer.github.com/actions/) - [Deploy on macOS](https://developer.github.com/actions/) - [Deploy on windows](https://developer.github.com/actions/)  Dependabot will still automatically merge this pull request if you amend it and your tests pass. ||
5717,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix import into currently open library Remove unnecessary parallel execution of `addTab`  which fixes #5537.  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
5724,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix multiple entries allowed in crossref (issue #5284) Fixed issue #5284 where multiple entries were allowed in crossref field  whereas only one should be allowed. https://github.com/JabRef/jabref/issues/5284 I merge even though the Co-authored-by-STrings are not correct  ``` Co-authored-by: Julien Bénard Co-authored-by: Lucas Beretti Co-authored-by: Venceslas Roullier ```  Source from https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors.  ![grafik](https://user-images.githubusercontent.com/1366654/70868277-7015b580-1f7f-11ea-9c54-d6148a87ec51.png)  || For follow-up: Please ensure that "checkstyle" runs through. There was a wrong import order.  @Julien29121998 Did you configure your IDE correctly? || Nevertheless  thank you for putting effort into this. Looking forward to more contributions! || 
5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Persistent column sortorder This PR should make the column sort order persistent. @Siedlerchr [asked me](https://github.com/JabRef/jabref/pull/5544#issuecomment-548879914) to give it a shot  and to see if its somehow quicker. I tried to stay close to the JavaFX implementation of the the column sort order and somewhat close to the mvvm pattern. I do not think it has much impact on the performance  compared to the current master  but im not equipped with a profiler to test it. So its just my subjective opinion. 😁 Maybe someone else likes to test it?  fixes #4800 fixes #4224 refs #5713 and #5368 follow-up to  #4327 and #5544  The next step would be to implement sortorder by library  which would allow some more exotic use cases for jabref. I remember someone had problems with the sort order when using jabref as a library for some genetics stuff  but i wasnt able to find it in the issues...  So  lets talk about this.  Screenshot is omitted  as there is nothing to see here.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. I tried your branch and for me it does not work. I changed sort order for year to descending but after a restart its still ascending || Thats somehow odd... Just tried it again and it worked for me... Can you try to reset the preferences  restart JabRef and test it again?  A shortcut for quicker testing: After restarting JabRef the mechanics of column sorting should be also the same in restarting JabRef as in opening and saving the prefs dialog. || Yes  works fine after resetting the preferences 👍  Codewise also looks good. I let have @tobiasdiez  the final say on this  ) || Great. Did you notice any performance drops? || So far not  Sorting alone in a huge database with over 6 400 entries and many groups takes a long time so this is definitely not related to the storage of the order. || I am so free to merge this.  ) ||
5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Persistent column sortorder This PR should make the column sort order persistent. @Siedlerchr [asked me](https://github.com/JabRef/jabref/pull/5544#issuecomment-548879914) to give it a shot  and to see if its somehow quicker. I tried to stay close to the JavaFX implementation of the the column sort order and somewhat close to the mvvm pattern. I do not think it has much impact on the performance  compared to the current master  but im not equipped with a profiler to test it. So its just my subjective opinion. 😁 Maybe someone else likes to test it?  fixes #4800 fixes #4224 refs #5713 and #5368 follow-up to  #4327 and #5544  The next step would be to implement sortorder by library  which would allow some more exotic use cases for jabref. I remember someone had problems with the sort order when using jabref as a library for some genetics stuff  but i wasnt able to find it in the issues...  So  lets talk about this.  Screenshot is omitted  as there is nothing to see here.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. I tried your branch and for me it does not work. I changed sort order for year to descending but after a restart its still ascending || Thats somehow odd... Just tried it again and it worked for me... Can you try to reset the preferences  restart JabRef and test it again?  A shortcut for quicker testing: After restarting JabRef the mechanics of column sorting should be also the same in restarting JabRef as in opening and saving the prefs dialog. || Yes  works fine after resetting the preferences 👍  Codewise also looks good. I let have @tobiasdiez  the final say on this  ) || Great. Did you notice any performance drops? || So far not  Sorting alone in a huge database with over 6 400 entries and many groups takes a long time so this is definitely not related to the storage of the order. || I am so free to merge this.  ) ||
5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Persistent column sortorder This PR should make the column sort order persistent. @Siedlerchr [asked me](https://github.com/JabRef/jabref/pull/5544#issuecomment-548879914) to give it a shot  and to see if its somehow quicker. I tried to stay close to the JavaFX implementation of the the column sort order and somewhat close to the mvvm pattern. I do not think it has much impact on the performance  compared to the current master  but im not equipped with a profiler to test it. So its just my subjective opinion. 😁 Maybe someone else likes to test it?  fixes #4800 fixes #4224 refs #5713 and #5368 follow-up to  #4327 and #5544  The next step would be to implement sortorder by library  which would allow some more exotic use cases for jabref. I remember someone had problems with the sort order when using jabref as a library for some genetics stuff  but i wasnt able to find it in the issues...  So  lets talk about this.  Screenshot is omitted  as there is nothing to see here.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. I tried your branch and for me it does not work. I changed sort order for year to descending but after a restart its still ascending || Thats somehow odd... Just tried it again and it worked for me... Can you try to reset the preferences  restart JabRef and test it again?  A shortcut for quicker testing: After restarting JabRef the mechanics of column sorting should be also the same in restarting JabRef as in opening and saving the prefs dialog. || Yes  works fine after resetting the preferences 👍  Codewise also looks good. I let have @tobiasdiez  the final say on this  ) || Great. Did you notice any performance drops? || So far not  Sorting alone in a huge database with over 6 400 entries and many groups takes a long time so this is definitely not related to the storage of the order. || I am so free to merge this.  ) ||
5730,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Persistent column sortorder This PR should make the column sort order persistent. @Siedlerchr [asked me](https://github.com/JabRef/jabref/pull/5544#issuecomment-548879914) to give it a shot  and to see if its somehow quicker. I tried to stay close to the JavaFX implementation of the the column sort order and somewhat close to the mvvm pattern. I do not think it has much impact on the performance  compared to the current master  but im not equipped with a profiler to test it. So its just my subjective opinion. 😁 Maybe someone else likes to test it?  fixes #4800 fixes #4224 refs #5713 and #5368 follow-up to  #4327 and #5544  The next step would be to implement sortorder by library  which would allow some more exotic use cases for jabref. I remember someone had problems with the sort order when using jabref as a library for some genetics stuff  but i wasnt able to find it in the issues...  So  lets talk about this.  Screenshot is omitted  as there is nothing to see here.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. I tried your branch and for me it does not work. I changed sort order for year to descending but after a restart its still ascending || Thats somehow odd... Just tried it again and it worked for me... Can you try to reset the preferences  restart JabRef and test it again?  A shortcut for quicker testing: After restarting JabRef the mechanics of column sorting should be also the same in restarting JabRef as in opening and saving the prefs dialog. || Yes  works fine after resetting the preferences 👍  Codewise also looks good. I let have @tobiasdiez  the final say on this  ) || Great. Did you notice any performance drops? || So far not  Sorting alone in a huge database with over 6 400 entries and many groups takes a long time so this is definitely not related to the storage of the order. || I am so free to merge this.  ) ||
5731,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,Fix #2868 - keep source groups selected after drag and drop This PR fixes a bug where the selection of the source groups was lost after drag and drop (#2868). I noticed a bug in the mapping from `GroupNodeViewModel` to the corresponding `TreeItem`. The bug might also have caused other selection related bugs.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Manually tested changed features in running JabRef (always required) Thanks again for the contribution! || Very welcome guys :). Happy to be able to support you. ||
5738,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,Bugfix for Multiscreen Made following Changes to solve Multiscreen issue fixes #5037:  At JabRefGUI: -  new local variable correctedWindowPos  to support saving of Screendata - change in method openWindow to open window at the mainscreen if needed - made method printWindowState() to print out windowposition data (if Logger in debug mode) - made method  testExternalCoordinates() to test if window is on external screen - made method numberOfMonitors() to test if external screen is connected ( |-> numberOfMonitors() finally replaced by Screen.getScreens().size())  At JabRefPreferences:  - made copy of the window position and size variables (recognised with _CORE) - made initialisation for the variables described above  (made in accordance with an Project on Software Engineering at University Basel in cooperation with @unibas-marcelluethi)  <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Manually tested changed features in running JabRef (always required) Thanks for the contribution. Please remove the Travis integration as we recently switched to Github Actions. Otherwise this looks good so far || Thanks for the quick follow-up! ||
5781,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,Fix GUI tests Fixes #5602  refs #2768.  Wanted to know why our GUI tests are broken. The reason seems to be that we do not pass the preferences objects directly around  but use `Globals.prefs` at more places. Currently  the issue is in `MainTable.java`:  ```java         importHandler  new ImportHandler(                 frame.getDialogService()  database  externalFileTypes                  Globals.prefs.getFilePreferences()                  Globals.prefs.getImportFormatPreferences()                  Globals.prefs.getUpdateFieldPreferences()                  Globals.getFileUpdateMonitor()                  undoManager                  Globals.stateManager)  ```  I would propose to convert the constructor of `MainTable` (and `BasePanel`) to a builder pattern (because we have more than three arguments) and add passing of these preferences.  Alternatively  we can mock `Globals.prefs.GetFilePreferences()` etc. This is also OK for me as I accept global objects. However  we had a long discussion that we should get rid off `Globals`.  Is https://github.com/JabRef/jabref/issues/1579 the right issue  where we discussed `Globals.prefs`? I think  the comment at https://github.com/JabRef/jabref/pull/1593#discussion_r71328057 summarizes the discussion. +1 for extracting `Globals.prefs` and mocking the relevant data. I do not think a builder pattern is necessary as the relevant classes are rarely initialized and all arguments need to be present anyway.   || Im not sure whether we should continue with it like that. Should we try other solutions such as Eclipse Jubula - which are independent from the concrete code. I see that separate preferences for model and logic makes sense. For GUI  it is *much* effort... Is it really worth the effort? Do we need these kinds of tests? Would it make more sense to do black box testing?  Maybe  we should let this task (enable testing by TestFX) be done by students in a training next year? Seems to be much more work than expected. I wanted to come up with a quick solution to get it running to have our tests green.  Tobias Diez <notifications@github.com> schrieb am Do.  26. Dez. 2019  09:45:  > *@tobiasdiez* commented on this pull request. > ------------------------------ > > In src/main/java/org/jabref/gui/BasePanel.java > <https://github.com/JabRef/jabref/pull/5781#discussion_r361403371>: > > > @@ -145 8 +154 8 @@ >      private Optional<DatabaseChangeMonitor> changeMonitor  Optional.empty()  >      private JabRefExecutorService executorService  > > -    public BasePanel(JabRefFrame frame  BasePanelPreferences preferences  BibDatabaseContext bibDatabaseContext  ExternalFileTypes externalFileTypes) { > -        this.preferences  Objects.requireNonNull(preferences)  > +    public BasePanel(JabRefFrame frame  BasePanelPreferences basePanelPreferences  BibDatabaseContext bibDatabaseContext  ExternalFileTypes externalFileTypes  GroupViewMode groupViewMode  FilePreferences filePreferences  ImportFormatPreferences importFormatPreferences  UpdateFieldPreferences updateFieldPreferences  FileUpdateMonitor fileUpdateMonitor  StateManager stateManager  Consumer<ColumnPreferences> updateColumnPreferences  Supplier<TimestampPreferences> timestampPreferencesSupplier) { > > I think its better to pass a PreferenceService if you need to store > preference options (or get the current preferences at a later moment). > > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/5781?email_sourcenotifications&email_tokenAAKNU7TWQXUO7ZOYXCOOV3LQ2RVLJA5CNFSM4J6N67D2YY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCQG7HUI#pullrequestreview-336458705>  > or unsubscribe > <https://github.com/notifications/unsubscribe-auth/AAKNU7WSB7IVC7GUV3ZZO5LQ2RVLJANCNFSM4J6N67DQ> > . >  || I think GUI tests would be nice to have. Its a good idea to let students extend the code coverage in a forthcoming project (similarly to what we did with the fetcher test suite). However  we should provide a few basic tests that serve as an orientation. With MVVM there shouldnt be any need for UI tests in the traditional sense (TestFX or Jubala or whatever) as one can simply write unit tests for the view model classes. Moreover  the current GUI tests do not add much value in my opinion.   For me it would be fine to remove all GUI tests that we have currently. || The whole "mess" is only for the BasePanelTest - to fix the other tests was easy. I removed all the "improvements" and made only cosmetic changes. || 
5786,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix "&" on previews <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Proposed solution for #3840   I deleted a line where the & was getting escaped when generating the preview  apparently CSL already handles some kind of escaping.  The following entry ``` @Misc{b1111    author  {b  a}    title   {c \& d}    year    {1111}  } ``` generates this HTML ``` <div class"csl-entry">   <div class"csl-left-margin">[1]</div><div class"csl-right-inline"> a b  ôc &#38  d.ö 1111.</div> </div> ``` which renders in the PreviewLayout like this ![ampersand](https://user-images.githubusercontent.com/16848115/71487443-8e2db200-27d8-11ea-85c4-05b6e88176a3.png)    <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. I fear that will destroy the HTML export and other custom html exports. The HTMLChars formatter is used there a lot. https://docs.jabref.org/import-export/export/customexports#adding-a-custom-export-filter  Another idea which just came to my mind. Have you tried without the HTML chars formatter  e.g. if it works if you remove the HTML chars formatter in that step? || You are right! I removed the formatter from the CSL Adapter and it works just fine. Ill update the PR  || @JosejeSinohui Thank you for working on JabRef - could you please merge upstream/master so that our automated checks are triggered on your PR? || Would it be possible to add test cases here? You already provided a snippet. - The reason is that in one year someone touching CSLAdapter wont know that the HtmlCharsFormatter was removed and will re-add it again. There wont be any automatism preventing that. || Hi  sorry for the delay. I will add tests and update my PR. || Perfect  thanks for the quick followup! ||
5799,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,Reimplement custom entry types dialog Fixes #4719   Very early draft. Field Type should be radio button to switch between optional/required  TODO:  - [x] Add check for empty fields and types (prevent them with validator)   ![grafik](https://user-images.githubusercontent.com/320228/71933194-dae29700-31a1-11ea-9690-2110c706c0df.png)   <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Cool that you worked on this!  As a suggestion  I would not follow the original design very closely. Instead of having different lists for required and optional fields  I would add one big list of all fields with a checkbox toggling between required/optional.  || Thanks for the idea  that indeed sounds more practical. Maybe a radio button column.  || Question which just came to my mind: Do we allow changing the default entry types and their fields? e.g. Removing a field from an entry type like article? @koppor  || Yes  it was possible to add/remove fields from the built-in entry types. || @tobiasdiez  What is the preferred way to add new Fields to a an existing entry type? I saw the EntryTypesManager with  the `addCustomOrModifiedType`  but I am not sure if this is the right approach    || Yes that methods sounds right. I vaguely remember that the complete entry type had to be "replaced" instead of only specifying the added/removed fields. Easiest way is probably to look at the original code. || This looks really nice and is leagues above the original dialog in terms of user friendliness. Good job! || Still a few things to do  especially saving and removing all the fields back to the db and the prefs  But at least adding to the gui already works (without any further effects) || @tobiasdiez  Do you have an idea why the TableView content has these "empty" fields when I change between a list with more and fewer fields?   TableView is bound bidirecitonal to the fieldsForTypeProperty          this.fieldsForTypeProperty  new SimpleListProperty<>(existingFieldsForType)   ```         EasyBind.subscribe(selectedEntryTypesProperty  type -> {             if (type ! null) {                 List<FieldViewModel> typesForField  typesWithField.get(type)                  existingFieldsForType.setAll(typesForField)              }         })  ```  ![grafik](https://user-images.githubusercontent.com/320228/72083772-a508f400-3302-11ea-9820-edc62d69ff7c.png)  || The table view is programmed in such a way that always the complete visible table is filled with rows. Thus  even if there is no data https://github.com/JabRef/jabref/pull/5799/files#diff-6f6e1e1c919b9cd2136e6a4b1d7d684aR78 creates the toggle buttons. Moreover  rows are reused (i.e. not re-created).  I think it should suffice to add the check `item ! null` to https://github.com/JabRef/jabref/pull/5799/files#diff-acc3954e085edb6f809d80a9c419f431R26 and perhaps add an else statement with `setGraphic(null)`. || Thanks! That worked! || `selected field null` in stdout when I open the dialog || @burrbull  Thanks for your interest  however  this is still Work in Progress and not yet ready.  Especially saving is not yet implemented.   || In `biblatex` mode there should be 3 position: `Required`  `Optional`  `Optional2` || @burrbull  We want to drop the difference between optional and optional 2 field sin the long run. We had already discussion about this in the past #2790 || Hi  a very useful functionality in 4.3.1 was the manual sorting (not only in alphabetical order) of the fields in the edit entry panel. Are you planning to implement this in this version? Thanks for this nice work. || General functionality is now ready. Loading  saving and removing of types is possible. Also removing and adding fields to standard types is working. Removing standard entry types like article has no effect.  || Can someone update builds?  https://builds.jabref.org/customizeEntrydlg/  || @burrbull  We have currently some problems with our buildserver at builds.jabref.org. However  you can download it from here: https://github.com/JabRef/jabref/pull/5799/checks?check_run_id416697659 In the top right corner  click on artifacts: ![grafik](https://user-images.githubusercontent.com/320228/73437031-e6158680-434b-11ea-8389-e4aec693caa3.png)  || Bug. When I try to move `Optional` field to `Required`  whole `Required` list emptied.  I use BibLaTeX. || @burrbull  Thanks for testing  could you please add some more details on how to reproduce this`? What steps did you do where? || I think I found the problem. Working on it  Changes are not properly propagated || Somehow the cellEdit event is not propagated to the listener here  although the RadioButtonCell fires an event. Any idea where the problem could be @tobiasdiez ? Code is adapted from here https://stackoverflow.com/a/27558557 ```        fieldTypeColumn.setEditable(true)          fieldTypeColumn.setOnEditCommit((CellEditEvent<FieldViewModel  FieldType> t) -> {             t.getTableView().getItems().get(t.getTablePosition().getRow()).setFieldType(t.getNewValue())          })   ```  || @burrbull  I fixed the issue with the switch between required and optional.  Aso the modified types are correctly loaded again from the preferences when opening the dialog. || Regarding the GUI  I jave just one more question: By default the required and optional are not shown complete. I already tried to reduce the size of the left column but that didnt really work  (I hate those column resizing shit in javafx) ![grafik](https://user-images.githubusercontent.com/320228/73611314-145fc400-45e1-11ea-8b62-51d689522746.png)  || You can try to set a preferred width in https://github.com/JabRef/jabref/pull/5799/files#diff-fc34c7711de24071db18be303713d72fR34  Alternatively  you increase the scene width || Now I have ``` java.lang.RuntimeException: java.lang.reflect.InvocationTargetException 	at org.jabref.merged.module/javafx.fxml.FXMLLoader$MethodHandler.invoke(Unknown Source) 	at org.jabref.merged.module/javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventUtil.fireEventImpl(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventUtil.fireEvent(Unknown Source) 	at org.jabref.merged.module/javafx.event.Event.fireEvent(Unknown Source) 	at org.jabref.merged.module/javafx.scene.Node.fireEvent(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.Button.fire(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.scene.control.inputmap.InputMap.handle(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventUtil.fireEventImpl(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventUtil.fireEvent(Unknown Source) 	at org.jabref.merged.module/javafx.event.Event.fireEvent(Unknown Source) 	at org.jabref.merged.module/javafx.scene.Scene$MouseHandler.process(Unknown Source) 	at org.jabref.merged.module/javafx.scene.Scene.processMouseEvent(Unknown Source) 	at org.jabref.merged.module/javafx.scene.Scene$ScenePeerListener.mouseEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(Unknown Source) 	at java.base/java.security.AccessController.doPrivileged(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.View.handleMouseEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.View.notifyMouse(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication.enterNestedEventLoopImpl(Native Method) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication._enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.Application.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.EventLoop.enter(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/javafx.stage.Stage.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.HeavyweightDialog.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.Dialog.showAndWait(Unknown Source) 	at org.jabref/org.jabref.gui.customentrytypes.CustomizeEntryAction.execute(Unknown Source) 	at org.jabref/org.jabref.gui.actions.JabRefAction.lambda$new$2(Unknown Source) 	at org.jabref.merged.module/org.controlsfx.control.action.Action.handle(Unknown Source) 	at org.jabref.merged.module/org.controlsfx.control.action.Action.handle(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventUtil.fireEventImpl(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventUtil.fireEvent(Unknown Source) 	at org.jabref.merged.module/javafx.event.Event.fireEvent(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.MenuItem.fire(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer.doSelect(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer.lambda$createChildren$12(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventUtil.fireEventImpl(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.event.EventUtil.fireEvent(Unknown Source) 	at org.jabref.merged.module/javafx.event.Event.fireEvent(Unknown Source) 	at org.jabref.merged.module/javafx.scene.Scene$MouseHandler.process(Unknown Source) 	at org.jabref.merged.module/javafx.scene.Scene.processMouseEvent(Unknown Source) 	at org.jabref.merged.module/javafx.scene.Scene$ScenePeerListener.mouseEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(Unknown Source) 	at java.base/java.security.AccessController.doPrivileged(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.View.handleMouseEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.View.notifyMouse(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(Unknown Source) 	at java.base/java.lang.Thread.run(Unknown Source) Caused by: java.lang.reflect.InvocationTargetException 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.base/java.lang.reflect.Method.invoke(Unknown Source) 	at com.sun.javafx.reflect.Trampoline.invoke(Unknown Source) 	at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.base/java.lang.reflect.Method.invoke(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.reflect.MethodUtil.invoke(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.fxml.MethodHelper.invoke(Unknown Source) 	... 97 more Caused by: java.lang.RuntimeException: A bound value cannot be set. 	at org.jabref.merged.module/javafx.beans.property.ObjectPropertyBase.set(Unknown Source) 	at org.jabref.merged.module/javafx.beans.property.ObjectProperty.setValue(Unknown Source) 	at org.jabref/org.jabref.gui.customentrytypes.CustomEntryTypeDialogViewModel.addNewField(Unknown Source) 	at org.jabref/org.jabref.gui.customentrytypes.CustomizeEntryTypeDialogView.addNewField(Unknown Source) 	... 107 more ```  when try to add new field. || @Siedlerchr One little remark: Hovering the dustbin icon of e.g. the field "DOI" states "Remove field from entry type **DOI**"  which is not appropriate. ||  @systemoperator  One question  does the table update properly ( I am referring to the other bug) if you add a new type  add a new field/remove a new field? || @burrbull  All errors fixed. || @Siedlerchr Concerning updating the table  everything works perfectly. But when I add a new entry type  then I firstly get an exception:  ``` java.lang.RuntimeException: java.lang.reflect.InvocationTargetException 	at javafx.fxml/javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1787) 	at javafx.fxml/javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1670) 	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86) [...] ```  and afterwards I get another exception:  ``` java.lang.NullPointerException 	at java.base/java.util.AbstractCollection.addAll(AbstractCollection.java:335) 	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:99) 	at javafx.base/javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:88) [...] ```  and then the entry shows up in the table.  Subsequenty  when I delete a newly inserted entry type  then sometimes a null pointer exception occurs:  ``` java.lang.NullPointerException 	at java.base/java.util.AbstractCollection.addAll(AbstractCollection.java:335) 	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:99) 	at javafx.base/javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:88) 	at org.jabref/org.jabref.gui.customentrytypes.CustomEntryTypeDialogViewModel.lambda$new$2(CustomEntryTypeDialogViewModel.java:91) 	at easybind@1.0.3/org.fxmisc.easybind.EasyBind.lambda$subscribe$12(EasyBind.java:263) [...] ```  And when I select another entry type and simply click on the newly added entry type there is another null pointer exception. || Oh  I have not seen  that it was already mentioned previously. || Ah thanks. I thought I had fixed this already. Probably forgot to commit this on my other pc. Just fixed it. Will take a bit until the binaries are updated.  || Testing the fixed one: Some corner cases: - Adding several entry types without any name (or at least two types with the same name): Exceptions occur  when deleting them. - Adding several (or sometimes just one) new fields without any name: Exception || Thats one thing I want to prevent. Empty fields and empty entry types wont be allowed.   Will add a validator that in the next days.  Just wanted to be curious about the table updating refreshing. The main difference between the other table for external file types and this one is that I created a viewModel for the table and I think in the other dialog the ExternalFileType is directly used.  || Sounds good. Empty types should not be allowed as well as types with the same name. || > Thats one thing I want to prevent. Empty fields and empty entry types wont be allowed. Will add a validator that in the next days. >  > Just wanted to be curious about the table updating refreshing. The main difference between the other table for external file types and this one is that I created a viewModel for the table and I think in the other dialog the ExternalFileType is directly used.  Concerning the external file types: Maybe the problem is  that there is a type hierarchy involved and the table uses the interface ExternalFileType. Basically  all cases could be covered with just one ExternalFileType as well. (#5902) || There will be a follow-up PR to fix one small issue  > eigentlich fehlt nur noch ein check  dass man keinen doppelten typ/field angeben muss. > Aber der wird eh nicht gespeichert bzw ist dann beim reload nicht dabei. > Ansonsten ist es soweit fertig || 
5823,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,Fix for multiple error messages in messed up source editor Fixes #5820  JabRef created a new instance of CodeArea everytime an entry was selected and bound multiple listeners to the CodeArea and to the ValidationStatus in bindToEntry. Refactored it a little bit  so the CodeArea stays persistent and the error messages are only displayed once.  Did some minor refactorings to the other Validators and to modules.info too  to avoid warning messages from the IDE  and fixed a minor mistake from a previous PR in dark.css.   No screenshot  as there is no visual change.  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Thanks for the fix. I do not know exactly what   but I remember we had issues with the code area when going up and down in the main table with an open entry editor. And also when importing?. I know that there was a reason why it was created new every time.  Maybe @tobiasdiez remembers  || This should do the trick now. Apparently JavaFX fires the focus event after loading the next entry and registering a listener does not mean  it is also run.  What I do not understand is the failing GUI test. It fails somehow during setting the test up trying to call getSourceString with an empty BibEntry. It does not fail with a real entry open in JabRef  but only with the test. Should I modify the test? || The new fix looks good to!  I guess the test fails as `currentEntry` is null in https://github.com/JabRef/jabref/pull/5823/files#diff-e6eac13930d81c3c9c3ddc47d1b354a9R223 You can change https://github.com/JabRef/jabref/blob/master/src/test/java/org/jabref/gui/entryeditor/SourceTabTest.java#L81 to `notifyAboutFocus`. ||
5826,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,Conversion of group dialog to mvvm-pattern A first approach to convert the add/edit group dialog to the mvvm-pattern and a step forwards to implement the changes @MartinKarim supposed in #4684 . Still some problems and things to talk about.  The most obvious one is: GroupDescription. I really do not know what to do with this. Personally I think  this description stuff shuld go into the help page. Its a wild mesh-up of error messages  validation messages for the regex and some hints about the group...  The next thing are the different group types. @MartinKarim supposed to merge most of them  as they mostly intersect each other. But if we do this  we need to provide migrations for the old groups too. This would probably go far beyond this PR.  Screenshot below  The old labels of the checkboxes a displayed as a tooltip now. But they should be better placed in the help page.  I have some problems with the validators. Somehow if i bind the disableProperty of the ok button to validProperty of the validator  Java throws a NPE. If I do not get this working  I need to think about a workaround.  I need to stop procrastinating now and get back to studying.  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. 👍 for removing the description.  I like how the dialog looks in your screenshot. Nicely done! (I would maybe left-align the options "Case sensitve" and "Regular expression") || So I got no other opinions. Descriptions are gone.  ![group dialog](https://user-images.githubusercontent.com/50491877/72668799-b2249200-3a2a-11ea-9267-4454fa9e06e9.png)  refs #5833  but this PR does only change the groups dialog  it does not fix the issue mentioned.  || Looks good so far! || The constructors are gone. And the whole Globals-stuff in this part probably too. As I made same bigger changes  I would appreciate it  if you could just take a quick look at the latest commit and the changes to the optics again. Expecially the EnumMap. Is this ok this way? I really did not like the getText-Method... <img width"450" alt"group" src"https://user-images.githubusercontent.com/50491877/73127124-fd571b80-3fbb-11ea-8905-8f79ba0482be.png">  || Merging then... || 
5841,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix missing file extension for downloaded files. Fixes #5816 by falling back to PDF as default file type.  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
5855,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix opening pdf with okular in linux (#5253) <!--  Possible fix for issue #5253 Clicking on a document icon does not open the associated PDF.  The PDF viewer opens and closes immediately.  This seems to be related to KDE desktop with okular as default pdf reader. When okulas gives an error/warning message  discarding "Send SMS via KDE Connect." ("ShareUrl") it is not correctly handled and the program closes. One possible solution is to read the buffer in some way when xdg-open is called by Runtime.getRuntime().exec() -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Thanks for your contribution  @t-morales ! May I ask you to to unabbreviate the variables and to give them a selfexplaining name? You can also link the fix in GitHub to automatically close the issue. ("fixes #5253")  Just because Im curious: How does the fix work? Edit: nevermind  just saw the extensive discussion.  -) || @calixtus as I said in the issue #5253 I am not familiarized with java. It was more or less a trial and error procedure with the help of the comments of other users. Not so sure why this works and it would be good if someone with better understanding on java took a look at that. || Thanks for the follow-up! || 
5868,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix #5862. It was indeed the throttler (at least it is working now for me)  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
5879,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fixes making paths of linked files relative (web urls will not be touched anymore) Fixes #5861 Description: - Cleaning up entries with "Make paths of linked files relative (if possible)" broke web URLs and resulted in various other issues subsequently. This PR fixes this issue. It has been tested for local files and web urls.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Thank you very much for your contribution! fix looks good!  || Is there still something I need to do or is everything fine  because one check failed? || you can ignore the failing check. Its just the upload of the binaries which sometimes fails. Our Code Quality Policy requires a review from a second reviewer for external developers before it can be merged.  I think you also should add a Changelog entry since its at least an error from the beta/previous version || Would a proper implementation of rfc 3986 be an overkill? Maybe this could be achieved with a proper regex? https://tools.ietf.org/html/rfc3986  Spotted this https://stackoverflow.com/questions/30847/regex-to-validate-uris#30858 || @calixtus Checking a path as follows could be a simple alternative https://www.geeksforgeeks.org/check-if-url-is-valid-or-not-in-java/ But nevertheless  I also see advantages with the current approach  since it also detects urls as web urls  even if they are potentially broken in some way. This was the reason  why I created it like that. I think the main goal is to identify a web url rather than checking its validity. || @systemoperator  That should work using new URL() in practice and I think should be sufficient for most cases as an indicator || I e.g. think about the following scenario: Given are broken web urls like:  - https://www. google.at/ <- mind the unintended space character - https://www..google.at/ <- mind the unintended second period - ...  I think  in this screnario  it is more important to identify whether it is a web url or not  rather than making it more strict  saying checking whether it is a VALID web url  because in the case  that it would be a invalid web url (as e.g. shown above) then in this scenario the url would again get cleaned up and thus it will become even more "destoryed"  as it would be interpreted as a local file url again and many other issues would again show up.  On the other hand  if a broken url gets identified as a web url  then it will be processed properly and everything will work out  but when opening the url  it just cannot be loaded.  In my opinion  this method is all about identifying a web url  not validating one. (Thats why it is called isOnlineLink() rather than isValidOnlineLink().) || Somewhere I think  youre some kind of right too.   On the other hand  where do we want to decide  whats still a acceptable and what not? What about "file://" (Im aware that normally a file path is printed without this here  but it still could happen). We also had a few months ago someone here using JabRef as database for genetics stuff and not for books (proofing the mutability of JabRef). Please do not misunderstand me  I get your point and I do not exactly know the right answer... || Before implementing it  I thought about many of those things. With the current implementation a file link starting with "file://" will not be interpreted as a web url anyway  so this would be fine as well. || At least the javadoc should then be adapted...  -) || Of course. I would like to hear @tobiasdiezs recommendation about that as well. Then I will implement it as desired. :) || I think the current implementation is a good compromise. In the ideal world  the URL is valid and a proper validation as @calixtus would be preferable. However  the data quality we get from some fetchers is suboptimal so that it is a good idea to error on the save side (e.g. better identify to many paths as web urls). I suggest to merge now and come back to it later if users complain / provide problematic use cases. || 
5903,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,Fix properly resolves OrFields of required fields Addresses: #5859 and partially #5853  This fix adds all entries of OrFields of the required fields of EntryTypeDefinitions to the list of required fields for the tab "Required fields" of the entry editor.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Manually tested changed features in running JabRef (always required) Please resolve the conflicts and fix the checkstyle issue than we can merge || @Siedlerchr Is there still something I need to do? Which checkstyle issue do you mean? || See https://github.com/JabRef/jabref/pull/5903/checks?check_run_id422021255 Ive fixed it for you and will merge now. Thanks again for another great PR! ||
5903,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,Fix properly resolves OrFields of required fields Addresses: #5859 and partially #5853  This fix adds all entries of OrFields of the required fields of EntryTypeDefinitions to the list of required fields for the tab "Required fields" of the entry editor.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Manually tested changed features in running JabRef (always required) Please resolve the conflicts and fix the checkstyle issue than we can merge || @Siedlerchr Is there still something I need to do? Which checkstyle issue do you mean? || See https://github.com/JabRef/jabref/pull/5903/checks?check_run_id422021255 Ive fixed it for you and will merge now. Thanks again for another great PR! ||
5917,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Added update method to typePropertyListeners fixes #5905   - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
5923,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Disable search when no library is opened and Fix exception when getSearchResultSize returned null  I found this wile trying to reproduce  Hopefully Fixes #5897 and fixes #5821  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. JabRef 5.0-beta.409--2020-02-09--6a9c915 Linux 5.3.0-28-generic amd64  Java 13.0.2  1. close all libraries 2. type abc in search box 3. multiple "uncaught exception" error messages pop up.  ![image](https://user-images.githubusercontent.com/762246/74193544-bfd9cb80-4c14-11ea-894b-631971afb17c.png)  ``` java.lang.NullPointerException 	at org.jabref/org.jabref.gui.search.GlobalSearchBar.lambda$new$10(Unknown Source) 	at java.base/java.util.Optional.ifPresent(Unknown Source) 	at org.jabref/org.jabref.gui.search.GlobalSearchBar.lambda$new$11(Unknown Source) 	at org.jabref.merged.module/org.fxmisc.easybind.EasyBind.lambda$subscribe$12(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(Unknown Source) 	at org.jabref.merged.module/javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(Unknown Source) 	at org.jabref.merged.module/javafx.beans.property.ObjectPropertyBase.markInvalid(Unknown Source) 	at org.jabref.merged.module/javafx.beans.property.ObjectPropertyBase.set(Unknown Source) 	at org.jabref.merged.module/javafx.beans.property.ObjectProperty.setValue(Unknown Source) 	at org.jabref/org.jabref.gui.StateManager.setSearchQuery(Unknown Source) 	at org.jabref/org.jabref.gui.search.GlobalSearchBar.performSearch(Unknown Source) 	at org.jabref.merged.module/org.reactfx.util.FxTimer.lambda$restart$0(Unknown Source) 	at org.jabref.merged.module/com.sun.scenario.animation.shared.TimelineClipCore.visitKeyFrame(Unknown Source) 	at org.jabref.merged.module/com.sun.scenario.animation.shared.TimelineClipCore.playTo(Unknown Source) 	at org.jabref.merged.module/javafx.animation.Timeline.doPlayTo(Unknown Source) 	at org.jabref.merged.module/javafx.animation.AnimationAccessorImpl.playTo(Unknown Source) 	at org.jabref.merged.module/com.sun.scenario.animation.shared.SingleLoopClipEnvelope.timePulse(Unknown Source) 	at org.jabref.merged.module/javafx.animation.Animation.doTimePulse(Unknown Source) 	at org.jabref.merged.module/javafx.animation.Animation$1.lambda$timePulse$0(Unknown Source) 	at java.base/java.security.AccessController.doPrivileged(Unknown Source) 	at org.jabref.merged.module/javafx.animation.Animation$1.timePulse(Unknown Source) 	at org.jabref.merged.module/com.sun.scenario.animation.AbstractMasterTimer.timePulseImpl(Unknown Source) 	at org.jabref.merged.module/com.sun.scenario.animation.AbstractMasterTimer$MainLoop.run(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.pulse(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.pulse(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.pulseFromQueue(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.lambda$runToolkit$11(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication.enterNestedEventLoopImpl(Native Method) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication._enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.Application.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.EventLoop.enter(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/javafx.stage.Stage.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.HeavyweightDialog.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.Dialog.showAndWait(Unknown Source) 	at org.jabref/org.jabref.gui.JabRefDialogService.showErrorDialogAndWait(Unknown Source) 	at org.jabref/org.jabref.FallbackExceptionHandler.lambda$uncaughtException$0(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(Unknown Source) 	at java.base/java.security.AccessController.doPrivileged(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication.enterNestedEventLoopImpl(Native Method) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication._enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.Application.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.EventLoop.enter(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/javafx.stage.Stage.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.HeavyweightDialog.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.Dialog.showAndWait(Unknown Source) 	at org.jabref/org.jabref.gui.JabRefDialogService.showErrorDialogAndWait(Unknown Source) 	at org.jabref/org.jabref.FallbackExceptionHandler.lambda$uncaughtException$0(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(Unknown Source) 	at java.base/java.security.AccessController.doPrivileged(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication.enterNestedEventLoopImpl(Native Method) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication._enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.Application.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.EventLoop.enter(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/javafx.stage.Stage.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.HeavyweightDialog.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.Dialog.showAndWait(Unknown Source) 	at org.jabref/org.jabref.gui.JabRefDialogService.showErrorDialogAndWait(Unknown Source) 	at org.jabref/org.jabref.FallbackExceptionHandler.lambda$uncaughtException$0(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(Unknown Source) 	at java.base/java.security.AccessController.doPrivileged(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(Unknown Source) 	at java.base/java.lang.Thread.run(Unknown Source)  ``` || Seems like you still have an old version from yesterday. This is fixed in todays version.  || I hope so!  The version of 10 Feb isnt downloadable yet.  Ill report back when Ive tried it. || @wujastyk  Unfortunately we currently have no space left on our build server. However  you can download a version from here https://github.com/JabRef/jabref/actions/runs/37249397  || 
5923,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Disable search when no library is opened and Fix exception when getSearchResultSize returned null  I found this wile trying to reproduce  Hopefully Fixes #5897 and fixes #5821  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. JabRef 5.0-beta.409--2020-02-09--6a9c915 Linux 5.3.0-28-generic amd64  Java 13.0.2  1. close all libraries 2. type abc in search box 3. multiple "uncaught exception" error messages pop up.  ![image](https://user-images.githubusercontent.com/762246/74193544-bfd9cb80-4c14-11ea-894b-631971afb17c.png)  ``` java.lang.NullPointerException 	at org.jabref/org.jabref.gui.search.GlobalSearchBar.lambda$new$10(Unknown Source) 	at java.base/java.util.Optional.ifPresent(Unknown Source) 	at org.jabref/org.jabref.gui.search.GlobalSearchBar.lambda$new$11(Unknown Source) 	at org.jabref.merged.module/org.fxmisc.easybind.EasyBind.lambda$subscribe$12(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(Unknown Source) 	at org.jabref.merged.module/javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(Unknown Source) 	at org.jabref.merged.module/javafx.beans.property.ObjectPropertyBase.markInvalid(Unknown Source) 	at org.jabref.merged.module/javafx.beans.property.ObjectPropertyBase.set(Unknown Source) 	at org.jabref.merged.module/javafx.beans.property.ObjectProperty.setValue(Unknown Source) 	at org.jabref/org.jabref.gui.StateManager.setSearchQuery(Unknown Source) 	at org.jabref/org.jabref.gui.search.GlobalSearchBar.performSearch(Unknown Source) 	at org.jabref.merged.module/org.reactfx.util.FxTimer.lambda$restart$0(Unknown Source) 	at org.jabref.merged.module/com.sun.scenario.animation.shared.TimelineClipCore.visitKeyFrame(Unknown Source) 	at org.jabref.merged.module/com.sun.scenario.animation.shared.TimelineClipCore.playTo(Unknown Source) 	at org.jabref.merged.module/javafx.animation.Timeline.doPlayTo(Unknown Source) 	at org.jabref.merged.module/javafx.animation.AnimationAccessorImpl.playTo(Unknown Source) 	at org.jabref.merged.module/com.sun.scenario.animation.shared.SingleLoopClipEnvelope.timePulse(Unknown Source) 	at org.jabref.merged.module/javafx.animation.Animation.doTimePulse(Unknown Source) 	at org.jabref.merged.module/javafx.animation.Animation$1.lambda$timePulse$0(Unknown Source) 	at java.base/java.security.AccessController.doPrivileged(Unknown Source) 	at org.jabref.merged.module/javafx.animation.Animation$1.timePulse(Unknown Source) 	at org.jabref.merged.module/com.sun.scenario.animation.AbstractMasterTimer.timePulseImpl(Unknown Source) 	at org.jabref.merged.module/com.sun.scenario.animation.AbstractMasterTimer$MainLoop.run(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.pulse(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.pulse(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.pulseFromQueue(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.lambda$runToolkit$11(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication.enterNestedEventLoopImpl(Native Method) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication._enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.Application.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.EventLoop.enter(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/javafx.stage.Stage.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.HeavyweightDialog.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.Dialog.showAndWait(Unknown Source) 	at org.jabref/org.jabref.gui.JabRefDialogService.showErrorDialogAndWait(Unknown Source) 	at org.jabref/org.jabref.FallbackExceptionHandler.lambda$uncaughtException$0(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(Unknown Source) 	at java.base/java.security.AccessController.doPrivileged(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication.enterNestedEventLoopImpl(Native Method) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication._enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.Application.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.EventLoop.enter(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/javafx.stage.Stage.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.HeavyweightDialog.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.Dialog.showAndWait(Unknown Source) 	at org.jabref/org.jabref.gui.JabRefDialogService.showErrorDialogAndWait(Unknown Source) 	at org.jabref/org.jabref.FallbackExceptionHandler.lambda$uncaughtException$0(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(Unknown Source) 	at java.base/java.security.AccessController.doPrivileged(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication.enterNestedEventLoopImpl(Native Method) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication._enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.Application.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.EventLoop.enter(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(Unknown Source) 	at org.jabref.merged.module/javafx.stage.Stage.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.HeavyweightDialog.showAndWait(Unknown Source) 	at org.jabref.merged.module/javafx.scene.control.Dialog.showAndWait(Unknown Source) 	at org.jabref/org.jabref.gui.JabRefDialogService.showErrorDialogAndWait(Unknown Source) 	at org.jabref/org.jabref.FallbackExceptionHandler.lambda$uncaughtException$0(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(Unknown Source) 	at java.base/java.security.AccessController.doPrivileged(Unknown Source) 	at org.jabref.merged.module/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method) 	at org.jabref.merged.module/com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(Unknown Source) 	at java.base/java.lang.Thread.run(Unknown Source)  ``` || Seems like you still have an old version from yesterday. This is fixed in todays version.  || I hope so!  The version of 10 Feb isnt downloadable yet.  Ill report back when Ive tried it. || @wujastyk  Unfortunately we currently have no space left on our build server. However  you can download a version from here https://github.com/JabRef/jabref/actions/runs/37249397  || 
5925,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix maintable not updated when changing entry type Fixes #5906  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
5938,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix not escaping special characters in search pattern fixes #5892  The error when searching for "DOI 10.1210/endrev/bnz006" (or any phrases containing special javascript regular expression characters) is caused by not escaping special characters before passing search  pattern to javascript script used for highlighting words in preview view.  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. > A test would be great...  Ok  I will write a test. || I think this is really great as well! Thank you! ||
5940,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Fix #5939 by creating a mutable list in OpenDatabaseAction This PR fixes the problem when opening a library from the recent libraries menu. fixes #5939   - [x] Change in CHANGELOG.md described (if applicable) - [x] Manually tested changed features in running JabRef (always required) Thanks again for your contribution! 👍  || We tried it locally. Did not fix the issue. We will switch to `List.of()`. ||
5945,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Try to fix linux pdf opening again Fixes #5942  and fixes probably #5882  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Could you please try again with the newest version from this branch? I forgot one method.  ||
5945,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Try to fix linux pdf opening again Fixes #5942  and fixes probably #5882  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Could you please try again with the newest version from this branch? I forgot one method.  ||
5955,1,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,1,0,Added MenuButtons to IntegrityCheckDialog This PR adds MenuButtons to the IntegrityCheckDialog  because there was a complaint  that the filters were not very easy to find. fixes #5275   I did not implement the option to make the current filters in the table persistent  as the use case for this is extremly limited (sorry)  controlsfx does not support this and the workaround would be huge.  I do not think  that documentation is necessary for this  as it should be very obvious to understand.  ![integrity_without_panel](https://user-images.githubusercontent.com/50491877/74672662-12376100-51ae-11ea-873c-2021f38466d2.png) ![integrity_with_panel](https://user-images.githubusercontent.com/50491877/74672664-14012480-51ae-11ea-808d-cb8ba79e8ae4.png)    - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Looks good! ||
5969,1,0,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,Refactored subtile changes to optics of library properties fixes #5604  Some subtile changes (added a scrollpane) to the library properties dialog (and to SaveOrderConfigDisplay and to FieldFormatterCleanupsPanel). FieldFormatterCleanupsPanel needs to be refactored in the future to mvvm-pattern  but this PR is just a quick fix for the issue  so the library properties are somewhat usable on scaled displays.  ![librarypropsup](https://user-images.githubusercontent.com/50491877/74947122-aeee3e80-53fa-11ea-83b5-90a4934e2e15.png) ![librarypropsdown](https://user-images.githubusercontent.com/50491877/74947132-b1509880-53fa-11ea-84b1-40e0f26bd8c5.png)  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
5983,1,0,0,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fixed loosing group if the most bottom one in list is dragged on itself fixes #5968   - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
6018,1,0,0,1,0,1,1,1,0,0,1,0,1,0,1,1,0,0,1,Add ShortScience integration <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> This PR introduces a simple integration towards ShortScience as tracked by #6015. The integration is in the form of an additional context menu item called *Search ShortScience* which  if clicked  will open the users web browser to the search results for the selected entrys title.  I experimented with generating a direct link to the ShortScience page for the article instead of linking to the search results  but the URI scheme is not entirely consistent nor predictable at ShortScience so it was deemed more effort than it was worth.   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. - [x] Port right click menu to new style as in #5958   ![Example](https://user-images.githubusercontent.com/23704106/75283908-0255f780-5814-11ea-8c2b-2d4f02b33ea9.png)  There are a few things Im uncertain about implementation-wise. I implemented this in what I believe is the same way as the other menu actions  which is through the use of the deprecated class OldCommandWrapper. Im not sure if this is the best place to put the functionality  nor if the deprecated class is still the correct approach. Im also still working on a testing strategy. Hi @stevensdavid   thank you for your work and your PR. You are right  BaseAction is deprecated and i already prepared a PR to completly remove the deprecated BaseAction stuff from the RightClickMenu. The future way to implement menu actions is to put the action information in StandardActions and to implement the action as a class extending SimpleCommand. Should be very straight forward. For some hints  please have a look at my PR #5958. If you have questions  just ask me  im happy to help you. || > Hi @stevensdavid   thank you for your work and your PR. You are right  BaseAction is deprecated and i already prepared a PR to completly remove the deprecated BaseAction stuff from the RightClickMenu. > The future way to implement menu actions is to put the action information in StandardActions and to implement the action as a class extending SimpleCommand. Should be very straight forward. For some hints  please have a look at my PR #5958. If you have questions  just ask me  im happy to help you.  Hey @calixtus! It seems I need a few of the changes in API that you implemented in order to use the new style  making it difficult to port the feature to the new style before your PR is merged. Specifically  Id need the new signature for `RightClickMenu.create` that you implemented in d1d74c7d4d12c81b1b324fc4f973f2f437b2bb83 as it includes the StateManager  and the ActionHelper methods you introduced in f664d10470572e00e1f5c91bbc3eec83853abb92. These commits do not seem particularly easy to cherry-pick without getting your other refactoring work  and Im not entirely sure if it is considered good practice to cherry-pick partial commits as I havent done that before 😅  || Yes maybe its better to wait until after the release of 5.0. Its better not to introduce new features right now  but to stabilize the current branch so we can release in some days and to put this feature into 5.1. || @stevensdavid You can base at @calixtuss branch if that works out.   Or just merge his branch into your branch.  || I ended up merging @calixtuss branch into this one  so the diff looks larger than it actually is. As such  this shouldnt be merged before #5958.  The code has been rewritten to use the new style  and I have broken out the link generation into a separate method which now has a few test cases.   Should the documentation and changelog be updated as part of this?  EDIT: Code style errors seem to be inherited from the merge  and are not from new changes. || I changed the base branch to `replace_deprecated` to enable reviewing the diff to https://github.com/JabRef/jabref/pull/5958.  Longer explanation: I mirrored the current state of https://github.com/JabRef/jabref/pull/5958 into the branch `replace_deprecated` by locally cloning @calixtuss fork (`git remote add calixtus ...`  `git fetch calixtus`)  checking out the branch and pushing it to here (`origin`). || @koppor Thank you for the feedback! Ive pushed new commits that should resolve your comments.  ||
6031,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Translation for SpecialField names in preferences Names of special fields were not translated in preferences. fixes #5701   - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
6054,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix warning display issue for entering a title made of two words <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->    Hello! This PR fixes the issue that a warning is displayed when users enter a title made of two sentences in the entry editor. fixes #5832   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Hi @koppor  thank you for your review! I have made changes to the code. I found that there is an existing test  which is testTitleChecks() in IntegrityCheckTest.java  for this functionality. So I added test cases for the title with delimiters there. Please let me know if there is anything else I need to take care of. Happy to make a contribution. || @eetian We are in "nitpicking" mode 😇. It might cost more time to refine the code. To provide some background: The JabRef team decided to improve the code quality. Thus  we aim for all code being a model for Java coders to learn how things work. See https://devdocs.jabref.org/development-strategy for details. Thus  we kindly ask you to include our feedback. Please do not hesitate to contact us in case you have any question. || # [Codecov](https://codecov.io/gh/JabRef/jabref/pull/6054?srcpr&elh1) Report > Merging [#6054](https://codecov.io/gh/JabRef/jabref/pull/6054?srcpr&eldesc) into [master](https://codecov.io/gh/JabRef/jabref/commit/1a36304b5ed8f76594c89e4db91c46a267a73efa?srcpr&eldesc) will **increase** coverage by `0.01%`. > The diff coverage is `100%`.  [![Impacted file tree graph](https://codecov.io/gh/JabRef/jabref/pull/6054/graphs/tree.svg?width650&tokenGoCYT97xQP&height150&srcpr)](https://codecov.io/gh/JabRef/jabref/pull/6054?srcpr&eltree)  ```diff @@             Coverage Diff              @@ ##             master    #6054      +/-   ##  + Coverage     41.54%   41.55%   +0.01%      - Complexity     6874     6880       +6         Files          1092     1090       -2        Lines         46341    46234     -107        Branches       5562     5558       -4       - Hits          19251    19212      -39      + Misses        25642    25574      -68        Partials       1448     1448 ```   | [Impacted Files](https://codecov.io/gh/JabRef/jabref/pull/6054?srcpr&eltree) | Coverage Δ | Complexity Δ | | |---|---|---|---| | [.../java/org/jabref/logic/integrity/TitleChecker.java](https://codecov.io/gh/JabRef/jabref/pull/6054/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL2ludGVncml0eS9UaXRsZUNoZWNrZXIuamF2YQ) | `91.66% <100%> (+0.75%)` | `8 <0> (+1)` | :arrow_up: | | [...jabref/logic/shared/event/ConnectionLostEvent.java](https://codecov.io/gh/JabRef/jabref/pull/6054/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3NoYXJlZC9ldmVudC9Db25uZWN0aW9uTG9zdEV2ZW50LmphdmE) | `0% <0%> (-75%)` | `0% <0%> (-1%)` | | | [...va/org/jabref/logic/importer/FulltextFetchers.java](https://codecov.io/gh/JabRef/jabref/pull/6054/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL2ltcG9ydGVyL0Z1bGx0ZXh0RmV0Y2hlcnMuamF2YQ) | `66.66% <0%> (-6.25%)` | `14% <0%> (+1%)` | | | [...java/org/jabref/preferences/JabRefPreferences.java](https://codecov.io/gh/JabRef/jabref/pull/6054/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL3ByZWZlcmVuY2VzL0phYlJlZlByZWZlcmVuY2VzLmphdmE) | `25.58% <0%> (-2.25%)` | `16% <0%> (ø)` | | | [...java/org/jabref/logic/shared/DBMSSynchronizer.java](https://codecov.io/gh/JabRef/jabref/pull/6054/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3NoYXJlZC9EQk1TU3luY2hyb25pemVyLmphdmE) | `70.7% <0%> (-1.92%)` | `39% <0%> (-2%)` | | | [...in/java/org/jabref/logic/shared/DBMSProcessor.java](https://codecov.io/gh/JabRef/jabref/pull/6054/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3NoYXJlZC9EQk1TUHJvY2Vzc29yLmphdmE) | `82.48% <0%> (-0.57%)` | `46% <0%> (ø)` | | | [.../java/org/jabref/logic/importer/fetcher/ArXiv.java](https://codecov.io/gh/JabRef/jabref/pull/6054/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL2ltcG9ydGVyL2ZldGNoZXIvQXJYaXYuamF2YQ) | `86.98% <0%> (-0.52%)` | `30% <0%> (ø)` | | | [...abref/gui/importer/actions/OpenDatabaseAction.java](https://codecov.io/gh/JabRef/jabref/pull/6054/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9pbXBvcnRlci9hY3Rpb25zL09wZW5EYXRhYmFzZUFjdGlvbi5qYXZh) | `0% <0%> (ø)` | `0% <0%> (ø)` | :arrow_down: | | [.../main/java/org/jabref/gui/maintable/MainTable.java](https://codecov.io/gh/JabRef/jabref/pull/6054/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9tYWludGFibGUvTWFpblRhYmxlLmphdmE) | `0% <0%> (ø)` | `0% <0%> (ø)` | :arrow_down: | | [...n/java/org/jabref/gui/entryeditor/EntryEditor.java](https://codecov.io/gh/JabRef/jabref/pull/6054/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9lbnRyeWVkaXRvci9FbnRyeUVkaXRvci5qYXZh) | `0% <0%> (ø)` | `0% <0%> (ø)` | :arrow_down: | | ... and [17 more](https://codecov.io/gh/JabRef/jabref/pull/6054/diff?srcpr&eltree-more) | |  ------  [Continue to review full report at Codecov](https://codecov.io/gh/JabRef/jabref/pull/6054?srcpr&elcontinue). > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta) > `Δ  absolute <relative> (impact)`  `ø  not affected`  `?  missing data` > Powered by [Codecov](https://codecov.io/gh/JabRef/jabref/pull/6054?srcpr&elfooter). Last update [1a36304...7d95ba7](https://codecov.io/gh/JabRef/jabref/pull/6054?srcpr&ellastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).  || @eetian Thank you for keeping working on it. Good to go now! || 
6110,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,Groups: Searching for keywords field mandatory value not checked Closes #6108  Closes #6066   - [x] Alert dialog triggered ![image](https://user-images.githubusercontent.com/2141507/76635849-5ec15280-6548-11ea-93d6-87187f759a17.png)  - [x] Active Info icons: ![image](https://user-images.githubusercontent.com/2141507/76633553-33893400-6545-11ea-8bc9-28e7a6b3ce38.png)  - [x] Inactive info icons ![image](https://user-images.githubusercontent.com/2141507/76633606-456ad700-6545-11ea-81fc-87f429984a87.png)  - [x] Dialog should not close when error dialog is discarded! @calixtus Not sure if we have this problem in more dialogs. The `setResultConverter` method will always close the dialog. We want to go abck to the dialog if errors are displayed as alert dialogs   however. We need to use `addEventFilter` for this I guess (am no expert in JavaFX @tobiasdiez) See Dialog validation section at https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/Dialog.html In other dialogs we do not show any error message  instead we disable the ok buton until all required fields are set  The dialog is duplicate. See for example the SharedDatabaseLogin Dialog  || @Siedlerchr I really like that metaphor. Think  its also in place in Angular apps ^^. Refs https://github.com/koppor/jabref/issues/410 (which states that we should document it). || I agree. But thats not what I fixed and what the PR is about  -)  || I agree that the OK-button should be disabled in case there are validation errors. The code for this seems to be in place as well  so I guess there is a bug somewhere. @Siedlerchr @calixtus do you have an idea where? || I did take a look at the code and tried a little bit around  but I must confess  I do not ever reach the alert dialog. The button disableProperty is with this PR now completly and correctly "bound" to the validation status and Im unable to click the button. So... huh? Also I agree to the button-disabled-metaphor. || So simply remove the dialog and all is done. || Disabled button should work  except for when the dialog is opened at first. The checks only come into place when one has entered data in the mandatory fields. We need to trigger the validation after initialization to change this. || Can we track the additional changes in a follow up issue? Id rather limit this PR to the fixes  if possible. || 
6110,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,Groups: Searching for keywords field mandatory value not checked Closes #6108  Closes #6066   - [x] Alert dialog triggered ![image](https://user-images.githubusercontent.com/2141507/76635849-5ec15280-6548-11ea-93d6-87187f759a17.png)  - [x] Active Info icons: ![image](https://user-images.githubusercontent.com/2141507/76633553-33893400-6545-11ea-8bc9-28e7a6b3ce38.png)  - [x] Inactive info icons ![image](https://user-images.githubusercontent.com/2141507/76633606-456ad700-6545-11ea-81fc-87f429984a87.png)  - [x] Dialog should not close when error dialog is discarded! @calixtus Not sure if we have this problem in more dialogs. The `setResultConverter` method will always close the dialog. We want to go abck to the dialog if errors are displayed as alert dialogs   however. We need to use `addEventFilter` for this I guess (am no expert in JavaFX @tobiasdiez) See Dialog validation section at https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/Dialog.html In other dialogs we do not show any error message  instead we disable the ok buton until all required fields are set  The dialog is duplicate. See for example the SharedDatabaseLogin Dialog  || @Siedlerchr I really like that metaphor. Think  its also in place in Angular apps ^^. Refs https://github.com/koppor/jabref/issues/410 (which states that we should document it). || I agree. But thats not what I fixed and what the PR is about  -)  || I agree that the OK-button should be disabled in case there are validation errors. The code for this seems to be in place as well  so I guess there is a bug somewhere. @Siedlerchr @calixtus do you have an idea where? || I did take a look at the code and tried a little bit around  but I must confess  I do not ever reach the alert dialog. The button disableProperty is with this PR now completly and correctly "bound" to the validation status and Im unable to click the button. So... huh? Also I agree to the button-disabled-metaphor. || So simply remove the dialog and all is done. || Disabled button should work  except for when the dialog is opened at first. The checks only come into place when one has entered data in the mandatory fields. We need to trigger the validation after initialization to change this. || Can we track the additional changes in a follow up issue? Id rather limit this PR to the fixes  if possible. || 
6121,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Icons from Material design icons not recognized Fixes #6078 Related #5245  @JabRef/developers  2b760cddf53cceae54fd149774226461f5290daa caused this issue. https://github.com/JabRef/jabref/issues/5245 Obviously only icons contained inside JabRefIcons are available now.  The question is - do we really want this feature? Not sure if changing the line back to  ```         return Enums.getIfPresent(MaterialDesignIcon.class  iconCode.toUpperCase(Locale.ENGLISH))                     .toJavaUtil()                     .map(icon -> new InternalMaterialDesignIcon(getColor()  icon))  ```  will reintroduce the referenced issue (https://github.com/JabRef/jabref/issues/5245). This feature also only makes sense  if we have a dropdown with all available icons inside the new/edit group dialog IMHO.  ![image](https://user-images.githubusercontent.com/2141507/76682572-845c6380-65fd-11ea-9384-8b105d66bd76.png) # [Codecov](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&elh1) Report > Merging [#6121](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&eldesc) into [master](https://codecov.io/gh/JabRef/jabref/commit/8dd744409158a343f2577d416fbbf7b6027b1371?srcpr&eldesc) will **decrease** coverage by `<.01%`. > The diff coverage is `0%`.  [![Impacted file tree graph](https://codecov.io/gh/JabRef/jabref/pull/6121/graphs/tree.svg?width650&tokenGoCYT97xQP&height150&srcpr)](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&eltree)  ```diff @@             Coverage Diff              @@ ##             master    #6121      +/-   ##  - Coverage     41.55%   41.54%   -0.01%      - Complexity     6878     6879       +1         Files          1090     1090                 Lines         46233    46233                 Branches       5557     5557                - Hits          19211    19208       -3      - Misses        25575    25577       +2      - Partials       1447     1448       +1 ```   | [Impacted Files](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&eltree) | Coverage Δ | Complexity Δ | | |---|---|---|---| | [...java/org/jabref/gui/groups/GroupNodeViewModel.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9ncm91cHMvR3JvdXBOb2RlVmlld01vZGVsLmphdmE) | `61.68% <0%> (ø)` | `23 <0> (ø)` | :arrow_down: | | [...jabref/logic/shared/event/ConnectionLostEvent.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3NoYXJlZC9ldmVudC9Db25uZWN0aW9uTG9zdEV2ZW50LmphdmE) | `0% <0%> (-75%)` | `0% <0%> (-1%)` | | | [...bref/logic/remote/server/RemoteListenerServer.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3JlbW90ZS9zZXJ2ZXIvUmVtb3RlTGlzdGVuZXJTZXJ2ZXIuamF2YQ) | `70.96% <0%> (-6.46%)` | `7% <0%> (ø)` | | | [...a/org/jabref/logic/shared/PostgreSQLProcessor.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3NoYXJlZC9Qb3N0Z3JlU1FMUHJvY2Vzc29yLmphdmE) | `79.59% <0%> (-4.09%)` | `10% <0%> (ø)` | | | [...java/org/jabref/logic/shared/DBMSSynchronizer.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3NoYXJlZC9EQk1TU3luY2hyb25pemVyLmphdmE) | `70.7% <0%> (-1.92%)` | `39% <0%> (-2%)` | | | [...in/java/org/jabref/logic/shared/DBMSProcessor.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3NoYXJlZC9EQk1TUHJvY2Vzc29yLmphdmE) | `82.48% <0%> (-1.7%)` | `46% <0%> (ø)` | | | [...ef/logic/importer/fetcher/AbstractIsbnFetcher.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL2ltcG9ydGVyL2ZldGNoZXIvQWJzdHJhY3RJc2JuRmV0Y2hlci5qYXZh) | `100% <0%> (+11.11%)` | `5% <0%> (+1%)` | :arrow_up: | | [...org/jabref/logic/importer/fetcher/IsbnFetcher.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL2ltcG9ydGVyL2ZldGNoZXIvSXNibkZldGNoZXIuamF2YQ) | `89.47% <0%> (+36.84%)` | `8% <0%> (+1%)` | :arrow_up: | | [.../logic/importer/fetcher/IsbnViaEbookDeFetcher.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL2ltcG9ydGVyL2ZldGNoZXIvSXNiblZpYUVib29rRGVGZXRjaGVyLmphdmE) | `100% <0%> (+41.66%)` | `5% <0%> (+2%)` | :arrow_up: |  ------  [Continue to review full report at Codecov](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&elcontinue). > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta) > `Δ  absolute <relative> (impact)`  `ø  not affected`  `?  missing data` > Powered by [Codecov](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&elfooter). Last update [8dd7444...c29db2e](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&ellastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).  || I doubt this works.  || > I doubt this works.  It does. At least starting from `gradle run`. What are your doubts? || Please test also with `./gradlew jlink` it will build the image locally and you can start the bat. It makes a huge difference if it is packaged together or executed from gradle  || > Please test also with `./gradlew jlink` it will build the image locally and you can start the bat. > It makes a huge difference if it is packaged together or executed from gradle  Works for me /started via JabRef.bat). I can set the group icon. Any other side effects I need to check? || If this works  then other cases should also work.  Have you tested saving your bib file with groups and icon and closing and reopening that bib file then? If this works as well  it will be good to go || > If this works  then other cases should also work. > Have you tested saving your bib file with groups and icon and closing and reopening that bib file then? > If this works as well  it will be good to go  Saving and reopening worked. || Agreed. || Please also add a changelog.  ||
6121,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Icons from Material design icons not recognized Fixes #6078 Related #5245  @JabRef/developers  2b760cddf53cceae54fd149774226461f5290daa caused this issue. https://github.com/JabRef/jabref/issues/5245 Obviously only icons contained inside JabRefIcons are available now.  The question is - do we really want this feature? Not sure if changing the line back to  ```         return Enums.getIfPresent(MaterialDesignIcon.class  iconCode.toUpperCase(Locale.ENGLISH))                     .toJavaUtil()                     .map(icon -> new InternalMaterialDesignIcon(getColor()  icon))  ```  will reintroduce the referenced issue (https://github.com/JabRef/jabref/issues/5245). This feature also only makes sense  if we have a dropdown with all available icons inside the new/edit group dialog IMHO.  ![image](https://user-images.githubusercontent.com/2141507/76682572-845c6380-65fd-11ea-9384-8b105d66bd76.png) # [Codecov](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&elh1) Report > Merging [#6121](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&eldesc) into [master](https://codecov.io/gh/JabRef/jabref/commit/8dd744409158a343f2577d416fbbf7b6027b1371?srcpr&eldesc) will **decrease** coverage by `<.01%`. > The diff coverage is `0%`.  [![Impacted file tree graph](https://codecov.io/gh/JabRef/jabref/pull/6121/graphs/tree.svg?width650&tokenGoCYT97xQP&height150&srcpr)](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&eltree)  ```diff @@             Coverage Diff              @@ ##             master    #6121      +/-   ##  - Coverage     41.55%   41.54%   -0.01%      - Complexity     6878     6879       +1         Files          1090     1090                 Lines         46233    46233                 Branches       5557     5557                - Hits          19211    19208       -3      - Misses        25575    25577       +2      - Partials       1447     1448       +1 ```   | [Impacted Files](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&eltree) | Coverage Δ | Complexity Δ | | |---|---|---|---| | [...java/org/jabref/gui/groups/GroupNodeViewModel.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9ncm91cHMvR3JvdXBOb2RlVmlld01vZGVsLmphdmE) | `61.68% <0%> (ø)` | `23 <0> (ø)` | :arrow_down: | | [...jabref/logic/shared/event/ConnectionLostEvent.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3NoYXJlZC9ldmVudC9Db25uZWN0aW9uTG9zdEV2ZW50LmphdmE) | `0% <0%> (-75%)` | `0% <0%> (-1%)` | | | [...bref/logic/remote/server/RemoteListenerServer.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3JlbW90ZS9zZXJ2ZXIvUmVtb3RlTGlzdGVuZXJTZXJ2ZXIuamF2YQ) | `70.96% <0%> (-6.46%)` | `7% <0%> (ø)` | | | [...a/org/jabref/logic/shared/PostgreSQLProcessor.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3NoYXJlZC9Qb3N0Z3JlU1FMUHJvY2Vzc29yLmphdmE) | `79.59% <0%> (-4.09%)` | `10% <0%> (ø)` | | | [...java/org/jabref/logic/shared/DBMSSynchronizer.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3NoYXJlZC9EQk1TU3luY2hyb25pemVyLmphdmE) | `70.7% <0%> (-1.92%)` | `39% <0%> (-2%)` | | | [...in/java/org/jabref/logic/shared/DBMSProcessor.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL3NoYXJlZC9EQk1TUHJvY2Vzc29yLmphdmE) | `82.48% <0%> (-1.7%)` | `46% <0%> (ø)` | | | [...ef/logic/importer/fetcher/AbstractIsbnFetcher.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL2ltcG9ydGVyL2ZldGNoZXIvQWJzdHJhY3RJc2JuRmV0Y2hlci5qYXZh) | `100% <0%> (+11.11%)` | `5% <0%> (+1%)` | :arrow_up: | | [...org/jabref/logic/importer/fetcher/IsbnFetcher.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL2ltcG9ydGVyL2ZldGNoZXIvSXNibkZldGNoZXIuamF2YQ) | `89.47% <0%> (+36.84%)` | `8% <0%> (+1%)` | :arrow_up: | | [.../logic/importer/fetcher/IsbnViaEbookDeFetcher.java](https://codecov.io/gh/JabRef/jabref/pull/6121/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2xvZ2ljL2ltcG9ydGVyL2ZldGNoZXIvSXNiblZpYUVib29rRGVGZXRjaGVyLmphdmE) | `100% <0%> (+41.66%)` | `5% <0%> (+2%)` | :arrow_up: |  ------  [Continue to review full report at Codecov](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&elcontinue). > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta) > `Δ  absolute <relative> (impact)`  `ø  not affected`  `?  missing data` > Powered by [Codecov](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&elfooter). Last update [8dd7444...c29db2e](https://codecov.io/gh/JabRef/jabref/pull/6121?srcpr&ellastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).  || I doubt this works.  || > I doubt this works.  It does. At least starting from `gradle run`. What are your doubts? || Please test also with `./gradlew jlink` it will build the image locally and you can start the bat. It makes a huge difference if it is packaged together or executed from gradle  || > Please test also with `./gradlew jlink` it will build the image locally and you can start the bat. > It makes a huge difference if it is packaged together or executed from gradle  Works for me /started via JabRef.bat). I can set the group icon. Any other side effects I need to check? || If this works  then other cases should also work.  Have you tested saving your bib file with groups and icon and closing and reopening that bib file then? If this works as well  it will be good to go || > If this works  then other cases should also work. > Have you tested saving your bib file with groups and icon and closing and reopening that bib file then? > If this works as well  it will be good to go  Saving and reopening worked. || Agreed. || Please also add a changelog.  ||
6130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Small improvements in preferences dialog Changes: - Reduces the size of the rarely used import/export/show/reset-preferences buttons to icon buttons to free space to display all of the tabs in the list ( fixes #6038 ) - The font size is now controlled by a Spinner (a text field with arrows on the right side) - The ComboBoxes now have ValueFactories to properly display the real name of the languages  the charsets and the BibDatabaseMode which incorrectly displayed `biblatex` instead of `BibLaTeX`. - Some keyboard events are added to the add-TextFields in NameFormatterTab etc. to make usage more intuitive. - Removed obsolete and non functional `Open PDF` settings  ( closes #5529 )  ![preferences_polish](https://user-images.githubusercontent.com/50491877/76712228-efe62400-6716-11ea-84ad-9b331ea046a4.png)  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. # [Codecov](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&elh1) Report > :exclamation: No coverage uploaded for pull request base (`master@10f5468`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit). > The diff coverage is `4.08%`.  [![Impacted file tree graph](https://codecov.io/gh/JabRef/jabref/pull/6130/graphs/tree.svg?width650&tokenGoCYT97xQP&height150&srcpr)](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&eltree)  ```diff @@            Coverage Diff            @@ ##             master    #6130   +/-   ##    Coverage          ?   41.62%              Complexity        ?     6888               Files             ?     1090              Lines             ?    46233              Branches          ?     5554               Hits              ?    19243              Misses            ?    25547              Partials          ?     1443 ```   | [Impacted Files](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&eltree) | Coverage Δ | Complexity Δ | | |---|---|---|---| | [.../java/org/jabref/gui/desktop/os/NativeDesktop.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9kZXNrdG9wL29zL05hdGl2ZURlc2t0b3AuamF2YQ) | `0% <ø> (ø)` | `0 <0> (?)` | | | [...java/org/jabref/gui/desktop/os/DefaultDesktop.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9kZXNrdG9wL29zL0RlZmF1bHREZXNrdG9wLmphdmE) | `0% <ø> (ø)` | `0 <0> (?)` | | | [src/main/java/org/jabref/gui/desktop/os/Linux.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9kZXNrdG9wL29zL0xpbnV4LmphdmE) | `5.76% <ø> (ø)` | `3 <0> (?)` | | | [...g/jabref/gui/preferences/ExternalTabViewModel.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9wcmVmZXJlbmNlcy9FeHRlcm5hbFRhYlZpZXdNb2RlbC5qYXZh) | `0% <ø> (ø)` | `0 <0> (?)` | | | [.../java/org/jabref/preferences/NewLineSeparator.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL3ByZWZlcmVuY2VzL05ld0xpbmVTZXBhcmF0b3IuamF2YQ) | `0% <ø> (ø)` | `0 <0> (?)` | | | [src/main/java/org/jabref/gui/desktop/os/OSX.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9kZXNrdG9wL29zL09TWC5qYXZh) | `0% <ø> (ø)` | `0 <0> (?)` | | | [...c/main/java/org/jabref/gui/desktop/os/Windows.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9kZXNrdG9wL29zL1dpbmRvd3MuamF2YQ) | `0% <ø> (ø)` | `0 <0> (?)` | | | [...va/org/jabref/gui/preferences/ExternalTabView.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9wcmVmZXJlbmNlcy9FeHRlcm5hbFRhYlZpZXcuamF2YQ) | `0% <ø> (ø)` | `0 <0> (?)` | | | [.../org/jabref/gui/preferences/AppearanceTabView.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9wcmVmZXJlbmNlcy9BcHBlYXJhbmNlVGFiVmlldy5qYXZh) | `0% <0%> (ø)` | `0 <0> (?)` | | | [.../org/jabref/gui/preferences/XmpPrivacyTabView.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9wcmVmZXJlbmNlcy9YbXBQcml2YWN5VGFiVmlldy5qYXZh) | `0% <0%> (ø)` | `0 <0> (?)` | | | ... and [9 more](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree-more) | |  ------  [Continue to review full report at Codecov](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&elcontinue). > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta) > `Δ  absolute <relative> (impact)`  `ø  not affected`  `?  missing data` > Powered by [Codecov](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&elfooter). Last update [10f5468...c015a82](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&ellastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).  || LGTM  just one minor issue: Its called biblatex (all lowercase  not BibLateX We had the confirmation from the official authors  that its should be all lowercase.   || > LGTM  just one minor issue: Its called biblatex (all lowercase  not BibLateX > We had the confirmation from the official authors  that its should be all lowercase.  doh || Could you please fix the checkstyle issue (introduced from another commit  but so we can merge) [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/gui/exporter/SaveAction.java:14:28: { is not followed by whitespace. [WhitespaceAround] ||
6130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Small improvements in preferences dialog Changes: - Reduces the size of the rarely used import/export/show/reset-preferences buttons to icon buttons to free space to display all of the tabs in the list ( fixes #6038 ) - The font size is now controlled by a Spinner (a text field with arrows on the right side) - The ComboBoxes now have ValueFactories to properly display the real name of the languages  the charsets and the BibDatabaseMode which incorrectly displayed `biblatex` instead of `BibLaTeX`. - Some keyboard events are added to the add-TextFields in NameFormatterTab etc. to make usage more intuitive. - Removed obsolete and non functional `Open PDF` settings  ( closes #5529 )  ![preferences_polish](https://user-images.githubusercontent.com/50491877/76712228-efe62400-6716-11ea-84ad-9b331ea046a4.png)  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. # [Codecov](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&elh1) Report > :exclamation: No coverage uploaded for pull request base (`master@10f5468`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit). > The diff coverage is `4.08%`.  [![Impacted file tree graph](https://codecov.io/gh/JabRef/jabref/pull/6130/graphs/tree.svg?width650&tokenGoCYT97xQP&height150&srcpr)](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&eltree)  ```diff @@            Coverage Diff            @@ ##             master    #6130   +/-   ##    Coverage          ?   41.62%              Complexity        ?     6888               Files             ?     1090              Lines             ?    46233              Branches          ?     5554               Hits              ?    19243              Misses            ?    25547              Partials          ?     1443 ```   | [Impacted Files](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&eltree) | Coverage Δ | Complexity Δ | | |---|---|---|---| | [.../java/org/jabref/gui/desktop/os/NativeDesktop.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9kZXNrdG9wL29zL05hdGl2ZURlc2t0b3AuamF2YQ) | `0% <ø> (ø)` | `0 <0> (?)` | | | [...java/org/jabref/gui/desktop/os/DefaultDesktop.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9kZXNrdG9wL29zL0RlZmF1bHREZXNrdG9wLmphdmE) | `0% <ø> (ø)` | `0 <0> (?)` | | | [src/main/java/org/jabref/gui/desktop/os/Linux.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9kZXNrdG9wL29zL0xpbnV4LmphdmE) | `5.76% <ø> (ø)` | `3 <0> (?)` | | | [...g/jabref/gui/preferences/ExternalTabViewModel.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9wcmVmZXJlbmNlcy9FeHRlcm5hbFRhYlZpZXdNb2RlbC5qYXZh) | `0% <ø> (ø)` | `0 <0> (?)` | | | [.../java/org/jabref/preferences/NewLineSeparator.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL3ByZWZlcmVuY2VzL05ld0xpbmVTZXBhcmF0b3IuamF2YQ) | `0% <ø> (ø)` | `0 <0> (?)` | | | [src/main/java/org/jabref/gui/desktop/os/OSX.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9kZXNrdG9wL29zL09TWC5qYXZh) | `0% <ø> (ø)` | `0 <0> (?)` | | | [...c/main/java/org/jabref/gui/desktop/os/Windows.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9kZXNrdG9wL29zL1dpbmRvd3MuamF2YQ) | `0% <ø> (ø)` | `0 <0> (?)` | | | [...va/org/jabref/gui/preferences/ExternalTabView.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9wcmVmZXJlbmNlcy9FeHRlcm5hbFRhYlZpZXcuamF2YQ) | `0% <ø> (ø)` | `0 <0> (?)` | | | [.../org/jabref/gui/preferences/AppearanceTabView.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9wcmVmZXJlbmNlcy9BcHBlYXJhbmNlVGFiVmlldy5qYXZh) | `0% <0%> (ø)` | `0 <0> (?)` | | | [.../org/jabref/gui/preferences/XmpPrivacyTabView.java](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree#diff-c3JjL21haW4vamF2YS9vcmcvamFicmVmL2d1aS9wcmVmZXJlbmNlcy9YbXBQcml2YWN5VGFiVmlldy5qYXZh) | `0% <0%> (ø)` | `0 <0> (?)` | | | ... and [9 more](https://codecov.io/gh/JabRef/jabref/pull/6130/diff?srcpr&eltree-more) | |  ------  [Continue to review full report at Codecov](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&elcontinue). > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta) > `Δ  absolute <relative> (impact)`  `ø  not affected`  `?  missing data` > Powered by [Codecov](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&elfooter). Last update [10f5468...c015a82](https://codecov.io/gh/JabRef/jabref/pull/6130?srcpr&ellastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).  || LGTM  just one minor issue: Its called biblatex (all lowercase  not BibLateX We had the confirmation from the official authors  that its should be all lowercase.   || > LGTM  just one minor issue: Its called biblatex (all lowercase  not BibLateX > We had the confirmation from the official authors  that its should be all lowercase.  doh || Could you please fix the checkstyle issue (introduced from another commit  but so we can merge) [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/gui/exporter/SaveAction.java:14:28: { is not followed by whitespace. [WhitespaceAround] ||
6143,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,Add APS Fetcher (refactored) Fixes #818  part of #2581.   Follow up from #6026  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Failing test is not relevant. I merge now ||
6143,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,Add APS Fetcher (refactored) Fixes #818  part of #2581.   Follow up from #6026  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Failing test is not relevant. I merge now ||
6143,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,Add APS Fetcher (refactored) Fixes #818  part of #2581.   Follow up from #6026  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Failing test is not relevant. I merge now ||
6151,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,ActionHelper to test for present file This PR fixes koppor#430  It took a little bit more refactoring than expected  for it does not only check  if StandardField.FILE has text inside  but if the file is also really present in the file system. There are some design decisions im unsure of: There is no alert about that no file is really present. The menu entry is just disabled  although there is a file symbol in the main table (since StandardField.FILE is not empty). Feedback could be implemented in the files editor in the entry editor as validation. The other thing is that in theory at last  the table does not yet automatically update  if a file is added or removed (so no file is attached). This would require  probably an array of observables to be used as an invalidation alert. Im unsure where to start with that. However  only in theory. Pracitcally the entry is unselected automatically if I change something about the attached files in the entry editor. So nobody would notice  if this would not be implemented.   - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. I added some validation. The regular validation mechanics of controlsfx seem somewhat broken. The icon is shown  but behind every other ui element  so instead I just marked the background of the cells with files that do not exist in the filesystem in the warning color.  ![grafik](https://user-images.githubusercontent.com/50491877/77452088-d1a6b500-6df5-11ea-8ba9-44586dbdd4ae.png)  Theoretically  this one is mergable. ||
6152,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Allow reordering of custom entry types fields Additionally  restore the old Multiline Property and make it configurable.  Current status: - Adding/Removing/Reordering works - Removing standard entry types has no effect (they are always readded if deleted  - Sort fields alphabetically? Would that effect the order? Needs investigation > cannot sort. it influences the save order     Refs #5230 and #4373   Fixes  #6338  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. LinkedHashSet is no solution either  as the standard fields are always inserted first. TODO check it again || @tobiasdiez I currently have the problems that in my HashMap which contains entry types with their corresponding fields  the fields order is not updated if I change them via drag and drop in the main table. This is logical  because the fieldsWithTypes  is not an Observable. Any idea how I can do this with some Binding Foo? Can I add some ObservabeList to that map?  https://github.com/JabRef/jabref/pull/6152/files#diff-8313b29670cb7c9bc50c020e1b2b5f17L80-R101 || Im not sure what exactly you mean. A `Map<EntryType  ObservableList<Field>>` does not work? || I tired it  but its a bit more complicated I think (Or maybe I am thinking too complicated)  I would need to bind a ListProperty to the values Collection of my map and then I would need to change that ListProperty (fieldsForType) content based on my selected entry types. Currently I am doing this more or less manually.   ```     private final ListProperty<FieldViewModel> fieldsForType       private final ObservableList<FieldViewModel> allFieldsForType  FXCollections.observableArrayList(extractor -> new Observable[] {extractor.fieldName()  extractor.fieldType()})         for (BibEntryType entryType : allTypes) {             List<FieldViewModel> fields  entryType.getAllFields().stream().map(bibField -> new FieldViewModel(bibField.getField()  entryType.isRequired(bibField.getField())  bibField.getPriority()  entryType)).collect(Collectors.toList())              typesWithFields.put(entryType  FXCollections.observableArrayList(fields))          }                   this.fieldsForType  new SimpleListProperty<>(allFieldsForType)           EasyBind.subscribe(selectedEntryTypes  type -> {             if (type ! null) {                 allFieldsForType.setAll(typesWithFields.get(type))              }         })  ``` || I guess the following might work: - Create your `Map<EntryType  ObservableList<Fields>> entryTypesWithFields`.  - When the user selects an `entryType` then set `fieldsForType` to `entryTypesWithFields.get(entryType)`. It is important that you set really the observable list and not the contents of the list (i.e. not `setAll`).  By the way  the whole map construction seems to be overly complicated. Why not create a `EntryTypeViewModel` that wraps a given entry type and also contains an observable list of fields. Then you can have a simple observable list of EntryTypeViewModels  which you can bind to the list and then bind the contents of the field list to the observable list of the current entry type. || @tobiasdiez  Sometimes when I go up and down in the dialog and switch between the entry types  suddenly the fields are empty. Any idea what this means or why this occurs?   || The issue with the delete on change is fixed. Now I think I encountered a bug with the EntryTypesManager parsing.  If a custom entry type has only required or optional fields  (e.g. one of the fields array is empty)  a "ghost" bib field is created. Need to invesitgate this   ![grafik](https://user-images.githubusercontent.com/320228/84420329-2b12c900-ac1a-11ea-938b-4c9fb3a55598.png)  || TODO:  1. Modify type article  add field langid 2. Make optional  3. Move after number 4. Save 5. Reopen dialog > langid field is no longer after number  it has moved to a different position  Problem possible: in BibEntryTypesManager  ```    public SortedSet<BibEntryType> getAllTypes() {             SortedSet<BibEntryType> allTypes  new TreeSet<>(customOrModifiedType)              allTypes.addAll(standardTypes)              return allTypes          } ``` || Yeah! I found the bug: Custom Entry types order is now correctly stored and also applied to entry editor!   ![grafik](https://user-images.githubusercontent.com/320228/85931460-d41d1d00-b8c4-11ea-9f22-56a42ee58aad.png)  || 
6152,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Allow reordering of custom entry types fields Additionally  restore the old Multiline Property and make it configurable.  Current status: - Adding/Removing/Reordering works - Removing standard entry types has no effect (they are always readded if deleted  - Sort fields alphabetically? Would that effect the order? Needs investigation > cannot sort. it influences the save order     Refs #5230 and #4373   Fixes  #6338  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [ ] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. LinkedHashSet is no solution either  as the standard fields are always inserted first. TODO check it again || @tobiasdiez I currently have the problems that in my HashMap which contains entry types with their corresponding fields  the fields order is not updated if I change them via drag and drop in the main table. This is logical  because the fieldsWithTypes  is not an Observable. Any idea how I can do this with some Binding Foo? Can I add some ObservabeList to that map?  https://github.com/JabRef/jabref/pull/6152/files#diff-8313b29670cb7c9bc50c020e1b2b5f17L80-R101 || Im not sure what exactly you mean. A `Map<EntryType  ObservableList<Field>>` does not work? || I tired it  but its a bit more complicated I think (Or maybe I am thinking too complicated)  I would need to bind a ListProperty to the values Collection of my map and then I would need to change that ListProperty (fieldsForType) content based on my selected entry types. Currently I am doing this more or less manually.   ```     private final ListProperty<FieldViewModel> fieldsForType       private final ObservableList<FieldViewModel> allFieldsForType  FXCollections.observableArrayList(extractor -> new Observable[] {extractor.fieldName()  extractor.fieldType()})         for (BibEntryType entryType : allTypes) {             List<FieldViewModel> fields  entryType.getAllFields().stream().map(bibField -> new FieldViewModel(bibField.getField()  entryType.isRequired(bibField.getField())  bibField.getPriority()  entryType)).collect(Collectors.toList())              typesWithFields.put(entryType  FXCollections.observableArrayList(fields))          }                   this.fieldsForType  new SimpleListProperty<>(allFieldsForType)           EasyBind.subscribe(selectedEntryTypes  type -> {             if (type ! null) {                 allFieldsForType.setAll(typesWithFields.get(type))              }         })  ``` || I guess the following might work: - Create your `Map<EntryType  ObservableList<Fields>> entryTypesWithFields`.  - When the user selects an `entryType` then set `fieldsForType` to `entryTypesWithFields.get(entryType)`. It is important that you set really the observable list and not the contents of the list (i.e. not `setAll`).  By the way  the whole map construction seems to be overly complicated. Why not create a `EntryTypeViewModel` that wraps a given entry type and also contains an observable list of fields. Then you can have a simple observable list of EntryTypeViewModels  which you can bind to the list and then bind the contents of the field list to the observable list of the current entry type. || @tobiasdiez  Sometimes when I go up and down in the dialog and switch between the entry types  suddenly the fields are empty. Any idea what this means or why this occurs?   || The issue with the delete on change is fixed. Now I think I encountered a bug with the EntryTypesManager parsing.  If a custom entry type has only required or optional fields  (e.g. one of the fields array is empty)  a "ghost" bib field is created. Need to invesitgate this   ![grafik](https://user-images.githubusercontent.com/320228/84420329-2b12c900-ac1a-11ea-938b-4c9fb3a55598.png)  || TODO:  1. Modify type article  add field langid 2. Make optional  3. Move after number 4. Save 5. Reopen dialog > langid field is no longer after number  it has moved to a different position  Problem possible: in BibEntryTypesManager  ```    public SortedSet<BibEntryType> getAllTypes() {             SortedSet<BibEntryType> allTypes  new TreeSet<>(customOrModifiedType)              allTypes.addAll(standardTypes)              return allTypes          } ``` || Yeah! I found the bug: Custom Entry types order is now correctly stored and also applied to entry editor!   ![grafik](https://user-images.githubusercontent.com/320228/85931460-d41d1d00-b8c4-11ea-9f22-56a42ee58aad.png)  || 
6174,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,Fix overwritting downloaded files with same name Added auto-numbering for downloaded file names  which conflict with file names in the current directory. #6068    <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) > Thank you for your contribution. >  > Some nitpick comments inside 😇 >  > Two more things: >  > 1. Please keep `FileNameCleaner` and introduce `FileNameUniqueness`. Reason: There is no shared code between the two utility methods (no [cohesion](https://en.wikipedia.org/wiki/Cohesion_(computer_science)) in the sence of data  only in the sense of the general setting). Small classes make it easier to maintain them. > 2. Can you try to include a check of `Files.mismatch` (see https://stackoverflow.com/a/56680991/873282 for details) at download -> before the same file is linked  just do not link it instead of creating `... (1).pdf`.  I think our problem is that different files are getting downloaded as "default.pdf" (when no BibTeX key exists). If we use `Files.mismatch` (as you mentioned in number 2 above)  since both paths refer to same file path  it would return a `match` and hence not download the other files (which we do not want I guess ?)   || > > 2. Can you try to include a check of `Files.mismatch` (see [stackoverflow.com/a/56680991/873282](https://stackoverflow.com/a/56680991/873282) for details) at download -> before the same file is linked  just do not link it instead of creating `... (1).pdf`. > I think our problem is that different files are getting downloaded as "default.pdf" (when no BibTeX key exists).  Yeah.  > If we use `Files.mismatch` (as you mentioned in number 2 above)  since both paths refer to same file path  it would return a `match` and hence not download the other files (which we do not want I guess ?)   Long solution would be:  1. `default.pdf` exists 2. Download as `default (1).pdf`. 3. Store it in the linked files 4. Check if `default.pdf` equals `default (1).pdf`. 5. If `default.pdf` equals `default (1).pdf` then a) remote `default (1).pdf` from the file system  b) remove `default (1).pdf` from the list of linked files  c) add a notification that the file already exists.  I thought that one can omit step 3. - step 5c is necessary in all cases.  I see that this is not strongly part of your PR  so can be left for future work.  **Submitted as https://github.com/JabRef/jabref/issues/6197** || Comments addressed. There are some code style issues  which I will quickly fix in `master` after merge. || Thank you for having kept up the work. Looking forward to more contributions! || 
6179,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Truncates the link and/or the link description in the column "linked files" in main table  if too long references: #6178  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Thanks for your PR. As this is a display issue  I would prefer if this could be fixed on the GUI side (i.e. no changes in the `logic` package).   One option would be to use the built-in javafx facilities and put the text in a `Labeled` control and use the textOverrun https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/Labeled.html#textOverrunProperty || The first argument in the constructor of the java-fx `MenuItem` requires a String:  https://github.com/JabRef/jabref/blob/efe1b2e246748ec36b5991e6d972d9cac09e355c/src/main/java/org/jabref/gui/maintable/MainTableColumnFactory.java#L401  So unfortunately my hands are tied here. || You can set the text overrun property also on the Menu item: https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/Labeled.html#textOverrunProperty || I could not find out a way how to adapt it using the `MenuItem`. (Both links redirect to the same web page.) Suggestions are welcome. || The `labeled` is part of the `menuitem` and thus cannot be accessed directly from code. However  its possible to use css similar to here: https://stackoverflow.com/questions/44087291/how-to-set-context-menu-width-to-match-choice-box || Not all works as preferred  but at least it is better than without it. `-fx-pref-width` makes the item bigger as needed (but at least it works). `-fx-max-width` and `-fx-text-overrun: center-ellipses` would be preferred but it does not work. `-fx-wrap-text: true` does not work either. Its slightly frustrating  since it should have been a quick fix. Feel free to suggest any solution. || For me adding ``` .menu-item > .label {     -fx-pref-width: 100px  } ``` in `base.css` worked. (This of course has to be further specialized as this changes every menu item). ![image](https://user-images.githubusercontent.com/5037600/79000550-231ca700-7b4d-11ea-9ea4-8dc075e880bb.png)  || `-fx-pref-width` already works the way it is implemented so far. In my opinion 100px is too small  because hardly anything can be read. In the combination with description and url this gets even worse. Furthermore  this `OverrunStyle.CENTER_ELLIPSIS` thingy (or any other customized `OverrunStyle`) does not work as expected. I personally  prefer my initial commit  where both  the description AND the url get centered ellipsis (since this shows the relevant parts in a perfect way) and the context menus width is only as big as needed but limited as well. Thus  this is what I currently use for my local JabRef version.^^ How about moving the truncation code from the first commit to the location where there is now this `-fx-pref-width`? || I agree  `100px` is too small. I just wanted to show you how pref-width + ellipses do work.   Truncating the link and the description separately is indeed a good suggestion. Should be able by putting them in separate labels (with pref width + elipse overflow).  || @systemoperator ping 😇  || The current implementation has the following flaws: - Opening the context menu  where several files/links are associated: Even if the texts are very short  the width of the context menu has the defined max. width. `-fx-max-width` does not work at all  so `-fx-pref-width` has been used  but it always sets the context menu to the defined max. width (and wrapping the text does not work either).   - Preference: The context menu should only be as big as needed (otherwise its irritating and disturbing)  I have tried to fix it  but I did not succeed. It seems to be a bug. - If the text in the context menu exceeds the defined max. width  then it currently gets truncated at the end of the text with (right) ellipses ("...")  even though I have declared  that centered ellipses (`-fx-text-overrun: center-ellipses`) should be used. Probably  this is another bug.   - Preference:     - Centered ellipses should be shown:       - `Descriptive text of the file (.../dfdfdf/asdas/file.html)`     - If this works  another improvement would be  using centered ellipses for both the descriptive text and for the path/link:       - `Descriptive ... file (https://www.yzd/.../file.html)`  My initial commit truncated the text itself and added centered ellipses  which would eliminate the aforementioned second flaw. Furthermore  there was no need to define a max width  since the text was truncated and thus also the context menu itself did not exceed a specific width and was only as wide as required by the text. As a result it would have eliminated all flaws mentioned above.  Considering all the issues concerning the java-fx components  I would tend to a solution which simply truncates the texts itself (as already suggested in earlier comments above). This is  what I currently use for my local JabRef instance. || Okay  youve convinced me. Its a bit unfortunate that there is no css-based fix  because I really think that truncating should be handled by the JavaFX controls. But well  if its not possible then yeah...  So Im fine with changing the display text itself as it was done in one of your earliest commits. Please add a helper method to `ControlHelper` https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/util/ControlHelper.java that does the actually truncation and can be reused. A bit similar to https://github.com/openjdk/jfx/blob/7b0619004af2e2d1b1a32084ef92ff5cd3880900/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/skin/Utils.java#L218 which might also be helpful for the implementation. Thanks! || @tobiasdiez What do you think about it? || Merging now. Thank you very much. || 
6184,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Include "Append" functionality in the "Import Entries Dialog" Needs testing. @stefan-kolb maybe? 😇   Fixes #6049.  Co-authored-by: Christoph <siedlerkiller@gmail.com> Co-authored-by: Tobias Diez <tobiasdiez@gmx.de> Co-authored-by: Carl Christian Snethlage <50491877+calixtus@users.noreply.github.com>  
6203,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Add tooltips for all entry types for #6074 The pull request refers to issue #6074 by @systemoperator .  Change: Add tooltips in the "Select entry type" dialog. You can see the tooltip when hovering a button of an entry type. Remaining: Add those tooltips in the left side of the entry editor and in the main table when clicking "Change entry type".  Fixes #6074   Still havent figured it out yet how to implement the remaining stuff  so any help would be much appreciated! And please let me know what you think of my implementation so far! @dimitra-karadima Right clicking an entry in the main table calls  https://github.com/JabRef/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java#L50  which further calls  https://github.com/JabRef/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java#L57-L58 || @Siedlerchr I have noticed that the entry types `Patent` and `Periodical` as well as the type alias `Electronic` do not exist in `StandardEntryType.java`  but `SuppPeriodical` exists and other type aliases as well. (Acutally all other types  except those three  exist.) Is there a special reason for that? || >  >  > @Siedlerchr I have noticed that the entry types `Patent` and `Periodical` as well as the type alias `Electronic` do not exist in `StandardEntryType.java`  but `SuppPeriodical` exists and other type aliases as well. (Acutally all other types  except those three  exist.) Is there a special reason for that?  Some of those types  e.g. Patent were from the IEETran Package but are now also in the official biblatex package. I do not know if those package is still in use  but I guess it was just historical reasons why they are there. Maybe @koppor  can enlighten us https://ctan.org/pkg/ieeetran?langde  || > @systemoperator check my latest commit! And if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful! I am new to the project and open source  in general  so I am a little bit lost!  @dimitra-karadima You can add the tooltips by adapting the method  https://github.com/JabRef/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java#L33-L42  to something like the following minimal working example:  ```java     public static MenuItem createMenuItem(EntryType type  BibEntry entry  UndoManager undoManager) {         CustomMenuItem menuItem  new CustomMenuItem(new Label(type.getDisplayName()))          menuItem.setOnAction(event -> {             NamedCompound compound  new NamedCompound(Localization.lang("Change entry type"))              entry.setType(type)                  .ifPresent(change -> compound.addEdit(new UndoableChangeType(change)))              undoManager.addEdit(compound)          })          Tooltip tooltip  new Tooltip("descriptional tooltip")          Tooltip.install(menuItem.getContent()  tooltip)          return menuItem      } ```  So you basically replace `MenuItem` with `CustomMenuItem` and configure it as shown above.  The good thing is  that this will set the tooltips for both pending cases: - When changing the entry type in the entry editor. (left side of the entry editor) - When right clicking a reference in the main table and clicking `Change entry type`  :smile: || >  >  > > @systemoperator check my latest commit! And if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful! I am new to the project and open source  in general  so I am a little bit lost! >  > @dimitra-karadima You can add the tooltips by adapting the method >  > https://github.com/JabRef/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java#L33-L42 >  > to something like the following minimal working example: >  > ```java >     public static MenuItem createMenuItem(EntryType type  BibEntry entry  UndoManager undoManager) { >         CustomMenuItem menuItem  new CustomMenuItem(new Label(type.getDisplayName()))  >         menuItem.setOnAction(event -> { >             NamedCompound compound  new NamedCompound(Localization.lang("Change entry type"))  >             entry.setType(type) >                  .ifPresent(change -> compound.addEdit(new UndoableChangeType(change)))  >             undoManager.addEdit(compound)  >         })  >         Tooltip tooltip  new Tooltip("descriptional tooltip")  >         Tooltip.install(menuItem.getContent()  tooltip)  >         return menuItem  >     } > ``` >  > So you basically replace `MenuItem` with `CustomMenuItem` and configure it as shown above. >  > The good thing is  that this will set the tooltips for both pending cases: >  >     * When changing the entry type in the entry editor. (left side of the entry editor) >  >     * When right clicking a reference in the main table and clicking `Change entry type` >  >  > 😄  @systemoperator Thanks for your help! I have added the tooltips and in the Change Entry Type. Please take a look and let me know what you think! || @dimitra-karadima I wanted to merge  but some tests are still failing. Can you please have a look at them. Thanks! || >  >  > @dimitra-karadima I wanted to merge  but some tests are still failing. Can you please have a look at them. Thanks!  @tobiasdiez I tried to solve some issues but it is not very clear to me what to do in order to pass the failing checks. If you could help me in any way would be much appreciated! || @dimitra-karadima Try to merge in the latest upstream/master branch in your branch. Taht shoudl resolve most problems || >  >  > @dimitra-karadima Try to merge in the latest upstream/master branch in your branch. Taht shoudl resolve most problems  @Siedlerchr thanks for your input but unfortunately it didnt work. I do not know what to do because my master branch also fails these tests. Is it possible that I have done any mistake while building the project in Eclipse? || Hm this is odd.  I will test it locally. || @dimitra-karadima  The issue was the checkstyle configuration which has still some issues with jdk14 features (the switch expression for example). I merged your PR and updated the config to exclude your file.  || >  >  > @dimitra-karadima The issue was the checkstyle configuration which has still some issues with jdk14 features (the switch expression for example). I merged your PR and updated the config to exclude your file.  @Siedlerchr thank you so much for your help! || 
6203,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Add tooltips for all entry types for #6074 The pull request refers to issue #6074 by @systemoperator .  Change: Add tooltips in the "Select entry type" dialog. You can see the tooltip when hovering a button of an entry type. Remaining: Add those tooltips in the left side of the entry editor and in the main table when clicking "Change entry type".  Fixes #6074   Still havent figured it out yet how to implement the remaining stuff  so any help would be much appreciated! And please let me know what you think of my implementation so far! @dimitra-karadima Right clicking an entry in the main table calls  https://github.com/JabRef/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java#L50  which further calls  https://github.com/JabRef/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java#L57-L58 || @Siedlerchr I have noticed that the entry types `Patent` and `Periodical` as well as the type alias `Electronic` do not exist in `StandardEntryType.java`  but `SuppPeriodical` exists and other type aliases as well. (Acutally all other types  except those three  exist.) Is there a special reason for that? || >  >  > @Siedlerchr I have noticed that the entry types `Patent` and `Periodical` as well as the type alias `Electronic` do not exist in `StandardEntryType.java`  but `SuppPeriodical` exists and other type aliases as well. (Acutally all other types  except those three  exist.) Is there a special reason for that?  Some of those types  e.g. Patent were from the IEETran Package but are now also in the official biblatex package. I do not know if those package is still in use  but I guess it was just historical reasons why they are there. Maybe @koppor  can enlighten us https://ctan.org/pkg/ieeetran?langde  || > @systemoperator check my latest commit! And if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful! I am new to the project and open source  in general  so I am a little bit lost!  @dimitra-karadima You can add the tooltips by adapting the method  https://github.com/JabRef/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java#L33-L42  to something like the following minimal working example:  ```java     public static MenuItem createMenuItem(EntryType type  BibEntry entry  UndoManager undoManager) {         CustomMenuItem menuItem  new CustomMenuItem(new Label(type.getDisplayName()))          menuItem.setOnAction(event -> {             NamedCompound compound  new NamedCompound(Localization.lang("Change entry type"))              entry.setType(type)                  .ifPresent(change -> compound.addEdit(new UndoableChangeType(change)))              undoManager.addEdit(compound)          })          Tooltip tooltip  new Tooltip("descriptional tooltip")          Tooltip.install(menuItem.getContent()  tooltip)          return menuItem      } ```  So you basically replace `MenuItem` with `CustomMenuItem` and configure it as shown above.  The good thing is  that this will set the tooltips for both pending cases: - When changing the entry type in the entry editor. (left side of the entry editor) - When right clicking a reference in the main table and clicking `Change entry type`  :smile: || >  >  > > @systemoperator check my latest commit! And if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful! I am new to the project and open source  in general  so I am a little bit lost! >  > @dimitra-karadima You can add the tooltips by adapting the method >  > https://github.com/JabRef/jabref/blob/bbf3ab475e1300715cab72620b2c7c05dcce13bf/src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java#L33-L42 >  > to something like the following minimal working example: >  > ```java >     public static MenuItem createMenuItem(EntryType type  BibEntry entry  UndoManager undoManager) { >         CustomMenuItem menuItem  new CustomMenuItem(new Label(type.getDisplayName()))  >         menuItem.setOnAction(event -> { >             NamedCompound compound  new NamedCompound(Localization.lang("Change entry type"))  >             entry.setType(type) >                  .ifPresent(change -> compound.addEdit(new UndoableChangeType(change)))  >             undoManager.addEdit(compound)  >         })  >         Tooltip tooltip  new Tooltip("descriptional tooltip")  >         Tooltip.install(menuItem.getContent()  tooltip)  >         return menuItem  >     } > ``` >  > So you basically replace `MenuItem` with `CustomMenuItem` and configure it as shown above. >  > The good thing is  that this will set the tooltips for both pending cases: >  >     * When changing the entry type in the entry editor. (left side of the entry editor) >  >     * When right clicking a reference in the main table and clicking `Change entry type` >  >  > 😄  @systemoperator Thanks for your help! I have added the tooltips and in the Change Entry Type. Please take a look and let me know what you think! || @dimitra-karadima I wanted to merge  but some tests are still failing. Can you please have a look at them. Thanks! || >  >  > @dimitra-karadima I wanted to merge  but some tests are still failing. Can you please have a look at them. Thanks!  @tobiasdiez I tried to solve some issues but it is not very clear to me what to do in order to pass the failing checks. If you could help me in any way would be much appreciated! || @dimitra-karadima Try to merge in the latest upstream/master branch in your branch. Taht shoudl resolve most problems || >  >  > @dimitra-karadima Try to merge in the latest upstream/master branch in your branch. Taht shoudl resolve most problems  @Siedlerchr thanks for your input but unfortunately it didnt work. I do not know what to do because my master branch also fails these tests. Is it possible that I have done any mistake while building the project in Eclipse? || Hm this is odd.  I will test it locally. || @dimitra-karadima  The issue was the checkstyle configuration which has still some issues with jdk14 features (the switch expression for example). I merged your PR and updated the config to exclude your file.  || >  >  > @dimitra-karadima The issue was the checkstyle configuration which has still some issues with jdk14 features (the switch expression for example). I merged your PR and updated the config to exclude your file.  @Siedlerchr thank you so much for your help! || 
6232,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,1,Allow basic markup syntax custom previews Add MarkdownFormatter using https://github.com/vsch/flexmark-java/ to format markdown. To configure Markdown in custom previews add the "Markdown" formatter. Markdown is enabled by default for the comment field as requested in https://github.com/JabRef/jabref/issues/6194  Fixes #6194   ![image](https://user-images.githubusercontent.com/11259344/78190391-35735280-7474-11ea-9f40-7a2191d082d4.png)  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. Needed to merge `master` to sync the PR with your state @AlexanderGirgis. Refs https://twitter.com/githubstatus/status/1245817118542553089.  Could you fix CheckStyle? ||
6233,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,Add disable/enable calculation of items in group fixes #6042  This is my first Pull Request to a project (new Java developer).   **Add:** disable/enable calculation of items in group  I realized that GroupNodeViewModel.java class uses method "calculateNumberOfMatches" to get number of items. Looks like it uploads full database from disk every time you need to calculate No of items in group. Therefore  if you have 1 thousand groups  it will read the entire database 1 thousand times.   UI changes: - added new checkbox in Preferences/Groups - "Display quantity of items in group"  - added new property DISPLAY_GROUP_QUANTITY to JabRefPreferences.java file  - connected new checkbox with JabRefPreferences.java. I used another preferences as a sample   Logic changes: - I added link to JabRefPreferences in GroupTreeView class.  If user wants to display groups quantity  a panel with quantity will be shown. Quantity is calculated when GroupNodeViewModel class is initialized  so I decided to wrap a panel into an "if" statement.  Tests passed.  Thanks for your contribution and thanks for investigating: >Looks like it uploads full database from disk every time you need to calculate No of items in group. Therefore  if you have 1 thousand groups  it will read the entire database 1 thousand times.  Could you add some details on this problem  so maybe we are able to fix the underlying issue as well || Good day   I was working on this issue: [https://github.com/JabRef/jabref/issues/6042](url) It says JabRef starts slowly if you have a lot of groups. Proposed improvement: disable calculation of items quantity in group.  Kind regards  Gennadiy         || Oh  I was a bit quick with merging. Just saw that the code only influences the display of the hit number. But the cost intensive process is the actual calculation of this number  which still happens.  Could you please open a follow-up PR which makes sure that the calculation is also not done. Thanks. https://github.com/JabRef/jabref/blob/b5d5ed00e075e66fcbd34a1ac0cac37d1ee7d9ce/src/main/java/org/jabref/gui/groups/GroupNodeViewModel.java#L228-L236 || Hi  sorry  my bad. I saw this last week  and forgot today in the morning. Would you mind  if I add PreferencesService to GroupNodeViewModel? `@Inject private PreferencesService preferencesService `  In this case my "if" statement goes from GroupTreeView to GroupNodeViewModel (calculateNumberOfMatches() method). Like this:   ```     private void calculateNumberOfMatches() {         // We calculate the new hit value         // We could be more intelligent and try to figure out the new number of hits based on the entry change         // for example  a previously matched entry gets removed -> hits  hits - 1         if (preferencesService.getDisplayGroupCount()) {             BackgroundTask                     .wrap(() -> groupNode.calculateNumberOfMatches(databaseContext.getDatabase()))                     .onSuccess(hits::setValue)                     .executeWith(taskExecutor)          }     } ``` OK?  || We can also remove CalculateNumberOfMatches() from GroupNodeViewModel constructor  and have 2 options:  Option No. 1 - insert CalculateNumberOfMatches() into getHits() method  before returning a value to GroupTreeView   Options No. 2 - create a public method getHitsFromDatabase() (having CalculateNumberOfMatches inside) and call it from GroupTreeView  before calling getHits(). But only if count of if tems in groups is enabled.   || I think the solution you proposed in https://github.com/JabRef/jabref/pull/6233#issuecomment-609422615 is perfect! || 
6240,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Add simple Unit Tests for #6207 I have split some Unit Tests into different methods with only one assert statement. @koppor  Please let me know what you think about my additions so far!  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>. I would split it even further  create a separate class for each IntegrityCheckTest (e.g. one class for Edition  one for Author  ...) as we also have a different class for each integrity check || Hi @dimitra-karadima   thanks for you effort. Writing unit tests is sometimes boring  but can also be very educational. Thank you very much. Also I wanted to ask you to keep the checkboxes in the PR description  as they are always useful to us to get a quick overview to which extent a PR is done. Even if only one checkbox makes sense in a PR. I took the liberty to readd them by myself. || >  >  > Hi @dimitra-karadima   thanks for you effort. Writing unit tests is sometimes boring  but can also be very educational. Thank you very much. > Also I wanted to ask you to keep the checkboxes in the PR description  as they are always useful to us to get a quick overview to which extent a PR is done. Even if only one checkbox makes sense in a PR. > I took the liberty to readd them by myself.  Thanks for your input! I will keep it in mind for the upcoming PRs! || @dimitra-karadima Did you already found the time to address the comments above? || >  >  > @dimitra-karadima Did you already found the time to address the comments above?  @tobiasdiez Sorry I was a little bit busy but until Sunday I will commit my new changes! || >  >  > @dimitra-karadima Did you already found the time to address the comments above?  @tobiasdiez  what do you think about my latest commit? || Looks got o me. Please resolve the conflicts at `IntegrityCheckTest.java`. || >  >  > Looks got o me. Please resolve the conflicts at `IntegrityCheckTest.java`.  @koppor I fixed it! || @dimitra-karadima Thank you for continuing to work on it. It would be very nice if you looked at our automated tests. The **checkstyle** is failing:  ![grafik](https://user-images.githubusercontent.com/1366654/81454537-def0e680-918c-11ea-974c-9afd11a22bbe.png)  You can avoid the unused imports if you *format* the file. Please ensure that you have the JabRef code style active in IntelliJ. See https://devdocs.jabref.org/getting-into-the-code/guidelines-for-setting-up-a-local-workspace#using-jabrefs-code-style for details. || Had to retrigger the build workflows as they were not executed correctly. Checkstyle still fails:  ![grafik](https://user-images.githubusercontent.com/1366654/81596615-acc9c980-93c4-11ea-991d-6a3e58d62ca4.png)  @dimitra-karadima You can execute the checkstyle checks locally. Either in the IDE or using `gradlew checkstyleMain`. || Thank you for the follow up - I merged it as a single commit into a local branch in this repository. I will address the minor comments for myself there.  ||
6242,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix storing of custom jstyles Fixes #6170 Rename method for internalStyle  <!--  Describe the changes you have made here: what  why  ...  Link issues by using the following pattern: #333. If you fixed a koppor issue  link it with following pattern: [koppor#47](https://github.com/koppor/jabref/issues/47). The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - All items with `[ ]` are still a TODO. - All items checked with `[x]` are done. - Remove items not applicable -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
6248,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Number of items found in ImportEntriesDialog This PR finishes the abandoned PR from CloudFenrir (closes #5740).  ![grafik](https://user-images.githubusercontent.com/50491877/78508642-ab373100-7788-11ea-951e-27c1687aeb80.png)  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for bigger UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not: Issue created at <https://github.com/JabRef/user-documentation/issues>.  
6258,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,Fix inspire fetcher Use application/x-bibtex header Fixes #6229  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6264,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,Showing correct icon on main table linked files column <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6169   Hello  I have fixed the bugs that appear in the icon of the linked file column. I create a draft pull request. If there are breaking any contribution rules  please let me know. If everything is ok  I will create a pull request then.   I have tested to import some format of doc  just a simple test of .docx  .pptx and .pdf format files. ![image](https://user-images.githubusercontent.com/31007740/78802067-f30bc180-79ef-11ea-87bc-d6859b2c77b4.png)  About the source code  I have a question:  I found the wrong icon still shows in the General -> Files list  which only shows pdf icon no matter what format of files attached. Then I found org.jabref.gui.fieldeditors.LinkedFileViewModel#getTypeIcon() which directly indicate the icon to pdf  which seems like the source of the bug. There is a TODO comment above  which seems like this bug has already discovered. Then I went through the issue list and tried to find some relevant thing to this bug (TODO)  but nothing found. I would be happy if you can provide more info about it. Thanks  ^_^ ![image](https://user-images.githubusercontent.com/31007740/78802219-28181400-79f0-11ea-8ca8-c025b8515d8b.png)  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks for your instructions!   Im not very familiar with the code in fact. Really appreciate that you can indicate the source of the problem. I will try again.   For the addition bug (I think)  I will try to work on it and thanks for your tips. || Nice to hear! You can also reuse this PR if you want (just push your updates to the same branch).  || Please be aware that a "LinkedFile" can also be a http url or link. I do not know if this is actually considered in the file type. || Ok  I will reuse this PR next time I want to commit some code.  @Siedlerchr Thanks for your additional tips  which I have not considered yet. I will review the source code carefully. || <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6169 and finish the TODO additional feature  which has mentioned before.  Hello  I have fixed the bugs that appear in the icon of the linked file column and finish the additional feature. I create a draft pull request. If there are breaking any contribution rules  please let me know. If everything is ok  I will create a pull request then.   I have tested to import some format of doc  just a simple test of .docx  .pptx and .pdf format files. ![image](https://user-images.githubusercontent.com/31007740/78802067-f30bc180-79ef-11ea-87bc-d6859b2c77b4.png)  ![image](https://user-images.githubusercontent.com/31007740/79324610-707c8800-7f42-11ea-8153-e9bca13888d5.png)  For the bugs  I found that is coming from the wrong filter. I think it should be a mistake.  For the additional features  I was using the same method in:   https://github.com/JabRef/jabref/blob/8968ccfd5d39d66a080ef0b6c6bbd4e8b0a7d543/src/main/java/org/jabref/gui/maintable/MainTableColumnFactory.java#L412-L416  I think the modification wont do any harm to other code  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.   || I have finished the changing of CHANGELOG.md and the deletion of TODO comments. Thanks for your instructions! @tobiasdiez @Siedlerchr  || Perfect! Thanks again for your contribution and hope to see the next PR from you soon! ||  > Perfect! Thanks again for your contribution and hope to see the next PR from you soon!  Im searching for our next target issue ^_^ || 
6269,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,1,Fix import into current library issuing wrong message This change fixes #6266 in which an erroneous message "import canceled" is displayed when importing into the current library. This fix was accomplished by modifying the parameter of the extends clause of the ImportEntriesDialog class to have a return type of Boolean rather than Void and making setResultConverter return false rather than null.  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Welcome to JabRef and thanks for your contribution!  Can you please describe how your changes fix #6266? I couldnt find the place where the return value of the dialog was used. || Hello  since this issue is a duplicate of #4841 I followed the comments on that issue and implemented [your possible solution](https://github.com/JabRef/jabref/issues/4841#issuecomment-486271379) which resolved the issue. To be honest I do not know exactly how this fixed the issue. || I have pushed a commit fixing the indentation and fixing the problem in the FindUnlinkedFilesDialog. || Thanks again for your contribution! 👍 We hope you are interested in contributing further  ) || Youre welcome! This was fun. I hope to contribute further as well. ||
6272,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,RIS import takes the wrong date and duplicates abstract Fixes #6065   1. Fixed an issue with "duplicate values in Abstract field  2. Checked code and couldnt reproduce second error: "publication date is taken from the Y2 field  not from the correct Y1" See lines 207-220 of `RisImporter.java`. It works fine and importing publication date as expected. Tested on file from @crystalfp (see file  attached to issue).  Kind regards  Gennadiy  - [X] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [X] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. OK  will do. || Thanks! ||
6287,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,UI consistency - BibTexStringEditorDialog rework Follow up to #5737 . Took me only about four and a half months to figure that out. Thanks @tobiasdiez 😜 : Node.lookup did not work  as the textfield node was not present at the time a edit cell was created.  Good news is: I found a way to bypass the restrictions of the private textfield variable  bad news is  its a bit of a hack  but hopefully somewhat leightweight. ~Also changes in tables should now be commited  if the focus is lost.~ Temporarily removed again  since there are deeper issues with the CellFactory.  Im still working on some minor issues. Especially the validation in tablecells is completly dysfunctional.  ![grafik](https://user-images.githubusercontent.com/50491877/79221111-85c7b880-7e55-11ea-87f2-e3a8e7545c86.png)  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Finally most of the dialog works  but I had several problems with listening to the focus lost event. This revealed some deeper issue with the CellFactory I have been investigating the last few days. There was a very strange issue with the cells: Editing worked only on the first item and on the fifth and so on in case a listener is registered with the TableCell. At first I was not able to understand the issue  so I decided to work on the validation in the meantime  since the controlsfx-validation decoration did not work too (the icon was b/w and hidden behind the border of the cell  I chose to highlight the whole cell instead by a pseudo class  as we did in #6151).  This led me finally to understand the direction  where the issue with the first and the fifth row came from. Probably JabRef is reusing nodes again to create TableRows. A picture is better than a thousand words:  ![grafik](https://user-images.githubusercontent.com/50491877/79954224-53354580-847d-11ea-9aad-05731fb34316.png)  There seems to be something wrong with the CellFactory. I tried to understand the issue  but had no success yet  so I could use some advise. Maybe @tobiasdiez can help me here  since he was able to solve a similar problem with the ListCellFactory in #5454 (I tried his solution here. Did I do something wrong?)  || This should now be somewhat ready for review. This should already an improvement to the earlier version of this dialog. Auto edit works etc. But due to a bug in JavaFX commit on focus lost is not working. A workaround I tried produces only more problems. This seems to be a known issue  but there is no progress in fixing it since 2017. ( https://bugs.openjdk.java.net/browse/JDK-8089514 ). So Ill leave it at this point. I believe the dialog is better then before  although it is not perfect. ||
6289,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix XmpExporterTest Hotfix for XmpExporterTest not working.  As soon as PR goes through  I will merge.  Follow up on code-quality will be done at #6237.  The issue was introduced during removing of `@deprected` method in #6283.  
6290,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fix selecting custom export for copy to clipboard with uppercase file ext Fixes #6285  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6315,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,Make wrap fields also visible in entry editor Fixes #4373  I simple reused the FieldFormatterPreferences wrapFieldList. More like a hack. The original multiline property got removed in #5230 A more elegant solution would be to maybe add this to the custom entry types dialog?   <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I would leave a proper implementation for the future. This depends also a bit on #6152   || Ping. How do we proceed here? || I m merge this now and will work on a more clean solution ||
6345,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,Fix Export to clipboard Dialog icon Fixes #6286   ![image](https://user-images.githubusercontent.com/34676841/80279600-1d9f8f00-86ff-11ea-8067-5f7cb22265e4.png)   - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [X] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Could you please also add a changelog entry?  || Entry added ||
6368,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix various Dark theme issues Related issues: #5522   #5699   - [X] Dragndrop text  ![image](https://user-images.githubusercontent.com/34676841/80455105-72275200-892b-11ea-92d5-a8a60c088b20.png)  - [X] Dialogs ![image](https://user-images.githubusercontent.com/34676841/80455194-9f740000-892b-11ea-8beb-06059c51ee7b.png)  ![image](https://user-images.githubusercontent.com/34676841/80455257-b6b2ed80-892b-11ea-843c-a1caa061e781.png)  ![image](https://user-images.githubusercontent.com/34676841/80455353-dcd88d80-892b-11ea-95b6-513272c9530e.png)  The issue is that I do not find the dialogs graphics (e.g. the confirmation image) adequate  so maybe create custom ones for the dark theme (or remove them)?  - [X] Scroll pane The scroll pane is quite visible (at least on my side) so I do not know if that issue has been considered as resolved or not?  ![image](https://user-images.githubusercontent.com/34676841/80455595-596b6c00-892c-11ea-8280-945f800426b8.png)   - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [X] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Changes regarding the scroll bar:  ![image](https://user-images.githubusercontent.com/34676841/80480932-d0672b80-8951-11ea-93e2-dd1c155db64b.png)  On hover: ![image](https://user-images.githubusercontent.com/34676841/80480942-d52bdf80-8951-11ea-9b2c-f4abe967501b.png)  || Perfect. Thank you again! ||
6368,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix various Dark theme issues Related issues: #5522   #5699   - [X] Dragndrop text  ![image](https://user-images.githubusercontent.com/34676841/80455105-72275200-892b-11ea-92d5-a8a60c088b20.png)  - [X] Dialogs ![image](https://user-images.githubusercontent.com/34676841/80455194-9f740000-892b-11ea-8beb-06059c51ee7b.png)  ![image](https://user-images.githubusercontent.com/34676841/80455257-b6b2ed80-892b-11ea-843c-a1caa061e781.png)  ![image](https://user-images.githubusercontent.com/34676841/80455353-dcd88d80-892b-11ea-95b6-513272c9530e.png)  The issue is that I do not find the dialogs graphics (e.g. the confirmation image) adequate  so maybe create custom ones for the dark theme (or remove them)?  - [X] Scroll pane The scroll pane is quite visible (at least on my side) so I do not know if that issue has been considered as resolved or not?  ![image](https://user-images.githubusercontent.com/34676841/80455595-596b6c00-892c-11ea-8280-945f800426b8.png)   - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [X] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Changes regarding the scroll bar:  ![image](https://user-images.githubusercontent.com/34676841/80480932-d0672b80-8951-11ea-93e2-dd1c155db64b.png)  On hover: ![image](https://user-images.githubusercontent.com/34676841/80480942-d52bdf80-8951-11ea-9b2c-f4abe967501b.png)  || Perfect. Thank you again! ||
6371,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Disable the generate button if the ID field is empty Fixes #6370  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [X] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks looks good to me! PS: If you write `Fixes #12345`  in the body (Fixes followed by issue nunber without the code tags)  Github will close the issue automatically on merge || Thanks again for your contribution! ||
6377,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fixes #6357: File directory Bug was introduced in https://github.com/JabRef/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3. Sorry @calixtus for suspecting you 👼.  Also a bit of code cleanup is included. For example  I tried to minimize using strings and favored `Path`s instead.  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. > Sorry @calixtus for suspecting you 👼.  Forgiven and forgotten. You owe me one. 😉  || Thanks for the quick reviews! ||
6379,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fix library sort order get lost This PR fixes #6091  Co-authored-by: Heriniaina Randrianasolo <hjsrandrianasolo@gmail.com> Co-authored-by: Omar Tachour <omar.tchr@hotmail.com> Co-authored-by: Sadji Micipsa <micipsasadji@gmail.com>  This error is due to the absence of an object equality test for the saveInSpecifiedOrder attribute.  So we have  handled this error by correcting the equals function in the SaveOrderConfig class.   - [ ] Change in CHANGELOG.md described (if applicable) - [X] Tests created for changes (if applicable) - [X] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Your changes look good to me  but Im currently trying to understand why this fixes the error. Could you please explain that in a bit more detail?  || @hrandrianasolo I tested your changes and they do not seem to make a difference. So could you please explain it || hi @siedlerchr we apologize for the delay  I am the colleague of @hrandrianasolo  the bug correction works very well on a version which is not up to date. We have well compiled and executed the modified code and we found that the bug is corrected  there I am trying to test it on the new version. Regarding the explanation  the configuration of the export sort order is represented by the class SaveOrderConfig  in LibraryPropertiesDialogView there are two objects of type SaveOrderConfig: → oldSaveOrderConfig: represents the old configuration  → newSaveOrderConfig: represents the new configuration. We compare the equality of its last two to see if a change has been made or not. After several tests  we realized that the equals function in saveOrderConfig did not take into account the equality of all attributes. || Hi @Siedlerchr I inform you that I tried our correction on todays version it also worked !! || Hi  everyone  sorry for the delay. As my colleague explained above regarding the explanation of the fix  I put here screenshots of the bug fix instead of the screen recorder because I cant put it in the comments.  ![Sélection_054](https://user-images.githubusercontent.com/38815271/81502413-1de28180-92de-11ea-8729-6b1af36f1f6f.png) ![Sélection_055](https://user-images.githubusercontent.com/38815271/81502415-1e7b1800-92de-11ea-8669-3dcd8df30402.png) ![Sélection_056](https://user-images.githubusercontent.com/38815271/81502416-1f13ae80-92de-11ea-9413-3482dcf1a92b.png)  || Thanks for the explanation. LGTM  || We merge to get things moving forward.  We will add the `CHANGELOG.md` change by ourselves. ||
6381,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,Added a download checkbox to the import dialog When importing entries  users now have a checkbox available to download files linked via url.  I am not a GUI expert and am wondering whether my fix is appropriate and is considered clean in the MVC-concept. Since the functionality was already implemented in the LinkedFileViewModel  I just created an instance and let it handle the download. Is that ok? If not  copying the code over (and resolving some dependencies) would be the easiest  but also the dirtiest solution to this problem. Is there an appropriate place the code in LinkedFileViewModel could be moved  so it is callable in ImportEntriesViewModel?  Fixes #5662  ![image](https://user-images.githubusercontent.com/10479048/80735472-04d51600-8b11-11ea-9d20-969e8d1dd974.png)  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks for your contribution! Looks good already! I think your approach is the best solution  there are multiple pieces in the code which create the LinkedFileViewModel  so its totally fine.  If you want to learn more about the GUI principle MVVM https://devdocs.jabref.org/readings-on-coding/javafx If you want to make it persistent I think an option in the Preferences is fine. Maybe add to the File tab?  Then you could add it as part of the FilePreferences.   || Please do not add the translations here directly  they are managed via https://crowdin.com/project/jabref and will be overwritten if you modify them here  || Hi. Thanks for the fast reply. So I should add the english file and leave the others be? || > Thanks for your contribution! Looks good already! I think your approach is the best solution  there are multiple pieces in the code which create the LinkedFileViewModel  so its totally fine. >  > If you want to learn more about the GUI principle MVVM https://devdocs.jabref.org/readings-on-coding/javafx > If you want to make it persistent I think an option in the Preferences is fine. Maybe add to the File tab? Then you could add it as part of the FilePreferences.  I think the import tab would be more appropriate  do not you think? || Just add it where it suits best  )  || I went with FilePreferences after all as the other settings of the ImportTab are stored there as well. One last thing that bugs me: after downloading the file  it is put after the online link  so when I click on the entry  it still opens the online link. I think it would make sense to reverse that order  do not you think? I plan on reversing it in any case and giving the user the option (in the preferences only  not on each import) to remove the online link in case a file was successfully downloaded. || @btut  Yes that sounds like a good idea  but I am not sure if  removing the online link at all is a good idea. There might be cases where its useful to keep it. Maybe when you share the bib file and the other user does not have downloaded the PDF yet.  Just put the PDF in front of the link   || @siedlerchr exactly. Thats why I would have that functionality configurable in preferences (and off by default) || Okay  that sounds reasonable.  || I noticed that JabRef was opening the online link by default not because the file was second in the list  but because it was never actually linked to the entry. I did that and now when clicking on the file JabRef asks me if I want to open the link or the file. Now  it makes no more sense to me to have the option to delete the link and I will not implement it. || Ok  I think I am satisfied now.  To sum up: The import dialog now offers a check-box. If the user selects the check-box and the imported entry contains an online link  JabRef will download the file. It is stored in the directory set up by File directory pattern and named according to the Filename format pattern in the import-tab of the preferences dialog. The file entry is prepended to the imported bib-entry. The user can choose to have that check-box selected by default in the import-tab of the preferences dialog.  || > Thanks  codewise looks good to me!  Great!  > Also good that you now take the fileDirPattern and FileNamePattern into account. I think this was also one issue when downloading from the entry editor  Indeed  this bugged me even before I coded this feature. I tried looking for an issue to reference here but could not find any thoug  so maybe this was just me. || @btut  Thanks again for your good work! Looking forward seeing more from you! :) || I think the status item is enough work for another PR. Best thing would probably to finish the logic of this PR first with the most basic progress indicator possible  merge this PR and then create another PR for the status indicator  as it would probably affect way more parts of the code. || Dont misunderstand me  I do like the idea of a generic progress for JabRef  too. Just do one step after another. || Ok  to conclude this PR I suggest the following:  1. PR to fix the entry duplication for the right-click download action 2. PR to remove the dead progress-bar code 3. PR to implement the list of background tasks and its graphical representation in the GUI  I can probably get to the first two today but will need some time for the third. I will create a PR after only a couple of commits so we can start discussing there. I hope you do not mind. || Great  thank you. Go ahead. Splitting this up in multiple PRs makes it just easier to review and later to debug  if there are unknown sideeffects. ||
6386,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix jstyle was invalid with default section at the start Fixes #6303 Adapted the error message to give a hint what is probably missing.  I also noticed a problem in eclipse when executing the L10n test. It was missing an add-opens  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6389,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix underscore character being omitted from file name in Recent Libraries list Fixes: #6383   ![image](https://user-images.githubusercontent.com/34676841/80824286-6b743580-8bde-11ea-8555-20569278d326.png)   - [X] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [X] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Perfect  thanks for the quick follow-up! ||
6402,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix action helper when no library is open This fixes #6430 an exception when opening the View menu with an empty library  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. A fix using `EasyBind.monadic` similar to the other fix does not work? This is I guess the cleanest solution since you do not need to worry about null values anymore. (Its the bindings version of `Optional`) || @tobiasdiez  Thanks for the hint  I refactored it now. Seems to still work. I am not that into those Binding stuff  I am wondering about the  FieldBinding  that seems uncessary now? ||
6406,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Restore some missing keyboard shortcuts Fixes #6403   - [X] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks again for the contribution  would be cool if you could check the other keybindings as well  if there are some missing. à simply search for reference should be the easiest way to find any missing one ||
6407,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,Fixed an issue where a new entry is not shown in the library if a filter/search is active Fixes #6297   I used the existing endSearch method of GlobalSearchbar to clear the search if a new entry is added.  Probably the solution is quite quick and dirty and I am not sure if it fits to your architecture and if I added it at the the right spot in the code.  I would be happy about feedback and advice for the future!    - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? @nsmt09  It would be really cool if you could change this so we can merge your PR. || > @nsmt09 It would be really cool if you could change this so we can merge your PR.  @Siedlerchr Sorry I was really busy the last weeks  totally forgot about that I adjusted the fix like you recommended by injecting the StateManager and using clearSearchQuery ||
6419,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix pasting on mac and linux PR #6313 caused the double pasting issue on MacOS (see #4699)  After the first paste   the Edit Action focusOwner did somehow trigger on Mac and this resulted in executing paste twice.  Fixes #4699. I really do not get where the bug is. Reverting this reopens issue #6293 Especially because  by logic  this should be here. So where is the bug. This should be fixed before 5.1. || @calixtus Whoops  I overlooked the original issue (#6293) for your PR (#6313).  So  we are in some kind of situation  where we have contradicting behavior in two operating systems. That kinda sucks  since we need to differentiate between those now. :/  Last time  this was the fix: https://github.com/JabRef/jabref/pull/5210  but maybe this is when we also introduced #6293?! || I have been thinking this through since the hint of @Siedlerchr. The thing is  the insert command should stand here. Is there another issue with macos  some method fired by macos we did not see yet? || If we do not find out the root cause in mac  we could add an ugly os check for Linux/mac || I already stumbled upon other methods (`JabRefFramein::openAction`  `quit` and `about`) especially for macOS. Did I mention that I do not like apple? 😉  || I agree with @calixtus  the command there makes sense. @LinusDietz can you debug and report which other code triggers the `paste` command on MacOS? || OS: macOS Catalina 10.15.4 (19E287)  Hello everyone  Im currently trying to reproduce the error of non working menu items  or duplicating objects during "paste" command (from Google Scholar and between two .bib libraries) but I cant.  I use IntelliJ Idea to start JabRef. Are there any issues with copy/paste? || @Gena928 Just to double check: You are on latest `master` (https://github.com/JabRef/jabref)? @LinusDietz Maybe you can add a screencast using [Loom](https://www.loom.com/)? || @koppor  yes  Im on latest master. I downloaded last build and pulled changes from github. Both (last build and source code in IntelliJ) show no error. I.e. record inserts without duplicates. || Looks like I see an error. Its very phantom  i.e. I still can not understand what should I do to repeat it. Sometimes I have 2 entries inserted  sometimes only one. Ill continue testing and try to do something about it. || OK  I need some help )). Looks like `paste()` command of `MainTable.java` executed twice: 1) In `EditAction.java`  and this was deleted by current pull request. Now its back again?  Line 78: `frame.getCurrentBasePanel().paste() ` 2) In `MainTable.java` method `setupKeyBindings`   I tracked first case  and it turns out that `EditAction.execute()` called by `JabRefFrame.java`  line 740 (`createMenu()` method). When I commented that line  JabRef inserts only one item per each Ctrl+V command.  So in general  paste command is called: - first time because we have `MainTable.setupKeyBindings`  and it triggered by Ctrl+V  - second time because Ctrl+V command triggers main menu command (Edit>Paste)      || Sorry for our late reply. Thank you for you work in tracing this bug. The deletion of `frame.getCurrentBasePanel().paste() ` was the unsuccessful attempt to fix the issue in this PR.  Would you like to create a fix for this issue following your investigations and to open a new PR  so we can probably close this one and merge yours with the master branch? || @calixtus  I hoped to get some Ideas about solving this issue... OK  if there are no any ideas  I will continue to investigate myself.  We have to disable main menu from listening "Ctrl+V" and keep it listening in `MainTable.java`.  Ill be back with ideas. || Does Ctrl + C or Ctrl + X also call an edit action? Maybe there is some design flaw in a hotkey  that is defined twice by setupkeybindings and the the menu command... || Ctrl+X works in the same way 1) When I press "Command + X" the program deletes 2 (two) entries from current lib  2) Then I move the cursor to another lib and press "Command + V"  3) JabRef inserts last entry to the new library. I.e. one entry just disappears.  It looks like JabRef cut entries twice... Checked from IntelliJ and using last stable version from JabRef.org.      || Why do we need `SetupKeyBindings` method in `MainTable.java`?  When I delete COPY/PASTE/CUT commands from it  the program works fine. this lines: ```                     case PASTE:                         paste()                          event.consume()                          break                      case COPY:                         copy()                          event.consume()                          break                      case CUT:                         cut()                          event.consume()  ``` So  why do we need those commands in `MainTable.java`? || The reason is that you can define custom keybindings (options? manage keybindings) for all commands and so people can use their emacs/vim whatever paste command style. For mac we use the keybindings and simply replace ctrl with meta in the KeybindingRepository Maybe that is part of the problem as well?  ```    public KeyCombination getKeyCombination(KeyBinding bindName) {         String binding  get(bindName.getConstant())          if (OS.OS_X) {             binding  binding.replace("ctrl"  "meta")          }          return KeyCombination.valueOf(binding)      } ``` || @Siedlerchr  if I remove this line of code.  `binding  binding.replace("ctrl"  "meta") ` I just have to use "Command" button on Mac  instead of "Control". A bit more natural for IOS. The problem persists.  What about main menu?  I mean  if you wanna change key combinations  and we remove that lines from `MainTable.java`. Does main menu works with new key combinations for COPY/PASE/CUT?    || I will test this on Windows : Options -> Customize Keybindings: ![grafik](https://user-images.githubusercontent.com/320228/82217214-61f70700-991a-11ea-890e-c3dc1d1f2a30.png) I changed copy/paste to the following (Alt Gr+O and Alt GR+P)  I can copy and paste using those shortcuts.  CTRL+C and CTRL+V then do not work.  I also tested uncommenting the `setupKeyBindings `in MainTable. No difference  no duplicates.  So  now we would need someone on Linux who can test this.  || Linux user wanted! :-) || @LyzardKing  Could you assist in testing this on linux? AssiGg some other shortcuts to copy/paste test if it works And then do a test with commenting out the method setupKeyBindings  in MainTable  || Sure  I can test both stable and the version from builds.jabref.org Its not clear to me what I should be doing.. Ive never had duplicates in pasting... if thats the issue here. || Issue #6293 was about merging in pasting in linux and windows. Lets follow the mac related stuff here. || Will look into this as I have now a mac at hand || Nope  didnt fix it. But I think I found the real reason now || Doesnt work on linux. I hadnt noticed this issue before.  || In the .deb it now does not work even if I press Ctrl+V || I think I have found the root cause now. Pasting to a new library should work now as well. Please try again when the new build is ready. || new build is ready   please try pasting an entry from a library to a new empty library https://builds.jabref.org/pull/6419/merge/ || It works  but I have top copy Ctrl-V multiple times to get it to work if the library is empty. The copy/paste buttons are not active on an empty library On a not empty library it works normally. || Works fine on Windows as well. The menu buttons are disabled on Windows as well. I think they are only activated if you have at least one entry selected. But this is a minor issue. Therefore I would  propose to merge this. || Regarding the disabled/enabled menu items  we track the issues at https://github.com/koppor/jabref/issues/419. || The problem turns out to be a bit complex. We need to find a way to differ if an action was triggered by key or not or to move the keybinding from the maintable to the edit action. Therefore I would prefer to have this PR in as it enables copy pasting vai keyboard commands and we can reopen the other issue regarding the menu commands || 
6423,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,Keep group pane size when resizing window (#6180) <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6180  Hello  I think I have fixed this bug. The main reason for this bug is group pane is resizable with parent(window size). I add one line in **JabRefFrame.java** to set group pane not resizable with parent. Thus it can keep size when resizing window. The following is manual test:  Before resizing window: ![image](https://user-images.githubusercontent.com/55199983/81079463-29225f80-8f22-11ea-9f09-86dfc36e2489.png)  After resizing window: ![image](https://user-images.githubusercontent.com/55199983/81079505-38091200-8f22-11ea-98f9-d914348e957d.png)     <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks! But I do not understand what is the meaning of "it does not make sense to put them together". Put what together?  In fact  keeping group size when resizing window is similar to `project pane` of IntelliJ IDEA. In IDEA  project pane keeps size when resizing window. If it does not keep size  the following behavior will occur: ![image](https://user-images.githubusercontent.com/55199983/81147433-dfcb2200-8fac-11ea-84d1-e59b9c36ad5e.png) Since group pane only need to display group tree  it does not need too much space when resizing window and we need to resize group pane manully if this happens. Thus I think keeping size when resizing window has its utility.  Whats more  in IDEA  it has scroll bar for project pane if the window size is too small. ![image](https://user-images.githubusercontent.com/55199983/81149252-71885e80-8fb0-11ea-892c-fd9f1aab8a0c.png)  I think this behavior can also be involved in JabRef. If this point can be agreed  Id like to create a new issue about this and work for it.  || @Hollyqqqqq   >Thanks! But I do not understand what is the meaning of "it does not make sense to put them together". Put what together?  Sorry for the misunderstanding  I was meaning that you are right  a separation of the group reisze and the parent window resize is better. You could also try to add the scrollbars in your PR as well or create a new one.  || OK  I see. Thank you very much!  || Yes  user can still resize the sidepane manually. And I have added the change log in CHANGELOG.md. || 
6426,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Sorting custom entry fields that contain numerical values @MootezSaaD  and I have worked together and this pull request fixes #6349  We added a new Comparator for numeric cases and now they are sorted as integers and not alphabetically.   - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I think something went wrong with the merge?  || Hi @dimitra-karadima   @koppor and me had a mob session tonight and we took the liberty to use your PR to teach me a bit about git  since there were only some checkstyle-nitpicks with your PR left. We hope you do not mind we finished your work in #6450 . Thank you very much for your work on this. We hope you did enjoy working with JabRef. You are always welcome to contribute more. || >  >  > Hi @dimitra-karadima   > @koppor and me had a mob session tonight and we took the liberty to use your PR to teach me a bit about git  since there were only some checkstyle-nitpicks with your PR left. We hope you do not mind we finished your work in #6450 . > Thank you very much for your work on this. We hope you did enjoy working with JabRef. You are always welcome to contribute more.  @calixtus Of course no problem! Thanks for fixing and merging my code! ||
6427,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Add truncate as a BibTex key modifier <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #3915. Adds a truncate modifier to the [available BibTex key modifiers](https://docs.jabref.org/setup/bibtexkeypatterns#modifiers). For "A Title" the bracketed pattern `[title:truncate3]` produces the result "A T".  - The syntax is `truncateN` (`[title:truncate5]`) to mimic the pattern of `authN` etc.  Remaining - [x] See if layered expressions are reasonable to implement  e.g.  [[auth][title]:truncate10] - [x] Update changelog - [x] Documentation  Things I am not sure about - [x] Should `truncate` be a formatter(org.jabref/logic/formatter)? Currently  formatters does not accept arguments - [x] The interaction between BibTex key generation and truncate might lead to unexpected results as whitespaces are removed after truncation. Unless this is considered obvious  it should perhaps be mentioned in the documentation of `truncate`. E.g.  for "A Title"  `[title:truncate3]` will lead to the `bibtexkey` "AT" - [x] Should this be included in the changelog? - [x] There were a `BracketedPatternTest` in `org.jabref/logic/util/`. Is there a correct location for the `BracketedPatternTest`?  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. --> Others - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. 1. Changelog  yes please 2.  Ideally it would be a formatter  maybe we need to adapt the interface to allow arguments. 3. Whitespace: At least it should be documented 4. BrackedPatternTest  yes would be nice if you could integrate your tests there  as they test with a bibtex entry and multiple formatters  Otherwise looks already good as starting point || > 2\. Ideally it would be a formatter  maybe we need to adapt the interface to allow arguments.  I missed how RegexFormatter is implemented  Ill just mimic that and it shouldnt be a problem. || [Updates to documentation](https://github.com/JabRef/user-documentation/pull/276). || In a nutshell. 1. `truncateN` has been added as a Formatter. 2. Directory names are truncated to a length of 255 characters using a utility function for filenames.  * I do not think I should change the parser  there is a large risk I will create more issues than I solve * It might be possible to shorten the code in `java/org/jabref/logic/bibtexkeypattern/BracketedPattern.java` quite a bit if larger parts of the code is turned into Formatters and Formatters can accept arguments (either in the constructor or in the format method  both are currently being used). || When I try to import a file from an URL using a pattern that creates a java.nio.file.FileSystemException. The directory cannot be created but the file is still downloaded. Should I try to fix that as part of this pull request as well? <edit> If a file cannot be downloaded to the location specified by a file pattern it makes more sense (to me) that the file isnt downloaded at all. </edit> || your changes look so far  is this ready then? || Yes. The last conflicts should be resolved now. || The last change (change of test names) can be removed but it seems more consistent with the guidelines? || For me its fine. For external contributors we have the rule that at least two developers should review a PR. So when a second dev gives his okay  its ready for merge! ||
6440,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Add support for jumping in ordered author list by typing letters <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #6146  I think I have added the support for jumping to the entry when typing letters. Should I add some comments to the method I added? Thanks :D  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Hi @leitianjian   thank you very much for your contribution. Yet I still have a question and a suggestion for your PR. || Thanks for your suggestions. The method in jumpToSearchKey provides a very good template. I will rewrite the code and try to add test cases to test it. || Hi  I think I have done it now. I used the stream to replace the for loop you have mentioned above  but I cannot construct a test case to test the method I added. I only test manually. I set the time to 700ms because I think 1s is too long for our typing. Thanks in advance || Is this ready for review? || > I only test manually. I set the time to 700ms because I think 1s is too long for our typing.  Thats fine   There are many scenarios some gui stuff just cannot be tested. || > > I only test manually. I set the time to 700ms because I think 1s is too long for our typing. >  > Thats fine  There are many scenarios some gui stuff just cannot be tested.  Yeah  I found the sad truth finally T^T || @calixtus Thanks for your suggestions  I made a mistake when I adjust the code format and had not realized that. || > LGTM. Thanks for your contribution! >  > (I didnt test if this interferes with typing in the entry editor or searchbar  but it shouldnt as the event is registered on the maintable).  Yeah  I tested it manually  which will not interfere with the searchbar. The target of the input is depended on the focusing window || Ok  2 approvals  @koppor s suggestions are fixed and the change is tested. Im going to merge this now. @leitianjian   thank you very much for your contribution. I hope you liked working on JabRef and consider to contribute more. ||
6455,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Fix autocomplete thread  Fixes #6453 The autcomplete binding was triggered when a cleanup called setBibEntry from a background thread.  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6475,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixed #6472 that multiple background task popups stacked over each other <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixed https://github.com/JabRef/jabref/issues/6472  I added a globle PopOver variable to hide existed PopOver(if any).  If a pop over is showing and I clicked on the background tasks button  the showing pop over will hide first  then the new pop over will show. The pop overs wont stack over. ![image](https://user-images.githubusercontent.com/5562899/81819801-60b48b80-9562-11ea-8856-ab45b2c66fc6.png)  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. It would be really nice if you could finish this PR and try the changes so that we can merge this PR soon.  || > It would be really nice if you could finish this PR and try the changes so that we can merge this PR soon.  Yes  sorry for the late change. I have made that  please check it again! ||
6478,1,0,0,1,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,Fix libre office connection and other progress dialogs Fixes #6477  Error was introduced in #6443 with the ProgressDialog showAndWait  I had to revert that. @btut  The showAndWait broke all dialogs which used the dialog.  (E.g). also copy linked files)  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Uh I forgot to roll that back. The ProgressDialog is not actually used by the background-task functionality because I could not get it to work. I think it would be better to change the name of the method to showProgressDialog. The old name  showProgressDialogAndWait  suggests that the dialog is waited for. || Indeed  good idea. I renamed it now  || Do I get that right  that most of the progress dialogs can probably be converted to be displayed in the new progress popup? || I do not know which other features use the progress dialogue. I had three problems with the progress dialogue:  - It displays the progress of an actual task. I wanted to show a list of tasks - It is not waited for - There is no way to close it when the progress reached 100%  In the dialogue that I implemented as a solution for this  I used the list of tasks stored in StateManager. It would be easy to pass a list of tasks instead. Then we could add an option to the dialogue to only show and it could replace the other dialogues.  But as the original dialogue is not waited for  I guess it is only used as information to the user. How about registering the relevant task in the background-task list in StateManager? Then you could just pop up the new dialogue. You could even pop up the pop-over of the task-progress-indicator in the toolbar. This would be very similar to a show-only dialog (no wait). The user can hide it and check the status later by clicking on the progress-indicator again.  IMO this would be a good way to go. I think the new dialogue and pop-over are more informative as they show the actual progress of tasks if available. AFAICT from the code the old dialogue just showed an indeterminate progress bar. || ... I just checked and it is just the WaitForSaveFinished dialog that creates a task for this purpose. The other times the dialogue is shown it is shown with actual worker tasks  so progress should be shown. || I agree these progress dialogs can be replaced by using the new progress popup. None of them actually has a reason to block the UI and can safely be run in the background in my opinion. || The only critical application is indeed the connection to LibreOffie  but that could also be done in a background task because its usually finished very fast. However  we have to be careful of tasks throwing exceptions.  The copy linked files to folder displays a progress dialog and afterwards the result dialog. Indeed it does not make sense to block the UI with a progress dialog here  ||
6479,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fixes generated bibtex key and display of institute authors <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6459. Fixes #6465 .  There are two parts of this issue  1. A null is prepended to an abbreviated BibTeX key. 2. Curly brackets are not respected (in the maintables author column?).  **1. Fix to the prepended null** *What is going on?* `BracketedPattern.generateInstitutionKey` gets called for any author enclosed in curly brackets (e.g.  `"{The School of Life}"`). The method expects an institute of technology or university and appends its name to the key (e.g.  null if there is no name).  *Why is it going on?* Academic institutions can have long generated BibTeX keys unless abbreviated  e.g.  `"Royal Institute of Technology: The School of Electrical Engineering and Computer Science"`  which `generateInstitutionKey` shortens to `RITEECS`.  *Fix* Replace a null valued university with an empty string. The drawback is potentially very short BibTeX keys (e.g.  `The School of Life` -> `L`).  *What are alternatives?* 1. Regex matching universities and technological institutions  which is hard to implement correctly. On the other hand  the drawback is an unexpected BibTeX key in a corner case. In the case of `The School of Life` would be abbreviated to `SL` instead of `L`.  **2. Fix to the author column** When the list of authors gets converted to a latex-free version  all curly brackets are removed since the whole string is parsed as latex. When the latex-free string is used to create/fetch an `AuthorList` it will no longer contain any brackets  and the information needed to format the string is gone.  **3. What I think is left to do** - [x] Find out why `{The School of Life}`  isnt respected in the author field of the GUI - [x] ~~Attempt to match universities etc. with regex~~ Assume that names that have comma separated parts are universities - [x] ~~Update `BibtexKeyGeneratorTest` as it makes heavy use of deprecated methods~~ the deprecated methods are essentially convenience methods so they have been moved inside the test file - [x] See if the readability of `generateInstitutionKey` can be improved - [x] ~~Change the key generator for institution/corporate names to a Formatter?~~ `generateInstitutionKey` should not be a separate Formatter  it is only called by `normalize`.  and  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. > Find out why {The School of Life} isnt respected in the author field of the GUI  I think it could be that the latex2unicode convert is called for the author field. It kills the extra braces. I had a similar problem in the MSOffice Exporter.  I think I implemented a workaround there. || Ah  nice  thank you! I will take a look! || I believe this is fixable in `BibEntry.getLatexFreeField` by splitting it into BibTeX/LaTeX according to whichever BibTeX version are supported  but the problems are  1. I cant find which BibTeX version we are supporting in [ADR](https://github.com/JabRef/jabref/tree/master/docs/adr) nor anywhere else 2. `BibEntry.getLatexFreeField` appears to be used both for BibTeX in UTF-8 (e.g.  `"{LâTëX}"`) and for fully "expanded" text (e.g.  `"LâTëX"`). As those are incompatible perhaps it makes sense to split the method and track down what method wants what? 3. Should I do this? 4. I can attempt to do the same workaround but it does not really solve the problem (as I understand it)?  I can also look at it a bit more and see if I have missed something  anyway  any suggestion/hint is greatly appreciated @Siedlerchr  || Hi  thanks for investigating. The underlying problem is the latex2unicode (external library) kills the braces  it has of course no understanding of an author. Refs  #4152 and #6155  I fear there is no easy solution. We use the Latexfree field method to not have latex code displayed in the main table #6329  I would treat this as a secondary issue.  Regarding the second issue: > Replace a null valued university with an empty string. The drawback is potentially very short BibTeX keys (e.g.  The School of Life -> L).  What about using a formatter that uses the Capital letters?  e.g. JabRef would then become JR and orgs with abbreviations e.g. UNO or WHO would stay as is. Similar to the title formatter.   || Regarding the first issue  first of all  as you know  I am not a regular contributor to JabRef. If youd like me to drop this topic for any reason  please say so. I am just hoping that sorting this out will save someone else time in the future  but I am not familiar enough with JabRef to know if I have missed something important.  If I understand things correctly  there are currently three different cases relevant to #4337 and #4152.  Assuming we are using the BibTeX format described at [BibTeX.org (special symbols)](http://www.bibtex.org/SpecialSymbols/) 1. Plain BibTeX  e.g.  `Kurt {G\"OD}el`: Used as the internal representation? 2. BibTeX "with unicode"  e.g.  `Kurt {GÖD}el`: Used for exporting to a unicode-aware file format and editing in unicode? 3. Formatted text  e.g.  `K. GÖDel`: Used to display to a user or export to a LaTeX/BibTeX unaware environment.  `BibEntry.getLatexFreeField` handles case 3 while  to the best of my knowledge  no function/method handles case 2.  The issue with case 2 is that LaTeX and BibTeX are two incompatible "languages" (since some reserved words are the same). Therefore  if we are using the format described at [BibTeX.org (format)](http://www.bibtex.org/Format/)  the "correct" way of dealing with case 2 using `BibEntry.getLatexFreeField` is to either split out the LaTeX components and "translate" them to unicode separately or to escape the parts that are in BibTeX format.  If I am using the [BibTeX.org format](http://www.bibtex.org/Format/)  at least all non-nested curly bracketsl  not preceded by a keyword  should be escaped * `{JabRef}` -> `\{JabRef\}`  * `Proceedings of the {IEEE}` -> `Proceedings of the \{IEEE\}`  which is then dealt with correctly in `BibEntry.getLatexFreeField`.  What I was trying to argue is that case 2 and case 3 must be dealt with differently. I can deal with this after issue #6459 if that is of interest?  **However  I just realized that issue #6459 is case 3  and can most likely be solved by changing the order of method calls.**   Please point out if something is unclear or incomprehensible. I am trying to improve my writing skills  but I am well aware that I have some practice ahead of me. My only excuse is that it is still morning here X) || Regarding the second issue. That does sound better. I cant think of any case where keeping all capitalized letters isnt good and it should be compatible with the current implementation. || >Regarding the first issue  first of all  as you know  I am not a regular contributor to JabRef. If youd like me to drop this topic for any reason  please say so. I am just hoping that sorting this out will save someone else time in the future  but I am not familiar enough with JabRef to know if I have missed something important.  No problem :) We are happy for every contributor. Its just a complex issue. Its just complicated issue because it involves Corporate authors and Unicode. I try to provide some background on this:   **Unicode**: Originally  bibtex and Latex did not support unicode. Thats why you have to use those Latex-Escaping of umlauts and other characters. Biblatex  the successor of bibtex  supports Unicode  but many journals still require bibtex. And many citations from online resources still contain Latex-escaping of characters. Originally JabRef maintained a bidirectional mapping between latex escaped characters and their Unicode equivalent. Some time ago we switched to the [latex2unicode library](https://github.com/tomtung/latex2unicode).  Of course JavaFX has no idea of latex  therefore having a title or an author encoded in latex must obviously converted to Unicode for display. e.g. > `Kurt {G\"OD}el` becomes `Kurt Gödel`  **Corporate Authors**: See the [Biblatex manual](https://mirror.informatik.hs-fulda.de/tex-archive/macros/latex/contrib/biblatex/doc/biblatex.pdf) Section 2.3.3 Corporate Authors and Editors:  >Corporate authors and editors are given in the author or editor field  respectively.Note that they must be wrapped in an extra pair of curly braces to prevent data parsing from treating them as personal names which are to be dissected into their components.  Example:  `author {{National Aeronautics and Space Administration}}`  In JabRef the latex2unicode formatter is called for **every field** and the formatter now receives the `string toConvert  {National Aeronautics and Space Administration}`  The latex2unicode formatter now kills the curly braces as they could indicate some latex commands and returns `string converted  National Aeronautics and Space Administration` JabRef now splits the author according to it rules and thinks its in this case two authors separated by authors.  The only solution I see is to check if its a corporate authors  convert it to Unicode and add the braces again. One really difficult edge case is for example  ` author  {\L{}}ukasz Micha\l{}`  Could be easily interpreted as corporate authors....  I hope my long explanation helps you a bit to understand the problem. Maybe you come up with an idea.   || Hello @k3KAW8Pnf7mkmdSMPHz27   thank you for your work in fixing this issue! And thanks for that informative context @Siedlerchr   thats a very interesting edge case... I think there could be a test where braces are counted to corroborate that the brace at the very beginning is not closed earlier on (that would be the case where formatting as a Corporate Author would apply  I think).  I have some code in Python that does something related... (though the opposite: it matches the most ancient parenthesis first...)  Ill adapt it when I return home.  ```python def par_count2(text: Letters  opener: str  "("  closer: str  ")") -> Numbers:     """Base algorithm to count matching parentheses.      Parameters     ----------     `text` : `str`         The string to be parsed against matching opener and closer     `opener` : `str`         The character(s) to be considered as the opener of a sequence     `closer` : `str`         The character(s) to be considered as the end of a sequence      Yields     ------     `count` : `int`         A sequence of `int` that are the number of matches for each character      Examples     --------     Here are some base examples of expected output  and actual output.          ``(((((((((``          ``123456789``      >>> [c for c in par_count2("(((((((((")]     [1  2  3  4  5  6  7  8  9]          ``)))))))))``          ``123456789``      >>> [c for c in par_count2(")))))))))")]     [1  2  3  4  5  6  7  8  9]          ``()()()()()()()()()``          ``112233445566778899``      >>> [c for c in par_count2("()()()()()()()()()")]     [1  1  2  2  3  3  4  4  5  5  6  6  7  7  8  8  9  9]          ``((((((((()))))))))``          ``123456789123456789``      >>> [c for c in par_count2("((((((((()))))))))")]     [1  2  3  4  5  6  7  8  9  1  2  3  4  5  6  7  8  9]          ``))()())(())``          ``12334456767``      >>> [c for c in par_count2("))()())(())")]     [1  2  3  3  4  4  5  6  7  6  7]      ``(A)()(A)()(B)()(A)()(A)``      ``11122323445156673788949``      >>> [c for c in par_count2("(A)()(A)()(B)()(A)()(A)")]     [1  1  1  2  2  3  2  3  4  4  5  1  5  6  6  7  3  7  8  8  9  4  9]     """      # type declarations for local variables     count: int     character: str     pending_from: int     pending_to: int     others: Counter[str]      count  0     pending_from  0     pending_to  0     others  Counter()      # logging recommends using %s substitutions  instead of f-strings or     # string interpolation with brackets     logger  logging.getLogger(__name__)     logger.debug("About to parse %s with %s and %s"  text  opener  closer)      for character in text:         if character  closer:             if pending_from ! pending_to:                 pending_from + 1                 yield pending_from             else:                 count + 1                 pending_from  count                 pending_to  count                 yield count         elif character  opener:             count + 1             pending_to  count             yield count         else:             others.update(character)             yield others.get(character  0)      logger.info("Parsed %s with %s and %s"  text  opener  closer) ``` || @rolandog  Your hint with the braces gave me the idea and I think we maybe have already a solution for this problem. I cant believe its been hidden in plain sight 🤦   This method is used in the BracketedPattern class to define if its an insituation (corporate author or not)   https://github.com/JabRef/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/model/strings/StringUtil.java#L418-L446   And the test: https://github.com/JabRef/jabref/blob/862078a4db316cfd15bd77be68d3d2b010feab3b/src/test/java/org/jabref/model/strings/StringUtilTest.java#L181-L193 || Hi @rolandog ! Thank you for the very detailed issue!! It makes things a lot easier :P  I have done a "bad" code update to demonstrate what I think is the issue with displaying names in the maintable (i.e.  the order of method calls). @Siedlerchr and @rolandog you are both (of course) most welcome to add any comment/change any code and if there is any way I can make life easier for you do tell. I am currently quite new to Github and my todo-list  notes and links are currently kept in a offline jupyter document and I have no idea how to do it differently X)  @Siedlerchr thank you for the overview and the biblatex manual link! I have been looking for that one o.O I am going to stay out of the biblatex discussion for now  because I believe `Kurt {G\"OD}el` should be `Kurt GÖDel`. It does not mean I am not interested in the issue  just that I have a lot of reading ahead of me  apparently a lot have changed since 1994 and BibTeX 1.0  ) || @k3KAW8Pnf7mkmdSMPHz27  youre welcome  Im glad to have helped pinpoint this  and thank you for taking on this issue!  And  thats great @Siedlerchr  Im happy that it seems that this may not need extreme refactoring  thats a very clever function!  However  I think I found an edge case where `isInCurlyBrackets` may present a false positive in its current form (inspired by the Corporate Author Kurt Gödel Society  but instead using Łukasz Michał as part of a Corporate Author name).  Im not familiar with JabRefs whole codebase  so mismatched braces may be caught earlier on  as per:  https://github.com/JabRef/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/logic/bibtex/FieldWriter.java#L41-L74  Here is an example  displayed as a test  where one of the entries would throw an error (the last one):  ```java @Test  void testIsInCurlyBrackets() {     /** correct      * c        : {\L{}}ukasz Micha\l{}      * brackets : 1  210             10      * count    : 1  112             22      */     assertFalse(StringUtil.isInCurlyBrackets("{\L{}}ukasz Micha\l{}"))       /** correct      * c        : {{\L{}}ukasz Micha\l{} Society}      * brackets : 12  321             21        0      * count    : 11  111             11        1      */     assertTrue(StringUtil.isInCurlyBrackets("{{\L{}}ukasz Micha\l{} Society}"))       /** mismatched braces  should return false?      * c        : {{\L{}}ukasz Micha\l{} {Society}      * brackets : 12  321             21 2       1      * count    : 11  111             11 1       1      */     assertFalse(StringUtil.isInCurlyBrackets("{{\L{}}ukasz Micha\l{} {Society}"))  }  ```  In case this isnt filtered by `CheckBraces`  then checking the final value of `brackets  0` could prevent that edge case:  ```java /**   * Checks if the given String has exactly one pair of surrounding curly braces <br>   * Strings with escaped characters in curly braces at the beginning and end are respected  too   * @param toCheck The string to check   * @return True  if the check was succesful. False otherwise.   */  public static boolean isInCurlyBrackets(String toCheck) {      int count  0       int brackets  0       if ((toCheck  null) || toCheck.isEmpty()) {          return false       } else {          if ((toCheck.charAt(0)  {) && (toCheck.charAt(toCheck.length() - 1)  })) {              for (char c : toCheck.toCharArray()) {                  if (c  {) {                      if (brackets  0) {                          count++                       }                      brackets++                   } else if (c  }) {                      brackets--                   }              }              return count  1 && brackets  0           }          return false       }  } ```  || @rolandog  Thanks for testing and checking that edge case. Feel free to submit a new PR and in that way you can also fix the workaround I used in the MSbibAuthor for the MS Office exporter  https://github.com/JabRef/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/logic/msbib/MSBibConverter.java#L119 || "Curly brackets are not respected (in the maintables author column?)." is the same as issue #6465. Should I leave it alone in this PR or update this one to close both? || Since they are related you can update your PR to close both. Just add it also to the changelog then.  || I am having issues finding a case that is supposed to break the method `fixAuthorNatbibLatexFree`. Ill look at it a bit longer before extending the same tests to the other methods but I do not think I will come up with anything.  Other than that  I cant find any tests for `BibEntryTableViewModel` nor `MainTableNameFormatter`. I do not think I should attempt to create any as at least `BibEntryTableViewModel` has gone through quite a bit of changes recently. || If you cant find a case thats breaking the test its a good sign  ) Regarding tests for other classes  I think this would be beyond the scope of the PR here. || @k3KAW8Pnf7mkmdSMPHz27  As you now have some more deep insights into the bibtexkeypattern generation now than I  can you maybe help that usere here in the forum? https://discourse.jabref.org/t/help-with-regex-in-key-generation/2115 || Sure  I will look at it. I somehow missed that JabRef has a forum o.O || So  what remains are  1. Preferences no longer updates without restart (e.g.  from none to Natbib). That is not within the scope of the PR and I am guessing someone is fixing it already. 2. Weird things happens if you try to escape curly brackets in the author section of required fields. I am guessing the \ is being protected somewhere. I can open up an issue about it but I do not have time to look at it until the 1th of May. || Thanks already for your contribution and the extensive tests. Just let me know if its finished so far then we can review it.   It would be nice if you could open an issue for the two problems  especially that preferences reloading.  I guess escaping the curly brackets should hopefully be not that common in the author field. More relevant for the title field or so I guess.  || > I just saw two minor style issues  nitpicks  but nothing important.  I am trying to learn and improve  nitpicking is appreciated and encouraged! :) || @k3KAW8Pnf7mkmdSMPHz27 Big thanks for your work on this.  I just noticed some latex commands are not cleared in the now-master-build. Has this been an issue before / is this still an issue with Latex2UnicodeAdapter?  ![image](https://user-images.githubusercontent.com/50491877/83175844-db61d700-a11c-11ea-8c0b-b581b8e37ef5.png)  Test library is JabRefAuthors in src/test/resources/testbib || Which ~~file in particular~~  and which ~~settings~~ entry table "Format of author and editor name"? || Hum... I am not sure what is going on  Ill have a look || Most of those should be "cleared" and are cleared when I build locally  but that might be something wrong with my setup. || Looks fine for me as well: ![grafik](https://user-images.githubusercontent.com/320228/83180207-60e88580-a123-11ea-8839-57ef0a8e5249.png)  Firstname lastname option and do not abbreviate Edit// @calixtus  Do you have "Show names unchanged" activated?  || I think I could reproduce @calixtus screenshot in JabRef 5.1--2020-05-28--ffa07cd but right now I seem unable to do so again (and I have tried). || @k3KAW8Pnf7mkmdSMPHz27 If you have "Show names unchanged" in the prefs activated then no conversion is happening || I see  so the solution would be to change `return nameToFormat` to `return Latex2UnicodeAdapter.format(nameToFormat)` or similar in MainTableNameFormatter... || @calixtus I thought the intent of that option was to leave the names completely unchanged? Also  if you change that  do not forget to add a cache  EDIT With cache I mean something along the line of `private String authorsNatbibLatexFree` in `AuthorList`. || Uh im not going to change anything today 😄  I was just wondering about that... || Hum... actually that is my bad. JabRef 5.0 does indeed "clear" the latex  even when `Show names unchanged` is set... Should I open up an issue and fix this then?  || Yes  it would be nice if you could provide a fix (no need to create an issue before). || Ok  I apparently do not know how to do this. I created [https://github.com/JabRef/jabref/pull/6552](https://github.com/JabRef/jabref/pull/6552) || Well  thank you all for reviewing this PR  it is very appreciated! ❤️ 🎉 🎈  Ill take the reviews and results to heart  and make sure the next PR will create fewer issues 🤦  || 
6479,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fixes generated bibtex key and display of institute authors <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6459. Fixes #6465 .  There are two parts of this issue  1. A null is prepended to an abbreviated BibTeX key. 2. Curly brackets are not respected (in the maintables author column?).  **1. Fix to the prepended null** *What is going on?* `BracketedPattern.generateInstitutionKey` gets called for any author enclosed in curly brackets (e.g.  `"{The School of Life}"`). The method expects an institute of technology or university and appends its name to the key (e.g.  null if there is no name).  *Why is it going on?* Academic institutions can have long generated BibTeX keys unless abbreviated  e.g.  `"Royal Institute of Technology: The School of Electrical Engineering and Computer Science"`  which `generateInstitutionKey` shortens to `RITEECS`.  *Fix* Replace a null valued university with an empty string. The drawback is potentially very short BibTeX keys (e.g.  `The School of Life` -> `L`).  *What are alternatives?* 1. Regex matching universities and technological institutions  which is hard to implement correctly. On the other hand  the drawback is an unexpected BibTeX key in a corner case. In the case of `The School of Life` would be abbreviated to `SL` instead of `L`.  **2. Fix to the author column** When the list of authors gets converted to a latex-free version  all curly brackets are removed since the whole string is parsed as latex. When the latex-free string is used to create/fetch an `AuthorList` it will no longer contain any brackets  and the information needed to format the string is gone.  **3. What I think is left to do** - [x] Find out why `{The School of Life}`  isnt respected in the author field of the GUI - [x] ~~Attempt to match universities etc. with regex~~ Assume that names that have comma separated parts are universities - [x] ~~Update `BibtexKeyGeneratorTest` as it makes heavy use of deprecated methods~~ the deprecated methods are essentially convenience methods so they have been moved inside the test file - [x] See if the readability of `generateInstitutionKey` can be improved - [x] ~~Change the key generator for institution/corporate names to a Formatter?~~ `generateInstitutionKey` should not be a separate Formatter  it is only called by `normalize`.  and  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. > Find out why {The School of Life} isnt respected in the author field of the GUI  I think it could be that the latex2unicode convert is called for the author field. It kills the extra braces. I had a similar problem in the MSOffice Exporter.  I think I implemented a workaround there. || Ah  nice  thank you! I will take a look! || I believe this is fixable in `BibEntry.getLatexFreeField` by splitting it into BibTeX/LaTeX according to whichever BibTeX version are supported  but the problems are  1. I cant find which BibTeX version we are supporting in [ADR](https://github.com/JabRef/jabref/tree/master/docs/adr) nor anywhere else 2. `BibEntry.getLatexFreeField` appears to be used both for BibTeX in UTF-8 (e.g.  `"{LâTëX}"`) and for fully "expanded" text (e.g.  `"LâTëX"`). As those are incompatible perhaps it makes sense to split the method and track down what method wants what? 3. Should I do this? 4. I can attempt to do the same workaround but it does not really solve the problem (as I understand it)?  I can also look at it a bit more and see if I have missed something  anyway  any suggestion/hint is greatly appreciated @Siedlerchr  || Hi  thanks for investigating. The underlying problem is the latex2unicode (external library) kills the braces  it has of course no understanding of an author. Refs  #4152 and #6155  I fear there is no easy solution. We use the Latexfree field method to not have latex code displayed in the main table #6329  I would treat this as a secondary issue.  Regarding the second issue: > Replace a null valued university with an empty string. The drawback is potentially very short BibTeX keys (e.g.  The School of Life -> L).  What about using a formatter that uses the Capital letters?  e.g. JabRef would then become JR and orgs with abbreviations e.g. UNO or WHO would stay as is. Similar to the title formatter.   || Regarding the first issue  first of all  as you know  I am not a regular contributor to JabRef. If youd like me to drop this topic for any reason  please say so. I am just hoping that sorting this out will save someone else time in the future  but I am not familiar enough with JabRef to know if I have missed something important.  If I understand things correctly  there are currently three different cases relevant to #4337 and #4152.  Assuming we are using the BibTeX format described at [BibTeX.org (special symbols)](http://www.bibtex.org/SpecialSymbols/) 1. Plain BibTeX  e.g.  `Kurt {G\"OD}el`: Used as the internal representation? 2. BibTeX "with unicode"  e.g.  `Kurt {GÖD}el`: Used for exporting to a unicode-aware file format and editing in unicode? 3. Formatted text  e.g.  `K. GÖDel`: Used to display to a user or export to a LaTeX/BibTeX unaware environment.  `BibEntry.getLatexFreeField` handles case 3 while  to the best of my knowledge  no function/method handles case 2.  The issue with case 2 is that LaTeX and BibTeX are two incompatible "languages" (since some reserved words are the same). Therefore  if we are using the format described at [BibTeX.org (format)](http://www.bibtex.org/Format/)  the "correct" way of dealing with case 2 using `BibEntry.getLatexFreeField` is to either split out the LaTeX components and "translate" them to unicode separately or to escape the parts that are in BibTeX format.  If I am using the [BibTeX.org format](http://www.bibtex.org/Format/)  at least all non-nested curly bracketsl  not preceded by a keyword  should be escaped * `{JabRef}` -> `\{JabRef\}`  * `Proceedings of the {IEEE}` -> `Proceedings of the \{IEEE\}`  which is then dealt with correctly in `BibEntry.getLatexFreeField`.  What I was trying to argue is that case 2 and case 3 must be dealt with differently. I can deal with this after issue #6459 if that is of interest?  **However  I just realized that issue #6459 is case 3  and can most likely be solved by changing the order of method calls.**   Please point out if something is unclear or incomprehensible. I am trying to improve my writing skills  but I am well aware that I have some practice ahead of me. My only excuse is that it is still morning here X) || Regarding the second issue. That does sound better. I cant think of any case where keeping all capitalized letters isnt good and it should be compatible with the current implementation. || >Regarding the first issue  first of all  as you know  I am not a regular contributor to JabRef. If youd like me to drop this topic for any reason  please say so. I am just hoping that sorting this out will save someone else time in the future  but I am not familiar enough with JabRef to know if I have missed something important.  No problem :) We are happy for every contributor. Its just a complex issue. Its just complicated issue because it involves Corporate authors and Unicode. I try to provide some background on this:   **Unicode**: Originally  bibtex and Latex did not support unicode. Thats why you have to use those Latex-Escaping of umlauts and other characters. Biblatex  the successor of bibtex  supports Unicode  but many journals still require bibtex. And many citations from online resources still contain Latex-escaping of characters. Originally JabRef maintained a bidirectional mapping between latex escaped characters and their Unicode equivalent. Some time ago we switched to the [latex2unicode library](https://github.com/tomtung/latex2unicode).  Of course JavaFX has no idea of latex  therefore having a title or an author encoded in latex must obviously converted to Unicode for display. e.g. > `Kurt {G\"OD}el` becomes `Kurt Gödel`  **Corporate Authors**: See the [Biblatex manual](https://mirror.informatik.hs-fulda.de/tex-archive/macros/latex/contrib/biblatex/doc/biblatex.pdf) Section 2.3.3 Corporate Authors and Editors:  >Corporate authors and editors are given in the author or editor field  respectively.Note that they must be wrapped in an extra pair of curly braces to prevent data parsing from treating them as personal names which are to be dissected into their components.  Example:  `author {{National Aeronautics and Space Administration}}`  In JabRef the latex2unicode formatter is called for **every field** and the formatter now receives the `string toConvert  {National Aeronautics and Space Administration}`  The latex2unicode formatter now kills the curly braces as they could indicate some latex commands and returns `string converted  National Aeronautics and Space Administration` JabRef now splits the author according to it rules and thinks its in this case two authors separated by authors.  The only solution I see is to check if its a corporate authors  convert it to Unicode and add the braces again. One really difficult edge case is for example  ` author  {\L{}}ukasz Micha\l{}`  Could be easily interpreted as corporate authors....  I hope my long explanation helps you a bit to understand the problem. Maybe you come up with an idea.   || Hello @k3KAW8Pnf7mkmdSMPHz27   thank you for your work in fixing this issue! And thanks for that informative context @Siedlerchr   thats a very interesting edge case... I think there could be a test where braces are counted to corroborate that the brace at the very beginning is not closed earlier on (that would be the case where formatting as a Corporate Author would apply  I think).  I have some code in Python that does something related... (though the opposite: it matches the most ancient parenthesis first...)  Ill adapt it when I return home.  ```python def par_count2(text: Letters  opener: str  "("  closer: str  ")") -> Numbers:     """Base algorithm to count matching parentheses.      Parameters     ----------     `text` : `str`         The string to be parsed against matching opener and closer     `opener` : `str`         The character(s) to be considered as the opener of a sequence     `closer` : `str`         The character(s) to be considered as the end of a sequence      Yields     ------     `count` : `int`         A sequence of `int` that are the number of matches for each character      Examples     --------     Here are some base examples of expected output  and actual output.          ``(((((((((``          ``123456789``      >>> [c for c in par_count2("(((((((((")]     [1  2  3  4  5  6  7  8  9]          ``)))))))))``          ``123456789``      >>> [c for c in par_count2(")))))))))")]     [1  2  3  4  5  6  7  8  9]          ``()()()()()()()()()``          ``112233445566778899``      >>> [c for c in par_count2("()()()()()()()()()")]     [1  1  2  2  3  3  4  4  5  5  6  6  7  7  8  8  9  9]          ``((((((((()))))))))``          ``123456789123456789``      >>> [c for c in par_count2("((((((((()))))))))")]     [1  2  3  4  5  6  7  8  9  1  2  3  4  5  6  7  8  9]          ``))()())(())``          ``12334456767``      >>> [c for c in par_count2("))()())(())")]     [1  2  3  3  4  4  5  6  7  6  7]      ``(A)()(A)()(B)()(A)()(A)``      ``11122323445156673788949``      >>> [c for c in par_count2("(A)()(A)()(B)()(A)()(A)")]     [1  1  1  2  2  3  2  3  4  4  5  1  5  6  6  7  3  7  8  8  9  4  9]     """      # type declarations for local variables     count: int     character: str     pending_from: int     pending_to: int     others: Counter[str]      count  0     pending_from  0     pending_to  0     others  Counter()      # logging recommends using %s substitutions  instead of f-strings or     # string interpolation with brackets     logger  logging.getLogger(__name__)     logger.debug("About to parse %s with %s and %s"  text  opener  closer)      for character in text:         if character  closer:             if pending_from ! pending_to:                 pending_from + 1                 yield pending_from             else:                 count + 1                 pending_from  count                 pending_to  count                 yield count         elif character  opener:             count + 1             pending_to  count             yield count         else:             others.update(character)             yield others.get(character  0)      logger.info("Parsed %s with %s and %s"  text  opener  closer) ``` || @rolandog  Your hint with the braces gave me the idea and I think we maybe have already a solution for this problem. I cant believe its been hidden in plain sight 🤦   This method is used in the BracketedPattern class to define if its an insituation (corporate author or not)   https://github.com/JabRef/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/model/strings/StringUtil.java#L418-L446   And the test: https://github.com/JabRef/jabref/blob/862078a4db316cfd15bd77be68d3d2b010feab3b/src/test/java/org/jabref/model/strings/StringUtilTest.java#L181-L193 || Hi @rolandog ! Thank you for the very detailed issue!! It makes things a lot easier :P  I have done a "bad" code update to demonstrate what I think is the issue with displaying names in the maintable (i.e.  the order of method calls). @Siedlerchr and @rolandog you are both (of course) most welcome to add any comment/change any code and if there is any way I can make life easier for you do tell. I am currently quite new to Github and my todo-list  notes and links are currently kept in a offline jupyter document and I have no idea how to do it differently X)  @Siedlerchr thank you for the overview and the biblatex manual link! I have been looking for that one o.O I am going to stay out of the biblatex discussion for now  because I believe `Kurt {G\"OD}el` should be `Kurt GÖDel`. It does not mean I am not interested in the issue  just that I have a lot of reading ahead of me  apparently a lot have changed since 1994 and BibTeX 1.0  ) || @k3KAW8Pnf7mkmdSMPHz27  youre welcome  Im glad to have helped pinpoint this  and thank you for taking on this issue!  And  thats great @Siedlerchr  Im happy that it seems that this may not need extreme refactoring  thats a very clever function!  However  I think I found an edge case where `isInCurlyBrackets` may present a false positive in its current form (inspired by the Corporate Author Kurt Gödel Society  but instead using Łukasz Michał as part of a Corporate Author name).  Im not familiar with JabRefs whole codebase  so mismatched braces may be caught earlier on  as per:  https://github.com/JabRef/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/logic/bibtex/FieldWriter.java#L41-L74  Here is an example  displayed as a test  where one of the entries would throw an error (the last one):  ```java @Test  void testIsInCurlyBrackets() {     /** correct      * c        : {\L{}}ukasz Micha\l{}      * brackets : 1  210             10      * count    : 1  112             22      */     assertFalse(StringUtil.isInCurlyBrackets("{\L{}}ukasz Micha\l{}"))       /** correct      * c        : {{\L{}}ukasz Micha\l{} Society}      * brackets : 12  321             21        0      * count    : 11  111             11        1      */     assertTrue(StringUtil.isInCurlyBrackets("{{\L{}}ukasz Micha\l{} Society}"))       /** mismatched braces  should return false?      * c        : {{\L{}}ukasz Micha\l{} {Society}      * brackets : 12  321             21 2       1      * count    : 11  111             11 1       1      */     assertFalse(StringUtil.isInCurlyBrackets("{{\L{}}ukasz Micha\l{} {Society}"))  }  ```  In case this isnt filtered by `CheckBraces`  then checking the final value of `brackets  0` could prevent that edge case:  ```java /**   * Checks if the given String has exactly one pair of surrounding curly braces <br>   * Strings with escaped characters in curly braces at the beginning and end are respected  too   * @param toCheck The string to check   * @return True  if the check was succesful. False otherwise.   */  public static boolean isInCurlyBrackets(String toCheck) {      int count  0       int brackets  0       if ((toCheck  null) || toCheck.isEmpty()) {          return false       } else {          if ((toCheck.charAt(0)  {) && (toCheck.charAt(toCheck.length() - 1)  })) {              for (char c : toCheck.toCharArray()) {                  if (c  {) {                      if (brackets  0) {                          count++                       }                      brackets++                   } else if (c  }) {                      brackets--                   }              }              return count  1 && brackets  0           }          return false       }  } ```  || @rolandog  Thanks for testing and checking that edge case. Feel free to submit a new PR and in that way you can also fix the workaround I used in the MSbibAuthor for the MS Office exporter  https://github.com/JabRef/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/logic/msbib/MSBibConverter.java#L119 || "Curly brackets are not respected (in the maintables author column?)." is the same as issue #6465. Should I leave it alone in this PR or update this one to close both? || Since they are related you can update your PR to close both. Just add it also to the changelog then.  || I am having issues finding a case that is supposed to break the method `fixAuthorNatbibLatexFree`. Ill look at it a bit longer before extending the same tests to the other methods but I do not think I will come up with anything.  Other than that  I cant find any tests for `BibEntryTableViewModel` nor `MainTableNameFormatter`. I do not think I should attempt to create any as at least `BibEntryTableViewModel` has gone through quite a bit of changes recently. || If you cant find a case thats breaking the test its a good sign  ) Regarding tests for other classes  I think this would be beyond the scope of the PR here. || @k3KAW8Pnf7mkmdSMPHz27  As you now have some more deep insights into the bibtexkeypattern generation now than I  can you maybe help that usere here in the forum? https://discourse.jabref.org/t/help-with-regex-in-key-generation/2115 || Sure  I will look at it. I somehow missed that JabRef has a forum o.O || So  what remains are  1. Preferences no longer updates without restart (e.g.  from none to Natbib). That is not within the scope of the PR and I am guessing someone is fixing it already. 2. Weird things happens if you try to escape curly brackets in the author section of required fields. I am guessing the \ is being protected somewhere. I can open up an issue about it but I do not have time to look at it until the 1th of May. || Thanks already for your contribution and the extensive tests. Just let me know if its finished so far then we can review it.   It would be nice if you could open an issue for the two problems  especially that preferences reloading.  I guess escaping the curly brackets should hopefully be not that common in the author field. More relevant for the title field or so I guess.  || > I just saw two minor style issues  nitpicks  but nothing important.  I am trying to learn and improve  nitpicking is appreciated and encouraged! :) || @k3KAW8Pnf7mkmdSMPHz27 Big thanks for your work on this.  I just noticed some latex commands are not cleared in the now-master-build. Has this been an issue before / is this still an issue with Latex2UnicodeAdapter?  ![image](https://user-images.githubusercontent.com/50491877/83175844-db61d700-a11c-11ea-8c0b-b581b8e37ef5.png)  Test library is JabRefAuthors in src/test/resources/testbib || Which ~~file in particular~~  and which ~~settings~~ entry table "Format of author and editor name"? || Hum... I am not sure what is going on  Ill have a look || Most of those should be "cleared" and are cleared when I build locally  but that might be something wrong with my setup. || Looks fine for me as well: ![grafik](https://user-images.githubusercontent.com/320228/83180207-60e88580-a123-11ea-8839-57ef0a8e5249.png)  Firstname lastname option and do not abbreviate Edit// @calixtus  Do you have "Show names unchanged" activated?  || I think I could reproduce @calixtus screenshot in JabRef 5.1--2020-05-28--ffa07cd but right now I seem unable to do so again (and I have tried). || @k3KAW8Pnf7mkmdSMPHz27 If you have "Show names unchanged" in the prefs activated then no conversion is happening || I see  so the solution would be to change `return nameToFormat` to `return Latex2UnicodeAdapter.format(nameToFormat)` or similar in MainTableNameFormatter... || @calixtus I thought the intent of that option was to leave the names completely unchanged? Also  if you change that  do not forget to add a cache  EDIT With cache I mean something along the line of `private String authorsNatbibLatexFree` in `AuthorList`. || Uh im not going to change anything today 😄  I was just wondering about that... || Hum... actually that is my bad. JabRef 5.0 does indeed "clear" the latex  even when `Show names unchanged` is set... Should I open up an issue and fix this then?  || Yes  it would be nice if you could provide a fix (no need to create an issue before). || Ok  I apparently do not know how to do this. I created [https://github.com/JabRef/jabref/pull/6552](https://github.com/JabRef/jabref/pull/6552) || Well  thank you all for reviewing this PR  it is very appreciated! ❤️ 🎉 🎈  Ill take the reviews and results to heart  and make sure the next PR will create fewer issues 🤦  || 
6504,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Enable users to simultaneously search all SearchBasedFetchers This PR enables users can send queries to all E-libraries simultaneously through the `WebSearchPane`.  Ref [#369](https://github.com/koppor/jabref/issues/369)  It adds a new `SearchBasedFetcher` called `CompositeSearchBasedFetcher` that delegates the query to all of the fetchers it is composed of  and merges the fetched results.  In  `WebFetchers.getSearchBasedFetchers`  a `CompositeSearchBasedFetcher` is added that contains all `SearchBasedFetchers`.   If this PR gets approved an additional [documentation entry](https://docs.jabref.org/finding-sorting-and-cleaning-entries) has to be added.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. > It would be nice if you could some more fetchers to your test and also test what happens when one fetcher returns an error  I replaced the tests with parameterized tests. || > Thanks for your contribution. I like the idea!  Im happy about that!  > For now only a initial impression after scrolling through the code: Did you test it in a running JabRef?  I tested it with a few queries and it worked so far ^^.    > Im somewhat afraid that this quickly leads to Jabref being blocked by some databases since it issues quite a lot of requests.  Moreover  if I understand the implementation correctly  then every fetcher is always asked which should lead to quite a huge list of returned entries (probably with perhaps many duplicates).  One option might be to offer the user a way to configure which fetchers to include? In my current implementation  I do not offer any post-processing yet. I think doing post-processing in the fetcher is not a great design idea  what do you think? :) Where should I implement the post-processing of the fetched entries? || JAXB Refs #6350  and https://github.com/JabRef/jabref/issues/6302 ||
6508,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixes missing library properties context menu on library tab fixes issue #6485 to implement context menu on library tabs with the "Library properties" menu item.  ![image](https://user-images.githubusercontent.com/42524526/82621629-481b2580-9ba1-11ea-8301-d643b14faa1a.png)   <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Hi @Oltman-B  thank you for your effort in creating this pull request. Codewise it looks good to me.  However  I think the right click menu itself is something  we really should discuss with the other developers  since this is a bit controversial. At least for me. 😉  || JabRef 3.8.2:  ![grafik](https://user-images.githubusercontent.com/1366654/82867871-e3a6f000-9f2b-11ea-8cc7-031aceb5d115.png)  @Oltman-B Could you (re-)add this functionality  too?  || Thank you for the PR. We will go ahead with merging!  We created a follow-up issue at https://github.com/JabRef/jabref/issues/6527 - and would be happy if you worked on it 🌮  || > JabRef 3.8.2: >  > ![grafik](https://user-images.githubusercontent.com/1366654/82867871-e3a6f000-9f2b-11ea-8cc7-031aceb5d115.png) >  > @Oltman-B Could you (re-)add this functionality  too?  Thank you! Since making this commit  I decided to start working in .NET  so I removed my Java dev tools for the time being. If I get some extra time Id like to work on the related issue  but if anybody else wants to take it  feel free.  ||
6511,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Return true in action helper if file is online link otherwise it will be interpreted as path which obiously fails  Fixes #6507    <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  ~~- [ ] Change in CHANGELOG.md described (if applicable)~~ Dev version only - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6516,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Add some javadoc and fix the preview update issue <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6447   I have taken a long time considering how to update the preview when preference change. After I found that the PreviewPanel will be bind to entry in FieldsEditorTab.java  then we can just update the layout in PreviewPanel.java#setEntry()  Some ideas: Can we using observer pattern to refactor the code: JabRefPreferences as Observable object and component need preferences can register as Observer. If the preferences were changed  we can notify the affected component to do an update?  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks  codewise looks good to me. We are currently in the process of refactoring the preferences in general and trying to solve the "updating of preferences" without restarting JabRef as well.  || > Thanks  codewise looks good to me. We are currently in the process of refactoring the preferences in general and trying to solve the "updating of preferences" without restarting JabRef as well.  What is the current idea of refactoring these preferences code? I wonder where I can see these discussions? Thanks! || @leitianjian : developer discussion happens here: https://gitter.im/JabRef/jabref . Feel free to participate or even contribute. If you like  we can talk a bit about the principles behind my current attempt in refactoring the preferences. || > @leitianjian : developer discussion happens here: https://gitter.im/JabRef/jabref . > Feel free to participate or even contribute. If you like  we can talk a bit about the principles behind my current attempt in refactoring the preferences.  Thanks for your kindness. Recently Im busy with other things. So  I cannot fully participate in it  but  I will keep track of your pr and the chat in gitter. Maybe I can learn something or provide some ideas || Thanks again for your contribution! I took the freedom to merge it  ) || Thanks! || 
6518,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Refactor main table preferences Follow up to #6509   Merged table preferences  see the screenshot.  ![grafik](https://user-images.githubusercontent.com/50491877/82758371-7d648500-9de6-11ea-8e4e-4cd2c64823dc.png)  Fixes #6515   - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I think the "Enable special fields" should move to another preference tab as this is not really related to the main table. Moreover  is the "Show extra columns" still needed (and what does it do)? Any maybe rename "Natbib style" to what it actually represents (which is actually not clear to me...). || Show extra columns adds additional columns to the combobox providing a column for every filetype (instead of one column displaying different icons for each filetype). In refactoring the tabs to the mvvm pattern we discussed removal of these columns  but decided to keep them  as they were not really complicated to implement or maintain. We didnt want to kill a feature (even though there is probably hardly a use case) without need.  About special fields: I did not yet have any better idea to place them but the general tab. But this is no permanent solution. So I decided to keep this as it is and leave it to a dedicated SpecialFields PR  because I would like to focus here on extracting the calls to JabRefPreferences out of the codebase.  NatBib style is (if i remember right) Lastname or Lastname et al. || Done what I planned to do here. @tobiasdiez do you have a suggestion for the natbib label? || What about "Show only lastname" instead of natbib? (but this is already in abbreviations...so Im not sure what natbib actually does  -)).  Ok  then I would vote to remove the "Show extra columns" option and always add these fields to the dropdown. Its not hurting if there are a couple of more options to select.  I agree with the special fields  it was just an observation as you were already touching the code.  Ill review the code later.... || I fear a merge conflict in/with #6479  regarding the maintableformatter. Therefore I would propose to first merge the other PR and then this.  || Agreed. I took a look at it  we definitely should merge #6479 first. Integrating the changes shouldnt be that hard. Although we worked on the same code  we were working on different aspects. || #6479  has been merged now. || 
6528,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,Additional check if values have changed in bindToEntry Fixes  #5904  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Not yet mergeable  its still in testing. Im not sure if this really solved the problem. Im waiting for @gianlucabaldassarre to answer in the issue thread. || Seesms not to work.  Type randomly in the comment field and create new lines etc and type again hit ctrl + s cursor jumps again to the beginning  || @Siedlerchr : OK  so I wait for updated versions.   > Seesms not to work. > Type randomly in the comment field and create new lines etc and type again > hit ctrl + s cursor jumps again to the beginning || @Siedlerchr just put me on a track. The issue occurs now  if you save after creating a new line... In saving  the fields are trimmed of whitespaces... || This should do the trick. Lets wait for the deployment. || Mhhh  this looks dangerous. Not sure what consequences could arise when the field value and textfield value are different (even if it just whitespace difference). What about moving the `trim` from saving to the set field value method in BibEntry? Ok  maybe this also does not work since then users cannot type anything with spaces at the end because they are immediately deleted... damn.   Another idea: preserve the caret position by hand as in https://stackoverflow.com/a/45334996/873661 (if they really differ only by trimmed whitespace  the new caret position should be easy to calculate) || Tested it from eclipse  does not change anything  caret still jumps to the beginning || System: JabRef 5.1-PullRequest6528.455--2020-05-26--0965648 Windows 10 10.0 amd64  Java 14.0.1  ...If it can help with the problem (sorry if this is naive!): By directly typing into the multi-line tab "{} biblatex source"  (with 1 field) the problem of jumping is not there. Maybe you could use the same code used there for the fields showing the problem?  Moreover  I just discovered that typing into the multi-line fields as "Abstract" and "Comment" (those with the problem) you have you have a lag for which if you type fast you cannot see what you are typing: a problem you do not have when directly typing within "{} biblatex source" where typing is a much smoother (normal) experience. || Next round of testing: https://builds.jabref.org/pull/6528/merge/ :grin:  Thank you all for your patience. This bug seems to be somewhat tricky to catch. || Expected behaviour should be now after 8bcc65b: While editing the contents of the editor field should always remain the same  including whitespaces etc. After changing the entry and saving  the contents are trimmed.  @gianlucabaldassarre Thanks for the note. The source editor is using a different kind of entry editor  called richtextfx (or to be exact CodeArea). This editor has higher demands on memory and processor time. So we try to use this only when necessary. || Hm. I tested your latest changes on this branch  for me its still happening  || I really do not get it. It worked for me  maybe you something I do not see yet. Can you please describe step by step what you are doing? || I recorded a gif  I started JabRef from eclipse with addtional command line parameter `--debug`  ![jabref_comment](https://user-images.githubusercontent.com/320228/83163650-91bcc080-a10b-11ea-80a1-c01013b0bf38.gif)  || @Siedlerchr can you set a breakpoint in the binding code  and see if its called (and if yes with which values of before/after) || Okay  debugging reveals: The binding code triggers for every entered char. It seems there is some issue with line breaks I just typed a and a newline and another a in the next line   newValue: `a\na\n` oldValue: `a\r\na`  || Ahhh...the textarea always uses `\n` for line breaks (its hard-coded: https://github.com/openjdk/jfx/blob/master/modules/javafx.controls/src/main/java/javafx/scene/control/TextArea.java#L129) but JabRef uses `OS.NEWLINE` upon save.  || Oh no... That raises more problems. So the basic solution should actually be right  now its about how the TextArea is compared to the newValue. Should be enough to replace in the string every `OS.NEWLINE` with `\n`... || Thinking about it  it might also be the reason for some of the "Library has been modified by another application." issues. https://github.com/JabRef/jabref/issues/4877 Maybe we should rethink the newline handling on save...   || Should we always save in the OS specific format and rework it on loading? I think this demands a more serious discussion... || > Moreover  I just discovered that typing into the multi-line fields as "Abstract" and "Comment" (those with the problem) you have you have a lag for which if you type fast you cannot see what you are typing: a problem you do not have when directly typing within "{} biblatex source" where typing is a much smoother (normal) experience.  The reason for the lag could be the preview window. Could you please try to deactivate the Preview Window in Preferences->Preview  restart JabRef and try again? || Yes  I confirm that typing is smooth if I "deactivate the Preview Window in Preferences->Preview"  as you suggested.  However  having the preview on the right of each field-tab is quite annoying (at least for me) for two reasons: 1) It takes a lot of space from the field windows (and why should I need to continuously see the preview?) 2) The preview flickers while you type anything  your corner-eye sees it  and this is highly annoying/distracting (indeed  peripheral vision has evolved to be strongly sensitive to changes! : )  An observation/suggestion that maybe might be used to solve both the problem of flickering and of the updating of the Preview Window creating a horrible lag on typing: you could change the program so that the content of the preview is updated only when you change field (or when you do a similar operation that means you have finished to update the field)  rather than each time that you type something. Indeed  updating the previouw is computationally complicated and causes the problems above  and one does not actually need a preview that is always updated.  I understand that the on-line update of the preview "looks cool"  but if it impairs the key functionality of being able to type the fields smoothly (!)  and it prevents the use of the handy "Preview Window" functionality  it is surely not worth it!    On Thu  28 May 2020 at 20:59  Carl Christian Snethlage < notifications@github.com> wrote:  > Moreover  I just discovered that typing into the multi-line fields as > "Abstract" and "Comment" (those with the problem) you have you have a lag > for which if you type fast you cannot see what you are typing: a problem > you do not have when directly typing within "{} biblatex source" where > typing is a much smoother (normal) experience. > > The reason for the lag could be the preview window. Could you please try > to deactivate the Preview Window in Preferences->Preview  restart JabRef > and try again? > > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/6528#issuecomment-635535452>  or > unsubscribe > <https://github.com/notifications/unsubscribe-auth/ADNLQD743E7744BIK5TA7WTRT2YCRANCNFSM4NKTOARQ> > . >  || @Siedlerchr I think the build currently fails because of merging this PR (architecture violation) || 
6554,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,1,Fix Group hit counter calculation preferences closes #6244  fixes #6042  Created this PR because I kinda messed up the git history in PR 6244. - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. After short videocall with @koppor  this should be safe to merge. ||
6554,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,1,Fix Group hit counter calculation preferences closes #6244  fixes #6042  Created this PR because I kinda messed up the git history in PR 6244. - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. After short videocall with @koppor  this should be safe to merge. ||
6558,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Use letters to acess recent libraries in menu <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6529   After fix the issue: (I typed 1  then 2  then 2)  ![K8XVNKFj8t](https://user-images.githubusercontent.com/55199983/83321605-57762f00-a283-11ea-8050-bbf5079d5ed4.gif)  It can open a database relative to typed key. And I also checked that when typing a letter not a num(eg  a)  there will be nothing to happen. And if type a num larger than the max index of history record  nothing will happen as well.   The main idea to solve this issue is to add key event listener in `JabRefFrame.java` and design relative handle function `openFileByKey()`.  ![image](https://user-images.githubusercontent.com/55199983/83321745-4f6abf00-a284-11ea-838f-a73e34e7672d.png)   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6567,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix exception for unlinked files <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #5815 Exception when importing certain unlinked local files  1. For some certain files  they have metadata  but cannot find start or end tag  so cause exception. I added statements to check if can find start or end tag  and if the position of start tag before end tag in metadata. 2. Original `private List<Path> getFileListFromNode(CheckBoxTreeItem<FileNodeWrapper> node) ` method just can find children nodes  so causes that files under subfolder cannot be found  then cannot be imported. I modified this method to iterate find all selected leaf nodes.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Just another wish  it would be really cool if you could a test for the fix in the XMPUtilReader as well  see   `XmpUtilReaderTest` || Ok  ill try. || Done || Done. || Thanks for the quick follow up! ||
6578,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Fix XMP Exctrator not returning empty optional Fixes #6577  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6586,1,0,0,1,0,1,1,0,1,0,1,1,1,1,1,1,0,0,1,Validates the file path of a TexGroup and fixes Texgroups "Library has been modified by another program" Fixes #6420. Fixes #6585.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I do not know where to put `import org.apache.logging.log4j.core.util.FileUtils `. Wherever I put it  checkstyle fails. || @systemoperator  We have our own FileUtil class in model or logic  beware of the import.  || Checkstyle is failing because of now unused import io.file. || Apparently  this PR also fixes #6394. At least I could not reproduce it so far. I will test it onwards. || > Just to make sure that I understand the changes correctly: the issue is fixed by parsing the groups last?  Yes  because the groups access data which need to be defined beforehand. Depending on the sequence in the entry set  this may work once but not every time. || Now without stream.^^  Any suggestion how to test the case mentioned at https://github.com/JabRef/jabref/pull/6586#pullrequestreview-425395135? || The code looks good to me! For the test  it should be similar to the following: https://github.com/JabRef/jabref/blob/7cc57474b7aa991ef6ea148d4030d4bb68ee69bf/src/test/java/org/jabref/logic/importer/fileformat/BibtexParserTest.java#L1369-L1389  Create the string by hand (with groups before the other setting that makes troubles) and then verify that the groups in the parsed metadata has the valid data. || The test was a bit tricky (access real file  relative  user name  hostname  ...)  but it works now. ||
6586,1,0,0,1,0,1,1,0,1,0,1,1,1,1,1,1,0,0,1,Validates the file path of a TexGroup and fixes Texgroups "Library has been modified by another program" Fixes #6420. Fixes #6585.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I do not know where to put `import org.apache.logging.log4j.core.util.FileUtils `. Wherever I put it  checkstyle fails. || @systemoperator  We have our own FileUtil class in model or logic  beware of the import.  || Checkstyle is failing because of now unused import io.file. || Apparently  this PR also fixes #6394. At least I could not reproduce it so far. I will test it onwards. || > Just to make sure that I understand the changes correctly: the issue is fixed by parsing the groups last?  Yes  because the groups access data which need to be defined beforehand. Depending on the sequence in the entry set  this may work once but not every time. || Now without stream.^^  Any suggestion how to test the case mentioned at https://github.com/JabRef/jabref/pull/6586#pullrequestreview-425395135? || The code looks good to me! For the test  it should be similar to the following: https://github.com/JabRef/jabref/blob/7cc57474b7aa991ef6ea148d4030d4bb68ee69bf/src/test/java/org/jabref/logic/importer/fileformat/BibtexParserTest.java#L1369-L1389  Create the string by hand (with groups before the other setting that makes troubles) and then verify that the groups in the parsed metadata has the valid data. || The test was a bit tricky (access real file  relative  user name  hostname  ...)  but it works now. ||
6587,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,Fix some fetcher tests refs #6369   - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I think the INSPIRE test can also be fixed  seems like the bib item changed || The INSPIRE test leaves me clueless. The text is exactly the same. Maybe its about the line seperators? I was unable to debug the test myself. Can you maybe take a look at it  @Siedlerchr ? || For inspire change the line in the second entry to this: `        article.setField(StandardField.JOURNAL  "Nucl. Phys. B") ` without the double back slashes || @Siedlerchr and @tobiasdiez   could you do me a favor and take a look on the buildinfo stuff  im not sure if I did that right and im unable to debug that. According to the test log  instead of the api key the IEEE fetcher only recieves three asterisks from the build script. Is this normal? Did I do something wrong? || The test log does not output the API keys  it just outputs starts. This is perfectly OK. || This PR is done for now and should fix all the fetcher tests  except IEEE fetcher  which depends most likely on a new api key. || So we now only have MrDlib and IEEE not working || Strange  MrDlib tests ran through an hour ago without complaining... || 
6590,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,FIX RIS DOI import Use DOI parse and only add valid DOIs  Follow up from #6557  Fixes #6530  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6590,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,FIX RIS DOI import Use DOI parse and only add valid DOIs  Follow up from #6557  Fixes #6530  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6603,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Fixed an issue where entry preview tab has no name in drop down list. Fixes #6591  I didnt add "Preview" to `JabRef_en.properties` because already exists.  ![image](https://user-images.githubusercontent.com/20928760/84149544-ea238480-aa60-11ea-8280-74fd45f974b1.png)  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6608,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix downloaded files moved to citation key dir Fixes #6589  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6635,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Change "duplicates" window to recall size/position The "Possible duplicate entries" window now remembers its size and position throughout a session ([#6582](https://github.com/JabRef/jabref/issues/6582)). This was done by adding a DialogWindowState class to the gui utils. This class stores the size and position of the dialog window. The StateManager class was modified to store this object. It is retrieved whenever a new DuplicateResolverDialog object is created to get the previous size and position and is updated whenever the user proceeds through the dialog options. The DialogWindowState class can be re-used if this feature is needed for other dialog windows.  This is my first ever pull request so please let me know what you think or whether I need to re-tool my approach to be more in line with the structure of the rest of the code! I did not include any screenshots as this felt like a sort of awkward fix to try and take screenshots of.  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Hi @gdstewart   thank you for your work. I really like the idea. About the implementation  on first sight I would suggest two enhancements: could you inject the statemanager in duplicateresolverdialog in the constructor  so we can do without using globals  and secondly  could you rework the dialogwindowstate class immutable?  For other clean code principles we try to follow in JabRef  have a look at the excellent book Java by comparison by two former developers of jabref. https://java.by-comparison.com/  If you have questions  do not hesitate to ask us in the Gitter-chat https://gitter.im/JabRef/jabref || On first sight looks already pretty good  besides some checkstyle issues. Got two ideas for improvements: Instead of using magic strings (e.g. `"DUPLICATE_RESOLVER_DIALOG"` ) you could use the classname instead (`getClass().getSimpleName()`). Also  if you are interested in implementing a toString-method and a simple parser  I believe this should be very simple to store in the preferences.  Thank you for your ongoing Interest in JabRef! || 
6637,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Fixes issue where Unix crashes when inotify is full Previously  the program was crashing for Unix users when inotify had reached its max file limit. Since the only way to fix this seems to be to close applications or to edit privileged system files  the proposed solution is to notify the user of the issue and give them the option of continuing usage of the application. Fixes #6073 Since this is an important fix  it should not be stalled. @cttillman We hope that youll include other improvements in JabRef  so we want to share knowledge about the coding ideas in JabRef. The localization is a difficult thing here. Would you mind to fix the localization isse?  ![grafik](https://user-images.githubusercontent.com/1366654/86087605-e81f7500-baa4-11ea-97dc-df83dc89027d.png)  ||
6641,1,0,0,1,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,mEDRA DOI fetcher implementation. fixes #6602  I added the possibility to retrieve DOI metadata from mEDRA agency . Some DOIs return 500 code even if they are correctly registered at mEDRA. Im waiting for the mEDRA team to answer on that.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. In general looks already good! 👍 It would also be nice if you could add a/some tests for the new feature || Looks good so far  I only noticed one failing test  you have to add the Medra Fetcher to the test array in org.jabref.logic.importer.WebFetchersTest  Could you also please add one test case to the existing DOI Fetcher to check that it returns the correct value from MEDRA?  || Ok  I added a test case to DoiFetcher. Passed.  Regarding the test array in org.jabref.logic.importer.WebFetchersTest  if Ive correctly understood the logic  I think I should remove Medra Fetcher in the below method  instead of adding. In this way tests are passed.  ```  @Test     void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {         Set<SearchBasedFetcher> searchBasedFetchers  WebFetchers.getSearchBasedFetchers(importFormatPreferences)          try (ScanResult scanResult  classGraph.scan()) {             ClassInfoList controlClasses  scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName())              Set<Class<?>> expected  new HashSet<>(controlClasses.loadClasses())               expected.remove(SearchBasedParserFetcher.class)               // Remove ACM  because it does not work currently             expected.remove(ACMPortalFetcher.class)               // Remove GROBID  because we do not want to show this to the user             expected.remove(GrobidCitationFetcher.class)               // Remove mEDRA  because it only works for ID based search             expected.remove(Medra.class)               assertEquals(expected  getClasses(searchBasedFetchers))          }     } ```  If you think this could be a proper approach  I will commit. || Still checkstyle issues. Ill work on that. || Are you using Intellij? Then you can import the style and let the IDE format your changes and organize the imports || Nope  Eclipse. || For the imports you can use ctr+ shift +o will organize the imports  || I believe this has been a really great lesson for me since Ive gone through several never encountered issues.  I hope this will be released at the end so I can move forward to another issue.  Thanks a lot for your patience and guiding advices.   || Once your PR is merged in master it will be available in the next automatic build of development version  https://builds.jabref.org/master/ || I think something went wrong with the merge of master into this branch. Need to investigate manually before merging.  General remark: The discussion in this PR seems to be long?  - Are respective code comments added? - Might it be necessary to add an [ADR](https://adr.github.io/madr/)? || Hi @koppor  thanks for the feedback. One of the last commit was rejected with non-fast-forwarding error  so i tried to pull the medra-fretcher branch back to local and then push back only the last changes. Could this have messed up something? And most important  is there anything I should/could do  for example creating new branch and work the implementation there?  About comments I inserted a few lines in the code where I thought they could have help. Is this you are referring to?  About ADR probably I need some more instructions. Is it something I should do on my own?  Thanks again. || Live update: This commit is OK: https://github.com/JabRef/jabref/commit/81d5cc395b8704e17015659ec9d1b3065922ecc9  this one is not: https://github.com/JabRef/jabref/pull/6641/commits/85fc98f2305cb4c32074270bd3f1ef1d6adb216b. Have to think longer of how to solve it.  Regarding the ADR: The ADR is something signifcat which cannot be put into a JavaDoc / comment alone. I think  your DOI regsitry thing is something like that. -- Maybe  its engough to have it in the JavaDoc / comment in this case - as its not such a significant thing such as selecting a build tool. See https://github.com/JabRef/jabref/tree/master/docs/adr for ADR examples. || Last commit https://github.com/JabRef/jabref/pull/6641/commits/a1089743739ddf9a1df58018028ab90e7267088b.   With some git magic  I created 4f96aab  which should revert all wrongly added changes.  Now  Im going to review || @mind000 Why did you close this PR? Did you delete the branch? I think  it should only be necessary that you pull your branch. Hope  I did not confuse you that I updated your branch! || I haven’t done anything.  || I was just moving through the comment in the GitHub app form mobile. It’s strange  I didn’t close it  or I haven’t done it intentionally. What should I do? Should I reopen it? || Just clicked on "Reopen PR" and everything is back to normal - hopefully 🎉   With a "git pull"  you should get the fixes in locally. || I must thank you for the time you spent on this. Really.  I do sincerely appreciate your comments because that’s what I need  and I understand  your point. I will work on them.  || Thanks for your contribution @mind000 and the quick follow up! We hope you werent frightened by our reviews  ) And we hope you will continue contributing!  || Shit  saw this only after merge: org.opentest4j.AssertionFailedError: The following classes are not allowed to depend on org.jabref.logic > expected: <[]> but was: <[src/main/java/org/jabref/model/entry/identifier/DOI.java]> || > Shit  saw this only after merge: > org.opentest4j.AssertionFailedError: The following classes are not allowed to depend on org.jabref.logic > expected: <[]> but was: <[src/main/java/org/jabref/model/entry/identifier/DOI.java]>  Anything I should do? This happened when I moved the `getAgency` from `DoiFetcher` to `DOI`. || The idea behind our [High-level architcutre](https://devdocs.jabref.org/getting-into-the-code/high-level-documentation) is to have the model as model package. We are aware this leads to an [anemic domain model](https://www.martinfowler.com/bliki/AnemicDomainModel.html).  Not sure whether downloading things should be part of a **model**.  Think  this is a devcall thing. We should discuss whether we want to "undo" the seperation of model and logic. What are our "limits" in model? @stefan-kolb  || as the build is broken now I would vote to simply change it back to the original  e.g. move the agency fetching back to the fetcher.  || What should I do now?  || @mind000  Just create a new PR where you move the DOI agency getting back to the DOIFetcher class. That is the simplest solution and this would not destroy our architecture constraints || So  if I got it right  I have to push the same files as the last commit I made  changing only the getAgency location.  || as the code is already merged into master you fetch and pull the upstream master in your local master then you create a new branch and then you just move the getAgency back to DoiFetcher. Then you commit your changes and push your new branch and create a new PR  Am Mo.  13. Juli 2020 um 09:02 Uhr schrieb Giovanni Caldarola < notifications@github.com>:  > So  if I got it right  I have to push the same files as the last commit I > made  changing only the getAgency location. > > — > You are receiving this because you modified the open/close state. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/6641#issuecomment-657392947>  or > unsubscribe > <https://github.com/notifications/unsubscribe-auth/AACOFZB6KFRY2YWRD7KQBYTR3KWRRANCNFSM4OJDHZDA> > . >  || For internal referencre: follow-up PR is https://github.com/JabRef/jabref/pull/6683.  Thus  everyhting should be fine now. || 
6642,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix for exception thrown if no delimiters were specified Assigned default values for delimiters to fix the exception thrown Fixes #6624  <!--   -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I commited my update. The required "import" is not added. Maybe  someone can add it.  Otherwise  Ill try to find time on the weekend and go ahead with merging  this is some kind of hotfix and should go in early. || 
6664,1,0,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,Add Collection of Comp Sci Bibliographies fetcher Fixes #6638  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks for your contribution! It would be nice if you could add some short documentation for the new formatters and the new fetcher to the help pages  || Help page for formatters: https://github.com/JabRef/user-documentation/blob/master/en/finding-sorting-and-cleaning-entries/cleanupentries.md --> https://github.com/JabRef/user-documentation/blob/master/en/advanced/saveactions.md  Help page for fetchers: https://github.com/JabRef/user-documentation/tree/master/en/collect/import-using-online-bibliographic-database || Yep Ill add to the documentation! ||
6682,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,Rework search bar ![picturemessage_3ata4qts chg](https://user-images.githubusercontent.com/50491877/87246991-42c7b200-c451-11ea-9a4d-2f5e11be92e8.png)  fixes #6625   - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. > The changes look good to me. The only concern that I have is that the search bar is now really small. Thus  while editing a more complex query  it is no longer possible to see the complete query (and "scrolling" in a text field is rather tedious). This was the main reason for the "extend on focus" mode. Im not particularly attached to the extend animation but it should be still possible to comfortably edit more complex queries.  Im not quite sure I understand what you mean about the small search bar... I removed the previous restriction of the searchbar to expand to the right  so now its always extended. The empty space still showing between the searchbar and the toolbar buttons is left over from before and shows "Found X entries". I did not yet had a good idea what to do with this message  so i did not touch it (except adding 4 pixels distance to the searchbar).  For comparison: This is how the master branch looks right now: ![grafik](https://user-images.githubusercontent.com/50491877/87455322-8cf19480-c605-11ea-9fdf-9d01182a6a27.png) || Ah ok  then I misread the code and the first screenshot - I thought thats now the size of the search bar.  || Maybe the stored value is corrupt and not parseable by value of... || 
6693,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,fixed issue 6692 Fixes #6692  renamed listBind to bindContent where it was used  
6706,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,Readability for citation key patterns <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #3920.   The issue is that `AuthorList#fixAuthorForAlphabetization` is used to create a `String` representation of authors names. This can leave unbalanced brackets if a name piece starts with a latex command  as it is not the intended use of the method.  The suggested fix is to resolve latex in the name of an author and then remove any illegal characters in the post-processing (which is dependent on if it is going to be used as a file path or citation key). As Unicode characters are already allowed in the name of an author  this change should not affect users too much. It will  however  * have slower performance  as all authors are being processed as if they contain latex * **in almost all cases that contain latex  it will produce different output than the previous solution**  **As always  these are only suggestions. Any comments and criticism are encouraged!** The "intuition" behind the suggestion is that latex in Strings will always be hard to deal with  and I think most users expect a pattern to resolve to something as similar as possible to what is shown in the main table.  **What remains** - [x] verify that the `CitationKeyGenerator` does not output Unicode keys - [x] ~remove the `latex_to_unicode` modifier as it should not be used~ - [x] change access modifiers for methods in `BracketedPattern`  Id suggest that most should be private or protected - [x] ~change how arguments are parsed for `auth.../ed...` patterns (readability)~ - [x] add test cases for this issue - [x] test for character classes in regexp - [ ] Fix parsing of bracketed patterns - [ ] Fix the conversion of unicode to characters allowed in bibtex keys in `CitationKeyGenerator`  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. A test case for this particular issue (where starting brackets can cause a problem) will be added! It is just taking a bit of time since I havent been able to spend as much time on this as I would have wanted 🙁  Id argue that it is motivated to make several methods in `BracketedPattern` private  but then test cases in `CitationKeyGeneratorTest` depends on them being public -> a lot of refactoring.  > For your discussion of the consequences  maybe an [ADR](https://adr.github.io/madr/) could be the proper format.  I should have written most of the pull request in ADR format? || The issue of unbalanced brackets is adressed by converting all authors names to Unicode  however  Id benefit from a second (and/or third) opinion at this point. Several **cite key** patterns do not work as expected when names containing latex are converted to Unicode   Example: `[auth2]` for "Gödel" would result in "Goe". `[authN]` should get the first N character of the authors last name.  I extended the workaround that already existed for `authN`  https://github.com/JabRef/jabref/blob/156d22ef9d65392973a44c88c61ae42672d637fc/src/main/java/org/jabref/logic/citationkeypattern/BracketedPattern.java#L900-L902  to several other `auth`/`edt` patterns (and I will update those patterns in the documentation if this solution is acceptable).  An alternative would be to extend the workaround from `authN` to all author/editor patterns  which would give more consistent results (all authors names will contain replacements for Unicode characters) for files  directories  and cite keys.  The issue where `BracketedPattern` cant use Unicode because of restrictions in `CitationKeyGenerator` can be avoided entirely by preprocessing the BibEntries in CitationKeyGenerator  but I do not feel I can adequately judge the advantages/disadvantages of the different solutions that would accomplish this  so Id rather leave it to someone else if there are future issues/complaints.  **So the alternatives are ** 1. leave the behaviour as is  2. replace all Unicode characters for patterns that requires the number of character to be known in advance  3. replace all Unicode characters in all patterns with authors names in.  and maybe 4th  I can continue attempting to fix this "properly" (allow unicode in all patterns for `BracketedPattern` and disallow for `CitationKeyGenerator`)  but it will result in even more work for a reviewer. || (Thank you for the longer explanation. Now  I begin to understand what your are really adressing. Your PR was full of good code style improvements  which ditracted me to focus on the underlying issue.)  Context for others: The PR addresses the issue that the patterns are used for something diferent than the bibtex key generation ("label pattern"). Documentation at https://docs.jabref.org/setup/bibtexkeypatterns#key-patterns. Our patterns have "magic" built in  such as shortening EACH element to `n` letters. We do not offer a streaming approach as [crush](https://github.com/liljencrantz/crush) does (just linking for presenting an idea  not applicable as solution in this context).  I would expect following behavior:  - (i) when using in the bibtex key generator  the non-ascii characters are converted to a "good" representation (as in your example: Göd -> Goe) - (ii) when using the pattern in other places  the unicode represation is used.  Reason: Unicode is working in the year 2020. The only exception are BibTeX keys  because the bibtex tooling is not fully UTF8 (biblatex+biber is  but not the more commonly used bibtex tool). Thus  we will have to add a separate handling here.  For case (i)  the author stated `:latex_to_unicode`. As you pointed out  the length restriction wont work there.  To achieve the different handling  you already stated the solution:  >  entirely by preprocessing the BibEntries in CitationKeyGenerator  I like that! Then  the  "he workaround that already existed for `authN`" is obsolete  ---  Minor issue: Is the example of https://github.com/JabRef/jabref/issues/3920 included in a test case here?  I think  this somehow refs https://github.com/koppor/jabref/issues/392.   || > I think  this somehow refs [koppor#392](https://github.com/koppor/jabref/issues/392).  How? 😛   > Minor issue: Is the example of #3920 included in a test case here?  The example relates to `BracketedPattern`  it is my "solution" of that example that make the consequences for `CitationKeyGenerator` harder to ignore  which is why my discussion is focused on that part. https://github.com/JabRef/jabref/pull/6706/files#diff-2d88a18eec12a5bc7ee602a1bba56168R271-R277  >  > > entirely by preprocessing the BibEntries in CitationKeyGenerator >    > I like that! Then  the "he workaround that already existed for `authN`" is obsolete  This is (based on my current understanding) non-trivial  which is why I havent done it and why it would require more time from reviewers if I attempt to implement it. Ill get back with a write-up on why but itll be somewhat lengthy. || Hum  Ill give it a shot and if it is too annoying to review we can just revert it X) || > ... I have some nitpick comments  ...  Nitpicking is always welcome. I am new enough at this that a "nitpick" is still a learning experience 😝   Tell me if I should focus more on the actual issue  since it was/is tagged as a high priority bug.  || Id like som input on patterns such as `[auth[auth[auth`. Based on [the coding guidelines](https://devdocs.jabref.org/getting-into-the-code/code-howtos#throwing-and-catching-exceptions) I believe they should throw an exception and generate a warning message  is this correct?  This is relevant as "unifying" the parsing of the patterns (Id like it in one spot  not three) will make it easier to ensure that the `Unicode -> ASCII` conversion use a valid String. || Is it possible to fix checkstyle? This does not look good:  > /home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java:9: error: package org.jabref.model.bibtexkeypattern does not exist  || > Seeing the long list of changes  I would suggest to merge this in - and then work on the two remaining open points. - Otherwise  it will get harder and harder to review.  Sorry about that. I didnt really expect to go down this route.  After the merge Ill open up a PR for issue #6892 dealing with parsing. `<edit>` I realized this PR still closes issue #3920. The problem with converting unicode characters is not in the issue tracking system. I can open up a PR for it after #6892 is fixed  if that sounds reasonable? `</edit>` || >> Seeing the long list of changes  I would suggest to merge this in - and then work on the two remaining open points. - Otherwise  it will get harder and harder to review.  > Sorry about that. I didnt really expect to go down this route.  No need to be sorry. I have to thank you that you  keep working on the PR even if much time is spend on the code quality.  > After the merge Ill open up a PR for issue #6892 dealing with parsing.  Year  thank you for that!  > I realized this PR still closes issue #3920. The problem with converting unicode characters is not in the issue tracking system. I can open up a PR for it after #6892 is fixed  if that sounds reasonable?  Sure  step by step. || 
6723,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Delete link after download Fixes #6588.  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Replaced `Optional<Integer>` by `int` as we directly operate on the list and do not use the full power of `Optiona.`. || I do not really think that the new version is much more readable  but ok... || @koppor Please test   1. Pre-condition: Entry with link (in the file field) 2. Right-click: download 3. Link should be replaced || Tried it out locally. Works.  ![grafik](https://user-images.githubusercontent.com/1366654/89350528-7f817480-d6b0-11ea-889a-7fe3532ebf21.png)  ||
6725,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Add CSS Customisation This PR continues the abandoned PR #6036 As discussed in the DevCall  we are now aggressivly finishing those PRs we would like to include in JabRef. Works so far  yet I still want to make some changes with the optics... Introduces also AppearancePreferences  (Screenshots are out of date  see below)  fixes #5790  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. As you are working on that theme and preferences stuff  maybe you can also check for this issue/PR?  #6429  || Sure  Ill have a look. || I do not really see the value in the export button. Instead I would focus more on a good documentation on how to create a custom theme  linking the main and dark.css in our repo. Or do I miss something? || To be honest  I do not see any advantage in the export button too  but in the first step I just wanted to preserve the effort the students put in it and to address the raised issues in the predecessor PR. Now Im thinking about how to improve it. So ideas are welcome.  Btw. We should really think of cleaning up our css-files and to distinguish between changeable stuff and unchangeable. This is kind of messed up atm all through the codebase... || Ok  then I would propose to remove the export dialog - also makes the implementation more streamlined.  Not sure what you mean with "changeable" vs "non-changable" in the css code. I think themes can override everything. || There are many specialized css files eg for the entry editor  for the preferences dialog  for the groups (I think I remember)  partially because we do some detail styling in these specialized css files  which are not customizable. || I took some time to debug the issue in #6429  I tried to introduce a listener ``` EasyBind.wrapNullable(dialogPaneProperty()).subscribe(pane ->                 Globals.getThemeLoader().installCss(getDialogPane().getScene()  Globals.prefs))  ``` in the BaseDialog constructor. The problem seems to be  that Java only calls the subscriber when already this dialog was opened before. So it works  but only on the second attempt. Strange... Maybe @Siedlerchr has a clue. But since this issue is not directly connected to this PR I suggest we follow it in #6429. Also i noticed  we have to make the controls dependend on the selected font size  since they wont be displayed properly if the font size is increased.  Therefor this PR should be ready review.  ![grafik](https://user-images.githubusercontent.com/50491877/90028431-f246ad00-dcb9-11ea-9387-a965f418509b.png) || The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` Marcel Luethi Nils Streijffert Qing ShiqingLiu WangAooa ```  || The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` Nils Streijffert ```  || 
6725,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,Add CSS Customisation This PR continues the abandoned PR #6036 As discussed in the DevCall  we are now aggressivly finishing those PRs we would like to include in JabRef. Works so far  yet I still want to make some changes with the optics... Introduces also AppearancePreferences  (Screenshots are out of date  see below)  fixes #5790  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. As you are working on that theme and preferences stuff  maybe you can also check for this issue/PR?  #6429  || Sure  Ill have a look. || I do not really see the value in the export button. Instead I would focus more on a good documentation on how to create a custom theme  linking the main and dark.css in our repo. Or do I miss something? || To be honest  I do not see any advantage in the export button too  but in the first step I just wanted to preserve the effort the students put in it and to address the raised issues in the predecessor PR. Now Im thinking about how to improve it. So ideas are welcome.  Btw. We should really think of cleaning up our css-files and to distinguish between changeable stuff and unchangeable. This is kind of messed up atm all through the codebase... || Ok  then I would propose to remove the export dialog - also makes the implementation more streamlined.  Not sure what you mean with "changeable" vs "non-changable" in the css code. I think themes can override everything. || There are many specialized css files eg for the entry editor  for the preferences dialog  for the groups (I think I remember)  partially because we do some detail styling in these specialized css files  which are not customizable. || I took some time to debug the issue in #6429  I tried to introduce a listener ``` EasyBind.wrapNullable(dialogPaneProperty()).subscribe(pane ->                 Globals.getThemeLoader().installCss(getDialogPane().getScene()  Globals.prefs))  ``` in the BaseDialog constructor. The problem seems to be  that Java only calls the subscriber when already this dialog was opened before. So it works  but only on the second attempt. Strange... Maybe @Siedlerchr has a clue. But since this issue is not directly connected to this PR I suggest we follow it in #6429. Also i noticed  we have to make the controls dependend on the selected font size  since they wont be displayed properly if the font size is increased.  Therefor this PR should be ready review.  ![grafik](https://user-images.githubusercontent.com/50491877/90028431-f246ad00-dcb9-11ea-9387-a965f418509b.png) || The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` Marcel Luethi Nils Streijffert Qing ShiqingLiu WangAooa ```  || The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` Nils Streijffert ```  || 
6740,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix copy pasting and delete via menu or key Add hack for OSX. Caveat: Prevents pasting using Cmd+V on an empty library. Menu pasting however works.  Fixes #6739  Fixes #6738  Fixes #6293   Would be nice if someone could test this for windows/linux as well  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. This bug reoccurs for me on  JabRef 5.1--2020-08-22--dc55a76 Linux 5.4.19-050419-generic amd64  Java 14.0.2  I cant help but now  under Linux  neither the cut/copy  nor paste buttons seem to work anymore  consistently. Im using  as you can see  a JabRef just a couple of days old. However  using keyboard shortcuts works as usual. ||
6740,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix copy pasting and delete via menu or key Add hack for OSX. Caveat: Prevents pasting using Cmd+V on an empty library. Menu pasting however works.  Fixes #6739  Fixes #6738  Fixes #6293   Would be nice if someone could test this for windows/linux as well  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. This bug reoccurs for me on  JabRef 5.1--2020-08-22--dc55a76 Linux 5.4.19-050419-generic amd64  Java 14.0.2  I cant help but now  under Linux  neither the cut/copy  nor paste buttons seem to work anymore  consistently. Im using  as you can see  a JabRef just a couple of days old. However  using keyboard shortcuts works as usual. ||
6740,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix copy pasting and delete via menu or key Add hack for OSX. Caveat: Prevents pasting using Cmd+V on an empty library. Menu pasting however works.  Fixes #6739  Fixes #6738  Fixes #6293   Would be nice if someone could test this for windows/linux as well  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. This bug reoccurs for me on  JabRef 5.1--2020-08-22--dc55a76 Linux 5.4.19-050419-generic amd64  Java 14.0.2  I cant help but now  under Linux  neither the cut/copy  nor paste buttons seem to work anymore  consistently. Im using  as you can see  a JabRef just a couple of days old. However  using keyboard shortcuts works as usual. ||
6746,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,Fix entry gets deleted after aux import Set changed flag on clone also for Misc entry type  because otherwise it equals the default entry type and no change is triggered which results in the entry not beeing written to the database on save Fixes  #6405  Simplify gui code  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. @calixtus and me implemented all required changes. || Manually tested the changes again  All good. Merge now ||
6747,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,[6574] Added support for biblatex-software Added change to changelog Fixes #6574   <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> This PR is in reference to #6574  Added the new biblatex software entries under a new divider like the below image  ![biblatex-software](https://user-images.githubusercontent.com/13389954/89727491-13ea2f00-da43-11ea-8705-7773fc349a0d.png)  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Hi @koppor  I have gone ahead and made a draft set of changes for #6747    - Created a divider like in IEEETran for BibTex and added the software entries under it I am yet a little un-clear on the Customized Entry type flow   so I have not progressed on that   do give your thoughts || Hi @hemantgs   on first sight codewise your changes look good to me. Thank you very much for your work on this feature.  I also was thinking about abstraction of this feature in the mid to far future  maybe something to decide on JabCon2020  so do not think of it in this PR: One could activate native support for biblatex-software or IEEE or for music or other biblatex drivers as an additional feature in the preferences. || Yep codewise looks already good! || @calixtus @Siedlerchr Cool 👍  Would it make sense to add change to the documentation page also ? || Yes  I think that makes sense and to have a nice newer screenshot for here and the entry id manually https://docs.jabref.org/collect/add-entry-manually And it would then be nice if you could add a hint that the New Entry types dialogue content is dependent on the bibdatabase mode  https://docs.jabref.org/collect/add-entry-using-an-id || > Thank you for working on it. I have some refinemenets to the adr.  Hi @koppor I have updated the ADR per the review comments   please do have a look || Thank you very much for your contribution and for creating an ADR! || Id id not the final check on the PR. We missed two things now breaking master:  ## Unit test related to this PR fail  ![grafik](https://user-images.githubusercontent.com/1366654/90988562-f022ff00-e593-11ea-8dc0-7d3d8849976d.png)  ## markdown-lint  This is an easy fix. (Linter ensure consistent formatting of all files)  ![grafik](https://user-images.githubusercontent.com/1366654/90988552-dda8c580-e593-11ea-871c-fffd4afdd1e6.png)  || markdown-lint is already fixed in master 🎉  || Not sure why the other PR complained ther: https://github.com/JabRef/jabref/runs/1016112813?check_suite_focustrue || Markdown was fixed. I overlooked the unit test probably because of the failing architecture thing. Probably need to add those b iblatex software somehow to the test. Can look into this tomorrow || Fixed  by @calixtus  || Test fixed at https://github.com/JabRef/jabref/pull/6780. || Looks like I overlooked the unit test   apologies guys || We did so too  no need to apologize. :wink:  ||
6760,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix HTML chars formatter for percent sign Fixes #6753   - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [X] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks for your fix! The changes look good to me. Could you please add a change log entry  and add a few tests to https://github.com/JabRef/jabref/blob/master/src/test/java/org/jabref/logic/layout/format/HTMLCharsTest.java.  @koppor the validate authors workflow is failing. Can you please have a look! || @tobiasdiez Fixed in https://github.com/JabRef/jabref/commit/f2c8748712084b63ea1cc25a9ae9d69c35c885b2. Reason was unescaped backtick and quotes in the message output. Refs https://github.com/JabRef/jabref/pull/6722. I did not test my review-updates properly. ||
6768,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Merge identical group color indicators fixes #6175   This PR finishes the PRs of @WangAooa (see #6566 ) and does some cleanup in the MainTableColumnFactory: LinkedIdentifierColumn  FileColumn and SpecialFieldColumn is now extracted in separate classes.   - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` WangAooa ```  || The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` Marcel Luethi WangAooa ```  || The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` Marcel Luethi Qing ShiqingLiu WangAooa ```  || Checkstyle is happy again  so I am merging. ||
6768,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,Merge identical group color indicators fixes #6175   This PR finishes the PRs of @WangAooa (see #6566 ) and does some cleanup in the MainTableColumnFactory: LinkedIdentifierColumn  FileColumn and SpecialFieldColumn is now extracted in separate classes.   - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` WangAooa ```  || The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` Marcel Luethi WangAooa ```  || The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` Marcel Luethi Qing ShiqingLiu WangAooa ```  || Checkstyle is happy again  so I am merging. ||
6771,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Shared database synchronized by FocusChangedEvent This PR is related to #6663 and partly #4461.  Shared database synchronization event in `DBMSSynchronizer` is triggered by a `FocusChangedEvent`. This is added similar to `FieldChangedEvent` but has to be initiated from `EntryEditor` (?).  I have manually tested the new code - _and it does not work_. Maybe we can discuss changes through this pull request.  Thank you for your help. I tried firing the event via the `BibEntry` method `setFocusedField`. Again  this method is called by `EntryEditor` via `setFocusToField`. But I do not know if this is generally possible.  Perhaps the second commit is a bit irritating  it is only uncommenting something in `DBMSSynchronizer`... Sorry for that. The important commit is `87adec3b`.  || Its a bit complicated with all those listenes. The EventBus is a local object.  In fact its similar to the classical EventLIstener in GUI. An even its relayed to its parend until its handled. The only difference is that we do this relaying here manually. When you add a new Event in BibEntry you have to relay that to the call chain.  https://github.com/JabRef/jabref/blob/37099243160e43b6658ec13d997da7468e426a67/src/main/java/org/jabref/model/database/BibDatabaseContext.java#L196-L202  And the CoraseChangeFilter register itself here: https://github.com/JabRef/jabref/blob/4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b/src/main/java/org/jabref/model/database/event/CoarseChangeFilter.java#L19-L23  it registers itselt as a listener on BibDAtabase. And BibDatabase finally register itself on each entry: https://github.com/JabRef/jabref/blob/9d17101626571966d8278bb7fbd02129eff78a71/src/main/java/org/jabref/model/database/BibDatabase.java#L198-L206  So you need to listen for the FocusChangedEvent and relay that || Thank you for your help. Finally  I deleted all `FocusEventChanged`-related stuff and concentrated on `CoarseChangeFilter`. There I introduced a `DelayTaskThrottler` for the `eventBus.post(event)`. Also I revised the conditionals while introducing three conditions: - `isNewEdit`: Editing right after loading shared database. - `isEditOnOtherField`: Editing other field  changes on previous field should be synchronized. - `isMajorChange`: Some editing with much character input.  I found out that a throttled task will not interrupt any input. That means if a `FieldChangedEvent` is posted with delay  you can write further until database synchronization appears. In the worst case you lose some information because all characters typed in after the event are not synchronized. Furthermore  it appears that when the event is posted during delay JabRef hangs up...  Can you reproduce this problems? In general  it works as intended.  Another idea: What about throttling _all_ `FieldChangeEvent`s in order to not interrupt input process? Then we would have to ensure that all pending synchronization events would be ready before closing the database. We could add an indicator in the GUI for this purpose or add something on closing-database event. || Side note: We have an internal discussion ongoing  why not using JavaFX Observables everywhere - instead of the event bus. Not fully checked all aspects until now. Will (hopefully) be done at [JabCon](https://jabcon.jabref.org/). Do you have a "feeling" on that? || I have not much experience with JavaFX Observables but it seems like they are directly bound to GUI elements. Thus  events maybe could only be fired less in accordance to the GUI... On the other hand it would be an advantage to use GUI events from everywhere with little effort. I think the `CoarseChangeFilter` would become obsolete  wouldnt it? So why not giving Observables a try...  || Thanks a lot @m-mauersberger! Ive fixed a few very minor things that I noticed and will merge now. Looking forward to your next PR. || 
6771,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Shared database synchronized by FocusChangedEvent This PR is related to #6663 and partly #4461.  Shared database synchronization event in `DBMSSynchronizer` is triggered by a `FocusChangedEvent`. This is added similar to `FieldChangedEvent` but has to be initiated from `EntryEditor` (?).  I have manually tested the new code - _and it does not work_. Maybe we can discuss changes through this pull request.  Thank you for your help. I tried firing the event via the `BibEntry` method `setFocusedField`. Again  this method is called by `EntryEditor` via `setFocusToField`. But I do not know if this is generally possible.  Perhaps the second commit is a bit irritating  it is only uncommenting something in `DBMSSynchronizer`... Sorry for that. The important commit is `87adec3b`.  || Its a bit complicated with all those listenes. The EventBus is a local object.  In fact its similar to the classical EventLIstener in GUI. An even its relayed to its parend until its handled. The only difference is that we do this relaying here manually. When you add a new Event in BibEntry you have to relay that to the call chain.  https://github.com/JabRef/jabref/blob/37099243160e43b6658ec13d997da7468e426a67/src/main/java/org/jabref/model/database/BibDatabaseContext.java#L196-L202  And the CoraseChangeFilter register itself here: https://github.com/JabRef/jabref/blob/4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b/src/main/java/org/jabref/model/database/event/CoarseChangeFilter.java#L19-L23  it registers itselt as a listener on BibDAtabase. And BibDatabase finally register itself on each entry: https://github.com/JabRef/jabref/blob/9d17101626571966d8278bb7fbd02129eff78a71/src/main/java/org/jabref/model/database/BibDatabase.java#L198-L206  So you need to listen for the FocusChangedEvent and relay that || Thank you for your help. Finally  I deleted all `FocusEventChanged`-related stuff and concentrated on `CoarseChangeFilter`. There I introduced a `DelayTaskThrottler` for the `eventBus.post(event)`. Also I revised the conditionals while introducing three conditions: - `isNewEdit`: Editing right after loading shared database. - `isEditOnOtherField`: Editing other field  changes on previous field should be synchronized. - `isMajorChange`: Some editing with much character input.  I found out that a throttled task will not interrupt any input. That means if a `FieldChangedEvent` is posted with delay  you can write further until database synchronization appears. In the worst case you lose some information because all characters typed in after the event are not synchronized. Furthermore  it appears that when the event is posted during delay JabRef hangs up...  Can you reproduce this problems? In general  it works as intended.  Another idea: What about throttling _all_ `FieldChangeEvent`s in order to not interrupt input process? Then we would have to ensure that all pending synchronization events would be ready before closing the database. We could add an indicator in the GUI for this purpose or add something on closing-database event. || Side note: We have an internal discussion ongoing  why not using JavaFX Observables everywhere - instead of the event bus. Not fully checked all aspects until now. Will (hopefully) be done at [JabCon](https://jabcon.jabref.org/). Do you have a "feeling" on that? || I have not much experience with JavaFX Observables but it seems like they are directly bound to GUI elements. Thus  events maybe could only be fired less in accordance to the GUI... On the other hand it would be an advantage to use GUI events from everywhere with little effort. I think the `CoarseChangeFilter` would become obsolete  wouldnt it? So why not giving Observables a try...  || Thanks a lot @m-mauersberger! Ive fixed a few very minor things that I noticed and will merge now. Looking forward to your next PR. || 
6788,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix cleanup Field formatters not working when enabled Fixes #6787  The problem orginally comes from here: https://github.com/JabRef/jabref/blob/4e220f618a755cb7dc18882653ea46e3ed049c9e/src/main/java/org/jabref/gui/commonfxcontrols/FieldFormatterCleanupsPanel.java#L109  Unfortuantely its not possible to add a not() there directly The method bindBidirectional(Property<Boolean>) in the type BooleanProperty is not applicable for the arguments (BooleanBinding)    <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. done  ||
6790,1,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,Fix more fetchers This PR fixes fetchers (refs #6369):  - Add cleanup for Library of Congress - SpringerLink now uses the SpringerNature API key (same key can be used) - refs #6729 - Add URL logger for IEEE (and other fetchers)  ---  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6808,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Refactor edit action Fixes #6293  Needs testing unter linux  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. DOI pasting still works. tested again.  ||
6809,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,Fixes #6705   added icon for multiple identifiers Added icon for multiple identifiers and modified behaviour to open eprint when clicked without opening menu  Issue 1 :  Icon for linked identifiers does not change when more than one entry is linked The WEB Material design glyphicon did not have a "plural" variant so thought will change to this for singular variant  ![Screenshot from 2020-08-30 11-34-19](https://user-images.githubusercontent.com/13389954/91652449-1a554f00-eab5-11ea-910e-9ca7c7943b6e.png)  And for the plural variant used this :smile:  Can change this to something else too   ![Screenshot from 2020-08-30 11-34-46](https://user-images.githubusercontent.com/13389954/91652464-4244b280-eab5-11ea-8b8e-aec0dd54c7c2.png)   Issue 2 : Made changes so that when only one entry is available the link is opened immediately without the menu  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Hi @hemantgs   thanks for your work. I will look at it the next days. || > Thanks a lot for your contribution! >  @tobiasdiez  :+1: Glad to help  > The code looks good to me  and Ive only a few very minor remarks. Concerning the icon  Im also not sure what to choose. There does not seem to be a good icon for multiple links. The database icon is already used in a few places (groups and shared database)  so Im a bit hesitant to use it here as well. What about using the `link` and `link-variant`? Other solution would be to keep the current `www`  and use `earth` for multiple links?  Yeah my initial thoughts too   Database icon is common  This is `link` ![Screenshot from 2020-08-31 21-55-10](https://user-images.githubusercontent.com/13389954/91743118-f4bf6700-ebd4-11ea-967c-5a9b9190144d.png)  And this is `link-variant ` ![Screenshot from 2020-08-31 21-55-32](https://user-images.githubusercontent.com/13389954/91743168-06087380-ebd5-11ea-8b8f-1802296cf668.png)  And `earth` below does not look like indicating multiple entries   I feel ![Screenshot from 2020-08-31 22-02-15](https://user-images.githubusercontent.com/13389954/91743585-aa8ab580-ebd5-11ea-8362-c19a18b531af.png)  ||  > Greetings from the JabCon2020!  Was wondering what this was :smile:    Google was not helpful  || Thanks for your work @hemantgs   we took the liberty to fix some small merge errors. ||
6820,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,Follow up fix for copy paste Fixes #6293 Also enable paste menu/action for empty libraries with no entries yet  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6825,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,Architecture fix by re-sorting the classes <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  To be merged after JabCon. Fixes #6697  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` m-mauersberger ```  || The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` chenyuheng ```  ||
6833,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix/use format conversion for all imports This PR adds conversion of entries into the desired format for all imports. Fixes #6532.   - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Please fix the l10n errors: ``` This\ query\ uses\ an\ unsupported\ syntax. This\ search\ contains\ entries\ that\ match\ all\ specified\ terms. 1. CHECK IF THE KEY IS REALLY NOT USED ANYMORE 2. REMOVE THESE FROM THE ENGLISH LANGUAGE FILE  > expected: <[]> but was: <[This\ query\ uses\ an\ unsupported\ syntax.  This\ search\ contains\ entries\ that\ match\ all\ specified\ terms.]> org.opentest4j.AssertionFailedError org.opentest4j.AssertionFailedError: Obsolete keys found in language properties file:  This\ query\ uses\ an\ unsupported\ syntax. This\ search\ contains\ entries\ that\ match\ all\ specified\ terms. ``` ||
6858,1,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,Fix icon issue Fixes #6834  Changed the link used when we have only one entry to a single chain.  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  ![image](https://user-images.githubusercontent.com/34105280/92061703-cd3eda80-ed4b-11ea-9a6c-da306cf58bd3.png) Thanks for your contribution! I think that the icon that is currently used for entries with multiple DOIs should be used for entries with one DOI  and entries with multiple DOIs should use a new dedicated icon.  Propose: ![image](https://user-images.githubusercontent.com/43381984/92096852-ac23cb80-edd7-11ea-8f24-2d844b5296ac.png)  || Problem: We only use FontAwesomeIcons/MaterialDesign icons  implementation of custom icons is a bit more effort. My suggestion: merge this as a quick fix to distinguish better between both types and see  if we can find a better icon soon. ||
6871,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fixed copy key and link copy key and link from right-click menu creates a string that is not a url. it includes the url  but it also includes the key. setHtmlContent() was not appropriate.  Fixes  #5835 https://github.com/JabRef/jabref/issues/5835  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Codewise looks good. Plase fix the remaining checkstyle errors. Just click on the Details of the failing tests to see them ||
6879,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,Fix pasting in CodeArea under mac CodeArea does not implement TextInputControl   Fixes #6878  It would be if someone could test this under linux and windows 1. Copy bibtex entry 2. paste in source code editor in entry editor 3. Pasting works and no duplicates on the maintable  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` MLEP ```  || Seems to work in Linux and Windows. ||
6897,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,DOI matching in duplicate check Fixes #6707   Follow up from #6756  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` Andrew Andrew Kuncevich ```  || @KunAndrew Your problems probably came from the fact that your repos master branch is behind the naster branch of jabref.  1. on the commandlne check that git remote -v has listed sth like `upstream git@github.com:JabRef/jabref.git` (can also the https link) If not then do:` git remote add upstream git@github.com:JabRef/jabref.git `(if you use ssh otherwise use the https link) 2. git checkout master 3. git merge upstream/master Then you master branch should be even with JabRefs upstream branch  so creating a new branch and creating a PR wont poroduce any conflicts  ||
6897,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,1,DOI matching in duplicate check Fixes #6707   Follow up from #6756  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` Andrew Andrew Kuncevich ```  || @KunAndrew Your problems probably came from the fact that your repos master branch is behind the naster branch of jabref.  1. on the commandlne check that git remote -v has listed sth like `upstream git@github.com:JabRef/jabref.git` (can also the https link) If not then do:` git remote add upstream git@github.com:JabRef/jabref.git `(if you use ssh otherwise use the https link) 2. git checkout master 3. git merge upstream/master Then you master branch should be even with JabRefs upstream branch  so creating a new branch and creating a PR wont poroduce any conflicts  ||
6920,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,Improve parsing of short DOIs Fixes #6880  no more erroneous interpretation as short DOI of urls/notes like: - "http://www.cs.utexas.edu/users/kaufmann/itp-trusted-extensions-aug-2010/summary/summary.pdf" - "abc.com/20/10/something/whatever"  still correct detection of short DOIs hidden in urls as long as _doi_ is part of subdomain  eg: - "www.doi.xyz.com/10/abc123"  correct detection of short DOIs like: - "doi.org/ab123" - "https://doi.org/ab123"  added respective tests.  added entry to CHANGELOG   - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Please fix the checkstyle issues. You can install the extension in Intellij directly: https://github.com/JabRef/jabref/tree/master/config ``` > Task :classes [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/DOI.java:53:13: + is not followed by whitespace. [WhitespaceAround]  > Task :checkstyleMain [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/DOI.java:92:96:   is preceded with whitespace. [NoWhitespaceBefore] [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/DOI.java:139:37: + is not followed by whitespace. [WhitespaceAround] [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/DOI.java:139:37: + is not preceded with whitespace. [WhitespaceAround] ```  || > Please fix the checkstyle issues. You can install the extension in Intellij directly: > https://github.com/JabRef/jabref/tree/master/config >  > ``` > > Task :classes > [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/DOI.java:53:13: + is not followed by whitespace. [WhitespaceAround] >  > > Task :checkstyleMain > [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/DOI.java:92:96:   is preceded with whitespace. [NoWhitespaceBefore] > [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/DOI.java:139:37: + is not followed by whitespace. [WhitespaceAround] > [ant:checkstyle] [ERROR] /home/runner/work/jabref/jabref/src/main/java/org/jabref/model/entry/identifier/DOI.java:139:37: + is not preceded with whitespace. [WhitespaceAround] > ```  Hi Siedlerchr  Whenever I try to add the checkstyle file to the checkstyle plugin I get the following error: ```  com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module TreeWalker - Unable to instantiate InvalidJavadocPosition class  it is also not possible to instantiate it as .InvalidJavadocPosition  InvalidJavadocPositionCheck  .InvalidJavadocPositionCheck. Please recheck that class name is specified as canonical name or read how to configure short name usage https://checkstyle.org/config.html#Packages. Please also recheck that provided ClassLoader to Checker is configured correctly. 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:463) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198) 	at org.infernus.idea.checkstyle.service.cmd.OpCreateChecker.execute(OpCreateChecker.java:61) 	at org.infernus.idea.checkstyle.service.cmd.OpCreateChecker.execute(OpCreateChecker.java:26) 	at org.infernus.idea.checkstyle.service.CheckstyleActionsImpl.executeCommand(CheckstyleActionsImpl.java:130) 	at org.infernus.idea.checkstyle.service.CheckstyleActionsImpl.createChecker(CheckstyleActionsImpl.java:60) 	at org.infernus.idea.checkstyle.service.CheckstyleActionsImpl.createChecker(CheckstyleActionsImpl.java:51) 	at org.infernus.idea.checkstyle.checker.CheckerFactoryWorker.run(CheckerFactoryWorker.java:46) Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Unable to instantiate InvalidJavadocPosition class  it is also not possible to instantiate it as .InvalidJavadocPosition  InvalidJavadocPositionCheck  .InvalidJavadocPositionCheck. Please recheck that class name is specified as canonical name or read how to configure short name usage https://checkstyle.org/config.html#Packages. Please also recheck that provided ClassLoader to Checker is configured correctly. 	at com.puppycrawl.tools.checkstyle.PackageObjectFactory.createModule(PackageObjectFactory.java:210) 	at com.puppycrawl.tools.checkstyle.TreeWalker.setupChild(TreeWalker.java:152) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198) 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:458) 	... 7 more  ```  What am I doing wrong? Choosing the `IntelliJ IDEA code style XML` as style file works  but that alone does not have any discernible effect on anything... Sorry  I am quite new to Java and very new to IntelliJ IDEA... || No idea whats wrong with the plugin  but you can always execute ./gradlew checkstyle on the comandline ||
6928,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,Changed default value of "search and store files relative to bibtex file" to true Fixes #6863  ~I think the problem was: If isBibLocationAsPrimary is not set  the bib file dir has not been added to the list of searcheable directories at all. If set  it should be the first one to look up  if not  the last.~  See https://github.com/JabRef/jabref/pull/6928#issuecomment-697410826  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. The JabRef maintainers will add the following name to the [AUTHORS file](https://github.com/JabRef/jabref/blob/master/CONTRIBUTING.md#author-credits). In case you want to use a different one  please comment here and [adjust your name in your git configuration](https://docs.github.com/en/github/using-git/setting-your-username-in-git) for future commits.  ``` Nikolaus Koopmann ```  || There was a recent PR about this  but I cannot find it. I think it was by design to not add it to the list of search paths. || Mh  a possible problem could be a design issue in basepanel.java (like marked here: https://github.com/JabRef/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3 ) Need to investigate this a bit further...  || Maybe setting the default for this preference option to true is already enough? || The preferences option says: "Search and store files relative to library file location" Ill change the misleading antique variable names to some more meaningful names and make them default on. Maybe we need to set a note somewhere in the docs? || Couldnt resist to make some heavy cleanups... || 
6933,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix remove actions for entry types in the editor fixes #6906 * Created separate view models for standard and custom entry types  adding remove icon only for the custom ones * Updated CHANGELOG.md  Its working solution  but please take a look whether the implementation is good. I will modify the user doc if its accepted.  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Ive created request with user doc update: https://github.com/JabRef/user-documentation/pull/310 ||
6938,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,Fix for some Unicode characters in citation keys <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6583 . Some unicode characters can be encoded in multiple ways  and the mapping that `StringUtil#replaceSpecialCharacters` relies on does not contain all cases. The proposed solution uses [NFC](https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/text/Normalizer.Form.html#NFC) to re-encode the characters so that these characters can be found. There exists more information on [Unicode normalization in the Java API](https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/text/Normalizer.Form.html#NFC).  My subjective opinion is that most people expect Unicode to work similar to NFC  i.e.  if characters looks the same  it is likely that they are equivalent. Hence  if someone debugs issues in the `UNICODE_CHAR_MAP`  they will expect NFC. A more holistic approach should likely start with the [compatibility equivalence](http://unicode.org/reports/tr15/#Compatibility_Equivalence_Figure)  which will require larger changes  and there does not seem to be any bugs/issues that requires these larger changes.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] ~Change in CHANGELOG.md described (if applicable)~ - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] ~Screenshots added in PR description (for UI changes)~ - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. @Siedlerchr in my opinion it is a mess best avoided if possible X) I believe NFC is how most people expect Unicode to work (which is why I am using it here)  Ill add some more details to the top part of the PR in case someone needs to patch this patch later. ||
6941,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,Fix: in entry types editor selected field is not removed after first click fixes #6934  The issue is happening because cells with delete icon are set editable (because the whole table is set editable).  https://github.com/JabRef/jabref/blob/129c36e24bbd3332832728124ebf27d2462a0300/src/main/java/org/jabref/gui/customentrytypes/CustomizeEntryTypeDialogView.java#L111-L112  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks for spotting and fixing this erro! I have adjusted the changelog a bit.  ||
6945,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Fix a fetcher test for the ShortDOIService <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  This addresses one of the errors in the fetcher tests as run by the CI (see #6369). Here is and [example of a test failure](https://github.com/JabRef/jabref/runs/1035408706?check_suite_focustrue#step:6:253).   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6960,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Corrected shortcut Fixes #6867  A new shortcut combination added for "Pull changes from shared database"  because current ctrl+shift+R is already assigned for "Create tech report" command.  - [X] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [X] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I would remove all the standard keybindings for https://github.com/JabRef/jabref/pull/6960/files#diff-920a3cf78140f82ffcd3ba5b495cf73fL49-L54. Then you can leave the pull changes keybinding at "ctrl + shift + r". What do you think? || Im against removing the shortcuts  at least article should be kept. Lets say what the other @JabRef/developers say about this  || Yes  article  book  new entry and new entry from plaintext should be kept. But masterthesis  phdthesis etc are not that important to have a default keybinding. (I do not suggest to completely remove these bindings  just their default value so that users can still activate them if they want). || @tobiasdiez   So the following "new" shortcuts will be removed (see gray color): <img width"1131" alt"Screenshot 2020-10-05 at 10 51 53" src"https://user-images.githubusercontent.com/20572030/95053323-ef37ce00-06f8-11eb-91ea-e5c933d5d0d6.png">  correct?     || I wouldnt remove them at all  but their default value. So the user is still able to bind keys to the shortcuts  if he likes. || Yes  just provide an empty string as the third argument of these enum values  and include NEW_TECHREPORT as well. || Empty string does not works. )) When I try to open the menu  it shows an error.  Ill try to find the problem.  java.lang.StringIndexOutOfBoundsException: begin 0  end 1  length 0 	at java.base/java.lang.String.checkBoundsBeginEnd(String.java:3756) 	at java.base/java.lang.String.substring(String.java:1902) 	at javafx.graphics/javafx.scene.input.KeyCombination.normalizeToken(KeyCombination.java:630) 	at javafx.graphics/javafx.scene.input.KeyCombination.valueOf(KeyCombination.java:409) 	at org.jabref@100.0.0/org.jabref.gui.keyboard.KeyBindingRepository.getKeyCombination(KeyBindingRepository.java:129) 	at org.jabref@100.0.0/org.jabref.gui.keyboard.KeyBindingRepository.checkKeyCombinationEquality(KeyBindingRepository.java:140) 	at org.jabref@100.0.0/org.jabref.gui.keyboard.KeyBindingRepository.mapToKeyBinding(KeyBindingRepository.java:116) 	at org.jabref@100.0.0/org.jabref.gui.JabRefFrame.lambda$initKeyBindings$5(JabRefFrame.java:236) 	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventFilterRecord.handleCapturingEvent(CompositeEventHandler.java:321) 	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchCapturingEvent(CompositeEventHandler.java:98) 	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchCapturingEvent(EventHandlerManager.java:221) 	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchCapturingEvent(EventHandlerManager.java:180) 	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchCapturingEvent(CompositeEventDispatcher.java:43) 	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:52) 	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) 	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) 	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) 	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) 	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) 	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74) 	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54) 	at javafx.base/javafx.event.Event.fireEvent(Event.java:198) 	at javafx.graphics/javafx.scene.Scene$KeyHandler.process(Scene.java:4098) 	at javafx.graphics/javafx.scene.Scene.processKeyEvent(Scene.java:2157) 	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.keyEvent(Scene.java:2625) 	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$KeyEventNotification.run(GlassViewEventHandler.java:217) 	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$KeyEventNotification.run(GlassViewEventHandler.java:149) 	at java.base/java.security.AccessController.doPrivileged(AccessController.java:391) 	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleKeyEvent$1(GlassViewEventHandler.java:248) 	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412) 	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleKeyEvent(GlassViewEventHandler.java:247) 	at javafx.graphics/com.sun.glass.ui.View.handleKeyEvent(View.java:547) 	at javafx.graphics/com.sun.glass.ui.View.notifyKey(View.java:971)  || @Gena928 You pasated a PNG instead of using a link into the code (offered by the GitHub UI) (or maybe additoinally)  The affected keys are at `org.jabref.gui.keyboard.KeyBinding#NEW_MASTERSTHESIS`.  Cant we just add `alt+` at them to a) provide a shortcut (seems to be required according to the comment) and b) having a default short cut surely not conflicting?  @Gena928 While you are on it  could you please add a shortcot for `New inproceedings`? In computer science we use that type in 80% of our cases and that would make JabRef more comfortable to use. || @koppor  Im very sorry for delay with this Issue. Ill try to fix it today  including shortcut for `New inprocessing`.  || @Gena928 You should be able to fix this error by adding a few additional if-statements if the keybinding string is empty. || @tobiasdiez   @koppor Please review changes. 1) I solved the problem with empty `defaultKeyBinding` string by adding an `if` statement in `KeyBindingRepository.java`. 2) Key combinations for NEW_INBOOK...NEW_TECHREPORT changed from `ctrl+....` to `alt+....` 3) I think now we can keep `ctrl+shift+R` for PULL_CHANGES_FROM_SHARED_DATABASE. As it was initially. What do you think?  4) I also created NEW_INPROCEEDINGS KeyBinding. But I cantt find this menu item in `createMenu()` method of `JabRefFrame` class. ))) Sorry  need help. Do we have such menu item? Where? )))    || > @tobiasdiez   @koppor Please review changes.  Could you please resolve the conflicts. Please merge `upstream/master`.  >     1. I solved the problem with empty `defaultKeyBinding` string by adding an `if` statement in `KeyBindingRepository.java`.  LGTM.  >     2. Key combinations for NEW_INBOOK...NEW_TECHREPORT changed from `ctrl+....` to `alt+....`  It was on purpose to **add** an additional modifier and not to change the modifier. I was thinking that an additoinal moddifier is easer to remember instead of another modifier.  However  having our discussion in mind  we should just leave these shortcuts empty. A user seldomly will use these shortcuts.   >     3. I think now we can keep `ctrl+shift+R` for PULL_CHANGES_FROM_SHARED_DATABASE. >        As it was initially. What do you think?  Thats good. Please revert your change to change the modifier to `alt+shift+D`.  >     4. I also created NEW_INPROCEEDINGS KeyBinding.  Looks good.  >        But I cantt find this menu item in `createMenu()` method of `JabRefFrame` class. ))) Sorry  need help. Do we have such menu item? Where? )))  I do not quite get what you are referring to with "this menu item". In the normal entry creation menu  it is already there: https://docs.jabref.org/collect/add-entry-manually  I think  your current code enough.  I think  it should also be added to `org.jabref.gui.fieldeditors.TypeEditorViewModel#TypeEditorViewModel`   || @koppor  Done. Sorry  for "menu item". I thought you can attach key bindings only to menu items  but now I know about keys for  [https://docs.jabref.org/collect/add-entry-manually](https://docs.jabref.org/collect/add-entry-manually). New InProceedings works via shortcut `alt+shift+C`.  Please review `org.jabref.gui.fieldeditors.TypeEditorViewModel`. I added new line there  but I still cant understand where and how its used. ))) Can you give a small comment?    || @Gena928 Please try to merge upstream/master to resolve the merge conflicts. || @koppor   @tobiasdiez   please review changes. Sorry for delay - Im trying to learn Java with mentor and become valuable contributor )). So thank you for your comments here. They really help. I changed `getKeyCombination` method of `KeyBindingRepository` class and all its dependencies.  Also please give your comments for TypeEditorViewModel class - this [comment from @tobiasdiez](https://github.com/JabRef/jabref/pull/6960#discussion_r504478716)  || @calixtus   thanks for comments. Please review changes. || @calixtus  thanks again  corrected. Looks like my "CheckStyle" was disabled. Maybe because of Intellij update? || Also OK for me. Still have to update CHANGELOG.md  because keyboard shortcuts were removed in this PR. || 
6968,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Remove "online" prefix in the expected file URLs to fix Springer fetcher tests This addresses two of the errors in the fetcher tests as run by the CI (see #6369). Examples for the failures are [here](https://github.com/JabRef/jabref/runs/1185667289?check_suite_focustrue#step:6:87) and [here](https://github.com/JabRef/jabref/runs/1185667289?check_suite_focustrue#step:6:118). <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6976,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix "irregularly losing ability to edit data in biblatex source tab" Fixes #6936 is about the source tab (BibTeX source) losing the ability to be editable (https://github.com/JabRef/jabref/issues/6936#issuecomment-703110024). This happens because `codeArea` can be disabled  but there is no code path that re-enables it.  This patch re-enables `codeArea` as editable if the BibTeX entrys source code is correct. Although the source tab cannot be used by the user to fix any syntax error in BibTeX fields (source tab will be disabled if there are syntactic errors introduced by editing the fields in the other tabs)  such error can be fixed by editing the field  which will trigger `SourceTab`s listener and call the `updateCodeArea()` method  which will enable codeArea if the source of the BibTeX entry is syntactically correct.   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6977,1,0,0,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,Adapt the short DOI regex It now accepts DOIs with only three characters. This fixes an error in the ShortenDOIFormatterTest as run by the CI (see #6369)  for example [here](https://github.com/JabRef/jabref/runs/1185667289?check_suite_focustrue#step:6:426).  
6982,1,0,0,1,0,1,1,0,1,0,1,0,1,1,1,1,0,0,1,Fixed incorrect color of identity column header Fixes #6796   Added style for identity column header.  See column with "#". Previously it had different colour.   <img width"561" alt"Screenshot 2020-10-05 at 09 16 04" src"https://user-images.githubusercontent.com/20572030/95049286-1b038580-06f2-11eb-88a2-3f453d475d37.png">  <img width"561" alt"Screenshot 2020-10-05 at 09 21 34" src"https://user-images.githubusercontent.com/20572030/95049299-1fc83980-06f2-11eb-90dd-a4e81ad412af.png">  - [X] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [X] Manually tested changed features in running JabRef (always required) - [X] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
6989,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Merge parsing of bracketed patterns <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6892. Character classes (regex expressions in brackets  e.g.  `[a-zA-Z]`) should be usable with the regex modifier  but it currently isnt for citation keys.  Bracketed patterns are parsed using several different methods in `CitationKeyGenerator.java`  `BracketedPattern.java` and `AbstractCitationKeyPattern`. This PR aims to merge all parsing code into `BracketedPattern.java` to make it easier to modify bracketed patterns without breaking the citation key generator.  Currently BracketedPatterns parser can parse expressions containing the regex modifier using character classes.  **Todo** - [x] ~What are `AbstractCitationKeyPattern` and `GlobalCitationKeyPattern` used for  and should they be removed?~ - [x] ~Why are both `GlobalCitationKeyPattern` and `CitationKeyPatternPreferences`  needed to create a `CitationKeyGenerator`?~  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. --> **Checklist** - [x] ~Change in CHANGELOG.md described (if applicable)~ - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] ~Screenshots added in PR description (for UI changes)~ - [x] ~[Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.~ I think I need an opinion on the cleaning of "unwanted characters".  In #4770 the argument were that citation patterns containing special characters (`[auth]-[year]`) should not remove the "-" between the two bracketed expressions/field markers as it is a wanted special character. Id argue based on recent changes #6300  this should no longer be the case  as it is a preference that the user can set themselves.  In particular  I believe this test case  https://github.com/JabRef/jabref/blob/4b1b7b467aed83fa9fe935d2e481883a38df70be/src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java#L1067-L1074 should fail using the default unwanted characters. https://github.com/JabRef/jabref/blob/4b1b7b467aed83fa9fe935d2e481883a38df70be/src/main/java/org/jabref/logic/citationkeypattern/CitationKeyGenerator.java#L28  Is this reasonable? Should I open a separate PR with more information on this issue? (the answer dictates where the `cleanKey` method call goes and should only change 1-4 lines of code) || Regarding the unwanted characters  you are right. The generator should respect the user defined unwanted chars (and of course the illegal ones) || @Siedlerchr Ill change it and add some test cases || I think looking more into `AbstractCitationKeyPattern` and `GlobalCitationKeyPattern` will end up being out of scope of this PR. I have left them unchanged. || 
7007,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,Support for exporting to YAML format - Support for exporting to YAML   fixes #6974  - Fixed deleteBlankLines parameter in TemplateExporter not working. - Enabled deleteBlankLines for the RIS Exporter  which used to have that enabled.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I see the unit tests failing:  ```   Test exportCorrectContent(Path) FAILED    org.opentest4j.AssertionFailedError: expected: <[---  references:  - id: test    author:    - literal: "Test Author"    title: "Test Title"    issued: 2020    url: http://example.com  ---]> but was: <[---  references:  - id: test  author:  - literal: "Test Author"  title: "Test Title"  issued: 2020  url: http://example.com---]>       at org.jabref.logic.exporter.YamlExporterTest.exportCorrectContent(YamlExporterTest.java:77) ```  Could you please check whats going wrong there? || >  >  > I see the unit tests failing: >  > ``` >   Test exportCorrectContent(Path) FAILED >  >   org.opentest4j.AssertionFailedError: expected: <[---  references:  - id: test    author:    - literal: "Test Author"    title: "Test Title"    issued: 2020    url: http://example.com  ---]> but was: <[---  references:  - id: test  author:  - literal: "Test Author"  title: "Test Title"  issued: 2020  url: http://example.com---]> >       at org.jabref.logic.exporter.YamlExporterTest.exportCorrectContent(YamlExporterTest.java:77) > ``` >  > Could you please check whats going wrong there?  I already fixed that issue in my local branch  currently testing the blank line deletion. || Thank you for the patience @joethei  || 
7009,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Removed menu entry for Manage external file types Fixes #6991  Removed the menu entry to only have one way to access Manage external file types in the Preferences Dialog  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  ![screenshot-6991](https://user-images.githubusercontent.com/68321970/95766022-f8094080-0cb2-11eb-9ddc-3b51295cb79f.png) > Welcome to JabRef development and welcome to #hacktoberfest. >  > Small nitpicks  then it is good to go from my side. @koppor  Thank you very much for the nice welcome and your review.   Sorry I completely missed the unused import.  I think I resolved now everything you mentioned.   ||
7014,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,Add selection of All Entries group on start-up <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6691  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks for your contribution. LGTM || LGTM. Thanks! ||
7025,1,0,0,1,0,1,1,0,0,0,1,0,1,1,1,1,1,1,1,add Cleanup for copying over physcial review article id as the page n… Fixes #7019   Added a cleanup to copy over the article id as the page number for APS journals. This only happens if the page number does not exist already.  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. >  >  > Thanks a lot for you PR. Your idea seems to work nicely and the code looks good as well. Ive only one remark about the location of the code  and a bit of fine tuning. Please also add a test  and have a look at the fetcher tests that are currently failing (because the fetcher now returns also page information).  Thanks for the review @Siedlerchr @tobiasdiez  I think I am almost finished but some of the fetcher tests are still failing sometimes. I do not think it has anything to do with my code though (?) as its just a connection failure. Here is the exception: `Caused by: java.io.IOException: Server returned HTTP response code: 504 for URL: https://data.crossref.org/10.1109%2FICWS.2007.59`  I am guessing its an issue with the crossref website. || Thanks  looks good to me now! Dont forget to add a changelog entry for the new feature. || Thanks! I hope you enjoyed the process  although may have been a bit confusing at times. Sorry for that. Looking forward to your next PR.  And now MERGE 🚀  ||
7026,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,Improve error handling on GROBID server connection issues Hi   This PR relates to issues #6517 and #6891. Its more improvement than an actual fix because the root cause is: the server is not available (which I cant fix).  Motivation: When I read #6517 and #6891  I realized  that these were reported by power users  means people who e.g. understand how to activate debug logging.  When I tried to reproduce the issues  I realized  that for the end-users the issue is not transparent.  Additionally  on my OSX  the Java 14 runtime has an infinite connect timeout set  so I never got a visual response on my action (refers to "New entry from plain text" button)  What I changed: * add a property connectTimeout to URLDownloader    * this avoids the situation  where e.g. on similar setups than mine (Java 14.0.2 on OSX)  theres an infinite default connectTimeout and I never saw any error in UI nor log.    * set the default connectTimeout to 30 seconds. Which is e.g. the same order of magnitude as in many other tools and thus should have no side effects to other usages of this class    * set the connectTimeout for GROBID server to 5 seconds  because this should be sufficient as I expect this is a cloud-based service - please comment  if this assumption is wrong. * refactored the GrobidServce so that IOExceptions are percolating higher in the call-stack and then can be handled in the UI * in case of error  I add a notification to the user  with an explicit message  so users have a chance to know  whats going on.. IMHO  thats more correct and easier to understand for users  over the current behavior  where just a message "0 entries parsed" occurs. (screenshot below in the comments) * added EN and DE translation for the new message.  I hope  with this new behavior  users will better understand  why this feature does not work as expected.   - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  Any feedback welcome. Heres a screenshot  how the error message looks like (the red arrow is just for demonstration purpose).  <img width"1680" alt"Screenshot 2020-10-18 at 13 11 25" src"https://user-images.githubusercontent.com/1189394/96369048-fda1d300-1157-11eb-8cfd-99042c1012e2.png">   || All reviews incorporated. May I ask for another review  please?  /cc @tobiasdiez  || > Thanks a lot for the quick follow-up! From my side  this is now good to go. We have the convention that at least two core developers have to approve a PR  so please have a bit of patience until the second review arrives. >  > @koppor The author check fails again...should we disable it again?  Thank you very much  @tobiasdiez  Im participating in the Hacktoberfest. May I ask  to label this PR as "hacktoberfest-accepted"  to signal that I did follow the rules  please? || The PR wil count towards hacktoberfest because we applied the hacktoberfest label on the repo. || Thanks for your contribution! Looking foward seeing more from you  ) || 
7039,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,add short date formatter Add formatter that can format the month field to use the shorthand abbreviation . fixes #6579    - [X] Change in CHANGELOG.md described (if applicable) - [X] Tests created for changes (if applicable) - [X] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [X] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7040,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,Fix Shared Database Tests Fix FieldChangeEvent Delta computation  The CoarseChangeFilter only reports delta >0 as Major change. The problem is that when you codewise set new field content with the same exact length as before  but not the same content it still has a delta of 0 and therefore no DB sync is triggered.  A more detailed explanation is https://github.com/JabRef/jabref/issues/6862#issuecomment-716028639  Fixes #6862    <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7043,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Add online-link detection to FileFieldParser <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #7032. The FileFieldParser did not detect an URL and created a LinkedFile object with the URL as a local file path  which caused an error when running "Check integrity".  Im not sure if the unit test is in the right class. If this change requires a changelog entry  Im happy to add one.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks for the contribution! LGTM! || Nice contribution! LGTM! ||
7073,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fixes exception in preview using regexp search and regexp search without specified field <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6777 . The issue originates in how the JavaScript regexp is created in `PreviewViewer#highlightSearchPattern`.  1. Fixes the use of regexp while searching for one term (e.g.  `Liu.*`) 2. Fixes exception in the preview when forward slash is used in the regexp  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] ~Change in CHANGELOG.md described (if applicable)~ - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] ~Screenshots added in PR description (for UI changes)~ - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Is there a good spot to put test cases for this issue? || This PR can be made better by some larger reformatting but there might not be a point to doing it given that the code should be completely replaced by Lucene. || I think its not too important to have the highlighting that accurate for each complicated regex and yeah in the longterm we plan to use/convert to lucence. And thanks for finding the issue with the grammar based search + the regex!  || As you are at the search code and as you also worked on the unicode normalization  can you maybe check that issue here as well? https://github.com/JabRef/jabref/issues/6815 || > As you are at the search code and as you also worked on the unicode normalization  can you maybe check that issue here as well? #6815  Sure  will do ! || > I think its not too important to have the highlighting that accurate for each complicated regex and yeah in the longterm we plan to use/convert to lucence.  I agree  and I havent really looked into this in enough detail to contribute. There are definitively still going to be other issues after this PR. It just aims to address the most obvious cases of the `/` exception.  > And thanks for finding the issue with the grammar based search + the regex!  Thank you for the sanity check and help  it is both appreciated and saves me time ^^ || > May I ask whether its possible to add a test case for the fixed functionality?  Ill look into it tomorrow. I do not have any experience writing tests for this type of code but there should be some "template" I can use elsewhere. || Regarding tests  you are lucky  as there is already one: https://github.com/JabRef/jabref/blob/master/src/test/java/org/jabref/model/search/rules/ContainBasedSearchRuleTest.java (Please also refactor the BibEntry to "withField" ) || I keep running into the same issue with creating a `PreviewViewerTest`.  ```java BibDatabaseContext databaseContext  new BibDatabaseContext()  StateManager stateManager  new StateManager()  stateManager.setSearchQuery(new SearchQuery("test"  false  false))   PreviewViewer pw  new PreviewViewer(databaseContext  null  stateManager)  ```  As soon as I call the constructor I get a java.lang.ExceptionInInitializerError (i.e.  before it enters the constructor) || If you want to test something on the javafx thread  you need to use the testfx extensions and declare it as GUI test: See as an example the SourceTabTest under gui.entryeditor. But that is complicated. I would rather merge this one as it is now. Feel free to create another PR with a gui test || @Siedlerchr @koppor thank you both for your reviews! They are very appreciated!  ---  > If you want to test something on the javafx thread  you need to use the testfx extensions and declare it as GUI test: > See as an example the SourceTabTest under gui.entryeditor. > But that is complicated. I would rather merge this one as it is now. Feel free to create another PR with a gui test  Great! In that case  Ill put adding a test case for this issue on my todo-list for later. Thank you for linking SourceTabTest  now I know where to start digging 😃  I suspect Ill have opportunities to practice writing GUI tests soon X) || 
7077,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix preview settings not saved due to l10n Introduce internal name for finding layout Fixes #6447  The problem was that the getName method returned a l10n name for Custom Preview layout.....  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7082,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,1,0,1,Feature/enable paginated fetchers This PR adds complex search query support for paginated fetchers. It additionally implements the corresponding interfaces for a couple of fetchers (arXiv  Scholar  IEEE Xplore  Springer Link). Refs #6236  #5507  [koppor#369](https://github.com/koppor/jabref/issues/369)  [koppor#347](https://github.com/koppor/jabref/issues/347)  - [ ] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7095,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixed setting title of saved new library follow up to #6129  fixes #7053   - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7097,1,0,0,1,1,1,1,1,0,0,1,0,1,1,1,1,1,0,1,Update antlr task + gradle Fixes #6431  Fixes koppor/Jabref#440  I finally found the solution. Get rid of our AntlrPlugin and follow the idea from here: https://stackoverflow.com/a/56029522/3450689  Update to gradle 6.6 and newer is not yet possible due to https://github.com/openjfx/javafx-gradle-plugin/issues/89 Make @koppor happy :)  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Except for the unnecessary tab at the eol (I like reviewdog) and the many additional linebreaks (😁)  it looks good to me - although I did not work much with groovy yet. || I see that there is mac failing  will investigate that ||
7115,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,Fixes NPE on opening GroupPanel Fixes #7114   - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Tests are failing  mhhh... ||
7116,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix saving in codeArea without leaving the field Refactor  globals  fixes #6622  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7119,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,Improve library loading UX When JabRef opens a library  it opens a file  runs the database parser  and after everything is done  creates a new tab in the frame with the contents of the open database.  An improvement would be to first create a tab in the frame  display a loading animation  and after the parser has finished  display all entries (or display every entry as soon as it is parsed).  there is a bug that I couldnt fix  even after data is loaded the group pane will keep showing 0 entry  you need to navigate away from the tab and back to get the real number of entries  about applying the improvement on startup  I think having a splash screen will look better something like a blocking dialog that displays a ProgressIndicator  Closes #6417 ![im1](https://imgur.com/fAyMdUX.jpg) ![im2](https://imgur.com/FvDHIwM.jpg) ![im3](https://imgur.com/7juc16x.jpg) ![im4](https://imgur.com/8NLHA2q.jpg) - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Wohoo! Thanks for your work  I just tested it with a huge library  its really cool and looks really nice! Codewise lgtm as well || Ill take a look into it the next days  im just a bit busy this week  I hope you do not mind. About the bug: Maybe there is some var that should be a property. Ill check that. Thank you for this huge work. I guess  it wasnt just a good first issue but a big improvement! || > Ill take a look into it the next days  im just a bit busy this week  I hope you do not mind.  Dont worry Im not in a hurry  take your time || I will fix some line breaks and merge tonight. Sorry for delay. || Thanks again for your contribution! ||
7131,1,0,0,1,0,0,1,0,1,1,1,0,1,1,1,1,1,0,1,Fixing glyph icon colors in Search Bar in Dark Mode  ##<!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #6791 ". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #6791   This pull request is on behalf of team ISD14-LNMIIT  Case Sensitive ![dark_case_sensitive](https://user-images.githubusercontent.com/39790333/100469139-bcf48c80-30fb-11eb-876f-2d389c5ef16b.png) Case Insensitive ![dark_case_insensitive](https://user-images.githubusercontent.com/39790333/100469173-c7af2180-30fb-11eb-99de-61fde6193eae.png)  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7132,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix document viewer not showing first page Turned out it was an off by one error.  <img width"746" alt"Bildschirmfoto 2020-11-27 um 20 43 23" src"https://user-images.githubusercontent.com/320228/100480364-4ce10900-30f1-11eb-8061-65fbd688e9f7.png">   Fixes #7108   <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. failing unit test is not related ||
7154,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Fix remembering password for sql db Fixes #6869  A binding was missing 🤦   <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7173,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Updates to colored group indicator for cited entries <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6394.  An entry can belong to a specific group depending on  1. Field or type in the `BibEntry` 2. The settings of the specific group  Hence  ~any changes in a field or type in the `BibEntry`  or~ any change in the groups should reevaluation wether or not the entry is still in any given group.  I am not very comfortable with the JavaFX/MVVC structure yet  so I have attempted an approach with as few structural changes as possible.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Keep the count "badge" is up-to-date - [x] Refresh the selected groups   - [x] Deal with `ConcurrentModificationException`   - [x] ~Fix performance bottleneck~     - [x] ~Occurs when switching library and the group is selected~ - [x] Check for potential memory leaks    - [x] caused by extending `Observable` in `TexGroup.java` (how should the listeners be stored?)   - [x] dependence on deprecated method `GroupTreeNode#setGroup(AbstractGroup newGroup)`   - [x] use of `EventBus` without unregistering listener     - [x] Make a WeakInvalidationListener adapter? - [x] JabRef believes the .bib file has changed when the .aux file changes   - [x] Check if the `isFilteredOut` attribute of `BibDatabaseContextChangedEvent` is used to prevent saving     - [x] Add JavaDoc - [x] ~How does the current `GroupInvalidationEvent` affect the hierarchical group structure? (should it be fired from elsewhere so that only partial recalculations of group colors are necessary)~ - [x] Replace unnecessary adapter class  ---  - [x] Change in CHANGELOG.md described (if applicable) - [x] ~Tests created for changes (if applicable)~ - [x] Manually tested changed features in running JabRef (always required) - [x] ~Screenshots added in PR description (for UI changes)~ - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Would any of the following be more/less valid approaches?   1. Make `TexGroup` implement `Observable`  2. Make `TexGroup.keysUsedInAux` an `ObservableSet` (Id argue this seem similar to how `BibEntry#getObservables` operates) || I added a minimum working example of implementing the `Observable` interface.  Any comments/suggestions are welcome (including scratch this approach X) ) || Thanks for tackling this! It would be interesting to see how it performs with many group (can provide you a test file via mail or so  cause its confidential) || I cant observe impactful slowdowns/memory leaks  but there shouldnt be many changes that affects the large database. Most potential memory leaks will only occur when an `.aux` file is linked.  I have update the description with what I think is left  and commented on a change that can mostly be reverted if performance is an issue. Sorry about the slow going  JavaFX is somewhat new to me. || Hey there! Thank you for your contribution. Seeing that your last commit was pushed 5 days ago  I want to ask whether you are finished with your work? Is this PR ready for review :)? || Hey @DominikVoigt . I am sorry but no  I thought I would make a 30 min fix in #7210 but unfortunately it didnt turn out that way o.O I do not think this is worth reviewing yet  the `JabRef believes the .bib file has changed when the .aux file changes` bullet item most likely means I am going to have to change/extend the metadata updates which might/might not be ok from JabRefs point-of-view. || @k3KAW8Pnf7mkmdSMPHz27  The bib file is changed can be also #5967  || Thank you for the link!   It might be both o.O I should have time to continue on this later today *knock on wood*  On December 21  2020 at 14:36:12  Christoph (notifications@github.com(mailto:notifications@github.com)) wrote:  >   > @k3KAW8Pnf7mkmdSMPHz27(https://github.com/k3KAW8Pnf7mkmdSMPHz27) The bib file is changed can be also #5967(https://github.com/JabRef/jabref/pull/5967) >   >   > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub(https://github.com/JabRef/jabref/pull/7173#issuecomment-749159174)  or unsubscribe(https://github.com/notifications/unsubscribe-auth/AAT2NZ45K4ZHUSSHHOJCE4DSV6PSZANCNFSM4USF5PMQ). >   >   >      || As a first workaround try disabling autosave.  || @Siedlerchr at least for now it happens independently of autosave.  The reason why JabRef believes that the database has changed is that I wanted to use `GroupUpdatedEvent` to notify any listener that a group has changed. `GroupUpdatedEvent` extends `BibDatabaseContextChangedEvent` which I guess triggers  https://github.com/JabRef/jabref/blob/08e824f506a997e9f3f2e87f70fa256d1ba40620/src/main/java/org/jabref/gui/LibraryTab.java#L356-L359  among others. (I wanted to view it as a change to the `MetaData`) The issue with `TexGroup` is that it  1. requires an update without any interaction from the user (it updates on changes in an external file)  and 2. these updates does not need to be saved.  I think it is the only group with these characteristics  hence I do not see it motivated to extend the `GroupUpdatedEvent` since it seems well established that `BibDatabaseContextChangedEvent` implies a change that requires saving.  Ill figure something out but I am temporarily a bit stuck 😱  || Hum... `TexGroup` has a reference to the `MetaData`. Is it ok if I its `EventBus` to post updates instead? || Barring changing quite a large part of the code to use Observables (I saw some discussion regarding this in other issues but I am not aware of if there is a consensus?)  this is my attempt at addressing this issue. Sorry about the delay and rather large changes. || Doh  I just realised a mistake Ill have to fix tomorrow /  || It might make sense to make `TexGroup` observable or to use its `FileUpdateMonitor` directly in the `GroupNodeViewModel`. || Hey @k3KAW8Pnf7mkmdSMPHz27   you didnt change anything on this PR for 5 days. Is this PR ready for review? || Sorry. Yes  it is ready for review  On January 8  2021 at 20:26:53  Carl Christian Snethlage (notifications@github.com(mailto:notifications@github.com)) wrote:  >   > Hey @k3KAW8Pnf7mkmdSMPHz27(https://github.com/k3KAW8Pnf7mkmdSMPHz27)   you didnt change anything on this PR for 5 days. Is this PR ready for review? >   >   > — > You are receiving this because you were mentioned. > Reply to this email directly  view it on GitHub(https://github.com/JabRef/jabref/pull/7173#issuecomment-757072180)  or unsubscribe(https://github.com/notifications/unsubscribe-auth/AAT2NZ3MSNH2XHRIYUKLINTSY6WF3ANCNFSM4USF5PMQ). >   >   >      || I have just tried this fix with the current master build on Ubuntu 16.04. Unfortunately  it seems  neither the colored group indicator  nor the badge icon are updated automatically in my situation:  - Step 1: Build tex file with additional reference. Observations:     - **Counter in badge icon for cited entries is not incremented.**     - **Badge icon for cited entries is not highlighted when the bib entry is selected.**     - **Colored group indicator for cited entries is not shown for the newly added reference.** - Step 2: Update group of cited entries: Just edit the group of cited entries and save it again. When a dialogue appears choose  to assign the original groups entries again to this group. Observations:     - Counter in badge icon for cited entries is now incremented properly.     - Badge icon for cited entries is now highlighted properly when the bib entry is selected.     - **Colored group indicator for cited entries is still not shown for the newly added reference.** - Step 3: Close and reopen the bib-file. Observations:     - Everything is shown as expected. || Sorry about that. I am using Texpad with Mac OS X and the group gets updated of the .aux file as Id expect on JabRef 5.3--2021-01-26--034cf8c. Could you give me more details on "Step 1" (which application you are using etc.) and Ill try to get a virtual box with Ubuntu up and going in the coming days? || I have used a test `.tex` file with biblatex (see first example in https://www.overleaf.com/learn/latex/bibliography_management_with_biblatex). The library was configured for biblatex in JabRef as well. I have used TeXstudio  but I think its independent of this  because I have even simply opened the `.aux` file with some editor and I have directly removed or added entries like `\abx@aux@cite{XXX2008}`. It seems  that the file monitor does not get triggered properly on a file change  thus  `keysUsedInAux` will not be cleared and the current group bindings are not invalidated. || > directly removed or added entries like `\abx@aux@cite{XXX2008}`. It seems  that the file monitor does not get triggered properly on a file change  thus  `keysUsedInAux` will not be cleared and the current group bindings are not invalidated.  Yup. Adding/removing entries in that fashion works for me in OS X. Ill look into it. I do not really have a hypothesis for why it does not work in Ubuntu (yet) || You are using a local drive? (not remote)  Is it possible your editor is generating [a "create event" instead of a "modify event"](https://stackoverflow.com/questions/43447654/ubuntu-java-watchservice-is-broken)? (This does not have to be the same issue as with TeXstudio) || Yes  on a local drive. You are right: I have created a small java test program of your provided link.  - Creating the file "testFile.txt" triggers:  `ENTRY_CREATE:testFile.txt`  - Editing the file with the simple text editor Pluma triggers:  `ENTRY_CREATE:testFile.txt`  If this file is already opened in TeXstudio (and it has been modified within it before)  it detects the change and it asks whether the file should be reloaded.  - Editing the file with TeXstudio triggers:  ``` ENTRY_CREATE:testFile.txt.G29838 ENTRY_MODIFY:testFile.txt.G29838 ENTRY_MODIFY:testFile.txt.G29838 ENTRY_DELETE:testFile.txt.G29838 ENTRY_CREATE:testFile.txt ```  Apparently  other programs also observe re-ceating files  since I have never had such problems elsewhere before.  - Editing the file with VS Code triggers:  ``` ENTRY_MODIFY:testFile.txt ENTRY_MODIFY:testFile.txt ```  But when building the `.pdf` file from a `.tex` file with TeXstudio  30 modification events are triggered with this java program for the `.aux` file:  ``` ENTRY_MODIFY:main.aux // 28 modification entries omitted ENTRY_MODIFY:main.aux ```  But still no event gets triggered in JabRef.  The same applies when editing the `.aux` file with VS Code  which also triggers a modification event with the java test program but not within JabRef. || @tobiasdiez @k3KAW8Pnf7mkmdSMPHz27 Do you think  that it would make sense to also observe the `ENTRY_CREATE` event to make the detection of file-modifications more reliable  since two out of three of my tested editors trigger the `ENTRY_CREATE` event and other programs apparently also check on this event? || Yes  I guess its a good idea to also listen for entry_create. At least I cannot think of a negative sideeffect. || 
7174,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fixed context menu of linked files not updated Fixes #5777  This should hopefully fix the bug about the context menu. Can someone please test it with a file download. I just now do not have a proper file link at hand.  ![grafik](https://user-images.githubusercontent.com/50491877/101564948-53faf780-39cc-11eb-8267-e0ed6670f779.png)  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Works fine  for testing you can add the following to the bibtex source: `  file          {:https\://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf:URL} `  I noticed that it is impossible to add an online file link manually ||
7178,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,Fix newly added entry not synced to db Fixes #7176  Should also fix #6944   Newly added entries have empty fields  do not update the field table to prevent SQL Exception Fix shared entry not found by id use left outer join for this     <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I do not know why the documentation test fails ||
7178,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,Fix newly added entry not synced to db Fixes #7176  Should also fix #6944   Newly added entries have empty fields  do not update the field table to prevent SQL Exception Fix shared entry not found by id use left outer join for this     <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I do not know why the documentation test fails ||
7179,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Disable SLR in UI until #7126 is merged This PR addresses the issue of integrating the SLR feature in the planned release version without #7126 by disabling it. Refs #7168   - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7191,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,Fix Short DOI error Fixes #7127   In issue #6920 the detection of exact short dois was improved. This was relevant where short dois were misplaced under the wrong field of an entry. This did not affect the method `public static Optional<DOI> findInText(String text)`  which looks for dois _within_ text (not exact matches).  With this commit  I have carried the improvements over to the _within-text_ detection. I had to make the detection more stringent  to avoid mis-detections for cases like _bla bla 10:30 bla bla_ or _bli blubb 10/12/2020 blibb blabb_ etc. Short dois within text will now only be detected if there is any _doi_ or _urn_ within the substring. E.g. any of the following will be detected:  - doi:10/12ab - /urn:doi:10/12ab - doi.org/10/1234 - doi.org/ab123 (shortcut doi) - etc..  I also introduced the concept of _shortcut dois_ to the in-text detection. (e.g. _doi.org/xyz123_)  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Were just having a (light) mob programming session and will take over. 😅  || GitHub shows too much changed files. Maybe due to database errors at GitHub - see https://github.com/JabRef/jabref/compare/master...PremKolar:shortDOIexceptionsFix_issue7127 || When opening the diff:  ![grafik](https://user-images.githubusercontent.com/1366654/102138930-6a3a0500-3e5d-11eb-8e45-2a31de873456.png)  Wrong GitHub output:  ![grafik](https://user-images.githubusercontent.com/1366654/102138995-876ed380-3e5d-11eb-9f01-1a98edb700fc.png)  || Oh wow :) Thank you for doing all the hard work!! :) || @PremKolar  We have to thank you for impoving and fixing the regex We just moved the tests to paramterized ones || Thank you all 👍  || @PremKolar  As you recently adapted the DOI find in text. I just stumbled upon an issue  which results in an error when the method finds a DOI with a dot at the end: This results in a not found error from doi.org   **doi:10.1007/s10549-018-4743-9.** It would be cool if you could add a replacement at the end  The following text is coming from the PDF content importer. It extracts the text content of the first page and then calls  `DOI.findInText(firstPageContents) ` ``` HHS Public Access Author manuscript Breast Cancer Res Treat. Author manuscript  available in PMC 2019 July 01.  Published in final edited form as: Breast Cancer Res Treat. 2018 July   170(1): 77–87. doi:10.1007/s10549-018-4743-9.  Acupuncture for breast cancer-related lymphedema: a  randomized controlled trial ```  || Hi  yes i would love to look into it. Im not sure its the `.`  but we will see.. Maybe the 25th Ill find the time 🙂 || Thanks in advance! No hurry. Happy holidays! || >  >  > @PremKolar As you recently adapted the DOI find in text. I just stumbled upon an issue  which results in an error when the method finds a DOI with a dot at the end: > This results in a not found error from doi.org >  > **doi:10.1007/s10549-018-4743-9.** > It would be cool if you could add a replacement at the end >  > The following text is coming from the PDF content importer. It extracts the text content of the first page and then calls > `DOI.findInText(firstPageContents) ` >  > ``` > HHS Public Access > Author manuscript > Breast Cancer Res Treat. Author manuscript  available in PMC 2019 July 01. >  > Published in final edited form as: > Breast Cancer Res Treat. 2018 July   170(1): 77–87. doi:10.1007/s10549-018-4743-9. >  > Acupuncture for breast cancer-related lymphedema: a  > randomized controlled trial > ```  I was going to report the same error  but I wanted to check whether DOIs could syntactically (validly) end in periods before I did so. ||
7210,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Updates to institution citation keys <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6942. Fixes #7199.  #### TL DR Authors only having a last name are abbreviated. #6942 is miss-abbreviated because name parts containing `uni` are assumed to be universities  e.g.  `United Airlines`. #7199 is triggers the abbreviation method because  from BibTeX´s point-of-view  the author only has a last name. The name is later removed because Java does not classify the first character as an uppercase letter  hence the heuristic assumes it is an insignificant word. E.g.  `{eBay}` gets removed  `{JabRef}` does not.  #### Background Authors that are institutions can have very lengthy citation keys unless they are abbreviated in some fashion. The abbreviations are generated in  https://github.com/JabRef/jabref/blob/6718c08cf5ace13365da2ce4c1509e4817eb34bc/src/main/java/org/jabref/logic/citationkeypattern/BracketedPattern.java#L1243  which is based on a heuristic that tries to determine a suitable abbreviation based on the content of the specific author.  Issue #6942 is due to a regexp being overly broad when determining if an author is a university.  Issue #7199 was created from #6706 where I changed how a company/institute is identified. In previous versions of JabRef  an author is an institute if it is enclosed in curly brackets (e.g.  `{JabRef}`)  and I changed it to also include authors who only have a last name (e.g.  `JabRef`)  which means that the author in issue #7199 is treated as an institution. This would not have been an issue if it wasnt because the heuristic for creating a citation key identifies words starting with a lowercase letter in the authors name as an invalid part of an institute abbreviation. Think of the "and" in "National Aeronautics and Space Administration"). Since the authors name only consist of one "word"  it is removed. (this is why the workaround @tobiasdiez mentioned does not work  even if it should)  #### Changes for #6942 1. Identifying universities in the authors names is arbitrary. The new regexp matches `^uni(v|b|$).*` instead of `^uni`. There are other suggestions in #6706 that can be implemented instead. 2. The inline institute abbreviation should now work again (e.g.  `{JabRef ({JB})}` should produce `JB`) 3. I am ignoring the `shortauthor` field  because I find it unclear how and when to use the field (e.g.  for multiple authors).  #7199  1. Ill change how institutes are identified  so that the `Author` must only have a last name and that last name must contain a space. This should only happen if the `Author` originally were enclosed in brackets. In all other cases Id argue it is acceptable to not abbreviate the author since the name is only one word.     1. Drawbacks to this approach is that I am using the LatexToUnicodeAdapter to remove braces  and it does not like unbalanced ones.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  #### Todo  - [x] Log a warning for unbalanced brackets in `Author`s - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Except for logging when LatexToUnicodeAdapter fails (otherwise names such as "{Link{\"{o}}ping University}**}**" will generate only `Uni`  due to the unbalanced brackets  and no warning  I do not intend any more code changes.  There will be some updates to the documentation  change log etc. || Wait... I cant check for failed parsing?  https://github.com/tomtung/latex2unicode/blob/71979d6904fcf7efade786297983b881a1b019d4/src/main/scala/com/github/tomtung/latex2unicode/LaTeX2Unicode.scala#L139-L146 || I guess you can use `parse` directly? Is this ready for review? || @tobiasdiez except for JavaDoc and changelog  yes  it is ready for review.  Which `parse`? || @tobiasdiez sorry  I missed to push 1 local commit. || https://github.com/tomtung/latex2unicode/blob/71979d6904fcf7efade786297983b881a1b019d4/src/main/scala/com/github/tomtung/latex2unicode/LaTeX2Unicode.scala#L126 this one? || O.o That would indeed work. Should I put this PR back in draft then? ~I am not sure how to go about this one  should I create a `LatexToUnicodeParseAdapter` that throws an exception so that the rest of the code in `LatexToUnicodeAdapter` is not repeated?~ **Edit** I were thinking about the Formatter classes  which `LatexToUnicodeAdapter` is not. || I have to admit I had not yet looked at your PR. It was just in response to your question. What do you want to do? || @tobiasdiez good then :)  In my opinion it is better if the generation warns if there is incorrect latex. But I am not sure how to do it in practice. I do not have experience with Scala <-> Java but if I am not misreading the `LaTeX2Unicode#parse` I am going to have to check if the result is `instanceof fastparse.Success` in which case we need to add fastparse as a dependency? || I do not know the drawbacks/advantages of that approach  but if this is the only part of the JabRef code that needs this  perhaps it is better to leave the code as-is? || We already have farstparse as a dependency  so thats not a problem. I agree it would be nice to check for parsing errors  so I support you here (sadly only morally since I do not have any scala experience too). || ~fastparse is an indirect dependency from latex2unicode? The issue I am having is that `latex2unicode#parse` returns a `fastparse.core.Parsed` instance. Unless I am missing something it means I must be able to import `fastparse.core` which I cannot right now. Should I add `fastparse` to `module-info.java`?~ I am missing something in the JabRef building process  Ill see if I can figure out. || yes  in principle importing it should work. However  there could be problems since fastparse is not yet modularized and we have a workaround in place: https://github.com/JabRef/jabref/blob/fd60d8394352f2cbfc9de2e70e3525d8bac1780e/build.gradle#L49-L50 So do not spend too much time trying to make it work. || @tobiasdiez you were right. For some reason my first attempt did not work. || I need to check one more thing (`{European Union {\"{A}}viation Safety Agency}` -> `EUAeSA`) but I cant right now so I am putting this back in draft. Thank you for your help @tobiasdiez ! ❤️  || I removed one test case because I believe is out of scope for this PR. How to deal with restricting the number of characters between the bracketedpattern/citationkey is a different issue (e.g.  a bracketed pattern that should only have one character  Ö  can by accident turn into two characters  Oe  in the citation key generation). || I’ll be looking at it shortly (dinner)  On December 22  2020 at 17:29:07  Christoph (notifications@github.com(mailto:notifications@github.com)) wrote:  >   > @Siedlerchr commented on this pull request. >   >   > In src/main/java/org/jabref/model/strings/LatexToUnicodeAdapter.java(https://github.com/JabRef/jabref/pull/7210#discussion_r547537724): >   > > + * @return a String with LaTeX resolved into Unicode + * @throws IllegalArgumentException if the LaTeX could not be parsed + */ + public static Optional<String> parse(String inField) throws IllegalArgumentException { + Objects.requireNonNull(inField)  + String toFormat  UNDERSCORE_MATCHER.matcher(inField).replaceAll(REPLACEMENT_CHAR)  + try { + var parsingResult  LaTeX2Unicode.parse(toFormat)  + if (parsingResult instanceof Parsed.Success) { + String text  parsingResult.get().value()  + toFormat  Normalizer.normalize(text  Normalizer.Form.NFC)  + return Optional.of(UNDERSCORE_PLACEHOLDER_MATCHER.matcher(toFormat).replaceAll("_"))  + } else { + return Optional.empty() + } + } catch (Throwable throwable) {   >   > the try and catch can now be removed >   >   > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub(https://github.com/JabRef/jabref/pull/7210#pullrequestreview-557403186)  or unsubscribe(https://github.com/notifications/unsubscribe-auth/AAT2NZ3T6F3IGY5GR7TBESDSWEMTHANCNFSM4VDLJ7NQ). >   >   >      || Is this ready for review? (I think it looks good) || > Is this ready for review? (I think it looks good)  Yup  it is ready. || @tobiasdiez good catch  apparently I did not examine my assumptions enough. My concerns regarding including it is   #### 1. Based on https://github.com/JabRef/jabref/pull/6706#issuecomment-682179624 and others  > (i) when using in the bibtex key generator  the non-ascii characters are converted to a "good" representation (as in your example: Göd -> Goe) > ... >   because the bibtex tooling is not fully UTF8 (biblatex+biber is  but not the more commonly used bibtex tool).  my thoughts were that  to the largest extent possible  BibTeX citation keys should be ASCII/ANSI only  in which case #7199 should not be added as a test case. If `{eBay}` is successful  it is likely that #7199 will be as well (from BibTeX/Java´s point-of-view both contain only a last name that starts with a lowercase letter  and it was the institute abbreviation method that removed 杨秀群).  #### 2. I am not convinced that the currently generated citation key is correct  but you seem to know more about this particular issue than I  so feel free to correct me 😛  I based my decision on @xiaodongcenturys comment  > "杨 秀群"  but not "杨秀群"  the former has a space between last name and first name of a Chinese name.  In my opinion  the "correct" citation key should be either 杨 or 秀群 (i.e.  based on the documentation  the citation key shoul be the last name). With `eBay` I know the citation key is correct.  ---  However  all of that being said (and my apologies about the rather lengthy reading)  if this is how JabRef is used  perhaps the test case should be added anyway? || As we have quite a lot of Chinese users  it would be good to support this as far as possible. Thus  if the user enters Chinese authors  then I would say we should generate a key with chinese characters. In the best case  one would actually replace the Chinese character by their romanization  but Im not sure if there exist a convenient library for this.  For now  I would say we simply add `杨秀群` as a test (with whatever result it currently produces). || > For now  I would say we simply add `杨秀群` as a test (with whatever result it currently produces).  Sure!  > In the best case  one would actually replace the Chinese character by their romanization  but Im not sure if there exist a convenient library for this.  [pinyin4j](http://pinyin4j.sourceforge.net/) seem to be the most popular Java alternative. However  given that there isnt a need of high performance (clean up operation?)  [there are more popular javascript libraries](https://github.com/hotoo/pinyin/blob/master/README-us_EN.md). I do not know if there is an interest for this? || Thanks  also for the research concerning pinyin libraries. Lets see if users report this as a feature request. || @Siedlerchr @tobiasdiez thank you both for your time  reviews and suggestions  they are appreciated! || Thank you ALL! The JabRef 5.3--2020-12-28--78b08b5 works perfectly with Chinese names. Thanks again. || 
7210,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Updates to institution citation keys <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #6942. Fixes #7199.  #### TL DR Authors only having a last name are abbreviated. #6942 is miss-abbreviated because name parts containing `uni` are assumed to be universities  e.g.  `United Airlines`. #7199 is triggers the abbreviation method because  from BibTeX´s point-of-view  the author only has a last name. The name is later removed because Java does not classify the first character as an uppercase letter  hence the heuristic assumes it is an insignificant word. E.g.  `{eBay}` gets removed  `{JabRef}` does not.  #### Background Authors that are institutions can have very lengthy citation keys unless they are abbreviated in some fashion. The abbreviations are generated in  https://github.com/JabRef/jabref/blob/6718c08cf5ace13365da2ce4c1509e4817eb34bc/src/main/java/org/jabref/logic/citationkeypattern/BracketedPattern.java#L1243  which is based on a heuristic that tries to determine a suitable abbreviation based on the content of the specific author.  Issue #6942 is due to a regexp being overly broad when determining if an author is a university.  Issue #7199 was created from #6706 where I changed how a company/institute is identified. In previous versions of JabRef  an author is an institute if it is enclosed in curly brackets (e.g.  `{JabRef}`)  and I changed it to also include authors who only have a last name (e.g.  `JabRef`)  which means that the author in issue #7199 is treated as an institution. This would not have been an issue if it wasnt because the heuristic for creating a citation key identifies words starting with a lowercase letter in the authors name as an invalid part of an institute abbreviation. Think of the "and" in "National Aeronautics and Space Administration"). Since the authors name only consist of one "word"  it is removed. (this is why the workaround @tobiasdiez mentioned does not work  even if it should)  #### Changes for #6942 1. Identifying universities in the authors names is arbitrary. The new regexp matches `^uni(v|b|$).*` instead of `^uni`. There are other suggestions in #6706 that can be implemented instead. 2. The inline institute abbreviation should now work again (e.g.  `{JabRef ({JB})}` should produce `JB`) 3. I am ignoring the `shortauthor` field  because I find it unclear how and when to use the field (e.g.  for multiple authors).  #7199  1. Ill change how institutes are identified  so that the `Author` must only have a last name and that last name must contain a space. This should only happen if the `Author` originally were enclosed in brackets. In all other cases Id argue it is acceptable to not abbreviate the author since the name is only one word.     1. Drawbacks to this approach is that I am using the LatexToUnicodeAdapter to remove braces  and it does not like unbalanced ones.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  #### Todo  - [x] Log a warning for unbalanced brackets in `Author`s - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Except for logging when LatexToUnicodeAdapter fails (otherwise names such as "{Link{\"{o}}ping University}**}**" will generate only `Uni`  due to the unbalanced brackets  and no warning  I do not intend any more code changes.  There will be some updates to the documentation  change log etc. || Wait... I cant check for failed parsing?  https://github.com/tomtung/latex2unicode/blob/71979d6904fcf7efade786297983b881a1b019d4/src/main/scala/com/github/tomtung/latex2unicode/LaTeX2Unicode.scala#L139-L146 || I guess you can use `parse` directly? Is this ready for review? || @tobiasdiez except for JavaDoc and changelog  yes  it is ready for review.  Which `parse`? || @tobiasdiez sorry  I missed to push 1 local commit. || https://github.com/tomtung/latex2unicode/blob/71979d6904fcf7efade786297983b881a1b019d4/src/main/scala/com/github/tomtung/latex2unicode/LaTeX2Unicode.scala#L126 this one? || O.o That would indeed work. Should I put this PR back in draft then? ~I am not sure how to go about this one  should I create a `LatexToUnicodeParseAdapter` that throws an exception so that the rest of the code in `LatexToUnicodeAdapter` is not repeated?~ **Edit** I were thinking about the Formatter classes  which `LatexToUnicodeAdapter` is not. || I have to admit I had not yet looked at your PR. It was just in response to your question. What do you want to do? || @tobiasdiez good then :)  In my opinion it is better if the generation warns if there is incorrect latex. But I am not sure how to do it in practice. I do not have experience with Scala <-> Java but if I am not misreading the `LaTeX2Unicode#parse` I am going to have to check if the result is `instanceof fastparse.Success` in which case we need to add fastparse as a dependency? || I do not know the drawbacks/advantages of that approach  but if this is the only part of the JabRef code that needs this  perhaps it is better to leave the code as-is? || We already have farstparse as a dependency  so thats not a problem. I agree it would be nice to check for parsing errors  so I support you here (sadly only morally since I do not have any scala experience too). || ~fastparse is an indirect dependency from latex2unicode? The issue I am having is that `latex2unicode#parse` returns a `fastparse.core.Parsed` instance. Unless I am missing something it means I must be able to import `fastparse.core` which I cannot right now. Should I add `fastparse` to `module-info.java`?~ I am missing something in the JabRef building process  Ill see if I can figure out. || yes  in principle importing it should work. However  there could be problems since fastparse is not yet modularized and we have a workaround in place: https://github.com/JabRef/jabref/blob/fd60d8394352f2cbfc9de2e70e3525d8bac1780e/build.gradle#L49-L50 So do not spend too much time trying to make it work. || @tobiasdiez you were right. For some reason my first attempt did not work. || I need to check one more thing (`{European Union {\"{A}}viation Safety Agency}` -> `EUAeSA`) but I cant right now so I am putting this back in draft. Thank you for your help @tobiasdiez ! ❤️  || I removed one test case because I believe is out of scope for this PR. How to deal with restricting the number of characters between the bracketedpattern/citationkey is a different issue (e.g.  a bracketed pattern that should only have one character  Ö  can by accident turn into two characters  Oe  in the citation key generation). || I’ll be looking at it shortly (dinner)  On December 22  2020 at 17:29:07  Christoph (notifications@github.com(mailto:notifications@github.com)) wrote:  >   > @Siedlerchr commented on this pull request. >   >   > In src/main/java/org/jabref/model/strings/LatexToUnicodeAdapter.java(https://github.com/JabRef/jabref/pull/7210#discussion_r547537724): >   > > + * @return a String with LaTeX resolved into Unicode + * @throws IllegalArgumentException if the LaTeX could not be parsed + */ + public static Optional<String> parse(String inField) throws IllegalArgumentException { + Objects.requireNonNull(inField)  + String toFormat  UNDERSCORE_MATCHER.matcher(inField).replaceAll(REPLACEMENT_CHAR)  + try { + var parsingResult  LaTeX2Unicode.parse(toFormat)  + if (parsingResult instanceof Parsed.Success) { + String text  parsingResult.get().value()  + toFormat  Normalizer.normalize(text  Normalizer.Form.NFC)  + return Optional.of(UNDERSCORE_PLACEHOLDER_MATCHER.matcher(toFormat).replaceAll("_"))  + } else { + return Optional.empty() + } + } catch (Throwable throwable) {   >   > the try and catch can now be removed >   >   > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub(https://github.com/JabRef/jabref/pull/7210#pullrequestreview-557403186)  or unsubscribe(https://github.com/notifications/unsubscribe-auth/AAT2NZ3T6F3IGY5GR7TBESDSWEMTHANCNFSM4VDLJ7NQ). >   >   >      || Is this ready for review? (I think it looks good) || > Is this ready for review? (I think it looks good)  Yup  it is ready. || @tobiasdiez good catch  apparently I did not examine my assumptions enough. My concerns regarding including it is   #### 1. Based on https://github.com/JabRef/jabref/pull/6706#issuecomment-682179624 and others  > (i) when using in the bibtex key generator  the non-ascii characters are converted to a "good" representation (as in your example: Göd -> Goe) > ... >   because the bibtex tooling is not fully UTF8 (biblatex+biber is  but not the more commonly used bibtex tool).  my thoughts were that  to the largest extent possible  BibTeX citation keys should be ASCII/ANSI only  in which case #7199 should not be added as a test case. If `{eBay}` is successful  it is likely that #7199 will be as well (from BibTeX/Java´s point-of-view both contain only a last name that starts with a lowercase letter  and it was the institute abbreviation method that removed 杨秀群).  #### 2. I am not convinced that the currently generated citation key is correct  but you seem to know more about this particular issue than I  so feel free to correct me 😛  I based my decision on @xiaodongcenturys comment  > "杨 秀群"  but not "杨秀群"  the former has a space between last name and first name of a Chinese name.  In my opinion  the "correct" citation key should be either 杨 or 秀群 (i.e.  based on the documentation  the citation key shoul be the last name). With `eBay` I know the citation key is correct.  ---  However  all of that being said (and my apologies about the rather lengthy reading)  if this is how JabRef is used  perhaps the test case should be added anyway? || As we have quite a lot of Chinese users  it would be good to support this as far as possible. Thus  if the user enters Chinese authors  then I would say we should generate a key with chinese characters. In the best case  one would actually replace the Chinese character by their romanization  but Im not sure if there exist a convenient library for this.  For now  I would say we simply add `杨秀群` as a test (with whatever result it currently produces). || > For now  I would say we simply add `杨秀群` as a test (with whatever result it currently produces).  Sure!  > In the best case  one would actually replace the Chinese character by their romanization  but Im not sure if there exist a convenient library for this.  [pinyin4j](http://pinyin4j.sourceforge.net/) seem to be the most popular Java alternative. However  given that there isnt a need of high performance (clean up operation?)  [there are more popular javascript libraries](https://github.com/hotoo/pinyin/blob/master/README-us_EN.md). I do not know if there is an interest for this? || Thanks  also for the research concerning pinyin libraries. Lets see if users report this as a feature request. || @Siedlerchr @tobiasdiez thank you both for your time  reviews and suggestions  they are appreciated! || Thank you ALL! The JabRef 5.3--2020-12-28--78b08b5 works perfectly with Chinese names. Thanks again. || 
7224,1,0,1,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,Fix ClipboardManager <-> Prefs ordering Fixes #7200  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7225,1,0,0,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,Fix some fetcher test This PR fixes some of the failing fetcher tests specified in #6369. Namely: * [x]  Jstor: Result differs * [x]  CiteSeer: Result differs * [x]  TitleFetcher: Change format * [x]  Disable CompositeFetcherTest on CI  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. /home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/importer/fetcher/CompositeSearchBasedFetcherTest.java:32: error: cannot find symbol @DisabledOnCIServer("Produces to many requests on CI")  ^   symbol: class DisabledOnCIServer || Fixed! 😄  || 
7229,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Disable ACM  Google Scholar  JSTOR We cannot get the ACM fetcher working (#5804) nor the Google Scholar (#7075). JSTOR has a traffic limit. Thus  we disabled them.  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Is the JSTOR fetcher working in principle  and only hits the quota limit after a certain amount of usages? How many per day? || Not on my machine. Not at Dominiks. Please execute the Web Search for yourself for a triple check 😅✌️  Tobias Diez <notifications@github.com> schrieb am Mi.  23. Dez. 2020  15:43:  > Is the JSTOR fetcher working in principle  and only hits the quota limit > after a certain amount of usages? How many per day? > > — > You are receiving this because you authored the thread. > Reply to this email directly  view it on GitHub > <https://github.com/JabRef/jabref/pull/7229#issuecomment-750330256>  or > unsubscribe > <https://github.com/notifications/unsubscribe-auth/AAKNU7T2X2GZM2KVX3IWWC3SWH6YTANCNFSM4VGGOJ3Q> > . >  || I remember that it worked a while ago. Maybe they require some cookies or whatever to be present. Edit// They now also use Recaptcha. I tried some access with curl :(  curl https://www.jstor.org/open/search/?Queryau%3A%22Haman%22au%3A%22Medlin%22 ||
7232,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Add a more descriptive path when Directory cannot be found <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> **Issue problem:** When you try to download a pdf (Lookup -> Search full documents online ) and you do not have a file directory set  an alert tells you that you should follow a path to set your file directory: Preference -> File. But that path is not correct because to set the file directory you need to follow this path: Options -> Preference -> Linked Files -> Main File Directory  **Suggested changes:** change the message to: **_Main file directory not set! Check the Preferences (Linked files) or the Library properties._**  Screenshots: <img width"517" alt"Screen Shot 2020-12-23 at 7 55 15 PM" src"https://user-images.githubusercontent.com/33851952/103056159-6b53ec00-4559-11eb-9f94-194f162a4d47.png">  Fixes #7197  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Please see https://docs.jabref.org/setup/databaseproperties#override-default-file-directories You can define relative directories in the library properties and thus the main  file directory can be empty. In addition theres a checkbox to always use the bib file location which will override all other settings.   ### suggestion change the message to No file directory set or. Check the preferences (linked files) or the library properties  || Thanks for the review! I added some changes 😀  || Huh  I think we totally forgot your PR when thinking about the issue with #7279. But since your PR is now independent of this issue  I do not see any cause not to merge  since every other remark is implemented. Sorry for the delay and thanks for your work! ||
7240,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Add Traditional Chinese Fixes #7237 https://www.oracle.com/java/technologies/javase/jdk8-jre8-suported-locales.html  Need to look into crowdin how to map it  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7243,1,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,Fix Normalize pages formatter not replacing dashes Fixes #7239  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. For devCall:  ```  I would suggest we weaken the regex to follow the biblatex def: (2.2.1)      A range is something optionally followed by one or more dashes optionally followed by some non-dash (e.g.5--7).   ``` || As a follow-up to https://github.com/JabRef/jabref/pull/1013  I added `UnprotectTermsFormatter`. I was not sure about the naming  because it is not an opposite one (https://github.com/JabRef/jabref/issues/920#issuecomment-195779352). `UnfreezeAllWords` was the old proposal.  The discussion continued at https://github.com/JabRef/jabref/issues/920#issuecomment-196747008 || Regarding the case `pages 1-50`  I was unsure. I opted to also to reformat them. ||
7260,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,Improved detection of long DOIs within text Fixes a checkstyle issue of #7257.  - [ ] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7269,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1,1,0,0,1,Only disable  move to file dir when path equals Fix equals in path method Fixes #7194  The dialog is now only disable when the file is already in the file directory  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7290,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,Fix for issue 7287 <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fix issue where the about dialog does not open a second time  Fix for issue #7273 #7287  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thank you for the quick action taken @faeludire  ||
7292,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fixed exception about missing custom css file Fixes #7177 "Java Exception when trying to open the preferences with missing custom theme"  After some testing I found that there two main paths that could result in the same failure: the CSS file being missing before application start  and changing the name of the CSS file while the application is running. To resolve the latter  I think the best approach is to check the custom CSS file exists.  This is already done for the Theme as used for most of the application  however the Preview Viewer has its own CSS URL logic.  Rather than add file checking logic to the Preview Viewer  I have refactored and moved the theme logic of Preview Viewer into Theme  so that all CSS URL logic is encapsulated in that class. I have also put the logic that checks that the URL is valid and filters it to an Optional.empty() into one new method  additionalCssToLoad()  in place of the field of the same name. This ensure that the file existence check is performed in all cases  rather than just at construction of the Theme object.  I have kept the Optional<URL> field so there should be no overhead to this approach for the built in themes  and only the minor and necessary overhead of file existence checking for the custom theme.  For manual testing I checked:  - previews and overall appearance for default theme are correct  after restart - previews and overall appearance for dark theme are correct  after restart - previews and overall appearance with a custom theme with a valid name are correct  after restart - live changes to the custom theme still work  in general and for preview - rename custom theme so that the configured theme is no longer correct  **before application start**. The preview is no longer themed but there is no error. - the preview theme is restored when the filename is restored to the configured value  without restarting the application - Restart. Rename custom theme so that the configured theme is no longer correct  **while application is running**. The preview remains themed (typically sized CSS themes are data URL embedded and so survive file removal).  These tests were run both with the Gradle run task  and on the built binary (rationale: gradle presents the dark theme as a file  while the binary has it built in on a jrt: URL  so the results could be different).  PR tasks:  - [X] Change in CHANGELOG.md described (if applicable) - [X] Tests created for changes (if applicable) - [X] Manually tested changed features in running JabRef (always required) - [X] ~~Screenshots added in PR description (for UI changes)~~ (N/A) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. > Thanks for the work and also thanks for adding a test. Is this ready now?  Ive justed add some test coverage for theme live reloading  the change to it was minor but this should cover all the changes now. All being well from CI pipeline I will remove the draft status 👍  || I get an NPE with the file watching ThemeTest in the github CI pipeline that I do not get when running the test locally  and the only thing I can see on the line with NPE that could do that is closing the WatchService  which functionally looks correct  but perhaps is open to memory consistency issues. So  Ive added volatile to the WatchService and I take a local copy to null check before closing. In commit 9d77318184c30f934343b0f9a6760817b0e53976 || Ive put a condition on that last test Ive added  so it only runs on Windows. Ill try to figure out why it is behaving differently in the pipeline without holding up this PR  as it is very likely a test artifact -- its quite complicated with needing to run up the file watching service and mock the JavaFX Scene.  Ive given a final quick manual test after the last commit.  Fetcher Tests fail with 429 Too Many Requests  probably just because Im hammering the CI and this is usual. I guess the failing of the AUTHORS is usual for a first contribution  so nothing to worry about.  Only thing that I am unsure of is why the Mac OSX create installer task fails consistently  if thats something I need to fix let me know.  From my perspective  happy for this to be given a final review and merge 👍  || @docrjp  The mac os will always fail because it requires some keys/secrets. However  GithubAction does not pass these to forks. Linux and file watching/locking is a complex issue  Linux file system works completely different from windows  e.g. there is no kind of lock for a file. Fetcher test are another  non-related issue  only relevant if you worked on them. || I agree with @tobiasdiez   we should merge this one now  as this is an improvement already  bug has been fixed and especially extracting theme logic out of foreign classes is very good  even though the theme architecture is not perfect  but this goes beyond this PR. Codewise looks good also to me  tests have passed  so ill merge this. || Thank you for your work here and for accepting our commnts about it. I hope you liked working on JabRef. We would be happy if you decide to continue to contribute. || > Thank you for your work here and for accepting our commnts about it. I hope you liked working on JabRef. We would be happy if you decide to continue to contribute.  Absolutely!  Thank you all @Siedlerchr @calixtus @tobiasdiez for your valuable feedback and support  all of it was very much appreciated  its a great community here!  I will definitely keep contributing. Jabref caught my eye on CodeTriage because I used over 10 years ago as a postgraduate. In private industry since and now wanting to give back  it couldnt be more perfect! 😄 ||
7296,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Fix typo in conversion for small pi <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #7291. There is a typo in the unicode <-> latex <-> HTML conversion.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] ~Change in CHANGELOG.md described (if applicable)~ - [x] ~Tests created for changes (if applicable)~ - [x] Manually tested changed features in running JabRef (always required)     - [x] Enter "$\pi$ in Abstract field.     - [x] Convert -> "Unicode to LaTeX" in context menu - [x] ~Screenshots added in PR description (for UI changes)~ - [x] ~[Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.~  
7302,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Added Keyboard shortcuts (clear/set read status) <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   Added Keyboard shortcuts with defaults for   - Clear read status (alt+C)  - Set read status to read (alt+R)  - Set read status to skimmed (alt+S)  Fixes #7264  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. ups  thought i had to close the pull request but i think i have to wait until you merge it. || If everybody is happy  Ill think I merge. Thanks! 😄  ||
7338,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,Fix expansion of bracketed expressions in RegExpBasedFileFinder <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> #### Fixes #4342  #4342 contains two issues. 1. The bracketed pattern `[title]` does not refer to the StandardField title  but a "special" pattern intended to give nicer output (this is why dashes do not work  see https://github.com/JabRef/jabref/issues/4342#issuecomment-742722875). It is intended and can be **avoided** by using `[TITLE]`. 2. An expanded bracketed pattern is interpreted as a regexp (which it should not). This is why parenthesizes does not work. A pattern that expands into `(abc)` will match `abc`  but not `(abc)`.   If the expanded bracketed pattern contains characters that have a special meaning in regexp (such as a parenthesis and brackets)  it becomes a problem. An entry with the title `Regexp from [A-Z]` and the bracketed expression `[TITLE]` would match a file titled `Regexp from B`  but not a file named `Regexp from [A-Z]`.  #### The goal of this PR  Match files whose expanded bracketed pattern includes symbols that can be miss-interpreted.  1. **Regex**: All expanded brackets will match literally   using `Pattern.quote`. I do not see a reasonable use-case for allowing a bracket to expand into an actual regex. 2. **Cleaned filenames** _In addition_ to matching the regularly expanded brackets  they will also match cleaned file names (it will find files containing both `ACM/IEEE-CS` and `ACM_IEEE-CS`).  **Note**: Regex can still be used outside of the bracketed patterns. (except for character classes  since they will be interpreted as a bracketed pattern)  #### Issues neither addressed in this PR nor the current master 1. Files that get truncated due to length 2. Character classes in the RegExpBasedFileFinder. In the following pattern  `**/.*[title][a-z]+.*\\.[extension]`  `[a-z]` is treated as if it is a bracketed pattern 3. BracketedExpressions are only expanded in the file name  **not in the directory name**.  #### Checklist  - [x] ~Check if parts can be replaced by a glob (<a href"https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/nio/file/FileSystem.html#getPathMatcher(java.lang.String)">getPathMatcher</a>)~ - [x] Improve finding and parsing bracketed expressions? - [x] Fix this particular use case using regexp literals (\Q\E in the regexp)     - [x] ~Add type-safety to the expanded bracket (return a compiled Pattern when it is supposed to be a RegularExpression)~ - [x] Check that the expanded bracketed expression result in a correct filename  and/or convert it into one. (avoid issues finding JabRef generated filenames 😱 )     - [x] ~Add test case for an expression that would result in a JabRef corrected filename ("ACM/IEEE-CS Information Technology Curriculum" -> "ACM_IEEE_CS Information Technology Curriculum")~ I do not think this can be done reliably within the scope of this PR     - [x] ~Make sure a warning appears in the debug log if a filename/dirname is expected to be too long~     - [x] ~Refactor `FileUtil.createFileNameFromPattern` so the same code is used~ I do not think this can be done reliably within the scope of this PR - [x] Add JavaDoc  improve variable names and comments   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) **The manual test was only performed with the example given in https://github.com/JabRef/jabref/issues/4342#issuecomment-686606696** - [x] ~Screenshots added in PR description (for UI changes)~ - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. This needs deeper thinking at review. At first gut feeling  `[author] text` should be expaned. This is not possible any more in this PR (see remove tests). Not sure whether we really want that. We need to really read the PR description and the linked issue for a proper feedback. || > This needs deeper thinking at review. At first gut feeling  `[author] text` should be expaned. This is not possible any more in this PR (see remove tests).  This is possible in this PR. Ill review my PR description and see if I can clarify. || @koppor @Siedlerchr sorry about that. Sometimes it is a bit too easy to tunnel-vision and assume something is "obvious"  while forgetting all the assumptions needed to make it obvious. The PR description is updated and  hopefully  more readable. || 
7352,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fixes regex (again) in PreviewViewer <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #7344.  Apparently I did not pay enough attention while copy-pasting in Intellij  or checking the method again afterward. See https://github.com/JabRef/jabref/pull/7073#pullrequestreview-526937823 for the original regex. Note that to reproduce it in the current JabRef you need to have the preview pane open while searching.  Sorry about this one.   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7355,1,0,0,1,1,1,1,0,0,1,1,0,1,0,1,1,1,0,1,Fix harvard exporter by changing AuthorsFormatter The layout files were still using the old formatter chaining for authors and therefore were responsible for removing braces  Also fix extension.  Fixes #4508   <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. For other layout files I have created a follow up issue https://github.com/JabRef/jabref/issues/7356 || @k3KAW8Pnf7mkmdSMPHz27  I simply had to replace the old formatters. Totally forgot that we changed the format implementation. So sorry for bothering you. || We do not have any tests for this exporter? || We do not have any tests for the TemplateExporter (the layout file based). But I guess it would make sense to add some.  Refs #7356  ||
7357,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Export urldate to MSOffice Fixes #7354   <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7358,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Export full month name instead of number in ms office Follow up fix from #7354  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7368,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,0,Add migration to special field This PR migrates all occurrences of special field values in the keywords into their respective special fields. Fixes #6840.  - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7379,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix "Alt + keyboard shortcuts do not work" <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> User can use CheckMenuItem shortcut only when they click the tab. That is because the event will not be created until user click the menu in original version. Such that  I create the event when we intial the GUI. In this case  the issue is fixed. Fixes #6994  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. > Hi @Fu188   I tried to fix the remaining issue I mentioned quickly by myself  but it seems  that you did not grant write access to your PR branch. So please fix the remaining issue  then we can merge. > Also Changelog.md needs some conflict resolution.  I have fix the remaining issue. Thanks for your merge! || Now you have introduced a lot of indentation changes in JabRefFrame (https://github.com/JabRef/jabref/pull/7379/files). Please undo them. || > Now you have introduced a lot of indentation changes in JabRefFrame (https://github.com/JabRef/jabref/pull/7379/files). Please undo them.  I have undo them and its ok now. ||
7417,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Added keyboard shortcut for merging entries Fixes #7414   User submitted a patch  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7421,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,add selection copy to preview window Fixes #6962  Added a feature that allows users to copy highlighted text in the preview window  Screenshot:  ![100c67ff4e73c1cb3ea8e4385da41cdd](https://user-images.githubusercontent.com/47194464/106947983-7179e280-672b-11eb-8a7c-4eef008ab992.png)   - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7438,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Fixes the issue "Non valid number as font size results in an uncaught exception." <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes  #7415   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Please fix the checkstyle issues  otherwise lgtm! || @calixtus  The problem is that the OnlyIntegerFormatter returns null for no value and this will throw an exception in the spinner IntegerConverter (was my first attempt either) || Just to comment on that @Siedlerchr  the `Textformatter<Integer>` also returns null on no input  at least when I did a manual test. || Isnt it possible to pass a default value as an argument to the constructor? || @calixtus  Are you referring to the `OnlyIntegerFormatter` or the null reference exception? In either case  a default value is passed to the `TextFormatter`  but a null reference exception can still happen. || The Database tests fail. Can someone elaborate on this. || The database test sometimes fail for no reason  not related to you changes || > @calixtus Are you referring to the `OnlyIntegerFormatter` or the null reference exception? In either case  a default value is passed to the `TextFormatter`  but a null reference exception can still happen.  I was referring to the OnlyIntegerFormatter. But I am satisfied. Thank you for your work here. || @calixtus you are welcome. || @calixtus I think you need to approve before we can merge  since you requested changes. ||
7440,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,Zbmath fetcher Add zbmath to the public databases which can be chosen when updating an entry with bibliographic information from the web. See Fixes #7437.  ![Screenshot (3)](https://user-images.githubusercontent.com/68125288/107381280-fb8cc700-6aee-11eb-9098-7fed664ccad9.png)  ![Screenshot (4)](https://user-images.githubusercontent.com/68125288/107381331-05aec580-6aef-11eb-9715-94142f03c825.png)   - [x] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. In the Fetcher Tests  src/test/java/org/jabref/logic/importer/fetcher/ZbMATHTest.java did not fail but some tests for other fetchers. I think this failures are not due to my changes. || Thank You for the help with the AuthorList Class. I added the requested changes. Three fetcher Tests from other fetchers failed but not from the zbmath fetcher.  || I work for them  -) I wrote this sometime ago on gitter...but you might not follow all messages there. ||
7443,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,0,0,1,Fix citation keys unintentionally being overwritten on import Fixes #7420   Hello JabRef-Team   Ive attempted to create a fix for issue 7420. Im not sure if its done as expected though  please let me know if I need to change/update anything.  The fixed version behaves like this: If Preferences > Citation key patterns > Overwrite existing keys is unchecked  `generateKey()` in `CitationKeyGenerator`:  * overwrites the default `citationKey` with an newly generated one only  if it is blank * the default `citationKey` is not overwritten anymore (and therefore stays the same)  if it is not blank  Behaviour remains unchanged if Overwrite existing keys is checked. (Let me know if I misunderstood how this feature was supposed to work in general and Ill adapt the behaviour accordingly)  Fixes #7420  - [ ] Change in CHANGELOG.md described (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks a lot for your PR.  I think using the setting Citation key patterns > Overwrite existing keys might be confusing. This is used to warn/prevent users if they try to generate a key using the "Generate key" button in the entry editor  although the entry already has a key. The use case is that after generating a new key  old latex documents stop compiling and some users would like to prevent this. As you see  this has nothing to do with the import.  Maybe its better to add a checkbox in the import dialog. Another idea would be to let the users specify a cleanup preset in the preferences that is applied after an import. The latter would then also resolve #1018. @LucasF-42 @JabRef/developers what do you prefer? || Oh  Ive completely missed the mark then  sorry about that. The way I understood the description/discussion within the issue  I presumed the Overwrite existing keys- option was the one that governs whether the default `citationKey` of an imported entry is overwritten by a generated key based on user preferences  or not (and wasnt working as intended). My bad.  Just for my understanding in general: If the Bibtex-Source-String:  ``` @Article{Igor:2013eha    author         {Igor  Kulikov}    title          {A new GPU-accelerated hydrodynamical code for numerical simulation of interacting galaxies}    year           {2013}    month          {11}    archiveprefix  {arXiv}    eprint         {1311.0861}    primaryclass   {astro-ph.IM}  } ````  is being imported after a web search  default behaviour would be to overwrite the `citationKey` of the `BibEntry`-Object with a generated key  based on the pattern specified in `CitationKeyPattern`-Preferences (e.g. `Igor2013` in case of a default pattern of `[auth][year]`).  If a user were to choose not to overwrite keys  the `BibEntry` would continue using `Igor:2013eha` as its `citationKey`. Would that then be considered intended behaviour for an import?  Im afraid Im not able to fully comprehend the "cleanup preferences"-solution youve mentioned  so Im definitely not fit to voice an opinion here. Ive just got a first  very localised look at JabRef while attempting to fix the mentioned issue.  Not sure about the protocol - would you like me to close this PR and await your decision on this topic? || > Another idea would be to let the users specify a cleanup preset in the preferences that is applied after an import.  I like this option! I think it would address a lot of the confusion regarding when the citation key generator is used and what behavior it has. However  I do not think it replaces this PR. I think there is a need for a "default"/global citation key generation behavior  which in my opinion  should be set in the `Citation key patterns` preferences. I consider the "unwanted" characters another example of when a "default" option is necessary and should be applied wherever/whenever the citation key generator is used.  > Oh  Ive completely missed the mark then  sorry about that. > The way I understood the description/discussion within the issue   I do not think there is such a thing as missing the mark when it comes to JabRef  when something leads to an improvement I think everything is up for discussion and on the mark 😛  > Overwrite existing keys- option was the one that governs whether the default `citationKey` of an imported entry is overwritten by a generated key based on user preferences  Id argue that this is the case.  > "cleanup preferences"-solution youve mentioned  so Im definitely not fit to voice an opinion here  I interpret it as essentially running a "cleanup action" on the imported entries  perhaps using different preferences but otherwise same as the <img width"681" alt"Skärmavbild 2021-02-15 kl  08 32 47" src"https://user-images.githubusercontent.com/2598631/107960245-65372600-6f72-11eb-8626-58c9c1bea0b0.png">  || From my point of view as I proposed in https://github.com/JabRef/jabref/issues/7420#issuecomment-774228070 it needs to the check needs to be  added to the import handler before the key generator is called || > From my point of view as I proposed in [#7420 (comment)](https://github.com/JabRef/jabref/issues/7420#issuecomment-774228070) it needs to the check needs to be added to the import handler before the key generator is called  Am I reading too much into your comment in that you are aligned with the "add a checkbox in the import dialog" option?  In my mind  the logic is that a citation key generator object is created based on preferences (`CitationKeyPatternPreferences`). If the importer wants to override these settings  it should create a new instance of this object. Then it is up to the `CitationKeyGenerator` to adhere to these preferences. Admittedly  this does not work well with `shouldWarnBeforeOverwriteCiteKey`. Perhaps I am just overcomplicating things and thinking about this in the wrong way. || Indeed  there is no such thing as missing the mark in our cosy JabRef world.  There are two things here that we shouldnt confuse: - Use clicks "Generate citation key" button  controlled by the Citation keys > Overwrite existing keys preference. - Automatically generate keys upon import / web search instead of using the one provided by the fetcher (which most of the times is some cryptic key).  Although from a code point of view they are the same  for a user they are quite different and one could easily imagine that a user might want to prevent overwriting manually set keys but still would like to have automatically generated keys upon import.  I think  the best way forward would be to introduce a new preference setting "generate (new?) key on import".  That could go in the "General" tab below the other import-related preferences (entry owner + time stamp). Or if you feel comfortable enough with the code  create a new preference tab "Import" where you put all of these 3 preferences options. Maybe @calixtus has more input about the structure of the preferences.  || Thank you all for the explanations/comments  I feel like Ive got a better idea about the subject. Id have to take a closer look at the project again to see whether I feel like Id be able to implement the "create a new Import tab in preferences"-solution.  I was wondering though  wouldnt the option to decide whether or not to generate a key for a given import in the import dialogue be advantageous as well (on top of the new entry in preferences)? This way a user wouldnt have to change their preferences when importing an entry for which theyd like to go against said preference. (As long as Im not confusing things again) || I agree that such an option in the import dialog might be handy from time to time. However  this also makes the import dialog more complicated  so Im not sure if its a good idea to add it there. Maybe first try the solution via the preferences  and then see if the users would like to have an option during the import as well? || @LucasF-42  It would be really nice if you could go with the simple solution first.  That would be a huge benefit already for many users!  We can always add an option in the import dialog later. || It seems Im unable to accomplish even that  Im afraid. Ive managed to add an "Import settings" tab  as well as a checkbox for toggling the option (by attempting to copy how other Tabs are implemented  so nothing to write home about at all).  ![image](https://user-images.githubusercontent.com/54138417/109562336-87868300-7ade-11eb-977e-b2ef892fffb3.png)  The feature as such seems to be working as well  but its messing with something (or more like: breaking something) and I have been unable to understand what exactly it is.  ![image](https://user-images.githubusercontent.com/54138417/109562536-cddbe200-7ade-11eb-9fce-5d9b3b27ca47.png)  These exceptions are raised once you have toggled the checkbox in the "Import settings" at least once in a session  as soon as you delete the last remaining entry within a library. If the setting has not been changed in a session  no matter if the option is enabled or not  these exceptions are not raised when deleting the last entry in the library. However  the more often you toggle the option  the more exceptions are thrown. Example after having toggled the setting three times:  ![image](https://user-images.githubusercontent.com/54138417/109563051-886be480-7adf-11eb-8005-5b58764e64af.png)  Didnt want to push the branch in its current (broken) state. || Thanks for your continued work on this. Looks already pretty good. Concerning the error message  could you copy & paste the complete stacktrace. Moreover  it would be good to have the code with your changes at hand. Could you maybe push them to a different branch? || [Heres](https://github.com/LucasF-42/jabref/tree/fix-for-issue-7443-attempt2) a link to the new branch containing the code on my JabRef fork (hope thats how you wanted me to do that). And this is the stacktrace thats being displayed on the console when the exception is thrown:  <details><summary>stack trace details</summary> <p>  ``` java.util.NoSuchElementException: java.lang.IndexOutOfBoundsException 	at java.util.AbstractList$Itr.next(AbstractList.java:377) ~[?:?] 	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?] 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?] 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?] 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?] 	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?] 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?] 	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?] 	at org.jabref.gui.maintable.MainTable.getSelectedEntries(MainTable.java:402) ~[JabRef-100.0.0.jar:?] 	at org.jabref.gui.LibraryTab.lambda$createMainTable$13(LibraryTab.java:488) ~[JabRef-100.0.0.jar:?] 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at com.sun.javafx.scene.control.SelectedItemsReadOnlyObservableList.lambda$new$0(SelectedItemsReadOnlyObservableList.java:89) ~[javafx.controls:?] 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at com.sun.javafx.scene.control.ReadOnlyUnbackedObservableList._endChange(ReadOnlyUnbackedObservableList.java:64) ~[javafx.controls:?] 	at javafx.scene.control.MultipleSelectionModelBase$SelectedIndicesList._endChange(MultipleSelectionModelBase.java:896) ~[javafx.controls:?] 	at javafx.scene.control.ControlUtils.updateSelectedIndices(ControlUtils.java:202) ~[javafx.controls:?] 	at javafx.scene.control.TableView$TableViewArrayListSelectionModel.fireCustomSelectedCellsListChangeEvent(TableView.java:3023) ~[javafx.controls:?] 	at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2799) ~[javafx.controls:?] 	at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2988) ~[javafx.controls:?] 	at javafx.scene.control.TableView$TableViewArrayListSelectionModel.lambda$new$2(TableView.java:2178) ~[javafx.controls:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at javafx.collections.transformation.SortedList.sourceChanged(SortedList.java:111) ~[javafx.base:?] 	at javafx.collections.transformation.TransformationList.lambda$getListener$0(TransformationList.java:106) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at javafx.collections.transformation.FilteredList.sourceChanged(FilteredList.java:147) ~[javafx.base:?] 	at javafx.collections.transformation.TransformationList.lambda$getListener$0(TransformationList.java:106) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at com.tobiasdiez.easybind.MappedBackedList.sourceChanged(MappedBackedList.java:69) ~[easybind-2.1.0.jar:?] 	at javafx.collections.transformation.TransformationList.lambda$getListener$0(TransformationList.java:106) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at org.jabref.gui.util.UiThreadList.sourceChanged(UiThreadList.java:23) ~[JabRef-100.0.0.jar:?] 	at javafx.collections.transformation.TransformationList.lambda$getListener$0(TransformationList.java:106) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.FXCollections$UnmodifiableObservableListImpl.lambda$new$0(FXCollections.java:963) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.FXCollections$SynchronizedObservableList.lambda$new$0(FXCollections.java:1217) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at javafx.collections.ModifiableObservableListBase.remove(ModifiableObservableListBase.java:189) ~[javafx.base:?] 	at java.util.AbstractList$Itr.remove(AbstractList.java:387) ~[?:?] 	at java.util.Collection.removeIf(Collection.java:577) ~[?:?] 	at org.jabref.model.database.BibDatabase.removeEntries(BibDatabase.java:242) ~[JabRef-100.0.0.jar:?] 	at org.jabref.model.database.BibDatabase.removeEntries(BibDatabase.java:225) ~[JabRef-100.0.0.jar:?] 	at org.jabref.gui.LibraryTab.delete(LibraryTab.java:405) ~[JabRef-100.0.0.jar:?] 	at org.jabref.gui.LibraryTab.delete(LibraryTab.java:387) ~[JabRef-100.0.0.jar:?] 	at org.jabref.gui.edit.EditAction.lambda$execute$0(EditAction.java:70) ~[JabRef-100.0.0.jar:?] 	at java.util.Optional.ifPresent(Optional.java:176) ~[?:?] 	at org.jabref.gui.edit.EditAction.execute(EditAction.java:46) ~[JabRef-100.0.0.jar:?] 	at org.jabref.gui.actions.JabRefAction.lambda$new$3(JabRefAction.java:41) ~[JabRef-100.0.0.jar:?] 	at org.controlsfx.control.action.Action.handle(Action.java:419) ~[controlsfx-11.0.3.jar:?] 	at org.controlsfx.control.action.Action.handle(Action.java:64) ~[controlsfx-11.0.3.jar:?] 	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86) ~[javafx.base:?] 	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234) ~[javafx.base:?] 	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191) ~[javafx.base:?] 	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74) ~[javafx.base:?] 	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49) ~[javafx.base:?] 	at javafx.event.Event.fireEvent(Event.java:198) ~[javafx.base:?] 	at javafx.scene.Node.fireEvent(Node.java:8889) ~[javafx.graphics:?] 	at javafx.scene.control.Button.fire(Button.java:203) ~[javafx.controls:?] 	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208) ~[javafx.controls:?] 	at com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274) ~[javafx.controls:?] 	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247) ~[javafx.base:?] 	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80) ~[javafx.base:?] 	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234) ~[javafx.base:?] 	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191) ~[javafx.base:?] 	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74) ~[javafx.base:?] 	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54) ~[javafx.base:?] 	at javafx.event.Event.fireEvent(Event.java:198) ~[javafx.base:?] 	at javafx.scene.Scene$MouseHandler.process(Scene.java:3856) ~[javafx.graphics:?] 	at javafx.scene.Scene.processMouseEvent(Scene.java:1851) ~[javafx.graphics:?] 	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2584) ~[javafx.graphics:?] 	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409) ~[javafx.graphics:?] 	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299) ~[javafx.graphics:?] 	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?] 	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447) ~[javafx.graphics:?] 	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412) ~[javafx.graphics:?] 	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446) ~[javafx.graphics:?] 	at com.sun.glass.ui.View.handleMouseEvent(View.java:556) ~[javafx.graphics:?] 	at com.sun.glass.ui.View.notifyMouse(View.java:942) ~[javafx.graphics:?] 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method) ~[javafx.graphics:?] 	at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277) ~[javafx.graphics:?] 	at java.lang.Thread.run(Thread.java:832) [?:?] Caused by: java.lang.IndexOutOfBoundsException 	at javafx.collections.transformation.SortedList.get(SortedList.java:168) ~[javafx.base:?] 	at javafx.scene.control.TableView$TableViewSelectionModel.getModelItem(TableView.java:2030) ~[javafx.controls:?] 	at javafx.scene.control.MultipleSelectionModelBase$1.getModelItem(MultipleSelectionModelBase.java:74) ~[javafx.controls:?] 	at com.sun.javafx.scene.control.SelectedItemsReadOnlyObservableList.get(SelectedItemsReadOnlyObservableList.java:98) ~[javafx.controls:?] 	at java.util.AbstractList$Itr.next(AbstractList.java:371) ~[?:?] 	... 144 more Caused by: java.lang.IndexOutOfBoundsException  14:44:44.697 [JavaFX Application Thread] ERROR org.jabref.gui.FallbackExceptionHandler - Uncaught exception occurred in Thread[JavaFX Application Thread 5 main] java.util.NoSuchElementException: java.lang.IndexOutOfBoundsException 	at java.util.AbstractList$Itr.next(AbstractList.java:377) ~[?:?] 	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?] 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?] 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?] 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?] 	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?] 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?] 	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?] 	at org.jabref.gui.maintable.MainTable.getSelectedEntries(MainTable.java:402) ~[JabRef-100.0.0.jar:?] 	at org.jabref.gui.LibraryTab.lambda$createMainTable$14(LibraryTab.java:491) ~[JabRef-100.0.0.jar:?] 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at com.sun.javafx.scene.control.SelectedItemsReadOnlyObservableList.lambda$new$0(SelectedItemsReadOnlyObservableList.java:89) ~[javafx.controls:?] 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at com.sun.javafx.scene.control.ReadOnlyUnbackedObservableList._endChange(ReadOnlyUnbackedObservableList.java:64) ~[javafx.controls:?] 	at javafx.scene.control.MultipleSelectionModelBase$SelectedIndicesList._endChange(MultipleSelectionModelBase.java:896) ~[javafx.controls:?] 	at javafx.scene.control.ControlUtils.updateSelectedIndices(ControlUtils.java:202) ~[javafx.controls:?] 	at javafx.scene.control.TableView$TableViewArrayListSelectionModel.fireCustomSelectedCellsListChangeEvent(TableView.java:3023) ~[javafx.controls:?] 	at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2799) ~[javafx.controls:?] 	at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2988) ~[javafx.controls:?] 	at javafx.scene.control.TableView$TableViewArrayListSelectionModel.lambda$new$2(TableView.java:2178) ~[javafx.controls:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at javafx.collections.transformation.SortedList.sourceChanged(SortedList.java:111) ~[javafx.base:?] 	at javafx.collections.transformation.TransformationList.lambda$getListener$0(TransformationList.java:106) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at javafx.collections.transformation.FilteredList.sourceChanged(FilteredList.java:147) ~[javafx.base:?] 	at javafx.collections.transformation.TransformationList.lambda$getListener$0(TransformationList.java:106) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at com.tobiasdiez.easybind.MappedBackedList.sourceChanged(MappedBackedList.java:69) ~[easybind-2.1.0.jar:?] 	at javafx.collections.transformation.TransformationList.lambda$getListener$0(TransformationList.java:106) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at org.jabref.gui.util.UiThreadList.sourceChanged(UiThreadList.java:23) ~[JabRef-100.0.0.jar:?] 	at javafx.collections.transformation.TransformationList.lambda$getListener$0(TransformationList.java:106) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.FXCollections$UnmodifiableObservableListImpl.lambda$new$0(FXCollections.java:963) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.FXCollections$SynchronizedObservableList.lambda$new$0(FXCollections.java:1217) ~[javafx.base:?] 	at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164) ~[javafx.base:?] 	at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482) ~[javafx.base:?] 	at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541) ~[javafx.base:?] 	at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211) ~[javafx.base:?] 	at javafx.collections.ModifiableObservableListBase.remove(ModifiableObservableListBase.java:189) ~[javafx.base:?] 	at java.util.AbstractList$Itr.remove(AbstractList.java:387) ~[?:?] 	at java.util.Collection.removeIf(Collection.java:577) ~[?:?] 	at org.jabref.model.database.BibDatabase.removeEntries(BibDatabase.java:242) ~[JabRef-100.0.0.jar:?] 	at org.jabref.model.database.BibDatabase.removeEntries(BibDatabase.java:225) ~[JabRef-100.0.0.jar:?] 	at org.jabref.gui.LibraryTab.delete(LibraryTab.java:405) ~[JabRef-100.0.0.jar:?] 	at org.jabref.gui.LibraryTab.delete(LibraryTab.java:387) ~[JabRef-100.0.0.jar:?] 	at org.jabref.gui.edit.EditAction.lambda$execute$0(EditAction.java:70) ~[JabRef-100.0.0.jar:?] 	at java.util.Optional.ifPresent(Optional.java:176) ~[?:?] 	at org.jabref.gui.edit.EditAction.execute(EditAction.java:46) ~[JabRef-100.0.0.jar:?] 	at org.jabref.gui.actions.JabRefAction.lambda$new$3(JabRefAction.java:41) ~[JabRef-100.0.0.jar:?] 	at org.controlsfx.control.action.Action.handle(Action.java:419) ~[controlsfx-11.0.3.jar:?] 	at org.controlsfx.control.action.Action.handle(Action.java:64) ~[controlsfx-11.0.3.jar:?] 	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86) ~[javafx.base:?] 	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234) ~[javafx.base:?] 	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191) ~[javafx.base:?] 	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74) ~[javafx.base:?] 	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49) ~[javafx.base:?] 	at javafx.event.Event.fireEvent(Event.java:198) ~[javafx.base:?] 	at javafx.scene.Node.fireEvent(Node.java:8889) ~[javafx.graphics:?] 	at javafx.scene.control.Button.fire(Button.java:203) ~[javafx.controls:?] 	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208) ~[javafx.controls:?] 	at com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274) ~[javafx.controls:?] 	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247) ~[javafx.base:?] 	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80) ~[javafx.base:?] 	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234) ~[javafx.base:?] 	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191) ~[javafx.base:?] 	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base:?] 	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base:?] 	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74) ~[javafx.base:?] 	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54) ~[javafx.base:?] 	at javafx.event.Event.fireEvent(Event.java:198) ~[javafx.base:?] 	at javafx.scene.Scene$MouseHandler.process(Scene.java:3856) ~[javafx.graphics:?] 	at javafx.scene.Scene.processMouseEvent(Scene.java:1851) ~[javafx.graphics:?] 	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2584) ~[javafx.graphics:?] 	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409) ~[javafx.graphics:?] 	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299) ~[javafx.graphics:?] 	at java.security.AccessController.doPrivileged(AccessController.java:391) ~[?:?] 	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447) ~[javafx.graphics:?] 	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412) ~[javafx.graphics:?] 	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446) ~[javafx.graphics:?] 	at com.sun.glass.ui.View.handleMouseEvent(View.java:556) ~[javafx.graphics:?] 	at com.sun.glass.ui.View.notifyMouse(View.java:942) ~[javafx.graphics:?] 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method) ~[javafx.graphics:?] 	at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277) ~[javafx.graphics:?] 	at java.lang.Thread.run(Thread.java:832) [?:?] Caused by: java.lang.IndexOutOfBoundsException 	at javafx.collections.transformation.SortedList.get(SortedList.java:168) ~[javafx.base:?] 	at javafx.scene.control.TableView$TableViewSelectionModel.getModelItem(TableView.java:2030) ~[javafx.controls:?] 	at javafx.scene.control.MultipleSelectionModelBase$1.getModelItem(MultipleSelectionModelBase.java:74) ~[javafx.controls:?] 	at com.sun.javafx.scene.control.SelectedItemsReadOnlyObservableList.get(SelectedItemsReadOnlyObservableList.java:98) ~[javafx.controls:?] 	at java.util.AbstractList$Itr.next(AbstractList.java:371) ~[?:?] 	... 144 more ```  </p> </details>   || Thanks! After looking at your code  I think  the issue is not coming from your changes. It looks like there is an issue somewhere in the entry list code  and you just found a way to trigger them. In fact such issues have been reported before  we just didnt had a way to reproduce them.  So I would propose you push your changes to this PR  we merge and then have a look at the exception later. || I kinda forgot about merging/pushing  sorry about that. If further changes/improvements are required/preferred  let me know. || Looks very good  although I maybe make some little rewordings before merging this to fit to the name conventions of JabRef! Thank you! Maybe well reorganize the preferences soon  there is already another PR in waiting with a preferences option that would fit in this tab... || 
7455,1,0,0,1,1,1,1,0,0,0,1,0,1,0,1,1,0,0,1,Unmerge LO citations Implemented "Unmerge citations" in the Openoffice/Libreoffice integration panel.  Fixes #7454(https://github.com/JabRef/jabref/issues/7454)   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable)       No  tests were not created.  Do you have GUI tests?        There is a known problem: "Merge citations" does not save the information needed       to find the optional extra info (like page reference) stored in document properties.       When reestablishing the individual references in unCombineCiteMarkers        getUniqueReferenceMarkName() may or may not return the original name.       When it does not  the extra info may be lost  or even taken from another entry.        A solution could be to encode the number making the originals unique       in the merged name: in stead of  "JR_cite_1_XX2000a YY2010" it would be e.g.       "JR_cite_1_XX2000a 1_YY2010". Apart from construction and parsing         probably marking (or calulating) the originals as "in use" for getUniqueReferenceMarkName()        would be needed.         Another problem: combineCiteMarkers orders the merged entries by year  (I am not sure why).        The original order is lost.         In summary  the presented solution  although improves the situation  does not cover        all aspects.  - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes)  ![jabref-Unmerge-citations](https://user-images.githubusercontent.com/15824666/108429997-fc390200-7240-11eb-9d4c-2766b8342997.png)  - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  https://docs.jabref.org/cite/openofficeintegration does not mention the "Merge citations" button. The most appropriate addition would probably go under the "Known issues" section  describing the two problems above (or the original  if the proposed changes are not applied)  Thanks for your contribution.  Codewise looks good to me so far. I think it would make sense to change the cite generation to encode the unique thing when combining  but then the parse ref Names needs to be adjusted as well and many other cases as well.  ||  > I think it would make sense to change the cite generation to encode the unique thing when combining  but then the parse ref Names needs to be adjusted as well and many other cases as well.  I started a new branch to reorganize OOBibBase.java  at https://github.com/antalk2/jabref/tree/improve-reversibility  So far it should contain no changes to user-visible functionality  mainly reorganization of the code. Parsing of ref marks is now only in parseRefMarkName and isJabRefReferenceMarkName  On the other hand  reorganizing means lots of changes  many of which may seem or turn out to be superfluous  since I am editing while trying to understand what is going on.  I am worried  that with so many changes I end up with something that will not be merged  due to the amount of changes.  Please let me know what to expect and what to watch out for.  || Probably the best would be to merge this one and you keep working on your branch. But try to focus on one issue change per commit  so we can understand what you changed  commit by commit. You can also label your PR as WIP and draft  growing as you work on it  and we check regularly in and have a look at your changes. You can even comment on your own code in the files changed tab  so you can discuss your changes in that PR with us.  Dont worry  working on JabRef together should be fun. We do not bite. 😄 || > Probably the best would be to merge this one and you keep working on your branch. But try to focus on one issue change per commit  so we can understand what you changed  commit by commit. You can also label your PR as WIP and draft  growing as you work on it  and we check regularly in and have a look at your changes. > You can even comment on your own code in the files changed tab  so you can discuss your changes in that PR with us. >  > Dont worry  working on JabRef together should be fun. We do not bite. smile   || @antalk2 what do you think about merging this one first  and then having the further refactoring an a second PR? || > @antalk2 what do you think about merging this one first  and then having the further refactoring an a second PR?  Yes. I think this is better as a separate merge. Do I need to do something for that?  I am doing the refactoring in a separate branch.  || Ok  Ive reopened this PR then. If you could address the small comments by @calixtus and me  then we can merge. Thanks! || > Ok  Ive reopened this PR then. If you could address the small comments by @calixtus and me  then we can merge. Thanks!  I believe I did that. Let me know if I left out something. || Style checks (reviewdog) often ask me to make the code less readable. Shall I ignore it  or follow its suggestions anyway? || The style check is important to have consistency across the repository and to prevent merge conflicts of unrelated changes e.g. whitespaces or line breaks. You can import JabRefs code style in intellij and do a kind of   https://devdocs.jabref.org/getting-into-the-code/guidelines-for-setting-up-a-local-workspace#configure-your-ide || > The style check is important to have consistency across the repository and to prevent merge conflicts of unrelated changes e.g. whitespaces or line breaks.  This sounds like "follow its suggestions anyway". OK  I will try that.   || Well  we configured reviewdog to automate the suggestions  otherwise we would make. What suggestions in particular do you think makes the code less readable? ||  > Well  we configured review dog to automate the suggestions    otherwise we would make. What suggestions in particular do you think   makes the code less readable?  1. No whitespace in sin(x) sounds OK  but  ```    longVariableName.longMethodname(another.long(something)) ```    is harder to read than ```    longVariableName.longMethodname( another.long(something) ) ```  [Style checker](https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.html) documentation says: > Abstract class for checking the padding of parentheses. That is > whether a space is required after a left parenthesis and before a > right parenthesis  or such spaces are forbidden.  Apparently they support both `required` and `forbidden` (and implicitly  `noCheck`)  2. Avoid nested blocks  > [Rationale](https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.html): > Nested blocks are often leftovers from the debugging process  they > confuse the reader.     Inner blocks are useful in restricting scope of local variables     assuring the reader they are not referred to later.    Current style checks disallow this.   ```    void f(x) {        ...        String[][] bibtexkeys         {            Some localvar ... // used to calculate initial value for bibtexkeys            ...            bibtexkeys  ...        }        ... more code here: does it use localvar?    } ```  Style checker seems to prefer this:  ```    void f(x) {        ...        String[][] bibtexkeys         Some localvar ... // used to calculate initial value for bibtexkeys            ...        bibtexkeys  ...        ... more code here: does it use localvar?    } ```    3. Line up  for example assignments  variable declatarions (style checker insists on single space)  ``` assert another.length  field.length  assert anEvenLongerName  field.length  this.field  field  this.another  another  this.anEvenLongerName  anEvenLongerName  ```  or  ``` assert another.length    field.length  assert anEvenLongerName  field.length  this.field             field  this.another           another  this.anEvenLongerName  anEvenLongerName  ```  I know  when `this.anEvenLongerNameTheSecond` arrives  we either loose the line up  or change unrelated lines  leading to potential merge problems. Google is more permissive [here](https://google.github.io/styleguide/javaguide.html#s4.6.3-horizontal-alignment) than the style checker in JabRef.   4. Where should the brace go?     Easy    ```    void f(x) {  //<- brace here  ok       body here    }    ```      With a longer head brace on next line could improve visual separation of head and body.    ```    void f(x            y            z)          throws XException                  YException                  ZException {  //<- brace here according to style       body here    }    ```     ```    void f(x            y            z)          throws XException                  YException                  ZException    {       body here    }    ```    || Thanks for your answer. I think we (@JabRef/developers) maybe talk about these considerations in the next devcall. || > > Well  we configured review dog to automate the suggestions  > > otherwise we would make. What suggestions in particular do you think > > makes the code less readable? >  > 1. No whitespace in sin(x) sounds OK  but >  > ``` >    longVariableName.longMethodname(another.long(something)) > ``` >  > is harder to read than >  > ``` >    longVariableName.longMethodname( another.long(something) ) > ``` >  > [Style checker](https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.html) documentation says: >  > > Abstract class for checking the padding of parentheses. That is > > whether a space is required after a left parenthesis and before a > > right parenthesis  or such spaces are forbidden. >  > Apparently they support both `required` and `forbidden` (and implicitly  `noCheck`) >  > 1. Avoid nested blocks >  > > [Rationale](https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.html): > > Nested blocks are often leftovers from the debugging process  they > > confuse the reader. >  > Inner blocks are useful in restricting scope of local variables  > assuring the reader they are not referred to later. > Current style checks disallow this. >  > ``` >    void f(x) { >        ... >        String[][] bibtexkeys  >        { >            Some localvar ... // used to calculate initial value for bibtexkeys >            ... >            bibtexkeys  ... >        } >        ... more code here: does it use localvar? >    } > ``` >  > Style checker seems to prefer this: >  > ``` >    void f(x) { >        ... >        String[][] bibtexkeys  >        Some localvar ... // used to calculate initial value for bibtexkeys >            ... >        bibtexkeys  ... >        ... more code here: does it use localvar? >    } > ``` >  > 1. Line up  for example assignments  variable declatarions (style checker insists on single space) >  > ``` > assert another.length  field.length  > assert anEvenLongerName  field.length  > this.field  field  > this.another  another  > this.anEvenLongerName  anEvenLongerName  > ``` >  > or >  > ``` > assert another.length    field.length  > assert anEvenLongerName  field.length  > this.field             field  > this.another           another  > this.anEvenLongerName  anEvenLongerName  > ``` >  > I know  when `this.anEvenLongerNameTheSecond` arrives  we either loose > the line up  or change unrelated lines  leading to potential merge > problems. Google is more permissive [here](https://google.github.io/styleguide/javaguide.html#s4.6.3-horizontal-alignment) than > the style checker in JabRef. >  > 1. Where should the brace go? >    Easy >    ``` >    void f(x) {  //<- brace here  ok >       body here >    } >    ``` >     >     >    With a longer head brace on next line could improve visual separation of head and body. >    ``` >    void f(x  >           y  >           z) >          throws XException  >                 YException  >                 ZException {  //<- brace here according to style >       body here >    } >    ``` >     >     >    ``` >    void f(x  >           y  >           z) >          throws XException  >                 YException  >                 ZException >    { >       body here >    } >    ```  Im sorry but I disagree with all of your suggestions and prefer the current JabRef code style. @JabRef/developers   1. it is better to keep params short  so you could also extract the long param to a var. 2. totally agree with the given rationale why inner braces should not be used. your case to restrict use of vars should be a rare exception and youre better of to extract that into a function then 3. might look nice but leads to a lot of refactorings when you add a new assignment. we wanted to kep the number of "unrelated" line changes in diffs low to make it easier to review PRs 4. of course only a preference  but we stick with the standard Java code style here to add the brace in the same line. might be too restrictive in oyur example  but also here we tried to keep the number of rules low and simple without exceptions. || > Im sorry but I disagree with all of your suggestions and prefer the current JabRef code style. @JabRef/developers  It is OK  I do not expect or suggest to change JabRef code style  just shared my preferences.  1. I accept the rules  even if I do not always think they are optimal. 2. I am not a maintainer (here or elsewhere)  thus probably underestimate the probability and burden of merging conflicts. I am aware of this  so I do not intend to shape your code style to my preferences.  || > You can import JabRefs code style in intellij and ...  Thank you for this suggestion. Installing IDEA helped a lot to find a style accepted by the checker.  || Thanks again for your contribution  I tested your feature with both an author year and the numerical style and it works. || Checks are good  two approvals  @Siedlerchr confirmed its working. Thanks for your great contribution! || 
7471,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Fixed validation before typing in new entry dialog #7020 Do not show an error message if there is no error Fixes #7020 For me this does not make any change  because you still have the init of the visualizer in line 178  (at the bottom of initialize)  || @Siedlerchr FIxed || Thanks for your contribution! ||
7471,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Fixed validation before typing in new entry dialog #7020 Do not show an error message if there is no error Fixes #7020 For me this does not make any change  because you still have the init of the visualizer in line 178  (at the bottom of initialize)  || @Siedlerchr FIxed || Thanks for your contribution! ||
7484,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Improve user friendliness of automatically linked files <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> We have implemented a new textfield for files that are automatically detected by JabRef and listed as files in the general tab of the entry editor. We also changed the icon for automatically linked files from a BRIEFCASE_CHECK to LINK_PLUS  since we found it more intuitive. This fixes #3607.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  We thought that creating an issue would be redundant if our changes werent accepted  so we have not completed the documentation task. The [documentation](https://docs.jabref.org/finding-sorting-and-cleaning-entries/filelinks#auto-linking-files) refers to the icon as a "suitcase"  which would not be accurate  were these changes to be accepted. Instead it should be referred to as a link with a plus sign.  ## Screenshots ### Before changes #### File not linked ![Before changes  file not added](https://user-images.githubusercontent.com/64270456/109797452-cb31d780-7c19-11eb-9143-c0ab53921b53.png) #### File linked ![Before changes  file added](https://user-images.githubusercontent.com/64270456/109797517-e0a70180-7c19-11eb-8c1e-bcdf35ceca05.png)  ### After changes #### File not linked ![After changes  file not added](https://user-images.githubusercontent.com/64270456/109797681-0f24dc80-7c1a-11eb-8197-2f3c91235bb6.png) #### File linked ![After changes  file added](https://user-images.githubusercontent.com/64270456/109797708-18ae4480-7c1a-11eb-9fc7-ae7138b2cba7.png) Hi folks  thanks for your contribution. At very first sight  I like this idea. About the icon: this seems ok  just a few days ago we switched our iconset to iconli  the previous iconset was very limited  so the briefcase icon was just a workaround. The new icon seem reasonable. About the label: Im not really sure  if we should display an icon or a label. Maybe the other @JabRef/developers have a preference. But if we use a label  it needs to be localized. (see https://devdocs.jabref.org/getting-into-the-code/code-howtos#using-localization-correctly ). || Hello @calixtus. @tobiasdiez recommended an implementation with a description that says (Auto) in issue #3607  we agreed that it would make the display clearer and chose to implement it as a separate text field in the HBox  as the description is currently bound to the linked files description property. We estimated that too much refactoring would be required to initially set the description to (Auto) and then change it to be bound to the files description property  if the user chooses to link the file. We also thought that it made more sense to display the text prior to the file name. Well await feedback from another dev about the icon vs. text dilemma.  || Thank you for your quick response. I did not see the discussion with tobias diez earlier  sorry  but if thats what you both agreed on  than its perfectly fine. || Well try out a few solutions and update the thread with screenshots of the different results  then you can give feedback and well go with whatever looks best to you guys. || ## After pressing button ![Screenshot from 2021-03-05 10-48-46](https://user-images.githubusercontent.com/17311691/110101167-89cd3380-7da3-11eb-900c-3c6e651f6da2.png)  ## Button to the left ![Screenshot from 2021-03-05 10-49-15](https://user-images.githubusercontent.com/17311691/110101175-8c2f8d80-7da3-11eb-9a05-f55702dd25d9.png)  ## Button where (Auto) was ![Screenshot from 2021-03-05 10-55-34](https://user-images.githubusercontent.com/17311691/110101177-8d60ba80-7da3-11eb-80c6-4603668e862c.png)  ## With opacity ![Screenshot from 2021-03-05 11-10-53](https://user-images.githubusercontent.com/17311691/110101181-8e91e780-7da3-11eb-8a67-4b960557754b.png)  @calixtus @tobiasdiez  Here are some examples of the possible implementations that you suggested earlier. Tell us what you think  we can of course make further changes if you want.  || Thanks a lot! I like the "Button to the left" solution the most  and would say it should be sufficiently clear that this is not a normally-linked file. So if there is a short description as a tooltip for the link button  I would say this is fine. @JabRef/developers what do you think? || The tooltip is unchanged since the earlier button as we thought it was well formulated and descriptive. || Im really not sure  what would be the best solution. On one hand  it shows now symbols to the left and to the right and its hard to guess  what means what. On the other hand  it really should stand out  if there is an autolinked file. Guess there is no right solution. What if there are more than one linked files listed? || @calixtus Different entries are handled separately  we simply make use of the isAutomaticallyFound property to make changes.  ## Several automatically found ![Screenshot from 2021-03-08 09-11-12](https://user-images.githubusercontent.com/17311691/110293356-c17beb80-7fee-11eb-91e4-a5138a1059e9.png)  ## One added ![Screenshot from 2021-03-08 09-11-28](https://user-images.githubusercontent.com/17311691/110293384-ca6cbd00-7fee-11eb-8165-863db571fc96.png)  || > @calixtus Different entries are handled separately  Of course  its just about the look and feel if several different list entries are shown. Thanks for testing out  I personally like the variant "icon on the very left".  || Do we use opacity and what percentage would you like? Currently we use 70% for automatically found files and 100% for files that have been added. || Its just fine  as it is. If you use opacity please also check out  if it shows up right in the dark theme. || It works for dark mode  Ill push the latest changes.  ![Screenshot from 2021-03-08 09-58-35](https://user-images.githubusercontent.com/17311691/110298522-f8550000-7ff4-11eb-8338-ca6ffa682eab.png)  || i realized that opacity was set way too low and that the correct images should be:  ![Screenshot from 2021-03-08 10-43-58](https://user-images.githubusercontent.com/17311691/110304580-0e19f380-7ffc-11eb-94be-1bcd41f89996.png)  ![Screenshot from 2021-03-08 10-44-14](https://user-images.githubusercontent.com/17311691/110304592-1114e400-7ffc-11eb-9e3c-1eb140270e60.png)  this is how it looked in the first set of images with opacity || we will write some tests for this as well || If you like one more more idea on this: The "Königsweg" would be to assign a css PseudoState  so the opacity would be addressable in the stylesheet and be customizable. || See for example ImportEntriesDialog::initialize() (lines 105 and 145) This way you could subscribe in the view (EasyBind) changes of isAutomaticallyFoundProperty() to the pseudo class and remove the opacityProperty  which is some kind of a rule breaker of the MVVM design pattern. || Kings Trail has a different meaning in Sweden: https://en.wikipedia.org/wiki/Kungsleden (highly recommended hike!). 😃  Otherwise I agree! || Wouldnt say so  both the Kungsleden and using psuedo classes for opacity are distinguished by special beauty. 🙈 😆  || We did not manage to figure out how to use EasyBind but the program now makes use of css to change the opacity when the text is generated and when the button is pressed. || @calixtus @tobiasdiez  Thank you for your time and engagement. We appreciate all the help and advice you have given us.  || I have just tested it: Nice! Thank you! || 
7494,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Simplify biblatex entry type form Fixes #6730  Related PR: #7485  This is a follow-up PR that simplifies the select entry type form in biblatex mode.  Screenshots: ![entryFormNonExpand](https://user-images.githubusercontent.com/47194464/110112312-dc155100-7db1-11eb-9d94-2e4d1f9fff2e.png)  Expanded: ![entryFormExpand](https://user-images.githubusercontent.com/47194464/110112332-e46d8c00-7db1-11eb-8d98-179114e1ec1f.png)   - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Dont forget the changelog. || > Dont forget the changelog.  Since this is a follow-up  I guess the line included in the changelog is enough ("We simplified the select entry type form by splitting it into two parts ("Recommended" and "Others") based on internal usage data. #6730")  || Thanks for the quick follow up! || 
7507,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,0,0,1,Fixed columns shrink in width when enlarging the JabRef window <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  In method resize  in order to make sure that we are staying under the total table width  the program used to reduce the newSize by two for every column. Cause the method will be call for many times  that will occur the problem which shown in the video in issue 6818. I do a little bit modify for this implement of controlling width  which is reduce the width only if the current width exceed the total width and only reduce for the surplus part. Fixes #6818   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  Before:  https://user-images.githubusercontent.com/60515999/110437190-12273d80-80f0-11eb-966c-4797901d20a9.mp4    After:  https://user-images.githubusercontent.com/60515999/110437211-19e6e200-80f0-11eb-830e-922142c4a7f3.mp4   @tobiasdiez Thanks for your acknowledgment || @tobiasdiez No  it does not make it obsolete. Even though  I am for +1 for this quick fix. ||
7518,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,Change export to save <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  fix for 7517  change Export to Save Fixes #7517   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. This is one of the fastest Issue --> PR I have seen! Looking at your changes  I think the section title "Export sort order" needs to be modified too (and maybe twice: once for the preferences window  and once for the library window). || Okay I changed it too. || You probably need to adjust the localization in the l10n properties file https://devdocs.jabref.org/getting-into-the-code/code-howtos#using-localization-correctly || Only delete the unused part of l10n is enough  am I right? || Please check your github configuration. The checks all stall and without checks its way harder for us to test changes made to the codebase! || Please keep the distinction of "Export" and "Save". Please change to "neutral" wording to enable use of a common FX control:  ![grafik](https://user-images.githubusercontent.com/1366654/112886589-6cedfc80-90d2-11eb-9376-4c9c45e3064b.png)  (See also https://github.com/JabRef/jabref/issues/7517#issuecomment-809633110) || @yinpeiqi It would be really nice if you could implement the changes as outlined in the screenshots || Is this change ok? || Okay  I remove it. || There is still a unused import  breaking a check style rule. || Well  this time I remove it. || You are welcome. || Thanks again for your contribution! || 
7542,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,Add simple Unit Tests I have added some simple unit tests that will increase code coverage / branch coverage.  They contribute to issue #6207   - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Hey @Davfon   great to see someone takes a look at our test suite! At first glance  the tests themselves look good. But I think  you could also convert these tests to parameterized tests (there are some examples in our test suite) if you like. Its pretty easy. You could also use the builder pattern for the creation of bibentries for testing (`new BibEntry().withField()`...) || Hi there @calixtus !  Thanks for the quick feedback! I willl look into it and will try to convert them to parameterized tests wherever possible. ||
7543,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,Add simple unit tests I have added some simple unit tests that will increase code coverage / branch coverage. They contribute to issue #6207  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. will adjust and fix checkstyle this evening/tomorrow.  || I think your course is over @ellieMayVelasquez  thus no more activity here? || > I think your course is over @ellieMayVelasquez  thus no more activity here?  Thanks a lot for all the feedback @koppor ! - I will resolve all of these issues within this month hopefully  just havent gotten around to it yet due to lots of parallel coursework atm :) || @nasdas-dev May I ask which month you meant? 😇  ||
7544,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Add simple unit tests I have added some simple unit tests that will increase code coverage / branch coverage. They contribute to issue #6207  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [X] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Hi @koppor  thanks for reviewing! Ive addressed your comments in commit 9492146 and 51b7d8d.  ||
7545,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Add simple unit tests I have added some simple unit tests that will increase code coverage / branch coverage. They contribute to issue #6207  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7548,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,Fixed missing trigger for linked file operations Fixes #7525  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I was also looking at this  and got confused why there is a binding to the executable state in the first place. The context menu is created when the user right clicks the file  and then the state does not change until the user chooses a an option from the menu. Moreover  the linked file view model should be recreated as soon as the content of the file field changes - so no binding needed since the linkedfile is constant for all practical purposes. What I am missing? || I have no idea  but it works... 😅   But seriously: The ContextAction command was introduced in the first place to prepare this for a later to be added undo functionality. I tried it also with `BindingsHelper.constantOf()` and directly with `setExecutable()` but this did not show a consistent behaviour  my guess is that something is still cached.  In this state I think it works  but some more investigation surely wouldnt hurt.   || Yeah  Im also afraid that it is actually a cache error and it still shows the context menu for the previous version of the linked file. Hopefully that does not lead to more problems  e.g. when the action is performed with respect to the previous version instead of the current one. ||
7549,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,add ability to insert arxivId #2292  Pasted `arxivId` creates new BibEntry    <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks again for your contribution! Thats very useful! ||
7551,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,Fix for issue 6487: Opening BibTex file (doubleclick) from Folder with spaces not working Fixes #6487  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  Video:  https://user-images.githubusercontent.com/57553691/111628111-ce88ae00-882a-11eb-9dee-9dfe3087437f.mp4  Use `D:\TEST\test whitespace.bib` as an example.  Double-click it  and I got errors in console as the following:  ``` Error opening file D:\TEST\test: Could not find a suitable import format. Error opening file whitespace.bib: Could not find a suitable import format. 21:41:53.032 [JabRef - Remote Listener Server on port 6050] ERROR org.jabref.logic.importer.OpenDatabase - Error: File not found ```  Therefore  the path was regarded as two files: `D:\TEST\test` and `whitespace.bib`.  Start from `org.jabref.logic.importer.OpenDatabase` to backtrack the dataflow:  |         Class          |            Method            |      Variable      | | :--------------------: | :--------------------------: | :----------------: | |     `OpenDatabase`     |        `loadDatabase`        |    `fileToOpen`    | |  `ArgumentProcessor`   |     `importAndOpenFiles`     |    `aLeftOver`     | |      `JabRefCLI`       |         constructor          |       `args`       | |  `ArgumentProcessor`   |         constructor          |       `args`       | | `JabRefMessageHandler` | `handleCommandlineArguments` |     `message`      | | `RemoteListenerServer` |       `handleMessage`        |     `argument`     | | `RemoteListenerServer` |            `run`             | `input.getValue()` | |       `Protocol`       |       `receiveMessage`       |     `argument`     |    Use logger to print the variable `argument`:  ```java if (argument instanceof String[]) {     LOGGER.info(Arrays.toString((String[]) argument))  } ```  And I got:  ``` 21:41:53.024 [JabRef - Remote Listener Server on port 6050] INFO  org.jabref.logic.remote.shared.Protocol - [D:\TEST\test  whitespace.bib] ```  So I think the problem is that when passing the argument `D:\TEST\test whitespace.bib`  it will be considered as two arguments because there is a whitespace that serves as a delimiter.  I noticed that @zongxian said that a path containing Chinese characters would cause the same error. So the problem is not just related to delimiter  probably about text encoding.  Therefore I encoded the arguments in `RemoteClient.sendCommandLineArguments` and decoded them in `Protocol.receiveMessage`.  Then I created a binary and tested. Now it works well on my computer (Windows 10 1909). Thanks for your acknowledgement!  I moved it to `Protocol.sendMessage` and added some comments.  Besides  I created a new test case in `RemoteCommunicationTest`.  ---  As @RickVandoorne mentioned:  > * If I double click on a .bib file while JabRef is NOT running then JabRef opens (it no longer gives me the error message). However  it does not open the file which I double clicked. > * If I double click on a .bib file while JabRef is running it opens a new library called "untitled" but not the file I double clicked. > * If I open JabRef first and then open a file using "File" → "Open library" it works fine.  I tested these three ways to open a `.bib` file  got no error.  Double click while JabRef not running: https://user-images.githubusercontent.com/57553691/111728161-47c5e680-88a7-11eb-81d2-ddd56253b3da.mp4  Double click while JabRef running: Video above.  "Open library":  https://user-images.githubusercontent.com/57553691/111728322-983d4400-88a7-11eb-983d-74ee3d45354c.mp4   || 
7552,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,UI: Fix for group icon <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #4129  Replaced the default group play icon by small circle.  <img width"640" alt"Screenshot 2021-03-20 at 4 13 02 PM" src"https://user-images.githubusercontent.com/62339705/111866991-30662680-8997-11eb-8e94-15405cb0459b.png">   I think this also fixes #7550.  <img width"640" alt"Screenshot 2021-03-20 at 4 59 33 PM" src"https://user-images.githubusercontent.com/62339705/111868243-d5383200-899e-11eb-8350-d05285ed782b.png">  <img width"640" alt"Screenshot 2021-03-20 at 5 07 50 PM" src"https://user-images.githubusercontent.com/62339705/111868277-044ea380-899f-11eb-8b1f-71685c6da22e.png">  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks for your PR. The problem with the default circle is that it is rather big and thus dominates the interface too much (its pretty hard to read the group label because your eyes are constantly focusing the big colorfull blob in front of it). It would be thus nice if this circle could be scaled down (without scaling other icons  because they get too small otherwise).  || Can you check if the color thing fixes #7550 as well?  || @tobiasdiez  Thanks for the suggestion  I think the icon library has been updated and different sizes of circles are already present in the library. Let me know which one do you prefer.  1. CIRCLE_MEDIUM  <img width"726" alt"Screenshot 2021-03-20 at 6 37 23 PM" src"https://user-images.githubusercontent.com/62339705/111873214-47b40c80-89b5-11eb-9e44-8c5f6f84b19e.png">  2. RECORD <img width"726" alt"Screenshot 2021-03-20 at 6 56 09 PM" src"https://user-images.githubusercontent.com/62339705/111873230-58fd1900-89b5-11eb-8f87-f5bc2cc222ca.png">  || > Can you check if the color thing fixes #7550 as well?  I checked it and also updated the screenshots in https://github.com/JabRef/jabref/pull/7552#issue-597260059. It fixes all issues mentioned in #7550. || Cool! For me RECORD looks appropriate || Thats awesome. I agree  record looks the best. || Thanks again! || 
7552,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,UI: Fix for group icon <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #4129  Replaced the default group play icon by small circle.  <img width"640" alt"Screenshot 2021-03-20 at 4 13 02 PM" src"https://user-images.githubusercontent.com/62339705/111866991-30662680-8997-11eb-8e94-15405cb0459b.png">   I think this also fixes #7550.  <img width"640" alt"Screenshot 2021-03-20 at 4 59 33 PM" src"https://user-images.githubusercontent.com/62339705/111868243-d5383200-899e-11eb-8350-d05285ed782b.png">  <img width"640" alt"Screenshot 2021-03-20 at 5 07 50 PM" src"https://user-images.githubusercontent.com/62339705/111868277-044ea380-899f-11eb-8b1f-71685c6da22e.png">  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks for your PR. The problem with the default circle is that it is rather big and thus dominates the interface too much (its pretty hard to read the group label because your eyes are constantly focusing the big colorfull blob in front of it). It would be thus nice if this circle could be scaled down (without scaling other icons  because they get too small otherwise).  || Can you check if the color thing fixes #7550 as well?  || @tobiasdiez  Thanks for the suggestion  I think the icon library has been updated and different sizes of circles are already present in the library. Let me know which one do you prefer.  1. CIRCLE_MEDIUM  <img width"726" alt"Screenshot 2021-03-20 at 6 37 23 PM" src"https://user-images.githubusercontent.com/62339705/111873214-47b40c80-89b5-11eb-9e44-8c5f6f84b19e.png">  2. RECORD <img width"726" alt"Screenshot 2021-03-20 at 6 56 09 PM" src"https://user-images.githubusercontent.com/62339705/111873230-58fd1900-89b5-11eb-8f87-f5bc2cc222ca.png">  || > Can you check if the color thing fixes #7550 as well?  I checked it and also updated the screenshots in https://github.com/JabRef/jabref/pull/7552#issue-597260059. It fixes all issues mentioned in #7550. || Cool! For me RECORD looks appropriate || Thats awesome. I agree  record looks the best. || Thanks again! || 
7558,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,0,0,1,Allow identical group names <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Allow creation of groups with names that already exist somewhere in the group hierarchy.  This in the essence fixes #7554 by making repeated group names "first class citizens" in JabRef  allowing to create them in the GUI (with a warning  of course). It seems suitable for many users (as judged by group interface discussions) and does not bring any undesired consequences (I played for a while with it  everything works as expected  assuming you are fine with the fact that two groups with the same names contain always the same entries. For me this seems OK.).  I offer this PR since the fix was *very* simple (SEH  Sunday Evening Hack  ) )  and brings a lot of useful functionality IMHO. The alternative name suggestions are possible but will need considerably more effort...  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  ![Screenshot at 2021-03-21 17-56-22](https://user-images.githubusercontent.com/10668420/111911840-c0779f00-8a6f-11eb-92e8-cc51efb63d5e.png)  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable – not yet but will do later -- S.G.) - [ ] Tests created for changes (if applicable – seems not  all tests pass S.G.) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository (S.G. -- not yet but will do later). Thanks for your PR.  Just a few questions I had while thinking about this: - What should happen if the user renames one of the groups? If the other group is not renamed as well then it contains no items... - I think its already possible to have to groups with the same entries: Group A is an "assign entries manually" group  and Group B is a keyword-based group  for the field "groups" and value the name of Group A. The only constraint is currently that Group A and Group B have to have different names  but something as "Group A (dup)" as a workaround does not seem to bad. Does this work? Is it already sufficient? || > What should happen if the user renames one of the groups? If the other group is not renamed as well then it contains no items...  A decent and easy strategy would be to detect this case and leave the old group name as well as the new group name in all entries of the original group. Then both the new (renamed) group and the old group will contain the same entries  and from the point of renaming they start their independent life  so to say :)  Amending the rename code should be easy  I can do that.  A more elaborate solution would be to ask if a user wants to reassign the entries to the new group  to the old group(s) or to all of them. Similar to the question that is asked when changing group Hierarchical content. But this is more work  so the first try would be to leave entries in both old and new group  as by default. || >  I think its already possible to have to groups with the same entries: Group A is an "assign entries manually" group  and Group B is a keyword-based group  for the field "groups" and value the name of Group A.  > The only constraint is currently that Group A and Group B have to have different names    This is exactly what I am trying to avoid! I mean  I try to remove this constraint and allow users to create groups with identical names if they wish so.  > but something as "Group A (dup)" as a workaround does not seem to bad. Does this work? Is it already sufficient?  Well  for my purposes of using JabRef  no  it is not sufficient.  The primary need is to allow identical group names in different parts of the hierarchy. Without this  I just can not use the groups  of example I can not migrate automatically my bibliographies from Zotero where I do have identical group names in different parts of the tree  and migrating our old JabRef 3.x group assignment is also not possible.  The fact that two groups with the same name always get the same entries is for me an u ticipated feature  which can be put to good use once you understand it. Actually  think about groups not as tree leaves  but as _sets_ in a mathematical sense. A set (group) is defined by its members  and the same set can be a member of any other sets (e.g. branches of a tree).  If I need to define a special group of a different kind  then Ill probably find it too complicated to maintain and will not do it. Think what happens when I rename your primary group (Group A)? All my symlink keyword based groups (Group B and friends) will become invalid  unless JabRef fixes them automatically  and how does it know when to fix keyword groups and when not? Most often when I change a keyword in an entry  this means that it must appear in a different keyword group  not that the original keyword group is retargetted to a new keyword... || > What should happen if the user renames one of the groups? If the other group is not renamed as well then it contains no items...  Also  removing a group should leave entries assigned to the group if other instances of the same group exist... I can take care of this as well. || Im a bit undecided. On the one hand  I agree that allowing duplicate names would be natural  and useful in some cases. On the other hand  it feels like opening a (small) box of pandora since there are so many things you have to think about: renaming groups  deleting  moving in the tree  manually editing of the groups tree in the bib file. Also it makes it harder to migrate to other solutions (say id-based or full-path-of-group) since the name is no longer unique. Another point is that we were thinking about adding a nice user interface for the groups  and for this a "group name > group in tree" map would be needed. In summary  allowing duplicate names definitely increases the burden for future mainte ce.   Im tending to keep the error. Advanced users such as yourself can then still add groups with the same name by editing the groups tree manually in the bib file.  @JabRef/developers what do you think? || > Im a bit undecided. On the one hand  I agree that allowing duplicate names would be natural  and useful in some cases.  Very much so!  > On the other hand  it feels like opening a (small) box of pandora since there are so many things you have to think about: renaming groups  deleting  moving in the tree  manually editing of the groups tree in the bib file.   It seems to be not that bad  actually less dangerous than having full paths in group names...  The mentioned actions seem to make a "Closed Complete Set of Functions" (CRUD?):  1. Renaming a group is pretty much as it is now. Extension will be: if another group with the same name exists  leave the old group name in all entries  and add the new group name. If the group was unique: remove old group name from entries  add new group name to these entries. Very natural. No information is lost  the action is actually reversible! The user can later rename the new group again  move it in the tree or "weed out" some entries (without affecting the original group)  2. Deleting the group is very similar to renaming: if another group with the same name exists  no entries need to be changed  otherwise group name is removed from all entries.  Im now experimenting with this functionality in my branch and will add modifications for 1) and 2) to the PR.  3. moving in the tree: trivial  as it is now: just change the position in the list and the indentation number. Can be done both in GUI and by editing/sed-editing the BibTeX file. 4. manually editing of the groups tree: trivial – just delete one row and insert it in another position if yo want it elsewhere. This is how I produced the test cases with identical groups before the patch of this PR was implemented  tree editing is independent from entry editing  unless you want to rename the group manually *and* retain all entries in it. 5. editing groups in entries: exactly as it is now  just add a group name you want and you have added the entry to that named group. It will appear in all places of the tree where this group is mentioned. The entry editing is independent from the tree.  No dangers seem to be lurking so far.  > Also it makes it harder to migrate to other solutions (say id-based or full-path-of-group) since the name is no longer unique. Another point is that we were thinking about adding a nice user interface for the groups  and for this a "group name > group in tree" map would be needed. In summary  allowing duplicate names definitely increases the burden for future mainte ce.  The most painful migration was from groups 3.x to groups 4  where a lot of people (including me :( ) lost their group assignment data... Well  my day was saved by a Subversion repo where all my databases reside and a bunch of Unix scripts that restored the group assignments. Others might have been less lucky...  I see the group assignment by people to be a *very* valuable information – a lot of manual work went into assigning and classifying entries  and people rely on them when finding information they need quickly.  So an information-preserving migration strategy will be needed anyway.  A possible migration would be:  1. When migrating from the current PR #7558 to a tree where groups in different tree branches are different:     -- if the new format supports  the "linked" groups  i.e. groups that all get the same entries when an entry is added to one of them  convert synonymous groups to such entries     -- if the new format does *not* support such functionality  just retain groups with identical names and identical sets of entries  and warn the user that the behaviour of JabRef has changed.  2. When migrating from the old group format (3.x) to the new one as in this PR:     -- If all groups have unique names  nothing needs to be changed      -- If some groups in different places of the tree have the same name  make only those groups unique by either appending a group parent names (as in Treatment (Medicine > Asthma) and Treatment (Biocompatibility > Surfaces)  or by appending just a serial number  and warn the user about renaming. The user can then adjust group names if they wish  but  must importantly  their precious division of entries into groups is not lost.  > Im tending to keep the error. Advanced users such as yourself can then still add groups with the same name by editing the groups tree manually in the bib file.  Well  even if I go for this  I (and my colleagues) need some reassurance that JabRef will keep the present functionality in the future  so that our work of adding these groups and assigning entries to them does not go down the drain. And keeping such functionality in sight is probably as much work for the JabRef team as keeping it with the suggested changes added... :)  Also  if I need to use external scripts/editors for managing my BibTeX file... well  its doable  but I lose some integration and the nice JabRef features like auto-fetch of bibliographies and OA papers... Would be a pity. Also  it does not seem like a good advertisement for a GUI program to say "well  you of course can have this feature but you need to save data  open a text editor  edit groups by hand (watch out the syntax!)  restart/reread the data into Jabref..."  > @JabRef/developers what do you think?  Keen to hear the answers!   || Update in commits leading to 6f5b119 : when a group with duplicated name is deleted  its name is removed from the entries only when there is no other group with the same name left. Works for "delete group and subgroups" command. || Hi folks   Im trying to run JabRef under debugger  for this I installed IdeaC (IntelliJ) and imported the JabRef gradle project (which IDE recognised).  But when I try to run or debug the project  I get an error from the IDE:  Caused by: java.lang.RuntimeException: test specified more than once to --patch-module  Thats not always reproducible but essentially one can not work with the IDE reliably. Goolged around and did not find any hints. Maybe someone has a quick idea what cold be wrong?  osname: LinuxMint-19.3  java: java 15.0.2 2021-01-19  IdeaIC2020.3  TIA  Saulius || I do not use Intellij  but did you configure it as stated here? https://devdocs.jabref.org/getting-into-the-code/guidelines-for-setting-up-a-local-workspace#configure-your-ide || > I do not use Intellij  but did you configure it as stated here? https://devdocs.jabref.org/getting-into-the-code/guidelines-for-setting-up-a-local-workspace#configure-your-ide  Thanks for the link  I had it running some time ago  but many things probably changed since then... Ill have a look.  Which IDE are you using? I tried Eclipse but it generates a lot of exceptions under debugger... || >  but did you configure it as stated here? https://devdocs.jabref.org/getting-into-the-code/guidelines-for-setting-up-a-local-workspace#configure-your-ide  Thank you very much  the hint helped a lot  now Im running OK. Sorry  Ive overlooked this doc... || As discussed in #7551:  > I have just noticed that when I rename one of the dupliactes  its entries are reassigned to the new group and vanish from all old group duplicates. This is not what I (and probably most other users) would expect  the fix should be easy – if the group(s) with the original name exist somewhere in the tree  the old group name should be retained in the entries. The entries will thus belong to two groups if one of the duplicates is renamed. Only of the group name vanishes from the tree  it should be removed from the entries as well.  > Ill amend the PR to fix this.  The latest commit fixes this issue. Now entries are not removed from the remaining synonymous groups if one of them is renamed  in that case  entries become assigned to both groups  the new and the old. Seems like a very natural behaviour to me.  How do you find it? || The more I think about this the more Im convinced that it was a bad idea on my side to use the group name as the identifier. I propose we drop the requirement that the "groups" field should be human-readable  and instead use a unique identifier for each group. The "groups" field in the entry editor would then use a chips view to give a nice UI to manage group memberships.   @JabRef/developers input very much appreciated! || As a side note: the proposed PR seems to also fix the #7556 :) || > The more I think about this the more Im convinced that it was a bad idea on my side to use the group name as the identifier. I propose we drop the requirement that the "groups" field should be human-readable  and instead use a unique identifier for each group. The "groups" field in the entry editor would then use a chips view to give a nice UI to manage group memberships.  If I may chime in:  Sure  if you want to have *unique* keys identifying your internal objects  it is a bad idea to rely on external names.  That said  I would not say that your idea to use user-provided names as identifiers is so bad. It depends on what you want to do. If you take users provided group names at their face value  as names that users want to use to *identify* their groups  then you current implementation logically follows  and also a behaviour suggested in PR #7558 logically follows.  After a bit of testing and playing around  I think I now see the full rationale of placing group names into entries  and the emerging behaviour is quite useful – provided that you frankly admit that users *can* create groups with identical names (and GUI checks will not stop them  ) ).  Note that when we have intermediate groups  such as Language in Computer/Language/SQL and Data/Language/SQL  or Human/Language/Esperanto  the Language group  if it is a union group and has no entries of its own  behaves exactly as it used to behave in the old system.  Moreover  if you have some entries in the Language group  it makes perfect sense to make a subgroup Language/others  where others will contain all "unassigned" languages  and move all these entries there. Then the Language union group will continue to display *all* entries as it used before  and all other Language groups elsewhere in the tree would continue to show the entries in their subgroups  a user is free to include groups others into those Language groups or not. To my taste  this is perfectly usable  quite transparent and rather useful. || We discussed this at our dev call. We are not sure about the possibly overlooked consequences. Since we are software engineers  we like empirical software engineering ^^. We do the shortcut and started a survey on Twitter - hopefully many persons will answer it: https://twitter.com/JabRef_org/status/1376602527832158215 || > We discussed this at our dev call. We are not sure about the possibly overlooked consequences. Since we are software engineers  we like empirical software engineering ^^. We do the shortcut and started a survey on Twitter - hopefully many persons will answer it: https://twitter.com/JabRef_org/status/1376602527832158215  Good idea. General user feedback is very important  and users should know what to expect. || > We are not sure about the possibly overlooked consequences. Since we are software engineers  we like empirical software engineering ^^.  Why not running the https://github.com/sauliusg/jabref/tree/saulius-allow-identical-group-names branch in a sandbox and see how it behaves? Bugs and usability issues will surface (empirically) after some time of playing around :). || @tobiasdiez @koppor  Any more thoughts on group implementation(s)?  Should I go on to implemented dashboard-like info as suggested by @AEgit in #7554? || Note to myself for the devcall tomorrow: I think  I agree with https://github.com/JabRef/jabref/issues/7554#issuecomment-813022194. || > Note to myself for the devcall tomorrow: I think  I agree with [#7554 (comment)](https://github.com/JabRef/jabref/issues/7554#issuecomment-813022194).  Thanks for the reply  waiting for the devcall outcome. || DevCall: We accept the risk of some unforseen side effects with the benefit having identical groups working. || > DevCall: We accept the risk of some unforseen side effects with the benefit having identical groups working.  Thank you very much for accepting this change! You save my year  – I start to migrate my groups immediately  and will offer the JavRef dev version to my co-workes as soon as the stability issues are resolved.  In case there are unforeseen problems  for sure I feel obliged to invest my effort to help resolving them  as much as I can. || 
7569,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Custom DOI base address fix As mentioned in  Fixes #7337 the option to choose custom DOI base address did not propagate to `LibraryTab` and this PR aims to solve exactly that. In the process I refactored `LinkedIdentifierColumn` so that it uses `OpenUrlAction` as well.  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7571,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,Refactor simple Unit Tests <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> I have refactored some simple unit tests to make them easier to understand  more readable  more maintainable and less likely for human error. Some identified [test smells](https://testsmells.org/pages/testsmells.html#GeneralFixture) (like General Fixture and Test Code Duplication) have been fixed.  It addresses #6207  although it is mainly a refactoring.     <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Its nice that you are interested in contributing to JabRef  however  it would be nice if you not only focused on simple technical issues  but on issues that affect the users. || > Some small comments  then it should be good to go.  Thanks for the comments and suggested changes. I addressed them in the last commits. ||
7573,1,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix column sort order gets overwritten Fixes #7524  The problem was that mainTable.getSortOrder is only filled when there is a change. However  updateColumnPreferences was also called when just the width changed and then getSortOrder was empty and was always overwritten.   <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. May i eventually push on your branch? Id prefer immutable preferences objects... || Fix itself looks right. But there are some code style things I would like to change. || @calixtus  Sure  but I think the root cause was the immutable ColumnPreferences  the sort order was always overwritten even if it did not change. Note that it is also not possible to check for empty  because when you clear the sort order the list is empty and you could not reset the sort order. || I think its fine. I just made the ColumnPreferences immutable again  but kept the distinction in the methods between updates of the SortOrder and the Columns  so nothing should be overwritten. It just pulls the old opposite unchanged value directly from the preferences. The logic should be exactly the same  but without altering the existing ColumnPreferences  but creating new ones with the kept value from the preferences.  Can you please check it to be sure it works for you? I just believe  this looks a bit cleaner. || Ah I see  will test tomorrow || Works  but I found another bug in the SaveOrderConfig.SortCriterion uses Boolean.parseBoolean() and it was passed the enum values "ASCENDING" or "DESCENDING" which obviously will always return false when you have that input for Boolean.parse  || DevCall: Merge as hotfix  later: nice preferences (String should be enum) || 
7579,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,Add unit tests for org.jabref.gui classes Test coverage for org.jabref.gui package is rather low (8%). This pull request adds unit tests to 3 classes under the gui package  increasing their respective line coverage from 0% to 100%. They contribute to issue #6207. Tests added: 1. AppendPersonNamesStrategyTest 2. PersonNameStringConverterTest 3. ReplaceStringViewModelTest  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Two approvals  mergable. Thanks for the tests! ||
7581,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Refactoring and addition of unit tests This pull request includes new unit tests for three classes which increases their line/statement coverage.  They contribute to issue #6207.  Further  I have also refactored existing unit tests to make them more readable  understandable and maintanable.   In this sense  I focused more on test smells described in the paper _Refactoring test code (van Deursen et al.)_  and also on the Code Howtos (Test Cases) in the Development Documentation.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [X] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [X] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Hi @koppor  Thanks for reviewing!  I finally adjusted the code accoring to your comments and suggestions :) ||
7600,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Fix NumberFormatException in BracketedPattern <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Fixes #7590. The error occurs because the size of the integer is too large to be contained in an `int`. The suggested changes use `BigInteger` and `Stream` instead of `int` and for-loops.  This is mostly an excuse to verify my setup after the `master` -> `main` branch name change.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] ~Screenshots added in PR description (for UI changes)~ - [x] ~[Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.~  
7602,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Adds progress count to Possible Duplicates dialog resolves #7366  When processing duplicate entries  Possible Duplicates dialog gave no indication as to progress.  To address this lack of feedback  a progress counter was added to the title bar.  The title property now contains two updatable properties: 1) A total count of all duplicates 2) a count of how many duplicates have already been addressed  They are updated with listeners and bindings to provide real time feedback.  ---   Note: because of the use of different threads  the total-count could not be directly bound so an extra variable and listener are required. Also line 88 was removed and `duplicateCount.getAndIncrement()` was changed from `getAndIncrement()` to `incrementAndGet()` so returned value could be used.  ---  <img width"675" alt"Screen Shot 2021-03-30 at 4 16 45 PM" src"https://user-images.githubusercontent.com/56512349/113058351-a32f8880-9173-11eb-826d-760170b39a67.png">    - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. The Background Tasks have already a ProgessValue and progressText property you can bind to  have a look at the umportFilesInBackground here https://github.com/JabRef/jabref/blob/2948e6d78c7e1e7a16348e2fdb993a0b65a9dde0/src/main/java/org/jabref/gui/externalfiles/ImportHandler.java#L68-L88 And the binding in UnlinkedFilesDialog || @Siedlerchr I think this is a different kind of progress. Here the user is clicking and thus changing the "progress" while for your solution something is happening in the background. || @Siedlerchr The progress count is indeed a user paced progress  which changes as the user clicks options for resolving duplicates and in a few cases increments automatically without presenting a user a dialog window but still only as a response to a previous dialog click. This value I didnt think would be appropriate to use the background task.  The other value  the total  is only a count of total pairs found. While it may be possible to take advantage of the background progress monitoring  its really not a true progress count that is needed for this value. I would have liked to simply request the value from the AtomicInteger duplicateCount (like the notify at the end) but I wasnt able to use this directly because the dialog pops up before many of the pairs have been made often giving an artificially low count of 1/1.  This ends up being a progress count of a user working through the end result of the of the find-possible-pairs task. || Ah thanks for the explanation || @Siedlerchr would you like to see revisions? || @tp-1000 Thanks for your contribution! And sorry for the delay! || 
7636,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Add more unit tests to three gui classes This pull request replaces #7635 (closed/not merged)  and it contributes to issue #6207  which is to add more unit tests to the project   in this case specifically in the gui package using test doubles.  Tests added:  NewEntryActionTest CopyMoreActionTest ExportToClipboardActionTest  In order to add the ExportToClipboardActionTest and to migrate to using PreferencesService  code refactoring has been done as suggested by @Siedlerchr. The purpose of the refactoring is to add PreferencesService as a parameter in the constructors of ExportToClipboardAction to replace the Globals variable. Refactored classes are as follows:  ExportToClipboardAction.java  JabRefFrame.java  RightClickMenu.java  JabRefPreferences.java  PreferencesService.java   - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. @calixtus  can you take a look at the Globals.prefs extraction?  || @ningxie1991  Would be nice if you could address the hints related to the test. You can use  mockitos any method        without specifying the exact localization content etc  `verify(dialogService  times(1)).notify(any()) `   ||
7636,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Add more unit tests to three gui classes This pull request replaces #7635 (closed/not merged)  and it contributes to issue #6207  which is to add more unit tests to the project   in this case specifically in the gui package using test doubles.  Tests added:  NewEntryActionTest CopyMoreActionTest ExportToClipboardActionTest  In order to add the ExportToClipboardActionTest and to migrate to using PreferencesService  code refactoring has been done as suggested by @Siedlerchr. The purpose of the refactoring is to add PreferencesService as a parameter in the constructors of ExportToClipboardAction to replace the Globals variable. Refactored classes are as follows:  ExportToClipboardAction.java  JabRefFrame.java  RightClickMenu.java  JabRefPreferences.java  PreferencesService.java   - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. @calixtus  can you take a look at the Globals.prefs extraction?  || @ningxie1991  Would be nice if you could address the hints related to the test. You can use  mockitos any method        without specifying the exact localization content etc  `verify(dialogService  times(1)).notify(any()) `   ||
7638,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,Add more unit tests <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> This pull request contributes to issue #6207  which is to add more unit tests to the project. The tests make use of mocks (stubbing) to simulate the behavior of some classes.  Tests added:  ImporterViewModelTest BibStringDiffTest PreambleDiffTest  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. It would be really nice if you would finish this PR asap! @Davfon  || > It would be really nice if you would finish this PR asap! @Davfon  Thanks for the feedback and sorry for the late response. I will try to do the changes by tomorrow evening. || Should be all good now. Had to override the equals method. (And add hashCode() for checkstyle) Thanks again for the good inputs. || Thanks for the follow up fixes and as you can see you discovered an error in the equals implementation for the BibTexStrings ||
7639,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,0,0,0,1,Fix for issue 5850: Journal abbreviations in UTF-8 not recognized Fixes #5850  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  ### Reproduce the issue: 1. New library 2. New article 3. BibeTx source adds the following:    ```    @article{杨芙清2005软件工程技术发展思索       title{软件工程技术发展思索}       author{杨芙清}       journal{软件学报}       volume{16}       number{1}       year{2005}       publisher{Citeseer}    }    ``` 4. click "check integrity"   The main reason for this bug is the check-tools `Check integrity` only accept the charset ASCII. It works well in English citations  but  **jabref** has users across the world and they have different charsets.   ### The screenshot: 1. before: ![before](https://user-images.githubusercontent.com/71220965/115108177-93040f80-9fa1-11eb-99c3-6754a5e82120.jpg)  2. after ![intigrity-check](https://user-images.githubusercontent.com/71220965/115108181-9ac3b400-9fa1-11eb-8dc1-dbad6a5a82e8.jpg)  ### The way to fix: 1. First I find the bug related to the class `ASCIICharacterChecker.java` 2. In this class  ``` boolean asciiOnly  CharMatcher.ascii().matchesAllOf(field.getValue())  ``` any non-ASCII encoded characters will be warned. 3. Then I remove the steps in `IntegrityCheck` .  And still  I want to give a warning about non-UTF8 encoded characters. 1. I get the default encoding from the system (Since we need to give a warning when the field cannot be decoded in UTF-8. And this may happen when users default encoding charset is non-UTF-8) 2. check whether the value of fields(string) can be decoded in UTF-8 3. if not  just give a warning about "Non-UTF-8 encoded found"  To check this  we need first set out the default charset(for example GBK) in the whole environment.  Then we can get the following warning when using Integrity check: ![image](https://user-images.githubusercontent.com/71220965/115108584-e11a1280-9fa3-11eb-843f-b3f3a65857e6.png)    I might be not up-to-date  but I always thought UTF8 characters are only allowed in biblatex and that bibtex only handles asci characters. Did this change? || > I might be not up-to-date  but I always thought UTF8 characters are only allowed in biblatex and that bibtex only handles asci characters. Did this change?  Yeah   some journals and papers use non-ASCII characters as their names.. etc(just as the bib in bibtex I added before). and maybe it is difficult to do with it in jabref. The details are shown in the issue. So I think maybe it is better to trade them equally. || I do not really have experience with say Chinese names (as authors or journals) with bibtex. But the only evidence I could find was always suggesting bibLAtex  since bibtex does not support UTF8  see e.g. https://tex.stackexchange.com/questions/100092/how-to-include-a-chinese-paper-in-reference-via-bibtex.  So does it make more sense to keep the asci check for bibtex  and add the new utf8 check for biblatex? || I agree with @tobiasdiez  we need the utf8 check for biblatex and the ascii checker for bibtex then. || > I do not really have experience with say Chinese names (as authors or journals) with bibtex. But the only evidence I could find was always suggesting bibLAtex  since bibtex does not support UTF8  see e.g. https://tex.stackexchange.com/questions/100092/how-to-include-a-chinese-paper-in-reference-via-bibtex. >  > So does it make more sense to keep the asci check for bibtex  and add the new utf8 check for biblatex?    > I agree with @tobiasdiez we need the utf8 check for biblatex and the ascii checker for bibtex then.  Good idea！I will refactor my code to meet this need! (After searching more information about bibtex and biblatex  I agree with you~ )  And the check of utf8 for biblatex maybe its not a bug but an enhancement? (laugh) I will focus on it! || Hi Reviewers! I have added the UTF-8 check for biblatex and recovery the ASCII check for bibtex!  Is there anything I should do to give a better submission?  || So far looks good  you only need to add the new localization string the l10 files  see here for more details https://devdocs.jabref.org/getting-into-the-code/code-howtos#using-localization-correctly || Hi reviewers！I added this statement to all language packs  but I rely on Google Translate for most of my translations  so please double check it for errors~ || You only need to add it to the English file. All otherttranslations are managed by crowdin. || > You only need to add it to the English file. All otherttranslations are managed by crowdin.  Emmm  so I need to subtract all the files except the English file  right? || I have changed that. Hope everything goes well... || I added the javaDoc for UTFChecker and fix a little problem in my Junit test.  || Hi reviewers! I have added 2 Junit Test for UTF8Checker and 2 for IntegrityCheck. Im not quite sure if these test cases are redundant and standardized  so please give me some advice if problems exist! || Thanks a lot for your contribution! ||
7652,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,Fix for issue 7633: Unable to download arXiv pdfs if Title contains curly brackets Fix [#7633](https://github.com/JabRef/jabref/issues/7633) <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  ## Reproduce the issue:  1 Open library  select the .bib file as below  ``` @Article{zhang_machine_2021v2    author   {Zhang  Ruohan and Guo  Sihang and Liu  Bo and Zhu  Yifeng and Hayhoe  Mary and Ballard  Dana and Stone  Peter}    journal  {arXiv:2010.15942v2 [cs]}    title    {Machine versus {Human} {Attention} in {Deep} {Reinforcement} {Learning} {Tasks}}    year     {2021}    month    feb    url      {http://arxiv.org/abs/2010.15942v2}  } ```  2 Double click the entry and then click the **Get fulltext** on the right of **general | file **  it will give a message of "No full text document found"  3 And if we erase the curly brackets in the title  with other keep the same  it will download the pdf file successfully   the new title is given below  ``` Machine versus Human Attention in Deep Reinforcement Learning Tasks ```   After reading the source code  I thought that it is the case that doi is not present and we need to use the author and title to query the url of the pdf file.  However  the title with curly brackets may fail to search a arXiv entry  or the search is success but the title fails to match the  arXiv title.   ## Process to fix the issue:  1 The arXiv-related work is in the **ArXiv.java**   2 Then I found the url of pdf  is defined in the function **findFullText**  and it further invoke function **searchForEntries**  3 I defined a method called **ignoreCurlyBracket** in **StringUtil.java** to erase the curly brackets in the title if the title is not blank.   4 In the function **searchForEntries**  I invoke **ignoreCurlyBracket** to fix the title before it serve as a parameter to search arXiv entry and before the comparison with arXiv title.  ## Screenshots of  the result:  ### Before  ![image-20210419154425138](https://user-images.githubusercontent.com/73102892/115348021-af43be80-a1e4-11eb-9989-d3e2fe1635d1.png)   ### After  Download successfully  ![image-20210419205905217](https://user-images.githubusercontent.com/73102892/115348190-e4501100-a1e4-11eb-8285-19b6cdc19b82.png)  ![image-20210419210151694](https://user-images.githubusercontent.com/73102892/115348221-f0d46980-a1e4-11eb-8721-d02246ea0463.png)    Theres also an architecture violation  as StringUtil is increased in size || So is it not allowed to add anything in StringUtil? Shall I simply move the function from StringUtil to Arxiv? || As for the checkstyle  I just fix a part of it.  The only warning message remains is "  { is not preceded with whitespace“  but it may cause some problems if I add a white space before {  as my sentence is:  replace("{"  "")     || @Pikayue11  The checkstyle is referring to the method definition (look at the changes tab  reviewdog makrs the line) || Im sorry  now the checkstyle should be correct. || the unit tests failing are relevant to the help. something got wrong there || 
7655,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,Fix#7195 partly Opacity of disabled icon-buttons Fixes #7195  Opacity of disabled icon-buttons  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Add the disabled icon style in `Base.css`  - No tabs opened: ![i1](https://user-images.githubusercontent.com/48386227/115385506-cc8b8380-a20a-11eb-9cd6-bb2b9adbf331.png)  - Open a tab and do not select any entry: ![i2](https://user-images.githubusercontent.com/48386227/115385596-e3ca7100-a20a-11eb-9e88-391a824a0e80.png)  - Select an entry in the opened tab: ![i3](https://user-images.githubusercontent.com/48386227/115385630-edec6f80-a20a-11eb-95b5-a15a8deeddd6.png)   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7656,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,Fixes #7016 toggle of special fields does not work for sorted entries Fixes #7016  Make a copy of selected entries and change field in the copy so that the sort strategy will not influence the result.  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> The original version used for-each on the selected entry list but ConcurrentModificationException happened. Then I tried to replace it with normal for loop but the toggle problem still exist  though the exception did not occur any more. By checking the list in each loop I found that the order of the items in this list was changed during the for loop. Not exactly knowing how the sorting strategy is performed  I make a copy of the list and do field change on the copied list. Finally the toggle action performs correctly.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7657,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,Fix SSLHandshake Exception by using bypass Fixes #7616   <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.   File download path: https://www.serbski-institut.de/os/dnlarchiv/Kleine_Reihe_27_web.2217.pdf  <br>  A valid authentication path cannot be found from the site where the downloaded file is located  prompting the user with the option of whether to continue the download. ![warning](https://user-images.githubusercontent.com/47767371/115521609-e4700f80-a2bd-11eb-81e1-847244f177a6.png)  <br>  The user chooses to cancel the download. ![canceled_tip](https://user-images.githubusercontent.com/47767371/115521968-416bc580-a2be-11eb-98ba-f2669356065e.png)  <br>  The user chooses to download anyway. ![download](https://user-images.githubusercontent.com/47767371/115522090-652f0b80-a2be-11eb-9dc0-49157e482c6d.png)  You can ignore the fetcher and the mac test. But please have a look at the Checkstyle test. Either click on details at the failing  or you can go to the files changes tab to see the Reviewdog comments || The user chooses to cancel the download  use `Notify` instead of `InformationDialog` to prompt the user.  ![canceled_tip2](https://user-images.githubusercontent.com/47767371/115549091-d381c700-a2da-11eb-90f6-d8ad5049f97e.png)   || Just a minor improvement for the variable naming  otherwise lgtm! || @Siedlerchr  @tobiasdiez  Thank you so much for your suggestions and help! || We have to thiank you for your contribution @Ryyyc ! ||
7663,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,0,0,0,1,Fixes Jabref#7660 Unable to download some arXiv links if the "eprint" field is missing Fixes #7660 ## Brief summary 1. Run EprintCleanup on a copy of the entry the ArXiv fetcher is fetching before getting arXiv id from the eprint field  2. Add two test method. One finds full text with title containing colon and journal  while another finds full text with title containing colon and url.  ## Problem When finding full text  this BibTeX reference works: ``` @Article{booth_bayes-trex_2020    author         {Serena Booth and Yilun Zhou and Ankit Shah and Julie Shah}    journal        {arXiv:2002.10248v4 [cs]}    title          {Bayes-TrEx: a Bayesian Sampling Approach to Model Transparency by Example}    year           {2020}    month          dec    archiveprefix  {arXiv}    eprint         {2002.10248}    url            {http://arxiv.org/abs/2002.10248v4}  } ``` ![#7660-0](https://user-images.githubusercontent.com/48386227/115873907-13c97c80-a476-11eb-821f-24598bd1a8a9.png)  But when `eprint` field is missing  no full text will be found: ``` @Article{booth_bayes-trex_2020    author         {Serena Booth and Yilun Zhou and Ankit Shah and Julie Shah}    journal        {arXiv:2002.10248v4 [cs]}    title          {Bayes-TrEx: a Bayesian Sampling Approach to Model Transparency by Example}    year           {2020}    month          dec    archiveprefix  {arXiv}    url            {http://arxiv.org/abs/2002.10248v4}  } ``` ![#7660-1](https://user-images.githubusercontent.com/48386227/115873922-188e3080-a476-11eb-80e7-222c58ee4e09.png)  ## Solution Since the title contains colon and arXiv uses colon to represent key and value  the title may be recognized mistakenly. So use other fields to get the eprint field to avoid this problem. Thanks to the advice from @tobiasdiez .  ## Screenshots After fix: ![#7660-2](https://user-images.githubusercontent.com/48386227/115873880-0f04c880-a476-11eb-9291-82e011f87ab3.png)   - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. > Wow that was quick 🚀 . Code looks good to me! Thanks for your contribution.  It is your advice that makes me efficient!  At the beginning I try to ignore colons in title to solve this problem but it seems not so good.  ||
7664,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,Fix for issue 7641: Wrong path to TeXstudio <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes [#7641](https://github.com/JabRef/jabref/issues/7641)  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  <h3>Bug:</h3>  No matter where the extended applications are  the default path of them (taken texstudio as example) would be set as `C:\Program Files (x86)\TeXstudio\texstudio.exe`.   <h3>The way to fix: </h3>  I verify the existence of extended applications under related default path. If there is no `texstudio.exe` under `C:\Program Files (x86)\TeXstudio\` and `C:\Program Files\TeXstudio\`  the function *detectProgramPath()* will return String value ""  namely the default path will remain unset. Just some minor code changes  but otherwise lgtm! ||
7667,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,Fix for issue 6199: EndNote .xml import to JabRef: PDF links are not imported corrected.  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  Fixes #6199   - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  ## Summary of Issue 6199 When users import EndNote type xml to Jabref  it always assumes that urls are warped inside a style tag. However   some urls may not be wrapped in a style tag and as a result   Jabref cannot parses them.  ## Way to Fix In the xsd file  I change the the complexTypes attribute to `mix"true"`  so that it can accept both vanilla text and subelements. Then I will check whether a style tag exists: if it does  use the text inside it  otherwise  use vanilla text instead. > Just a minor code improvement  but otherwise looks good to me! > That will benefit a lot of users!  I kind of messed up the previous commits. So I have incorporated your suggestion in the latest commit b1c3f75ac122c23161437e89df4fbde6fd90657f  please check. || @Aloofwisdom  please have a look at the checkstyle test. You can also see the comments from reviewdog when you look at the Files changed tab || > @Aloofwisdom please have a look at the checkstyle test. You can also see the comments from reviewdog when you look at the Files changed tab  I could pass the CheckStyle locally now. Please check again. || Thanks a lot for your contribution! ||
7671,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,migration of timestamp This PR moves the migration of the timestamp field from a PostOpenMigration to mutually exclusive cleanup actions. As this cleanup action migrates the timestamp field to the creationdate or modificationdate fields   the modificationdate of a BibEntry is not updated when this cleanup is conducted. If the original timestamp field could not be parsed  the cleanup does not modify the BibEntry in any way to not lose data. Fixes #7351.  Modified Cleanup dialog: ![image](https://user-images.githubusercontent.com/43381984/116080557-82d2eb00-a699-11eb-9285-4d7b64e5a9b8.png)  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. On a first look  this looks good to me. A few observations though: - The UI is a bit too complicated for my taste and I think the "Do not convert timestamp" option is not really required. Instead I would propose to only have to checkboxes (convert to creation date / modification date)  and if the user selects one of them the other one is deselected (that would be btw also a nice improvement for the biblatex/bibtex conversion which are also mutable exclusive) - Now running cleanup ops does not change the modification date anymore  right? Maybe use a more fine-grained notification channel and only do this for the timestamp cleanup? - Can you maybe explore a bit on why you choose a cleanup op over a migration? Thanks || > On a first look  this looks good to me. A few observations though: >  > * The UI is a bit too complicated for my taste and I think the "Do not convert timestamp" option is not really required. Instead I would propose to only have to checkboxes (convert to creation date / modification date)  and if the user selects one of them the other one is deselected (that would be btw also a nice improvement for the biblatex/bibtex conversion which are also mutable exclusive)  I addressed the first point by adding checkboxes for the corresponding cleanup actions.  > * Now running cleanup ops does not change the modification date anymore  right? Maybe use a more fine-grained notification channel and only do this for the timestamp cleanup?  This is only true for the timestamp migrations and is implemented exactly that way ^^  > * Can you maybe explore a bit on why you choose a cleanup op over a migration? Thanks  As an ADR or just as a comment here? It boils down to the discussion lead here: #7351.   || >  >  > > On a first look  this looks good to me. A few observations though: > >  > > * The UI is a bit too complicated for my taste and I think the "Do not convert timestamp" option is not really required. Instead I would propose to only have to checkboxes (convert to creation date / modification date)  and if the user selects one of them the other one is deselected (that would be btw also a nice improvement for the biblatex/bibtex conversion which are also mutable exclusive) >  > I addressed the first point by adding checkboxes for the corresponding cleanup actions. >  Thanks  that looks good to me!  > > * Now running cleanup ops does not change the modification date anymore  right? Maybe use a more fine-grained notification channel and only do this for the timestamp cleanup? >  > This is only true for the timestamp migrations and is implemented exactly that way ^^  Ohh  you are right. Sorry  I misread the code.   >  > > * Can you maybe explore a bit on why you choose a cleanup op over a migration? Thanks >  > As an ADR or just as a comment here? > It boils down to the discussion lead here: #7351.  As a comment is more than enough for me (maybe directly in the PR description though). As far as I see it  the advantage of cleanup ops is that they are only run once and thus do not make the db load process slower  on the other hand the migration had the advantage that users do not need to run something manually.   || The reason for making it a cleanup is that some users use the timestamp field in other ways. Additionally  this makes the database load process faster. Migrating the timestamp field this way leads to negative UX see #7351. || Ok thanks!  I do not have the time for a through-out review  but scrolling over the code I couldnt find anything. So from my side this is good to go.  || 
7672,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix threading cleanup in performSearch Fixes #7606 Fixes #1018   <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7672,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,Fix threading cleanup in performSearch Fixes #7606 Fixes #1018   <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7674,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,Fixes Jabref#7305: the RFC fetcher is not compatible with the draftFix for issue 7305 Fixes #7305  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.   We can first determine whether the RFC ID contains the prefix "draft "  if it is  we will not add the prefix "RFC". Now  RFC fetcher can work well.  Try process drafts ID `draft-ietf-sidrops-aspa-verification`.  ![ready](https://user-images.githubusercontent.com/47767371/116380328-7213a800-a846-11eb-842a-eb839df9019e.png)  Before fixing the bug: ![befor-fix](https://user-images.githubusercontent.com/47767371/116380361-7b9d1000-a846-11eb-94ca-194de7a2377a.png)  After fixing the bug: ![after-fixed](https://user-images.githubusercontent.com/47767371/116380441-8c4d8600-a846-11eb-8923-747f8f129fed.png)  Please have a look at the checkstyle || Haha  I made this mistake again  it has been fixed now  and I wont make this mistake next time. ||
7675,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,Fix cleanup run on wrong entry when fetching from DOI Fixes #6267  Cleanup did use the wrong entry  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7685,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,add and extend unit tests <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> This pull request contributes to issue #6207  which is to add more unit tests to the project.  Tests added:  ValidCitationKeyCheckerTest  Tests extended (added boundary cases):  AddBracesFormatterTest NormalizePagesFormatterTest  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [X] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [X] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7687,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,0,0,0,1,Refactoring existing unit tests <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> This pull request contributes to issue #6207  which is to add more unit tests or improve existing ones.  Tests refactored:  MinifyNameListFormatterTest StringLengthComparatorTest CapitalizeFormatterTest AuthorsTest RemoveBracketsAddCommaTests DOICheckTest FileLinkTest FirstPageTest RemoveTildeTest   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [X] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [X] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. > Nice to see work on using paramterized tests. >  > Please do that everywhere. >  > General comment: It would be nice to have one pull request per test class. Otherwise  reviewing gets hard  because there are soooo many lines changed. >  > (I also updated #6207. I hope not to annoy people when always wringint things NOT to do)  Hi @koppor I understand that it might become tedious to review all the changes..  But would it also help if  for example  there is one commit for every class that is changed? In this case youd also have a better overview over the changed code in a class.  Im asking this question since Ive already started working on a new branch (similar to this one  but with fewer classes involved). Nevertheless  I will start applying this comment for each new upcoming branch. || > But would it also help if  for example  there is one commit for every class that is changed? In this case youd also have a better overview over the changed code in a class.  Looking at our mass of pull requests  I decided to have "global" reviewing strategy/workflow for our core developers. Deciding on a case-bases makes it difficult to handle the mass of open pull requests.  Furthermore  if at class A there is a comment  but class B can go as is  the changes of class B wont go into `main`  because it is stalled by the unrelated class `A`.  > Im asking this question since Ive already started working on a new branch (similar to this one  but with fewer classes involved).  You could use the `git cherry-pick` magic. Maybe also the `git checkout master && git checkout -b new-branch && git checkout your-working-branch && git reset new-branch` magic and then commiting line-wise with `git gui`.  > Nevertheless  I will start applying this comment for each new upcoming branch.   || I will merge and wait for parameterized AuthorsTest in a follow-up pr || 
7693,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Refactoring existing unit tests <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> This pull request contributes to issue #6207  which is to add more unit tests or improve existing ones. I therefore have refactored three classes (converted to parameterized tests) and extended one by adding a boundary case.  Tests refactored:  LastPageTest NoSpaceBetweenAbbreviations WrapContent  Test extended  UnprotectTermsFormatter (added empty string boundary case)  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [X] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [X] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7694,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,Add and extend unit tests <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  This pull request contributes to issue #6207  which is to add more unit tests to the project.  Tests added:  - CitationKeyDeviationCheckerTest - CitationKeyDuplicationCheckerTest  Tests extended (added boundary/edge cases):  - RemoveBracesFormatterTest - BracesCorrectorTest  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thank you for these test. Twice approved and once merged. ||
7696,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,Add simple unit tests <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> This pull request contributes to issue #6207  which is to add more unit tests or improve existing ones.  I added the trivial  but important  test case  that the output should remain unmodified in case the input was already valid.  Tests extended:  - CleanupUrlFormatterTest - RemoveHyphenatedNewlinesFormatterTest - RemoveNewlinesFormatterTest - LowerCaseFormatterTest - RemoveBracketsTest  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. I addressed the requested changes in the last commit  should be all good now. ||
7697,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Refactor NoBibTexFieldCheckerTest to increase mutation coverage This pull request contributes to issue #6207  which is to add more unit tests or improve existing ones. I used Pitest to compute the mutation coverage and found that some conditions were not covered in the unit test and some conditions tested were redundant because they would not be reached.  Following are the changes:  1. Switched to using parametrized test 2. Covers missing conditions: StandardField.DOI  StandardField.URL 3. Redundant conditions (still remains in source code and tests): StandardField.ABSTRACT  StandardField.COMMENT (they are not included in the fields of neither BibtexEntryTypeDefinitions.ALL nor BiblatexEntryTypeDefinitions.ALL)  Before: ![image](https://user-images.githubusercontent.com/3387698/116923603-205c8a80-ac57-11eb-964b-2ee0e829f41f.png)   ![image](https://user-images.githubusercontent.com/3387698/116923712-3ec28600-ac57-11eb-8447-986d04b9a179.png)  After: ![image](https://user-images.githubusercontent.com/3387698/116924716-8a296400-ac58-11eb-9b02-5d8e32b198cb.png)   ![image](https://user-images.githubusercontent.com/3387698/116924826-a927f600-ac58-11eb-9f30-e3131147712c.png)   - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7698,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,Added DoiDuplicationCheckerTest to increase coverage This pull request contributes to issue #6207  which is to add more unit tests or improve existing ones. I used Pitest to compute the line and mutation coverage. Since DoiDuplicationChecker did not have its unit test (its method was being tested in other test classes)  I added the test to increase both coverages.   Before:                                                                             ![image](https://user-images.githubusercontent.com/3387698/116928883-f064b580-ac5d-11eb-9f8d-c7fa80a31c90.png)  After: ![image](https://user-images.githubusercontent.com/3387698/116928941-ffe3fe80-ac5d-11eb-819b-7663ad6043a1.png)   - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7700,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,Refactoring existing unit tests into parametrized tests This pull request contributes to issue #6207  which is to add more unit tests or improve existing ones.  Tests refactored:  DoiStripTest DefaultTest (ParamLayoutFormatter) ToUpperCaseTest IfPluralTest HTMLParagraphsTest EntryTypeFormatterTest AuthorOrgSciTest AuthorNatBibTest AuthorFirstLastCommasTest  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks for your contribution  we took the liberty to finish it ourselves. ||
7702,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,Fix for issue 6197: Do not store downloaded file if it is already attached <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. --> Fix [#6197](https://github.com/JabRef/jabref/issues/6197) - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.   ## Reproduce this issue:  1 Choose an entry  click **search full text document online** in **Lookup**  2 If it is the first time you download it  it works well. But if it is not  it will download a duplicate file with the same content  the .bib file will has two duplicate files as below  ``` file     {:banerjee2020a - A Survey on Influence Maximization in a Social Network (2).pdf:PDF :banerjee2020a - A Survey on Influence Maximization in a Social Network (1).pdf:PDF :banerjee2020a - A Survey on Influence Maximization in a Social Network.pdf:PDF}  ```    In this issue  we want to keep the new file with different contents but delete the same one. Thus  after download a new file  we need to first judge whether the file name is the duplicate form like "xxx (1)" compare to the other files in the target directory. If yes  then compare the content of these files sharing the  "similar" name  if the new file has the same content as one of them  then delete it and do not add it to the linked file.    ## Process to fix the issue:  1 The related code is in **LinkedFileViewModel.java**  inside the function **download()**  because we suppose that the file has already been download  the code should be inside **downloadTask.onSuccess**  2 We define a boolean function **isDuplicatedFile** in **FileNameUniqueness.java** to judge whether the file is a duplicated one in content  if yes  the newly downloaded file will be deleted and it will not be added to the linked file.  3 In **FileNameUniqueness.java** we also define function named **eraseDuplicateMarks** to change the file name like "xxx (1)" to "xxx"  and return the same string if it is not in the form of duplicate file name  4 In the boolean function **isDuplicatedFile**  it will first judge whether there are other files have "similar" name with its. If  do not have  return false  indicating not duplicate. If have  compare (use **com.google.common.io.Files.equal**) the content of the newly downloaded file with all the files has "similar" file name  if the content is different from all of them  return false. If one of them has the same content with the new files content  delete the new file   display warning message and return true to indicate duplication happens.      ## **Screenshot of the result**  ####   Use the following .bib file for test  ``` @article{banerjee2020a  	title"A survey on influence maximization in a social network"  	author"Suman {Banerjee} and Mamata {Jenamani} and Dilip Kumar {Pratihar}"  	journal"Knowledge and Information Systems"  	volume"62"  	number"9"  	pages"3417--3455"  	notes"Sourced from Microsoft Academic - https://academic.microsoft.com/paper/3013137889"  	year"2020" } ```  ### **Before**  After **search full text document online** for three times  ![test4_files](https://user-images.githubusercontent.com/73102892/117033348-da75f400-ad34-11eb-9c12-4e73fca2f671.png)  ``` file     {:banerjee2020a - A Survey on Influence Maximization in a Social Network (2).pdf:PDF :banerjee2020a - A Survey on Influence Maximization in a Social Network (1).pdf:PDF :banerjee2020a - A Survey on Influence Maximization in a Social Network.pdf:PDF}  ```  ### After ### Test1  After **search full text document online** for three times  ![test5_files](https://user-images.githubusercontent.com/73102892/117033557-101add00-ad35-11eb-8af0-5c03871ff447.png)  ![delete_message](https://user-images.githubusercontent.com/73102892/117033667-2c1e7e80-ad35-11eb-8ae5-02d6c8899679.png)  ``` file     {:banerjee2020a - A Survey on Influence Maximization in a Social Network.pdf:PDF}  ```  ### Test2 After test1  in order to test whether it will compare the content of the file  we **replace** the downloaded pdf file "banerjee2020a - A Survey on Influence Maximization in a Social Network.pdf"  with a new pdf file but keep a same name in the same folder  and then  **search full text document online**   ### The new file:  ![replace_file](https://user-images.githubusercontent.com/73102892/117034097-8ddee880-ad35-11eb-93c7-33d1d8c2e0bd.png)   ### The outcome:  ![replace_message](https://user-images.githubusercontent.com/73102892/117033863-5ff9a400-ad35-11eb-9d91-99835515109f.png)   ![replace_download](https://user-images.githubusercontent.com/73102892/117034161-9afbd780-ad35-11eb-9120-a0dcbb7defe2.png)  ``` file     {:banerjee2020a - A Survey on Influence Maximization in a Social Network (1).pdf:PDF :banerjee2020a - A Survey on Influence Maximization in a Social Network.pdf:PDF}  ```  Thanks for your feedback! I am a little busy today but I will improve my code as soon as possible. || I modify my code and manually test it in running JabRef again  it works. But I delete the test cases because the method "eraseDuplicateMarks" in  "FileNameUniqueness.java" is now private || I think my latest commit has solved all the problems in the recommendations. I am not very familiar with the pull request operate in github  and I just clicked all the "resolve conversation" buttons  is that matter? Besides  is there any other recommendations for my current pr? Any feedback will be appreiated. @Siedlerchr  || Thanks for the reply! I will fix my codes as soon as possible. || I add an overload function getBaseName in FileUtil  imitating the code style of the function getFileExtension in FileUtil  to pass the Path variable as parameter || Please have a look at the failing unit test. You need to add the missing language keys https://devdocs.jabref.org/getting-into-the-code/code-howtos#using-localization-correctly || I just add  the missing language keys into `JabRef_en.properties`   is there anything else to modify? || Ok  I fixed it || @koppor Any other comments to improve my pr? Any feedback is appreciated. || Thank you for keep working on this. Puts a smile on my face and a nice present for me at my free time hobby project JabRef. || 
7705,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,Added preset for new entry keybindings and reintroduced defaults Added preset for new entry keybindings on public demand.  Fixes #7346 Fixes #7439  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Open / Close is new:  ![grafik](https://user-images.githubusercontent.com/1366654/117208984-11f8a500-adf6-11eb-9b92-3357c3c25228.png)   New Preset:  ![grafik](https://user-images.githubusercontent.com/1366654/117209041-22a91b00-adf6-11eb-8232-5676f0edd9a6.png)   || Opening editor works on mac with cmd + e now  but closing not || checkstyle failes:  ![image](https://user-images.githubusercontent.com/50491877/117374619-cc0f1000-aecd-11eb-8a9b-7e360f81e30d.png)  || Seem like someone was too fast with merging unit tests   I think Tobi fixed them a few minutes ago || > Seem like someone was too fast with merging unit tests   I think Tobi fixed them a few minutes ago  Merged `main`. Hope  checkstyle will be fine 😇    || Before merging we should get to a conclusion about which shortcuts to keep. Does Ctrl in uppercase work now or should i change them now? || Also i do not really understand why on macos we need two different shortcuts  one for opening the entry editor and one for closing it. This needs to be fixed. || > Before merging we should get to a conclusion about which shortcuts to keep. > Does Ctrl in uppercase work now or should i change them now?  Should be lowercase https://github.com/JabRef/jabref/blob/bb011c9313367a28990ae213b3920fe6cd10d1dc/src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java#L127-L129   Regarding the ctrl + E (which maps to cmd + e on mac) I think I found the issue and I remember its a bug in javafx.  The event is fired twice for some reason. Thats why after closing it immediately goes into the OpenEntryEditor again and reopens the entry editor.  Edit// Yep: https://bugs.openjdk.java.net/browse/JDK-8205915 This already was an issue with copy paste happening twice.  ||
7705,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,Added preset for new entry keybindings and reintroduced defaults Added preset for new entry keybindings on public demand.  Fixes #7346 Fixes #7439  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Open / Close is new:  ![grafik](https://user-images.githubusercontent.com/1366654/117208984-11f8a500-adf6-11eb-9b92-3357c3c25228.png)   New Preset:  ![grafik](https://user-images.githubusercontent.com/1366654/117209041-22a91b00-adf6-11eb-8232-5676f0edd9a6.png)   || Opening editor works on mac with cmd + e now  but closing not || checkstyle failes:  ![image](https://user-images.githubusercontent.com/50491877/117374619-cc0f1000-aecd-11eb-8a9b-7e360f81e30d.png)  || Seem like someone was too fast with merging unit tests   I think Tobi fixed them a few minutes ago || > Seem like someone was too fast with merging unit tests   I think Tobi fixed them a few minutes ago  Merged `main`. Hope  checkstyle will be fine 😇    || Before merging we should get to a conclusion about which shortcuts to keep. Does Ctrl in uppercase work now or should i change them now? || Also i do not really understand why on macos we need two different shortcuts  one for opening the entry editor and one for closing it. This needs to be fixed. || > Before merging we should get to a conclusion about which shortcuts to keep. > Does Ctrl in uppercase work now or should i change them now?  Should be lowercase https://github.com/JabRef/jabref/blob/bb011c9313367a28990ae213b3920fe6cd10d1dc/src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java#L127-L129   Regarding the ctrl + E (which maps to cmd + e on mac) I think I found the issue and I remember its a bug in javafx.  The event is fired twice for some reason. Thats why after closing it immediately goes into the OpenEntryEditor again and reopens the entry editor.  Edit// Yep: https://bugs.openjdk.java.net/browse/JDK-8205915 This already was an issue with copy paste happening twice.  ||
7708,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,Select the entry which has smaller dictonary order when merge <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> Changed the selected entry when merge two entries: if two entrys citation key are empty  the above one will be selected  if only one entry has citation key  then it will be selected  if two entries both have citation key  the one who has smaller dictionary order will be selected. Fixes #7395   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. --> The screenshot shows that the "2021a" is selected although it is below "2021b". ![test-for-7395](https://user-images.githubusercontent.com/54058357/117312265-7d567b80-aeb7-11eb-8a45-ea8edaa23cc8.png)  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. SEe Checkstyle ore reviewdog and please give your PR a better title || Thank you for your suggestions. I have used EntryComparator and added two test cases to test the behavior of EntryComparator. || I like the idea of having a default order when merging  but isnt this a problem when one citation key is empty (`""` not null) and the other one is not? Can that happen and is it worth worrying about? || Yes  I think the real problem may be how to define a valid citation key. For example  "  " should not be a valid one || An empty citation key is totally valid.  I would expect to have the empty one as "lower" on the left in the dialog Minimum valid bibtex:  ``` @Article{  } ``` || Yes  that make sense too. It seems some checks were not successful  so what should I do?  || You should merge in the latest main from upstream jabref  then most tests should be working again. Checkstyle + Unit tests must be green  || > I like the idea of having a default order when merging  but isnt this a problem when one citation key is empty (`""` not null) and the other one is not? Can that happen and is it worth worrying about?  This should be handled by the `EntryComparator`  too. Test cases should cover this.  @SuXiChangZhen Please add this test case to `EntryComparatorTest`.    || > Yes  I think the real problem may be how to define a valid citation key. For example  " " should not be a valid one  Since `.bib` is a text file where users can input (nearly) arbitrary things  we have to be relaxed in as many places as possible.  We have the `org.jabref.logic.integrity.CitationKeyChecker` which checks for the empty key. || I am not that up to date with the merging and I might have sown some accidental confusion  sorry 😜   Based on how JabRef generates duplicate keys some cases are "easier" to deal with.  If the generated citation key is `2021` duplicated citation keys will be `2021a`  `2021b`  etc. and it is indeed correct that `2021a` should be preferred over `2021b` just as `2021` should be preferred over `2021a` (this might be a good test-case as well).  But if you are merging ` ` and `2021`  ` `  should in my opinion not be sorted above `2021`.  As I said  this might very well not be worth worrying about. || > But if you are merging ` ` and `2021`  ` `  should in my opinion not be sorted above `2021`.  Fair! I did not "see" that case.  Then this is a call for `CitationKeyComparator` in the package `org.jabref.logic.bibtex.comparator`. This comparator works as initially implemented by @SuXiChangZhen  and handles this case  too.  I would re-use comparison code of `EntryComparator`  but not call `EntryComparator`  because the empty string handling is different.  || Ok  nvm  ignore me  and my apologies for the confusion. Ill have to read up a bit more about merging. || It seems that jabref will not produce a citation key like "" since if the citation key is ""  then KEY_FIELD does not exist. But KEY_FIELD does allow something like " "(one blank)  should I consider this case? || I notice that in the `BibEntry`  the method `getCitationKey` indicates what is a valid ciatation key. So I use it in the `EntryComparator`. Now the blanked citation key will be replaced when merge two entries. || Thank you for your suggestion. I have used orElse. || 
7709,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,Fix for issue 6966: open all files of multiple entries Fixes #6966   - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  Added a new function to "Open file" option in the right-click menu.  Now we can open all linked files of the selected entries.  Test videos:  **Single entry selected: the behavior remains unchanged**      https://user-images.githubusercontent.com/57553691/117459616-2b2c5d80-af7e-11eb-8539-a4a7006711bf.mp4    **Multiple entries selected**  * All of them have linked files: open them all        https://user-images.githubusercontent.com/57553691/117459658-3a131000-af7e-11eb-8596-4f956ca09648.mp4    * Some have and some not: ~~pop out a dialog to ask the user whether to continue  if yes ~~ only open the former and skip the latter        https://user-images.githubusercontent.com/57553691/117459682-426b4b00-af7e-11eb-825e-de25510069a6.mp4    * None of them have any linked file: option will be disabled        https://user-images.githubusercontent.com/57553691/117459705-48612c00-af7e-11eb-8d47-99d72ed75a38.mp4      To implement these functions  I modified `OpenExternalFileAction` and added a new method `hasPresentFileForSelectedEntries` to check if at least one of the selected entries has linked files in `ActionHelper`. Idea for usabilty:   As a user I expect to open the file using "open all files" also when I select one entry.  So if I only select one entry > same beahviour as now  || In line with @Siedlerchr comment above  what do you think about adding the functionality to the existing "open file" action? So if a user has only a single entry selected  then the linked file of this entry is opened  but if multiple files are selected  then all linked files are opened. || I agree. When one entry selected  if "open all files" has the same behavior as "open file" as @Siedlerchr suggested  which means the function of the new added option totally covers the original one  then why not merge them as one option  just as you proposed.  So should I delete `OpenAllExternalFileAction` class and add its function to `OpenExternalFileAction`? || Yes  please! || Done.  I will update detailed description later. || May I ask why these tests are failing?  All these failures have the exactly same error: ``` /home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/integrity/EditionCheckerTest.java:59: error: cannot find symbol         assertEquals(Optional.empty()  checker.checkValue(""))                                         ^   symbol:   variable checker   location: class EditionCheckerTest /home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/integrity/EditionCheckerTest.java:64: error: cannot find symbol         assertEquals(Optional.empty()  checker.checkValue(null))                                         ^   symbol:   variable checker   location: class EditionCheckerTest /home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/integrity/EditionCheckerTest.java:69: error: cannot find symbol         var editionChecker  new EditionChecker(bibtex  false)                                                  ^   symbol:   variable bibtex   location: class EditionCheckerTest /home/runner/work/jabref/jabref/src/test/java/org/jabref/logic/integrity/EditionCheckerTest.java:75: error: cannot find symbol         var editionChecker  new EditionChecker(bibtex  false)                                                  ^   symbol:   variable bibtex   location: class EditionCheckerTest ```  But I didnt change anything in `EditionChecker`.  Same as https://github.com/JabRef/jabref/pull/7705#issuecomment-833924369.  || I noticed that the tests are fixed.  So  is there still anything more I need to change in my code? || You need to push the commit after merging as well  because the tests are still failing || Done.  Removed dialog and resolved a conflict in `CHANGELOG.md` || OK. I will fix it. || Two changes: 1. open all linked files of an entry 2. modify boolean binding  Under discussion: how to handle opening a large number of files? || > Yep  thats a good idea. "You are about to open more than 10 files". Continue? > I would simply create a constant with 10. I think thats appropriate. >  > * Continue /  Cancel  Done.  P.S. Online links are included.  Test video:  https://user-images.githubusercontent.com/57553691/118133561-915c2900-b433-11eb-91b7-5d6561d50014.mp4   || 
7711,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,fix: make fields sorted by lexicographical order <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #7710   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. --> We fix that some fields are in random order (issue #7710). We use `Treemap` which is ordered to replace `LinkedHashMap` and added a comparison function to the treemap to ensure that fields are ordered by lexicographical order.  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Normally  this would be a suitable way. However  this is a special case as you can reorder the fields in the custom entry types dialog. Refs #6152 The TreeSet will now kill any individual order. What we only need is a sorting in the dropdown box. So you need to add a sorting in the GUI/ViewModel || Thanks for guidance  I found they both use `src/main/java/org/jabref/gui/commonfxcontrols/FieldFormatterCleanupsPanelViewModel.java`  so I change it in the cleanupsPanel. ||
7717,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,fix: make more fields  fomatters  ids and languages sorted by alphabetical order  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #7716 We fix that more fields  fomatters  ids and languages sorted by alphabetical order. Solving them by either adding sort to relative property or using a `SortedList` to wrapper the ObservableList.  <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Thanks for the quick follow up  lgtm to me now. For external contributors a second developer needs to review and approve || I merged too early. Forgot the check for `CHANGELOG.md`. Fixed in https://github.com/JabRef/jabref/commit/428239437882ed9d0cc8dc497e1851abc7dcaec4.  @dateri Please remember the CHANGELOG.md for your next PR 🎉  || @koppor  I wanted to check on this  but in https://builds.jabref.org/main/  the files are dating back to May 8. A problem with the automatic build process? || Happens from time to time  most often the mac build fails due to notarization somehow not working at apples side.  you can then downlod the artifact from the run https://github.com/JabRef/jabref/actions/runs/829332567  ||
7733,1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,Fix for issue 5804: Rewrite ACM fetcher <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Fixes #5804   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  <br>  From issue #5804  ACM Fetcher needs to be rewritten  because of ACM website changes. One solution is to get the DOI from the HTML results of the search page  then use the export interface to get the JSON format data  and finally parse them.  Search API: https://dl.acm.org/action/doSearch?AllField<query_string\> Export API: https://dl.acm.org/action/exportCiteProcCitation?targetFilecustom-bibtex&formatbibTex&dois<doi\> <doi\> ...  What did I do: 1. Rewrited ACMPortalFetcher  added ACMPortalParser. 2. added Modified ACMPortalFetcherTest and ACMPortalParserTest.  Successfully get data from AMC Fetcher: ![ACM-Portal](https://user-images.githubusercontent.com/47767371/117985875-ad949300-b36b-11eb-9f90-d0da10ade6ea.png) ![ACM-Portal-3-imported](https://user-images.githubusercontent.com/47767371/117985880-af5e5680-b36b-11eb-938d-4b259eed7a1c.png)   @Siedlerchr  @koppor Thank you very much for your help and suggestions. The above problem has been fixed  and I also updated some codes. || Thank you for working on it! This brings JabRef a step forward! ||
7734,1,0,1,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,support fall back fields in citation key generation <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. --> To support pattern like [field:[fall back field]]  I first change `contentBetweenBrackets` because it did not support nested brackets. And in the `applyModifiers`  before it used `substring` to get the content inside parentheses  now I use `expandBrackets` to parse it. So theoretically  it can support many nested brackets  something like [author:([title:(year:...)])]. I also add the test case to test the fall back field. Fixes #7111   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. Sorry  did not see the last suggestion. I have added 6 test cases: fall back to string(original)  two fall back field  unbalanced brackets  fall back to field and string and fall back to special string. || I update the javadoc  remove the null parameter and add a test case for citation key generator. Can you explain more about paramterized tests? Thank you. @koppor  || Parameterized tests allow you to re-use test methods with different data  say one method for testing `expandBracketsWithFallback`    You can find a few different examples in the JabRef source code  e.g.   https://github.com/JabRef/jabref/blob/65a672adc15ef7142555f4ac128be806942a5b96/src/test/java/org/jabref/logic/bibtex/comparator/FieldComparatorTest.java#L204-L225  There is also more information on what options/uses exist in the [JUnit 5 documentation](https://junit.org/junit5/docs/current/user-guide/#writing-tests-parameterized-tests). || Thank you for all your suggestions. I have changed the method and used ParameterizedTest. ||
7775,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Fix ris importer follow up <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Follow up from #7755  Fixes #7737    <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7775,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,Fix ris importer follow up <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->  Follow up from #7755  Fixes #7737    <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [x] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7797,1,0,0,0,0,1,1,0,1,0,1,1,1,0,1,1,0,0,0,Added auto-key-generation task to task-progress Auto-key-generation tasks are now shown in the list of background tasks  together with a progress representing entries done / entries. Fixes #7267  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [x] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository. ![Screenshot from 2021-06-05 11-20-37](https://user-images.githubusercontent.com/10479048/120887475-69578400-c5f3-11eb-9e6d-9650fdae16a2.png) From my point of view this looks now good || Dont forge the l10n (see failing unit test) %0\ entries%0 entries ||
7808,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Implemented a select all button for the library import function (issue #7786) Fixes #7768  ![SelectAllScreenshot](https://user-images.githubusercontent.com/55059816/121120358-3d462980-c7d2-11eb-9120-eebf3d5125c8.png)  We implemented a select all button for the library import function that fixes issue #7786.  Added a new function selectAllEntires() to ImportEntriesDialog and a button to ImportEntriesDialog.fxml. New localization String "Select all entries" also added to JabRef_en.properties.  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [X] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [X] Manually tested changed features in running JabRef (always required) - [X] Screenshots added in PR description (for UI changes) - [X] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
7808,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,Implemented a select all button for the library import function (issue #7786) Fixes #7768  ![SelectAllScreenshot](https://user-images.githubusercontent.com/55059816/121120358-3d462980-c7d2-11eb-9120-eebf3d5125c8.png)  We implemented a select all button for the library import function that fixes issue #7786.  Added a new function selectAllEntires() to ImportEntriesDialog and a button to ImportEntriesDialog.fxml. New localization String "Select all entries" also added to JabRef_en.properties.  <!--  Describe the changes you have made here: what  why  ...  Link issues that are fixed  e.g. "Fixes #333". If you fixed a koppor issue  link it  e.g. "Fixes https://github.com/koppor/jabref/issues/47". The title of the PR must not reference an issue  because GitHub does not support autolinking there. -->   <!--  - Go through the list below. If a task has been completed  mark it done by using `[x]`. - Please do not remove any items  just leave them unchecked if they are not applicable. -->  - [X] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [X] Manually tested changed features in running JabRef (always required) - [X] Screenshots added in PR description (for UI changes) - [X] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or  even better  submitted a pull request to the documentation repository.  
