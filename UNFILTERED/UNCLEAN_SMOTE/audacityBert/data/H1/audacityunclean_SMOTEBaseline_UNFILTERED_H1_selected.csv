prNumber,Util,APM,Network,DB,Error.Handling,Logging,Lang,Data.Structure,i18n,Setup,Logic,IO,UI,Parser,Event.Handling,App,GIS,Multimedia,CG,corpus
39,1,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,this is basically a recreation of #38 without any stylistic changes only fixing the uninitialized variables  this is basically a recreation of #38 without any stylistic changes  only fixing the uninitialized variables.
39,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,this is basically a recreation of #38 without any stylistic changes only fixing the uninitialized variables  this is basically a recreation of #38 without any stylistic changes  only fixing the uninitialized variables.
39,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,this is basically a recreation of #38 without any stylistic changes only fixing the uninitialized variables  this is basically a recreation of #38 without any stylistic changes  only fixing the uninitialized variables.
43,0,0,0,1,0,0,0,1,0,1,1,1,1,0,0,1,0,1,0,if an effect has two input channels but only one output channel we cannot read from the second output buffer as there isn’t onethis hopefully fixes [#946](http://bugzillaaudacityteamorg/show_bugcgi?id946)  if an effect has two input channels but only one output channel  we cannot read from the second output buffer  as there isn’t one.  this hopefully fixes [#946](http://bugzilla.audacityteam.org/show_bug.cgi?id=946).
43,0,0,1,1,0,0,0,0,0,1,1,1,1,0,1,1,0,1,0,if an effect has two input channels but only one output channel we cannot read from the second output buffer as there isn’t onethis hopefully fixes [#946](http://bugzillaaudacityteamorg/show_bugcgi?id946)  if an effect has two input channels but only one output channel  we cannot read from the second output buffer  as there isn’t one.  this hopefully fixes [#946](http://bugzilla.audacityteam.org/show_bug.cgi?id=946).
43,0,0,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,0,if an effect has two input channels but only one output channel we cannot read from the second output buffer as there isn’t onethis hopefully fixes [#946](http://bugzillaaudacityteamorg/show_bugcgi?id946)  if an effect has two input channels but only one output channel  we cannot read from the second output buffer  as there isn’t one.  this hopefully fixes [#946](http://bugzilla.audacityteam.org/show_bug.cgi?id=946).
165,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,update to pr #163 using vector now instead of dynamic array size ive never seen where this didnt work in years but better to keep standard compliant this is not critical to performance so better to forget using alloca() as wellalso w0 w1 recalculated every iteration so it can work with new fisheye feature i did not special case this for the non-openmp as it was before since its very small component of the total and i imagine the compiler can do that for usi left the const ref change alone per james comment imo it is just a bizarre thing to do i think we can be pretty sure the code generated is not any worse as there is nothing to dereference in the loops  update to pr #163.   using vector now instead of dynamic array size. i ve never seen where this didn t work in years  but better to keep standard compliant. this is not critical to performance so better to forget using alloca() as well.  also w0  w1 recalculated every iteration so it can work with new fisheye feature. i did not special case this for the non-openmp as it was before since its very small component of the total and i imagine the compiler can do that for us.  i left the const ref change alone per james  comment. imo it is just a bizarre thing to do. i think we can be pretty sure the code generated is not any worse as there is nothing to dereference in the loops.
165,1,1,1,0,1,0,1,1,1,1,1,1,1,0,0,1,0,1,0,update to pr #163 using vector now instead of dynamic array size ive never seen where this didnt work in years but better to keep standard compliant this is not critical to performance so better to forget using alloca() as wellalso w0 w1 recalculated every iteration so it can work with new fisheye feature i did not special case this for the non-openmp as it was before since its very small component of the total and i imagine the compiler can do that for usi left the const ref change alone per james comment imo it is just a bizarre thing to do i think we can be pretty sure the code generated is not any worse as there is nothing to dereference in the loops  update to pr #163.   using vector now instead of dynamic array size. i ve never seen where this didn t work in years  but better to keep standard compliant. this is not critical to performance so better to forget using alloca() as well.  also w0  w1 recalculated every iteration so it can work with new fisheye feature. i did not special case this for the non-openmp as it was before since its very small component of the total and i imagine the compiler can do that for us.  i left the const ref change alone per james  comment. imo it is just a bizarre thing to do. i think we can be pretty sure the code generated is not any worse as there is nothing to dereference in the loops.
165,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,update to pr #163 using vector now instead of dynamic array size ive never seen where this didnt work in years but better to keep standard compliant this is not critical to performance so better to forget using alloca() as wellalso w0 w1 recalculated every iteration so it can work with new fisheye feature i did not special case this for the non-openmp as it was before since its very small component of the total and i imagine the compiler can do that for usi left the const ref change alone per james comment imo it is just a bizarre thing to do i think we can be pretty sure the code generated is not any worse as there is nothing to dereference in the loops  update to pr #163.   using vector now instead of dynamic array size. i ve never seen where this didn t work in years  but better to keep standard compliant. this is not critical to performance so better to forget using alloca() as well.  also w0  w1 recalculated every iteration so it can work with new fisheye feature. i did not special case this for the non-openmp as it was before since its very small component of the total and i imagine the compiler can do that for us.  i left the const ref change alone per james  comment. imo it is just a bizarre thing to do. i think we can be pretty sure the code generated is not any worse as there is nothing to dereference in the loops.
465,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,resolves #464  resolves #464
465,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves #464  resolves #464
465,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves #464  resolves #464
603,0,0,0,1,0,0,0,0,1,1,1,1,1,0,0,0,0,1,0,if pull request #602 isnt yet reviewed and accepted please review and merge this smaller one firstfix possible memory leaks and crashes when opening of sqlite database failsthere are now exceptions thrown in some new places with messages for the user that might be improved  if pull request #602 isn t yet reviewed and accepted  please review and merge this smaller one first.  fix possible memory leaks and crashes when opening of sqlite database fails.  there are now exceptions thrown in some new places with messages for the user that might be improved.
603,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,if pull request #602 isnt yet reviewed and accepted please review and merge this smaller one firstfix possible memory leaks and crashes when opening of sqlite database failsthere are now exceptions thrown in some new places with messages for the user that might be improved  if pull request #602 isn t yet reviewed and accepted  please review and merge this smaller one first.  fix possible memory leaks and crashes when opening of sqlite database fails.  there are now exceptions thrown in some new places with messages for the user that might be improved.
603,1,0,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,if pull request #602 isnt yet reviewed and accepted please review and merge this smaller one firstfix possible memory leaks and crashes when opening of sqlite database failsthere are now exceptions thrown in some new places with messages for the user that might be improved  if pull request #602 isn t yet reviewed and accepted  please review and merge this smaller one first.  fix possible memory leaks and crashes when opening of sqlite database fails.  there are now exceptions thrown in some new places with messages for the user that might be improved.
700,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,this fixes cve-2020-11867 by setting the permissions for the user tmp folder to 700 closes #699  this fixes cve-2020-11867 by setting the permissions for the user tmp folder to 700. closes #699 
700,0,0,0,0,1,0,0,1,0,1,1,1,1,1,0,1,0,1,0,this fixes cve-2020-11867 by setting the permissions for the user tmp folder to 700 closes #699  this fixes cve-2020-11867 by setting the permissions for the user tmp folder to 700. closes #699 
700,0,0,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,0,this fixes cve-2020-11867 by setting the permissions for the user tmp folder to 700 closes #699  this fixes cve-2020-11867 by setting the permissions for the user tmp folder to 700. closes #699 
986,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,resolves: #984fix uses the approach proposed by david bailes*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #984  fix uses the approach proposed by david bailes  *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
986,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #984fix uses the approach proposed by david bailes*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #984  fix uses the approach proposed by david bailes  *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
986,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #984fix uses the approach proposed by david bailes*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #984  fix uses the approach proposed by david bailes  *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1050,0,0,1,1,0,0,0,0,0,1,1,1,1,0,1,1,0,1,0,resolves: #1048check for updates dialog will (very probably) not unexpectedly interrupt recordings possibly spoiling them if there is a screen reader(there is one slender timing possibility mentioned in code comments where it might yet happen more thread synchronizations might fix that but do not seem worth the extra effort now)[x]  i signed cla[x]  i made sure the code compiles on my machine[x]  i made sure there are no unnecessary changes in the code[x]  i made sure the title of the pr reflects the core meaning of the issue you are solving[x]  i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1048  check for updates dialog will (very probably) not unexpectedly interrupt recordings  possibly spoiling them if there is a screen reader.  (there is one slender timing possibility mentioned in code comments where it might yet happen. more thread synchronizations might fix that  but do not seem worth the extra effort now.)  [x]  i signed cla [x]  i made sure the code compiles on my machine [x]  i made sure there are no unnecessary changes in the code [x]  i made sure the title of the pr reflects the core meaning of the issue you are solving [x]  i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1050,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,resolves: #1048check for updates dialog will (very probably) not unexpectedly interrupt recordings possibly spoiling them if there is a screen reader(there is one slender timing possibility mentioned in code comments where it might yet happen more thread synchronizations might fix that but do not seem worth the extra effort now)[x]  i signed cla[x]  i made sure the code compiles on my machine[x]  i made sure there are no unnecessary changes in the code[x]  i made sure the title of the pr reflects the core meaning of the issue you are solving[x]  i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1048  check for updates dialog will (very probably) not unexpectedly interrupt recordings  possibly spoiling them if there is a screen reader.  (there is one slender timing possibility mentioned in code comments where it might yet happen. more thread synchronizations might fix that  but do not seem worth the extra effort now.)  [x]  i signed cla [x]  i made sure the code compiles on my machine [x]  i made sure there are no unnecessary changes in the code [x]  i made sure the title of the pr reflects the core meaning of the issue you are solving [x]  i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1050,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,resolves: #1048check for updates dialog will (very probably) not unexpectedly interrupt recordings possibly spoiling them if there is a screen reader(there is one slender timing possibility mentioned in code comments where it might yet happen more thread synchronizations might fix that but do not seem worth the extra effort now)[x]  i signed cla[x]  i made sure the code compiles on my machine[x]  i made sure there are no unnecessary changes in the code[x]  i made sure the title of the pr reflects the core meaning of the issue you are solving[x]  i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1048  check for updates dialog will (very probably) not unexpectedly interrupt recordings  possibly spoiling them if there is a screen reader.  (there is one slender timing possibility mentioned in code comments where it might yet happen. more thread synchronizations might fix that  but do not seem worth the extra effort now.)  [x]  i signed cla [x]  i made sure the code compiles on my machine [x]  i made sure there are no unnecessary changes in the code [x]  i made sure the title of the pr reflects the core meaning of the issue you are solving [x]  i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1167,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,0,1,0,resolves: #1164check for updates has been fixed so that its modal dialog will wait until any recording-in-progress finishes  but that was not enough  it should also not interrupt the timer recording wait dialog  this commit fixes that too  i have tested it with amodified build making more frequent checks- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1164  check for updates has been fixed so that its modal dialog will wait until any recording-in-progress finishes.  but that was not enough.  it should also not interrupt the timer recording wait dialog.  this commit fixes that too.  i have tested it with a modified build making more frequent checks.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1167,1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,resolves: #1164check for updates has been fixed so that its modal dialog will wait until any recording-in-progress finishes  but that was not enough  it should also not interrupt the timer recording wait dialog  this commit fixes that too  i have tested it with amodified build making more frequent checks- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1164  check for updates has been fixed so that its modal dialog will wait until any recording-in-progress finishes.  but that was not enough.  it should also not interrupt the timer recording wait dialog.  this commit fixes that too.  i have tested it with a modified build making more frequent checks.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1167,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1164check for updates has been fixed so that its modal dialog will wait until any recording-in-progress finishes  but that was not enough  it should also not interrupt the timer recording wait dialog  this commit fixes that too  i have tested it with amodified build making more frequent checks- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1164  check for updates has been fixed so that its modal dialog will wait until any recording-in-progress finishes.  but that was not enough.  it should also not interrupt the timer recording wait dialog.  this commit fixes that too.  i have tested it with a modified build making more frequent checks.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1192,1,1,1,0,1,0,1,1,1,1,1,1,1,0,0,1,0,1,0,resolves: #1191  these can happen in only two ways using the application: from the toolsmenu or using the windows intaller programa review of all uses of wxfileconfig::deleteall() proves thisthe one special boolsetting object was moved from updatemanager to prefscpp toavoid a dependency cycle among source code files<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1191   ... these can happen in only two ways  using the application: from the tools menu  or using the windows intaller program.  a review of all uses of wxfileconfig::deleteall() proves this.  the one special boolsetting object was moved from updatemanager to prefs.cpp to avoid a dependency cycle among source code files.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1192,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,resolves: #1191  these can happen in only two ways using the application: from the toolsmenu or using the windows intaller programa review of all uses of wxfileconfig::deleteall() proves thisthe one special boolsetting object was moved from updatemanager to prefscpp toavoid a dependency cycle among source code files<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1191   ... these can happen in only two ways  using the application: from the tools menu  or using the windows intaller program.  a review of all uses of wxfileconfig::deleteall() proves this.  the one special boolsetting object was moved from updatemanager to prefs.cpp to avoid a dependency cycle among source code files.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1192,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1191  these can happen in only two ways using the application: from the toolsmenu or using the windows intaller programa review of all uses of wxfileconfig::deleteall() proves thisthe one special boolsetting object was moved from updatemanager to prefscpp toavoid a dependency cycle among source code files<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1191   ... these can happen in only two ways  using the application: from the tools menu  or using the windows intaller program.  a review of all uses of wxfileconfig::deleteall() proves this.  the one special boolsetting object was moved from updatemanager to prefs.cpp to avoid a dependency cycle among source code files.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1204,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1200 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1200   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1204,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0,resolves: #1200 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1200   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1204,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1200 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1200   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1207,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: #1181resolves: #1251 * adds affordances to a wave clips note track item labels * contains requested fixes and improvements (link above)- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1181 resolves: #1251   * adds affordances to a wave clips  note track item  labels  * contains requested fixes and improvements (link above)  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1207,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0,resolves: #1181resolves: #1251 * adds affordances to a wave clips note track item labels * contains requested fixes and improvements (link above)- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1181 resolves: #1251   * adds affordances to a wave clips  note track item  labels  * contains requested fixes and improvements (link above)  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1207,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1181resolves: #1251 * adds affordances to a wave clips note track item labels * contains requested fixes and improvements (link above)- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1181 resolves: #1251   * adds affordances to a wave clips  note track item  labels  * contains requested fixes and improvements (link above)  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1207,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: #1181resolves: #1251 * adds affordances to a wave clips note track item labels * contains requested fixes and improvements (link above)- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1181 resolves: #1251   * adds affordances to a wave clips  note track item  labels  * contains requested fixes and improvements (link above)  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1207,1,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,resolves: #1181resolves: #1251 * adds affordances to a wave clips note track item labels * contains requested fixes and improvements (link above)- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1181 resolves: #1251   * adds affordances to a wave clips  note track item  labels  * contains requested fixes and improvements (link above)  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1207,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1181resolves: #1251 * adds affordances to a wave clips note track item labels * contains requested fixes and improvements (link above)- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1181 resolves: #1251   * adds affordances to a wave clips  note track item  labels  * contains requested fixes and improvements (link above)  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1208,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0, in particular so that warnings on exit in the debug build on windows aresuppressedmaybe its not important to suppress them  or maybe they suggest all is notcorrect in the msvc implementation of this c++17 feature?resolves: #1042- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... in particular so that warnings on exit in the debug build on windows are suppressed.  maybe it s not important to suppress them.  or maybe they suggest all is not correct in the msvc implementation of this c++17 feature?  resolves: #1042  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1208,0,0,0,0,1,1,0,1,0,1,0,0,1,0,0,1,0,0,0, in particular so that warnings on exit in the debug build on windows aresuppressedmaybe its not important to suppress them  or maybe they suggest all is notcorrect in the msvc implementation of this c++17 feature?resolves: #1042- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... in particular so that warnings on exit in the debug build on windows are suppressed.  maybe it s not important to suppress them.  or maybe they suggest all is not correct in the msvc implementation of this c++17 feature?  resolves: #1042  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1208,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0, in particular so that warnings on exit in the debug build on windows aresuppressedmaybe its not important to suppress them  or maybe they suggest all is notcorrect in the msvc implementation of this c++17 feature?resolves: #1042- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... in particular so that warnings on exit in the debug build on windows are suppressed.  maybe it s not important to suppress them.  or maybe they suggest all is not correct in the msvc implementation of this c++17 feature?  resolves: #1042  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1219,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,this bug still available in case: using old settings file or manual set it into settings fileresolves: #1174 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  this bug still available in case: using old settings file or manual set it into settings file.  resolves: #1174   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1219,1,0,0,0,1,1,0,1,0,1,1,1,1,0,1,0,1,1,0,this bug still available in case: using old settings file or manual set it into settings fileresolves: #1174 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  this bug still available in case: using old settings file or manual set it into settings file.  resolves: #1174   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1219,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,this bug still available in case: using old settings file or manual set it into settings fileresolves: #1174 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  this bug still available in case: using old settings file or manual set it into settings file.  resolves: #1174   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1265,0,0,0,1,1,0,0,1,0,1,1,1,1,0,0,1,0,1,0,resolves: #1183<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1183  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1265,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,0,1,0,resolves: #1183<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1183  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1265,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1183<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1183  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1271,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,resolves: #1268 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1268   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1271,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,resolves: #1268 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1268   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1271,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1268 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1268   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1297,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,resolves: #1243 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"windows with error information for temporary directory cases:![image](https://user-imagesgithubusercontentcom/1660969/125621355-94d897cc-5eb4-4265-a8b5-e691b0ec89e2png)  resolves: #1243   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements?   windows with error information for temporary directory cases: ![image](https://user-images.githubusercontent.com/1660969/125621355-94d897cc-5eb4-4265-a8b5-e691b0ec89e2.png)
1297,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,resolves: #1243 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"windows with error information for temporary directory cases:![image](https://user-imagesgithubusercontentcom/1660969/125621355-94d897cc-5eb4-4265-a8b5-e691b0ec89e2png)  resolves: #1243   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements?   windows with error information for temporary directory cases: ![image](https://user-images.githubusercontent.com/1660969/125621355-94d897cc-5eb4-4265-a8b5-e691b0ec89e2.png)
1297,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1243 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"windows with error information for temporary directory cases:![image](https://user-imagesgithubusercontentcom/1660969/125621355-94d897cc-5eb4-4265-a8b5-e691b0ec89e2png)  resolves: #1243   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements?   windows with error information for temporary directory cases: ![image](https://user-images.githubusercontent.com/1660969/125621355-94d897cc-5eb4-4265-a8b5-e691b0ec89e2.png)
1300,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,resolves: #1298stack trace showed main thread was shutting down network manager which was waiting to join a response thread which was executing the lambda in updatemanager which was using the global audioio object -- which was destroyed before that at least on the main threadthis is a simple fix: destroy audioio after that not before- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1298  stack trace showed main thread was shutting down network manager  which was waiting to join a response thread  which was executing the lambda in updatemanager  which was using the global audioio object -- which was destroyed before that  at least on the main thread.  this is a simple fix: destroy audioio after that  not before.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1300,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,resolves: #1298stack trace showed main thread was shutting down network manager which was waiting to join a response thread which was executing the lambda in updatemanager which was using the global audioio object -- which was destroyed before that at least on the main threadthis is a simple fix: destroy audioio after that not before- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1298  stack trace showed main thread was shutting down network manager  which was waiting to join a response thread  which was executing the lambda in updatemanager  which was using the global audioio object -- which was destroyed before that  at least on the main thread.  this is a simple fix: destroy audioio after that  not before.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1300,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,resolves: #1298stack trace showed main thread was shutting down network manager which was waiting to join a response thread which was executing the lambda in updatemanager which was using the global audioio object -- which was destroyed before that at least on the main threadthis is a simple fix: destroy audioio after that not before- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1298  stack trace showed main thread was shutting down network manager  which was waiting to join a response thread  which was executing the lambda in updatemanager  which was using the global audioio object -- which was destroyed before that  at least on the main thread.  this is a simple fix: destroy audioio after that  not before.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1306,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,the check for macro directory now only happens if directory is selected and existsresolves: #1305*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  the check for macro directory now only happens if directory is selected and exists   resolves: #1305 *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1306,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,the check for macro directory now only happens if directory is selected and existsresolves: #1305*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  the check for macro directory now only happens if directory is selected and exists   resolves: #1305 *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1306,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,the check for macro directory now only happens if directory is selected and existsresolves: #1305*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  the check for macro directory now only happens if directory is selected and exists   resolves: #1305 *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1313,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1312the bug is difficult to reproduce but this is a plausible fix for it given what we know from a stack trace- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1312  the bug is difficult to reproduce  but this is a plausible fix for it  given what we know from a stack trace.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1313,0,0,0,0,1,0,0,1,0,0,1,1,1,1,0,1,1,0,0,resolves: #1312the bug is difficult to reproduce but this is a plausible fix for it given what we know from a stack trace- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1312  the bug is difficult to reproduce  but this is a plausible fix for it  given what we know from a stack trace.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1313,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1312the bug is difficult to reproduce but this is a plausible fix for it given what we know from a stack trace- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1312  the bug is difficult to reproduce  but this is a plausible fix for it  given what we know from a stack trace.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1314,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,0,0,0, problem was the loss of an override of pluginmanager::getid() for a morespecific pointer typeresolves: #1294*(short description of the changes and the motivation to make the changes)*- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... problem was the loss of an override of pluginmanager::getid() for a more specific pointer type.  resolves: #1294 *(short description of the changes and the motivation to make the changes)*  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1314,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,1,1,1, problem was the loss of an override of pluginmanager::getid() for a morespecific pointer typeresolves: #1294*(short description of the changes and the motivation to make the changes)*- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... problem was the loss of an override of pluginmanager::getid() for a more specific pointer type.  resolves: #1294 *(short description of the changes and the motivation to make the changes)*  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1314,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0, problem was the loss of an override of pluginmanager::getid() for a morespecific pointer typeresolves: #1294*(short description of the changes and the motivation to make the changes)*- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... problem was the loss of an override of pluginmanager::getid() for a more specific pointer type.  resolves: #1294 *(short description of the changes and the motivation to make the changes)*  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1322,0,0,0,0,1,0,0,1,0,1,1,1,1,1,0,1,0,1,0,resolves #1162toolkit neutral library for audacitys exception handling system- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves #1162  toolkit neutral library for audacity s exception handling system  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1322,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,resolves #1162toolkit neutral library for audacitys exception handling system- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves #1162  toolkit neutral library for audacity s exception handling system  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1322,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves #1162toolkit neutral library for audacitys exception handling system- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves #1162  toolkit neutral library for audacity s exception handling system  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1323,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1199 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1199   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1323,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,resolves: #1199 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1199   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1323,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1199 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1199   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1328,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,resolves: #1060a library of classes that manage global variable settings that persist between runs of the application- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1060  a library of classes that manage global variable settings that persist between runs of the application  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1328,1,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,resolves: #1060a library of classes that manage global variable settings that persist between runs of the application- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1060  a library of classes that manage global variable settings that persist between runs of the application  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1328,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,resolves: #1060a library of classes that manage global variable settings that persist between runs of the application- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1060  a library of classes that manage global variable settings that persist between runs of the application  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1344,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,1, and in 300 started crashing instead  just disallow it again nofunctionality lostresolves: #1329- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... and in 3.0.0 started crashing instead.  just disallow it again  no functionality lost.  resolves: #1329  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1344,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0, and in 300 started crashing instead  just disallow it again nofunctionality lostresolves: #1329- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... and in 3.0.0 started crashing instead.  just disallow it again  no functionality lost.  resolves: #1329  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1344,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0, and in 300 started crashing instead  just disallow it again nofunctionality lostresolves: #1329- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... and in 3.0.0 started crashing instead.  just disallow it again  no functionality lost.  resolves: #1329  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1345,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: #1159depends on pr: #1328extract a tool-kit neutral library for some mathematical and sample-processing utilities  make only the library directly dependent on libsoxrnote that only the last five commits are proper to this pr- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1159  depends on pr: #1328  extract a tool-kit neutral library for some mathematical and sample-processing utilities.  make only the library directly dependent on libsoxr  note that only the last five commits are proper to this pr.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1345,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,1,1,0,resolves: #1159depends on pr: #1328extract a tool-kit neutral library for some mathematical and sample-processing utilities  make only the library directly dependent on libsoxrnote that only the last five commits are proper to this pr- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1159  depends on pr: #1328  extract a tool-kit neutral library for some mathematical and sample-processing utilities.  make only the library directly dependent on libsoxr  note that only the last five commits are proper to this pr.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1345,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1159depends on pr: #1328extract a tool-kit neutral library for some mathematical and sample-processing utilities  make only the library directly dependent on libsoxrnote that only the last five commits are proper to this pr- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1159  depends on pr: #1328  extract a tool-kit neutral library for some mathematical and sample-processing utilities.  make only the library directly dependent on libsoxr  note that only the last five commits are proper to this pr.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1359,1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,resolves: #1160a library for general file handling utilities and definitions of certain significant file paths which does not depend on wxcore though it does still depend heavily on wxbase- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1160  a library for general file handling utilities  and definitions of certain significant file paths  which does not depend on wxcore  though it does still depend heavily on wxbase.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1359,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,0,1,0,resolves: #1160a library for general file handling utilities and definitions of certain significant file paths which does not depend on wxcore though it does still depend heavily on wxbase- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1160  a library for general file handling utilities  and definitions of certain significant file paths  which does not depend on wxcore  though it does still depend heavily on wxbase.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1359,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,resolves: #1160a library for general file handling utilities and definitions of certain significant file paths which does not depend on wxcore though it does still depend heavily on wxbase- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1160  a library for general file handling utilities  and definitions of certain significant file paths  which does not depend on wxcore  though it does still depend heavily on wxbase.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1377,0,0,0,1,1,0,0,1,0,1,1,1,1,0,1,1,0,1,0,resolves: #1376 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1376   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1377,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1376 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1376   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1416,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,resolves: #1403beginnings of built-in tools for easy creation of automated functional regression tests in alpha builds onlycertain events can be recorded to journaltxt in the folder with audacitycfg if this has been enabled in the tools menu and then played back if that file is specified with the -j command line optionso far only menu items that require no dialogs (or their shortcut keystroke equivalents or certain toolbar buttons that invoke those commands) can be played back  some simple sessions -- such as just exiting the program -- can replayaudacity returns a non-zero status to the shell if journal playback fails because the programs state is out-of-sync with what the journal file expects  no examples yet of how to force that failure<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1403  beginnings of built-in tools for easy creation of automated functional regression tests  in alpha builds only.  certain events can be recorded to journal.txt in the folder with audacity.cfg  if this has been enabled in the tools menu  and then played back  if that file is specified with the -j command line option.  so far  only menu items that require no dialogs (or their shortcut keystroke equivalents  or certain toolbar buttons that invoke those commands) can be played back.  some simple sessions -- such as just exiting the program -- can replay.  audacity returns a non-zero status to the shell if journal playback fails  because the program s state is out-of-sync with what the journal file expects.  no examples yet of how to force that failure.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1416,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1403beginnings of built-in tools for easy creation of automated functional regression tests in alpha builds onlycertain events can be recorded to journaltxt in the folder with audacitycfg if this has been enabled in the tools menu and then played back if that file is specified with the -j command line optionso far only menu items that require no dialogs (or their shortcut keystroke equivalents or certain toolbar buttons that invoke those commands) can be played back  some simple sessions -- such as just exiting the program -- can replayaudacity returns a non-zero status to the shell if journal playback fails because the programs state is out-of-sync with what the journal file expects  no examples yet of how to force that failure<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1403  beginnings of built-in tools for easy creation of automated functional regression tests  in alpha builds only.  certain events can be recorded to journal.txt in the folder with audacity.cfg  if this has been enabled in the tools menu  and then played back  if that file is specified with the -j command line option.  so far  only menu items that require no dialogs (or their shortcut keystroke equivalents  or certain toolbar buttons that invoke those commands) can be played back.  some simple sessions -- such as just exiting the program -- can replay.  audacity returns a non-zero status to the shell if journal playback fails  because the program s state is out-of-sync with what the journal file expects.  no examples yet of how to force that failure.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1429,0,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,1,resolves: #1163library of useful utilities for decoupling of sub-systems and making them open-ended -- the big o of solidbeware!   here be dragons  much use of c++ templates- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1163  library of useful utilities for decoupling of sub-systems and making them open-ended -- the big o of solid.  beware!   here be dragons.  much use of c++ templates.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1429,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1163library of useful utilities for decoupling of sub-systems and making them open-ended -- the big o of solidbeware!   here be dragons  much use of c++ templates- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1163  library of useful utilities for decoupling of sub-systems and making them open-ended -- the big o of solid.  beware!   here be dragons.  much use of c++ templates.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1437,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,resolves: #1363 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1363   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1437,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1363 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1363   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1441,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0, which broke at a2f109dresolves: #1421 resolves: #1369events were failing to be processed because event types were set incorrectly- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... which broke at a2f109d  resolves: #1421  resolves: #1369  events were failing to be processed because event types were set incorrectly.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1441,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0, which broke at a2f109dresolves: #1421 resolves: #1369events were failing to be processed because event types were set incorrectly- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... which broke at a2f109d  resolves: #1421  resolves: #1369  events were failing to be processed because event types were set incorrectly.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1441,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0, which broke at a2f109dresolves: #1421 resolves: #1369events were failing to be processed because event types were set incorrectly- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... which broke at a2f109d  resolves: #1421  resolves: #1369  events were failing to be processed because event types were set incorrectly.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1441,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0, which broke at a2f109dresolves: #1421 resolves: #1369events were failing to be processed because event types were set incorrectly- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... which broke at a2f109d  resolves: #1421  resolves: #1369  events were failing to be processed because event types were set incorrectly.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1475,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1375 resizing area added to the wavetrackview and wavetrackaffordancecontrol making possible to have an enlarged resizing area with 1px distance between channels<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1375   resizing area added to the wavetrackview and wavetrackaffordancecontrol  making possible to have an enlarged resizing area with 1px distance between channels.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1475,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1375 resizing area added to the wavetrackview and wavetrackaffordancecontrol making possible to have an enlarged resizing area with 1px distance between channels<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1375   resizing area added to the wavetrackview and wavetrackaffordancecontrol  making possible to have an enlarged resizing area with 1px distance between channels.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1478,1,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,resolves: #1158extract a library for serialization and deserialization of objects in xml form and a registry for serializable objectsattached directly to the project- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1158  extract a library for serialization and deserialization of objects in xml form  and a registry for serializable objects attached directly to the project.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1478,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,resolves: #1158extract a library for serialization and deserialization of objects in xml form and a registry for serializable objectsattached directly to the project- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1158  extract a library for serialization and deserialization of objects in xml form  and a registry for serializable objects attached directly to the project.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1482,0,0,0,0,1,1,0,1,0,1,0,0,1,0,0,1,0,0,0,resolves: #1404the journalling system is now enhanced enough that it can replay some interactions with modal dialogs including pushbuttons choice controls text boxes and sliders<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1404  the journalling system is now enhanced enough that it can replay some interactions with modal dialogs  including pushbuttons  choice controls  text boxes  and sliders.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1482,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1404the journalling system is now enhanced enough that it can replay some interactions with modal dialogs including pushbuttons choice controls text boxes and sliders<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1404  the journalling system is now enhanced enough that it can replay some interactions with modal dialogs  including pushbuttons  choice controls  text boxes  and sliders.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1495,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,resolves: #1496rewrite dithercpp more clearly with c++ functions not macrosjust a preliminary to a preliminary to some audioio cleanup<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1496  rewrite dither.cpp more clearly with c++ functions  not macros.  just a preliminary to a preliminary to some audioio cleanup...  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1495,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1496rewrite dithercpp more clearly with c++ functions not macrosjust a preliminary to a preliminary to some audioio cleanup<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1496  rewrite dither.cpp more clearly with c++ functions  not macros.  just a preliminary to a preliminary to some audioio cleanup...  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1502,1,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves #1501 resolves #1476 resolves #1477 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves #1501  resolves #1476  resolves #1477   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1502,0,0,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,0,resolves #1501 resolves #1476 resolves #1477 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves #1501  resolves #1476  resolves #1477   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1502,1,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves #1501 resolves #1476 resolves #1477 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves #1501  resolves #1476  resolves #1477   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1502,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,resolves #1501 resolves #1476 resolves #1477 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves #1501  resolves #1476  resolves #1477   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1502,1,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves #1501 resolves #1476 resolves #1477 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves #1501  resolves #1476  resolves #1477   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1502,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves #1501 resolves #1476 resolves #1477 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves #1501  resolves #1476  resolves #1477   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1504,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: #998resolves: #1518working context menus for background area and audio clipsnotes about some details where the issue description differs from this implementation or is underspecified:* all important words are capitalized consistent with other menu items (for instance "split clip")* split clip will split only the picked clip (whether or not the track is selected) at the pick point  this is unlike the toolbar menu which splits all selected tracks at the selection* paste will paste at the pick point ignoring the selection unlike the other ways of invoking paste* mute/unmute track has shift+u as its default keystroke  see extra > tracks sub-menu (and see interface preferences to enable the extra menu) the popup menu command will do that to the track you pick in ignoring which tracks are in selected state* "export audio" rather than "export project" because that agrees with the toolbar menu and the convention that commands bringing up modal dialogs need ellipsis in the name* the clip context menu appears only when clicking on the wave (or spectrogram) areas not on the drag bar or in voids between clips* the accelerator keys appear not necessarily as the defaults in the pictures of course but are consistent with whatever keystrokes have been chosen in preferences* context menu items will be grayed out and disabled in the same cases that the corresponding toolbar menus would be  for instance adding new tracks is not permitted during recording or playback- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #998 resolves: #1518  working context menus for background area and audio clips.  notes about some details where the issue description differs from this implementation or is underspecified:  * all important words are capitalized  consistent with other menu items (for instance  split clip ) * split clip will split only the picked clip (whether or not the track is selected)  at the pick point.  this is unlike the toolbar menu  which splits all selected tracks  at the selection. * paste will paste at the pick point  ignoring the selection  unlike the other ways of invoking paste * mute/unmute track has shift+u as its default keystroke.  see extra > tracks sub-menu (and see interface preferences to enable the extra menu). the popup menu command will do that to the track you pick in  ignoring which tracks are in selected state. *  export audio...  rather than  export project  because that agrees with the toolbar menu and the convention that commands bringing up modal dialogs need ellipsis in the name. * the clip context menu appears only when clicking on the wave (or spectrogram) areas  not on the drag bar or in voids between clips. * the accelerator keys appear not necessarily as the defaults in the pictures  of course  but are consistent with whatever keystrokes have been chosen in preferences. * context menu items will be grayed out and disabled in the same cases that the corresponding toolbar menus would be.  for instance  adding new tracks is not permitted during recording or playback.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1504,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #998resolves: #1518working context menus for background area and audio clipsnotes about some details where the issue description differs from this implementation or is underspecified:* all important words are capitalized consistent with other menu items (for instance "split clip")* split clip will split only the picked clip (whether or not the track is selected) at the pick point  this is unlike the toolbar menu which splits all selected tracks at the selection* paste will paste at the pick point ignoring the selection unlike the other ways of invoking paste* mute/unmute track has shift+u as its default keystroke  see extra > tracks sub-menu (and see interface preferences to enable the extra menu) the popup menu command will do that to the track you pick in ignoring which tracks are in selected state* "export audio" rather than "export project" because that agrees with the toolbar menu and the convention that commands bringing up modal dialogs need ellipsis in the name* the clip context menu appears only when clicking on the wave (or spectrogram) areas not on the drag bar or in voids between clips* the accelerator keys appear not necessarily as the defaults in the pictures of course but are consistent with whatever keystrokes have been chosen in preferences* context menu items will be grayed out and disabled in the same cases that the corresponding toolbar menus would be  for instance adding new tracks is not permitted during recording or playback- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #998 resolves: #1518  working context menus for background area and audio clips.  notes about some details where the issue description differs from this implementation or is underspecified:  * all important words are capitalized  consistent with other menu items (for instance  split clip ) * split clip will split only the picked clip (whether or not the track is selected)  at the pick point.  this is unlike the toolbar menu  which splits all selected tracks  at the selection. * paste will paste at the pick point  ignoring the selection  unlike the other ways of invoking paste * mute/unmute track has shift+u as its default keystroke.  see extra > tracks sub-menu (and see interface preferences to enable the extra menu). the popup menu command will do that to the track you pick in  ignoring which tracks are in selected state. *  export audio...  rather than  export project  because that agrees with the toolbar menu and the convention that commands bringing up modal dialogs need ellipsis in the name. * the clip context menu appears only when clicking on the wave (or spectrogram) areas  not on the drag bar or in voids between clips. * the accelerator keys appear not necessarily as the defaults in the pictures  of course  but are consistent with whatever keystrokes have been chosen in preferences. * context menu items will be grayed out and disabled in the same cases that the corresponding toolbar menus would be.  for instance  adding new tracks is not permitted during recording or playback.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1504,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: #998resolves: #1518working context menus for background area and audio clipsnotes about some details where the issue description differs from this implementation or is underspecified:* all important words are capitalized consistent with other menu items (for instance "split clip")* split clip will split only the picked clip (whether or not the track is selected) at the pick point  this is unlike the toolbar menu which splits all selected tracks at the selection* paste will paste at the pick point ignoring the selection unlike the other ways of invoking paste* mute/unmute track has shift+u as its default keystroke  see extra > tracks sub-menu (and see interface preferences to enable the extra menu) the popup menu command will do that to the track you pick in ignoring which tracks are in selected state* "export audio" rather than "export project" because that agrees with the toolbar menu and the convention that commands bringing up modal dialogs need ellipsis in the name* the clip context menu appears only when clicking on the wave (or spectrogram) areas not on the drag bar or in voids between clips* the accelerator keys appear not necessarily as the defaults in the pictures of course but are consistent with whatever keystrokes have been chosen in preferences* context menu items will be grayed out and disabled in the same cases that the corresponding toolbar menus would be  for instance adding new tracks is not permitted during recording or playback- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #998 resolves: #1518  working context menus for background area and audio clips.  notes about some details where the issue description differs from this implementation or is underspecified:  * all important words are capitalized  consistent with other menu items (for instance  split clip ) * split clip will split only the picked clip (whether or not the track is selected)  at the pick point.  this is unlike the toolbar menu  which splits all selected tracks  at the selection. * paste will paste at the pick point  ignoring the selection  unlike the other ways of invoking paste * mute/unmute track has shift+u as its default keystroke.  see extra > tracks sub-menu (and see interface preferences to enable the extra menu). the popup menu command will do that to the track you pick in  ignoring which tracks are in selected state. *  export audio...  rather than  export project  because that agrees with the toolbar menu and the convention that commands bringing up modal dialogs need ellipsis in the name. * the clip context menu appears only when clicking on the wave (or spectrogram) areas  not on the drag bar or in voids between clips. * the accelerator keys appear not necessarily as the defaults in the pictures  of course  but are consistent with whatever keystrokes have been chosen in preferences. * context menu items will be grayed out and disabled in the same cases that the corresponding toolbar menus would be.  for instance  adding new tracks is not permitted during recording or playback.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1504,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #998resolves: #1518working context menus for background area and audio clipsnotes about some details where the issue description differs from this implementation or is underspecified:* all important words are capitalized consistent with other menu items (for instance "split clip")* split clip will split only the picked clip (whether or not the track is selected) at the pick point  this is unlike the toolbar menu which splits all selected tracks at the selection* paste will paste at the pick point ignoring the selection unlike the other ways of invoking paste* mute/unmute track has shift+u as its default keystroke  see extra > tracks sub-menu (and see interface preferences to enable the extra menu) the popup menu command will do that to the track you pick in ignoring which tracks are in selected state* "export audio" rather than "export project" because that agrees with the toolbar menu and the convention that commands bringing up modal dialogs need ellipsis in the name* the clip context menu appears only when clicking on the wave (or spectrogram) areas not on the drag bar or in voids between clips* the accelerator keys appear not necessarily as the defaults in the pictures of course but are consistent with whatever keystrokes have been chosen in preferences* context menu items will be grayed out and disabled in the same cases that the corresponding toolbar menus would be  for instance adding new tracks is not permitted during recording or playback- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #998 resolves: #1518  working context menus for background area and audio clips.  notes about some details where the issue description differs from this implementation or is underspecified:  * all important words are capitalized  consistent with other menu items (for instance  split clip ) * split clip will split only the picked clip (whether or not the track is selected)  at the pick point.  this is unlike the toolbar menu  which splits all selected tracks  at the selection. * paste will paste at the pick point  ignoring the selection  unlike the other ways of invoking paste * mute/unmute track has shift+u as its default keystroke.  see extra > tracks sub-menu (and see interface preferences to enable the extra menu). the popup menu command will do that to the track you pick in  ignoring which tracks are in selected state. *  export audio...  rather than  export project  because that agrees with the toolbar menu and the convention that commands bringing up modal dialogs need ellipsis in the name. * the clip context menu appears only when clicking on the wave (or spectrogram) areas  not on the drag bar or in voids between clips. * the accelerator keys appear not necessarily as the defaults in the pictures  of course  but are consistent with whatever keystrokes have been chosen in preferences. * context menu items will be grayed out and disabled in the same cases that the corresponding toolbar menus would be.  for instance  adding new tracks is not permitted during recording or playback.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1527,1,0,0,0,1,1,0,1,0,1,1,1,1,0,1,0,1,1,0,resolves: #1144extract a library of utilities for querying the available audio devices finding their preferred sample rates holding certain related global preferences variables and also the interface class meter for transferring buffers of samples for purposes of display updatesthis does not contain the complete playback and recording audio engine  when wavetrack is a library it will need only this part to set default sample rates of wave tracks appropriatelydoing this separation now is also desirable as a prelude to other refactorings of the audio engine- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1144  extract a library of utilities for querying the available audio devices  finding their preferred sample rates  holding certain related global preferences variables  and also the interface class meter for transferring buffers of samples for purposes of display updates.  this does not contain the complete playback and recording audio engine.  when wavetrack is a library  it will need only this part to set default sample rates of wave tracks appropriately.  doing this separation now is also desirable as a prelude to other refactorings of the audio engine.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1527,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1144extract a library of utilities for querying the available audio devices finding their preferred sample rates holding certain related global preferences variables and also the interface class meter for transferring buffers of samples for purposes of display updatesthis does not contain the complete playback and recording audio engine  when wavetrack is a library it will need only this part to set default sample rates of wave tracks appropriatelydoing this separation now is also desirable as a prelude to other refactorings of the audio engine- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1144  extract a library of utilities for querying the available audio devices  finding their preferred sample rates  holding certain related global preferences variables  and also the interface class meter for transferring buffers of samples for purposes of display updates.  this does not contain the complete playback and recording audio engine.  when wavetrack is a library  it will need only this part to set default sample rates of wave tracks appropriately.  doing this separation now is also desirable as a prelude to other refactorings of the audio engine.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1533,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,0,1,0,resolves: #1182 #1324<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1182 #1324  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1533,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1182 #1324<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1182 #1324  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1586,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,resolves: #1153 platform neutral library defining the audacityproject object and associated projectstatus (which just holds some strings)there is also some fixing of some possible null pointer dereferences of the global active project -- which might be null on macos<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1153   platform neutral library defining the audacityproject object and associated projectstatus (which just holds some strings)  there is also some fixing of some possible null pointer dereferences of the global active project -- which might be null on macos.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1586,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1153 platform neutral library defining the audacityproject object and associated projectstatus (which just holds some strings)there is also some fixing of some possible null pointer dereferences of the global active project -- which might be null on macos<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1153   platform neutral library defining the audacityproject object and associated projectstatus (which just holds some strings)  there is also some fixing of some possible null pointer dereferences of the global active project -- which might be null on macos.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1587,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,resolves: #1152 depends on pr #1586extract a toolkit-neutral library for mapping of screen x coordinates to times and y coordinates to amplitudes or frequencies<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1152   depends on pr #1586  extract a toolkit-neutral library for mapping of screen x coordinates to times  and y coordinates to amplitudes or frequencies  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1587,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,resolves: #1152 depends on pr #1586extract a toolkit-neutral library for mapping of screen x coordinates to times and y coordinates to amplitudes or frequencies<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1152   depends on pr #1586  extract a toolkit-neutral library for mapping of screen x coordinates to times  and y coordinates to amplitudes or frequencies  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1588,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,resolves: #1143 depends on: #1587a library holding the global preferences for project rate and sample format and defining the per-project holding sample rate  it depend on lib-audio-devices to decide the default ratewhen wave tracks are separated into a library that will depend on this for construction of tracks but will avoid dependency on all of audioio<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1143  depends on: #1587  a library holding the global preferences for project rate and sample format  and defining the per-project holding sample rate.  it depend on lib-audio-devices to decide the default rate.  when wave tracks are separated into a library  that will depend on this for construction of tracks  but will avoid dependency on all of audioio.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1588,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1143 depends on: #1587a library holding the global preferences for project rate and sample format and defining the per-project holding sample rate  it depend on lib-audio-devices to decide the default ratewhen wave tracks are separated into a library that will depend on this for construction of tracks but will avoid dependency on all of audioio<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1143  depends on: #1587  a library holding the global preferences for project rate and sample format  and defining the per-project holding sample rate.  it depend on lib-audio-devices to decide the default rate.  when wave tracks are separated into a library  that will depend on this for construction of tracks  but will avoid dependency on all of audioio.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1594,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,0,1,0,resolves: #1580some refactoring tasks in audioio before disentangling the midi playback parts<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1580  some refactoring tasks in audioio  before disentangling the midi playback parts  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1594,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1580some refactoring tasks in audioio before disentangling the midi playback parts<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1580  some refactoring tasks in audioio  before disentangling the midi playback parts  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1602,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0, the dialog wont actually reappear but the same value will be returned tothe programthese message boxes are special native ones that dont use the wxwidgets eventframework  therefore the system for journalling of mouse button presses doesnot work with them  treat them speciallya generalized facility added to namespace journal in case this pattern needs tobe repeated for other actionsresolves: #1590*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... the dialog won t actually reappear but the same value will be returned to the program.  these message boxes are special native ones that don t use the wxwidgets event framework.  therefore the system for journalling of mouse button presses does not work with them.  treat them specially.  a generalized facility added to namespace journal in case this pattern needs to be repeated for other actions.  resolves: #1590 *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1602,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0, the dialog wont actually reappear but the same value will be returned tothe programthese message boxes are special native ones that dont use the wxwidgets eventframework  therefore the system for journalling of mouse button presses doesnot work with them  treat them speciallya generalized facility added to namespace journal in case this pattern needs tobe repeated for other actionsresolves: #1590*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  ... the dialog won t actually reappear but the same value will be returned to the program.  these message boxes are special native ones that don t use the wxwidgets event framework.  therefore the system for journalling of mouse button presses does not work with them.  treat them specially.  a generalized facility added to namespace journal in case this pattern needs to be repeated for other actions.  resolves: #1590 *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1614,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1258 *(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1258   *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1614,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,resolves: #1258 *(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] i made sure the code compiles on my machine- [x] i made sure there are no unnecessary changes in the code- [x] i made sure the title of the pr reflects the core meaning of the issue you are solving- [x] i made sure the commit message(s) contain a description and answer the question "why do those changes fix that particular issue?" or "why are those changes really necessary as improvements?"  resolves: #1258   *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] i made sure the code compiles on my machine - [x] i made sure there are no unnecessary changes in the code - [x] i made sure the title of the pr reflects the core meaning of the issue you are solving - [x] i made sure the commit message(s) contain a description and answer the question  why do those changes fix that particular issue?  or  why are those changes really necessary as improvements? 
1616,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,resolves: #1444 #1544 *(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1444 #1544   *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1616,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1444 #1544 *(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1444 #1544   *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1616,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,resolves: #1444 #1544 *(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1444 #1544   *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1616,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1444 #1544 *(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1444 #1544   *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1623,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,resolves #398resolves #1034 resolves #1170 resolves #1201resolves #1331 resolves #1433resolves #1466supporting multiple ffmpeg versions is tricky yet important for audacity as we could not distribute the correct ffmpeg version with the program itself this leads to a problem where updating ffmpeg can be problematic this is especially true as a new major version is soon to be releasedthe main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration these structures can change between major version bumps while the api is mostly stable this is unlike other c libraries where structure fields are accessed using the library-provided functionsthis pr:* allows generating a single header file for a specific ffmpeg version surprisingly it had required a large subset of c preprocessors to be implemented* provides wrappers around used ffmpeg structures the wrappers are used as raii objects where applicable the wrappers are implemented in `inl` files which are later included in c++ files after the correct ffmpeg header ie currently each wrapper is compiled twice wrappers rarely have ffmpeg version-dependent code * fixes few incompatibilities between ffmpeg versions* sample format conversions from ffmpeg are templatazied all formats are now supported the reverse process was not modifiedi have tried to keep changes in importffmpeg and exportffmpeg small and trivial in the future we may want to reimplement them as wellcurrently avformat-55 and avformat-58 are supported i dont see much reason to support 56 and 57 when 59 will be released (and current dev branches are 59) it will be added to the list this should be a trivial taskbuilds were tested against:* 222 431 and 44 surprisingly 44 support was different (and the most difficult!) from 431 while the major version stayed the same ffmpeg 44 was downloaded from the "official page"* the system library on manjaro (422)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [ ] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves #398 resolves #1034  resolves #1170  resolves #1201 resolves #1331  resolves #1433 resolves #1466  supporting multiple ffmpeg versions is tricky  yet important for audacity  as we could not distribute the correct ffmpeg version with the program itself. this leads to a problem  where updating ffmpeg can be problematic. this is especially true  as a new major version is soon to be released.  the main problem with ffmpeg is that it exposes several structures and expects library users to fill them up during the configuration. these structures can change between major version bumps  while the api is mostly stable. this is unlike other c libraries  where structure fields are accessed using the library-provided functions.  this pr:  * allows generating a single header file for a specific ffmpeg version. surprisingly it had required a large subset of c preprocessors to be implemented. * provides wrappers around used ffmpeg structures. the wrappers are used as raii objects where applicable. the wrappers are implemented in  inl  files which are later included in c++ files after the correct ffmpeg header. i.e. currently each wrapper is compiled twice. wrappers rarely have ffmpeg version-dependent code.  * fixes few incompatibilities between ffmpeg versions. * sample format conversions from ffmpeg are templatazied  all formats are now supported. the reverse process was not modified  i have tried to keep changes in importffmpeg and exportffmpeg small and trivial. in the future  we may want to reimplement them as well.  currently  avformat-55 and avformat-58 are supported. i don t see much reason to support 56 and 57. when 59 will be released (and current dev branches are 59) it will be added to the list  this should be a trivial task.  builds were tested against:  * 2.2.2  4.3.1  and 4.4. surprisingly  4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. ffmpeg 4.4 was downloaded from the  official page . * the system library on manjaro (4.2.2)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [ ] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1630,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,changing "editing a clip can move other clips" option default value to falseresolves: #1333changing "editing a clip can move other clips" option default value to false<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  changing  editing a clip can move other clips  option default value to false  resolves: #1333  changing  editing a clip can move other clips  option default value to false  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1630,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,changing "editing a clip can move other clips" option default value to falseresolves: #1333changing "editing a clip can move other clips" option default value to false<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  changing  editing a clip can move other clips  option default value to false  resolves: #1333  changing  editing a clip can move other clips  option default value to false  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1637,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,resolves: #1581next refactoring steps for audioioall of the logic specific to midi playback is removed from audioiocpp and invoked instead through an abstract base class audioioext  a new separate file midiplaycpp registers its extension policy with audioiothese steps shrink the big file audioiocpp from 4797 to 3596 lines and are also preparations for putting note track into its own optional extension modulethe unnecessary separate thread for midi playback is removed for simplicity and some callbacks happen directly in the portaudio thread  that means some memory allocations may happen on that thread when midi plays!  (see preparemidiiterator()) but future refactorings will correct thatthe dependency of lib-audio-devices on portmidi is severeda few other changes remove some dependencies on notetrack and use settings objects from prefscpp to eliminate some duplicated literals and direct use of gprefs in midiplaycpp<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1581  next refactoring steps for audioio.  all of the logic specific to midi playback is removed from audioio.cpp  and invoked instead through an abstract base class audioioext.  a new  separate file midiplay.cpp registers its extension policy with audioio.  these steps shrink the big file audioio.cpp from 4797 to 3596 lines  and are also preparations for putting note track into its own optional extension module.  the unnecessary separate thread for midi playback is removed for simplicity  and some callbacks happen directly in the portaudio thread.  that means some memory allocations may happen on that thread  when midi plays!  (see preparemidiiterator().) but future refactorings will correct that.  the dependency of lib-audio-devices on portmidi is severed.  a few other changes remove some dependencies on notetrack  and use settings objects from prefs.cpp to eliminate some duplicated literals and direct use of gprefs in midiplay.cpp.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1637,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,resolves: #1581next refactoring steps for audioioall of the logic specific to midi playback is removed from audioiocpp and invoked instead through an abstract base class audioioext  a new separate file midiplaycpp registers its extension policy with audioiothese steps shrink the big file audioiocpp from 4797 to 3596 lines and are also preparations for putting note track into its own optional extension modulethe unnecessary separate thread for midi playback is removed for simplicity and some callbacks happen directly in the portaudio thread  that means some memory allocations may happen on that thread when midi plays!  (see preparemidiiterator()) but future refactorings will correct thatthe dependency of lib-audio-devices on portmidi is severeda few other changes remove some dependencies on notetrack and use settings objects from prefscpp to eliminate some duplicated literals and direct use of gprefs in midiplaycpp<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1581  next refactoring steps for audioio.  all of the logic specific to midi playback is removed from audioio.cpp  and invoked instead through an abstract base class audioioext.  a new  separate file midiplay.cpp registers its extension policy with audioio.  these steps shrink the big file audioio.cpp from 4797 to 3596 lines  and are also preparations for putting note track into its own optional extension module.  the unnecessary separate thread for midi playback is removed for simplicity  and some callbacks happen directly in the portaudio thread.  that means some memory allocations may happen on that thread  when midi plays!  (see preparemidiiterator().) but future refactorings will correct that.  the dependency of lib-audio-devices on portmidi is severed.  a few other changes remove some dependencies on notetrack  and use settings objects from prefs.cpp to eliminate some duplicated literals and direct use of gprefs in midiplay.cpp.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1638,0,0,0,1,0,0,0,1,0,1,1,1,1,0,1,1,0,1,0,resolves: #1582the play head position is drawn on screen by the main thread which is told the track time corresponding to the last played samples by the portaudio threadthat thread in turn sometimes got this value from information in a queue from the third worker thread (which reads from the tracks in larger batches of samples) as when scrubbing but other times did its own calculations taking into account whether pay is straight or looping (assuming fixed loop bounds!) and whether it uses a time track as wellthis pull request changes that so that the portaudio thread never calculates but always takes the value from the queuethis is a preparation so that the producer of that queue can vary the correspondence of samples in transit with points on the time ruler in yet other ways<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1582  the play head position is drawn on screen by the main thread  which is told the track time corresponding to the last played samples by the portaudio thread.  that thread  in turn  sometimes got this value from information in a queue from the third  worker thread (which reads from the tracks in larger batches of samples)  as when scrubbing  but other times  did its own calculations taking into account whether pay is straight or looping (assuming fixed loop bounds!)  and whether it uses a time track as well.  this pull request changes that  so that the portaudio thread never calculates  but always takes the value from the queue.  this is a preparation so that the producer of that queue can vary the correspondence of samples in transit with points on the time ruler in yet other ways.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1638,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1582the play head position is drawn on screen by the main thread which is told the track time corresponding to the last played samples by the portaudio threadthat thread in turn sometimes got this value from information in a queue from the third worker thread (which reads from the tracks in larger batches of samples) as when scrubbing but other times did its own calculations taking into account whether pay is straight or looping (assuming fixed loop bounds!) and whether it uses a time track as wellthis pull request changes that so that the portaudio thread never calculates but always takes the value from the queuethis is a preparation so that the producer of that queue can vary the correspondence of samples in transit with points on the time ruler in yet other ways<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1582  the play head position is drawn on screen by the main thread  which is told the track time corresponding to the last played samples by the portaudio thread.  that thread  in turn  sometimes got this value from information in a queue from the third  worker thread (which reads from the tracks in larger batches of samples)  as when scrubbing  but other times  did its own calculations taking into account whether pay is straight or looping (assuming fixed loop bounds!)  and whether it uses a time track as well.  this pull request changes that  so that the portaudio thread never calculates  but always takes the value from the queue.  this is a preparation so that the producer of that queue can vary the correspondence of samples in transit with points on the time ruler in yet other ways.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1639,0,0,0,0,1,0,0,1,0,0,1,1,1,1,0,1,1,0,0, and some other caseswherever audacity simulates button press events set the event object to be thebutton so that windoweventserialization() in journaleventscpp can determinea pathname for the window associated with the eventthe change in keyboardcapture is enough for the default buttons of dialogs theother changes are necessary but not sufficient for fixing journalling of some ofaudacitys custom widgets on any operating systemresolves: #1631*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  ... and some other cases.  wherever audacity simulates button press events  set the event object to be the button  so that windoweventserialization() in journalevents.cpp can determine a pathname for the window associated with the event.  the change in keyboardcapture is enough for the default buttons of dialogs. the other changes are necessary but not sufficient for fixing journalling of some of audacity s custom widgets  on any operating system.  resolves: #1631  *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1639,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0, and some other caseswherever audacity simulates button press events set the event object to be thebutton so that windoweventserialization() in journaleventscpp can determinea pathname for the window associated with the eventthe change in keyboardcapture is enough for the default buttons of dialogs theother changes are necessary but not sufficient for fixing journalling of some ofaudacitys custom widgets on any operating systemresolves: #1631*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  ... and some other cases.  wherever audacity simulates button press events  set the event object to be the button  so that windoweventserialization() in journalevents.cpp can determine a pathname for the window associated with the event.  the change in keyboardcapture is enough for the default buttons of dialogs. the other changes are necessary but not sufficient for fixing journalling of some of audacity s custom widgets  on any operating system.  resolves: #1631  *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1664,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,1,1,1,resolves: #1658 depends on: #1638 more refactoring of audioiocpp and playbackschedulecpp so that there is less of the logic for special playback cases like looping and scrubbing in those files<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1658   depends on: #1638   more refactoring of audioio.cpp and playbackschedule.cpp  so that there is less of the logic for special playback cases like looping and scrubbing in those files.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1664,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1658 depends on: #1638 more refactoring of audioiocpp and playbackschedulecpp so that there is less of the logic for special playback cases like looping and scrubbing in those files<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1658   depends on: #1638   more refactoring of audioio.cpp and playbackschedule.cpp  so that there is less of the logic for special playback cases like looping and scrubbing in those files.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1675,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,resolves: #13821 ensure install_prefix is set correctly    - the cmake variable install_prefix is now correctly passed into the program2 make audacity portable    - audacity now checks for resources at a location relative to the executable instead of a fixed location each time  resolves: #1382   1. ensure install_prefix is set correctly.     - the cmake variable install_prefix is now correctly passed into the program. 2. make audacity portable.     - audacity now checks for resources at a location relative to the executable instead of a fixed location each time.
1675,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #13821 ensure install_prefix is set correctly    - the cmake variable install_prefix is now correctly passed into the program2 make audacity portable    - audacity now checks for resources at a location relative to the executable instead of a fixed location each time  resolves: #1382   1. ensure install_prefix is set correctly.     - the cmake variable install_prefix is now correctly passed into the program. 2. make audacity portable.     - audacity now checks for resources at a location relative to the executable instead of a fixed location each time.
1677,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,resolves: #1644 the set clip macro command now can change a clip name toothe command is also accessible in menus under extra > scriptables i (you must first enable the extra menus in the interface preferences)@lwinterberg see this manual page needing update https://manualaudacityteamorg/man/extra_menu_scriptables_ihtml#set_clip<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1644   the set clip macro command now can change a clip name too  the command is also accessible in menus under extra > scriptables i (you must first enable the extra menus in the interface preferences)  @lwinterberg see this manual page needing update https://manual.audacityteam.org/man/extra_menu_scriptables_i.html#set_clip  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1677,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,resolves: #1644 the set clip macro command now can change a clip name toothe command is also accessible in menus under extra > scriptables i (you must first enable the extra menus in the interface preferences)@lwinterberg see this manual page needing update https://manualaudacityteamorg/man/extra_menu_scriptables_ihtml#set_clip<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1644   the set clip macro command now can change a clip name too  the command is also accessible in menus under extra > scriptables i (you must first enable the extra menus in the interface preferences)  @lwinterberg see this manual page needing update https://manual.audacityteam.org/man/extra_menu_scriptables_i.html#set_clip  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1678,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1660this makes #998 and #1614 more completeadd an item to the wave clip context menu for renaming<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1660  this makes #998 and #1614 more complete  add an item to the wave clip context menu for renaming.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1678,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1660this makes #998 and #1614 more completeadd an item to the wave clip context menu for renaming<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1660  this makes #998 and #1614 more complete  add an item to the wave clip context menu for renaming.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1678,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1660this makes #998 and #1614 more completeadd an item to the wave clip context menu for renaming<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1660  this makes #998 and #1614 more complete  add an item to the wave clip context menu for renaming.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1678,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1660this makes #998 and #1614 more completeadd an item to the wave clip context menu for renaming<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1660  this makes #998 and #1614 more complete  add an item to the wave clip context menu for renaming.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1679,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,resolves: #1400resolves: #1401work in progress<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1400 resolves: #1401  work in progress  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1679,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,resolves: #1400resolves: #1401work in progress<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1400 resolves: #1401  work in progress  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1679,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,resolves: #1400resolves: #1401work in progress<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1400 resolves: #1401  work in progress  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1679,0,0,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,0,resolves: #1400resolves: #1401work in progress<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1400 resolves: #1401  work in progress  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1711,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,resolves: #1613 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1613   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1711,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,resolves: #1613 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1613   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1717,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1427- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1427  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1717,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1427- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1427  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1736,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1689also fixes clipping usage- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1689  also fixes clipping usage  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1736,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,resolves: #1689also fixes clipping usage- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1689  also fixes clipping usage  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1756,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,resolves: #1755 add a new toggle button to the control toolbar<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1755   add a new toggle button to the control toolbar.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1756,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1755 add a new toggle button to the control toolbar<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1755   add a new toggle button to the control toolbar.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1758,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,resolves: #1751 on macos - the dynamic library loader behaves differentlyall dyld_* environment variables are read only during the application startup this pr"emulates" the behavior of other os by manually trying to load every library from every directory listed<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1751   on macos - the dynamic library loader behaves differently. all dyld_* environment variables are read only during the application startup. this pr emulates  the behavior of other os by manually trying to load every library from every directory listed.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1758,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1751 on macos - the dynamic library loader behaves differentlyall dyld_* environment variables are read only during the application startup this pr"emulates" the behavior of other os by manually trying to load every library from every directory listed<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1751   on macos - the dynamic library loader behaves differently. all dyld_* environment variables are read only during the application startup. this pr emulates  the behavior of other os by manually trying to load every library from every directory listed.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1766,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1702resolves: #1703resolves: #1568resolves: #1566reimplement the "cut preview" feature (the "c" shortcut key also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy  it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1702 resolves: #1703 resolves: #1568 resolves: #1566  reimplement the  cut preview  feature (the  c  shortcut key  also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy.  it means cut preview will also interact nicely with the time track and respond like other playback to changes of mute  solo  gain  and pan controls.  no more temporary tracks in the implementation.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1766,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1702resolves: #1703resolves: #1568resolves: #1566reimplement the "cut preview" feature (the "c" shortcut key also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy  it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1702 resolves: #1703 resolves: #1568 resolves: #1566  reimplement the  cut preview  feature (the  c  shortcut key  also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy.  it means cut preview will also interact nicely with the time track and respond like other playback to changes of mute  solo  gain  and pan controls.  no more temporary tracks in the implementation.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1766,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1702resolves: #1703resolves: #1568resolves: #1566reimplement the "cut preview" feature (the "c" shortcut key also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy  it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1702 resolves: #1703 resolves: #1568 resolves: #1566  reimplement the  cut preview  feature (the  c  shortcut key  also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy.  it means cut preview will also interact nicely with the time track and respond like other playback to changes of mute  solo  gain  and pan controls.  no more temporary tracks in the implementation.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1766,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1702resolves: #1703resolves: #1568resolves: #1566reimplement the "cut preview" feature (the "c" shortcut key also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy  it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1702 resolves: #1703 resolves: #1568 resolves: #1566  reimplement the  cut preview  feature (the  c  shortcut key  also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy.  it means cut preview will also interact nicely with the time track and respond like other playback to changes of mute  solo  gain  and pan controls.  no more temporary tracks in the implementation.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1766,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1702resolves: #1703resolves: #1568resolves: #1566reimplement the "cut preview" feature (the "c" shortcut key also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy  it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1702 resolves: #1703 resolves: #1568 resolves: #1566  reimplement the  cut preview  feature (the  c  shortcut key  also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy.  it means cut preview will also interact nicely with the time track and respond like other playback to changes of mute  solo  gain  and pan controls.  no more temporary tracks in the implementation.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1766,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1702resolves: #1703resolves: #1568resolves: #1566reimplement the "cut preview" feature (the "c" shortcut key also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy  it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1702 resolves: #1703 resolves: #1568 resolves: #1566  reimplement the  cut preview  feature (the  c  shortcut key  also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy.  it means cut preview will also interact nicely with the time track and respond like other playback to changes of mute  solo  gain  and pan controls.  no more temporary tracks in the implementation.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1766,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1702resolves: #1703resolves: #1568resolves: #1566reimplement the "cut preview" feature (the "c" shortcut key also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy  it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1702 resolves: #1703 resolves: #1568 resolves: #1566  reimplement the  cut preview  feature (the  c  shortcut key  also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy.  it means cut preview will also interact nicely with the time track and respond like other playback to changes of mute  solo  gain  and pan controls.  no more temporary tracks in the implementation.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1766,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1702resolves: #1703resolves: #1568resolves: #1566reimplement the "cut preview" feature (the "c" shortcut key also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy  it means cut preview will also interact nicely with the time track and respond like otherplayback to changes of mute solo gain and pan controlsno more temporary tracks in the implementation<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1702 resolves: #1703 resolves: #1568 resolves: #1566  reimplement the  cut preview  feature (the  c  shortcut key  also ctrl+click on play button) less special-casely by using another subclass of playbackpolicy.  it means cut preview will also interact nicely with the time track and respond like other playback to changes of mute  solo  gain  and pan controls.  no more temporary tracks in the implementation.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,1,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1779,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1411 resolves: #1772resolves: #1773resolves: #1775resolves: #1776resolves: #1777resolves: #1778most of the recently requested changes to ux for the spectral brush dialog<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1411  resolves: #1772 resolves: #1773 resolves: #1775 resolves: #1776 resolves: #1777 resolves: #1778  most of the recently requested changes to ux for the spectral brush dialog  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1793,0,0,0,1,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves: #1651 also fixes wrong name assigned to a clip when recording to a new track- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1651   also fixes wrong name assigned to a clip when recording to a new track.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1793,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1651 also fixes wrong name assigned to a clip when recording to a new track- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1651   also fixes wrong name assigned to a clip when recording to a new track.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1799,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,this change ensures that page size will be 64k even if system sqlite3 was used (mostly relevant for linux)resolves: #1459<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  this change ensures that page size will be 64k even if system sqlite3 was used (mostly relevant for linux)  resolves: #1459  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1799,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,this change ensures that page size will be 64k even if system sqlite3 was used (mostly relevant for linux)resolves: #1459<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  this change ensures that page size will be 64k even if system sqlite3 was used (mostly relevant for linux)  resolves: #1459  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1802,0,0,0,1,0,0,0,0,1,1,1,1,1,0,0,0,0,1,0,resolves: #1460this pr introduces a different approach to estimating the sampleblock size on disk it does not account for the sqlite3 internal structures size so well but the difference is relatively negligible we use this estimation to decide if we need to compact the database on disk as we do not allow database vacuuming (for performance reasons?) the performance of the heuristic can be further improved as `used_blocks`/`total_blocks` should work just fine however this would require more changes to the code`projectfileio::gettotalusage()` and `projectfileio::getcurrentusage()` are also used in now disabled compaction dialog however using `gettotalusage()` was probably not the idea anyway (because it never accounted for the project and autosave tables) `getcurrentusage()` still gives a very good estimate of how much disk space is used<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1460  this pr introduces a different approach to estimating the sampleblock size on disk. it does not account for the sqlite3 internal structures size so well  but the difference is relatively negligible.   we use this estimation to decide if we need to compact the database on disk  as we do not allow database vacuuming (for performance reasons?). the performance of the heuristic can be further improved  as  used_blocks / total_blocks  should work just fine. however  this would require more changes to the code.   projectfileio::gettotalusage()  and  projectfileio::getcurrentusage()  are also used in now disabled compaction dialog. however using  gettotalusage()  was probably not the idea anyway (because it never accounted for the project and autosave tables).  getcurrentusage()  still gives a very good estimate of how much disk space is used.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1802,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1460this pr introduces a different approach to estimating the sampleblock size on disk it does not account for the sqlite3 internal structures size so well but the difference is relatively negligible we use this estimation to decide if we need to compact the database on disk as we do not allow database vacuuming (for performance reasons?) the performance of the heuristic can be further improved as `used_blocks`/`total_blocks` should work just fine however this would require more changes to the code`projectfileio::gettotalusage()` and `projectfileio::getcurrentusage()` are also used in now disabled compaction dialog however using `gettotalusage()` was probably not the idea anyway (because it never accounted for the project and autosave tables) `getcurrentusage()` still gives a very good estimate of how much disk space is used<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1460  this pr introduces a different approach to estimating the sampleblock size on disk. it does not account for the sqlite3 internal structures size so well  but the difference is relatively negligible.   we use this estimation to decide if we need to compact the database on disk  as we do not allow database vacuuming (for performance reasons?). the performance of the heuristic can be further improved  as  used_blocks / total_blocks  should work just fine. however  this would require more changes to the code.   projectfileio::gettotalusage()  and  projectfileio::getcurrentusage()  are also used in now disabled compaction dialog. however using  gettotalusage()  was probably not the idea anyway (because it never accounted for the project and autosave tables).  getcurrentusage()  still gives a very good estimate of how much disk space is used.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1808,0,0,0,1,0,0,0,1,0,1,1,1,1,0,1,1,0,1,1,resolves: #1704 start looping play then adjust the bounds of the selection -- the looping play will respond to those changes!<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1704   start looping play  then adjust the bounds of the selection -- the looping play will respond to those changes!  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1808,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1704 start looping play then adjust the bounds of the selection -- the looping play will respond to those changes!<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1704   start looping play  then adjust the bounds of the selection -- the looping play will respond to those changes!  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1816,1,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,resolves: #1157 extract a library for the theme system<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1157   extract a library for the theme system  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1816,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1157 extract a library for the theme system<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1157   extract a library for the theme system  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1832,0,0,0,1,1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,resolves: #1698- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1698  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1832,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1698- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1698  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1836,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,1,0,resolves: #1825change default settings for scale type to mel top of scale to 20000 hz window size to 1024 and zero padding to 2also cleaning up a lot of preference usage in spectrogram settings to avoid repetition of literals for paths and defaults<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1825  change default settings for scale type to mel  top of scale to 20000 hz  window size to 1024  and zero padding to 2.  also cleaning up a lot of preference usage in spectrogram settings to avoid repetition of literals for paths and defaults.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1836,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1825change default settings for scale type to mel top of scale to 20000 hz window size to 1024 and zero padding to 2also cleaning up a lot of preference usage in spectrogram settings to avoid repetition of literals for paths and defaults<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1825  change default settings for scale type to mel  top of scale to 20000 hz  window size to 1024  and zero padding to 2.  also cleaning up a lot of preference usage in spectrogram settings to avoid repetition of literals for paths and defaults.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1840,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1759 - [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1759   - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1840,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1759 - [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1759   - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1841,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,resolves: #1813the "whats new" section will be shown only if `show_whats_new_section` is passedthe update dialog is populated dynamically from the `latestxml` contents<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1813  the  what s new  section will be shown only if  show_whats_new_section  is passed.  the update dialog is populated dynamically from the  latest.xml  contents.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1841,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1813the "whats new" section will be shown only if `show_whats_new_section` is passedthe update dialog is populated dynamically from the `latestxml` contents<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1813  the  what s new  section will be shown only if  show_whats_new_section  is passed.  the update dialog is populated dynamically from the  latest.xml  contents.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1843,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,resolves: #1803 make the shortcut key for multi-tool again f6 as in 303 and "forever" before that- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1803   make the shortcut key for multi-tool again f6  as in 3.0.3 and  forever  before that.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1843,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1803 make the shortcut key for multi-tool again f6 as in 303 and "forever" before that- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1803   make the shortcut key for multi-tool again f6  as in 3.0.3 and  forever  before that.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1848,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,resolves: #1820resolves: #1847this would fix the failure of delete to work in right channel for the brush tool if that is enabled in the buildit also fixes the non-functionality of delete -- and all other keystrokes -- for editing the title of a clip in a right channel of a stereo track with nonaligned clips<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1820 resolves: #1847  this would fix the failure of delete to work in right channel for the brush tool  if that is enabled in the build.  it also fixes the non-functionality of delete -- and all other keystrokes -- for editing the title of a clip in a right channel of a stereo track with nonaligned clips.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1848,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1820resolves: #1847this would fix the failure of delete to work in right channel for the brush tool if that is enabled in the buildit also fixes the non-functionality of delete -- and all other keystrokes -- for editing the title of a clip in a right channel of a stereo track with nonaligned clips<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1820 resolves: #1847  this would fix the failure of delete to work in right channel for the brush tool  if that is enabled in the build.  it also fixes the non-functionality of delete -- and all other keystrokes -- for editing the title of a clip in a right channel of a stereo track with nonaligned clips.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1848,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,resolves: #1820resolves: #1847this would fix the failure of delete to work in right channel for the brush tool if that is enabled in the buildit also fixes the non-functionality of delete -- and all other keystrokes -- for editing the title of a clip in a right channel of a stereo track with nonaligned clips<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1820 resolves: #1847  this would fix the failure of delete to work in right channel for the brush tool  if that is enabled in the build.  it also fixes the non-functionality of delete -- and all other keystrokes -- for editing the title of a clip in a right channel of a stereo track with nonaligned clips.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1848,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: #1820resolves: #1847this would fix the failure of delete to work in right channel for the brush tool if that is enabled in the buildit also fixes the non-functionality of delete -- and all other keystrokes -- for editing the title of a clip in a right channel of a stereo track with nonaligned clips<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1820 resolves: #1847  this would fix the failure of delete to work in right channel for the brush tool  if that is enabled in the build.  it also fixes the non-functionality of delete -- and all other keystrokes -- for editing the title of a clip in a right channel of a stereo track with nonaligned clips.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1854,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: https://githubcom/audacity/audacity/issues/1838now that when a label track is the focus tab and shift+tab only "select" a label rather than opening it for editing in a custom text box which is not accessible for screen readers its useful for the name of the label to be readstraightforward fixalso added i18n-hint in transportmenuscpp where there is the same message for screen readers<!-- use "x" to fill the checkboxes below like [x] -->- [x ] i signed [cla](https://wwwaudacityteamorg/cla/)- [x ] the title of the pull request describes an issue it addresses- [x ] if changes are extensive then there is a sequence of easily reviewable commits- [x ] each commits message describes its purpose and effects- [ x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: https://github.com/audacity/audacity/issues/1838  now that when a label track is the focus tab and shift+tab only  select  a label  rather than opening it for editing in a custom text box which is not accessible for screen readers  it s useful for the name of the label to be read.  straightforward fix. also added i18n-hint in transportmenus.cpp where there is the same message for screen readers.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x ] i signed [cla](https://www.audacityteam.org/cla/) - [x ] the title of the pull request describes an issue it addresses - [x ] if changes are extensive  then there is a sequence of easily reviewable commits - [x ] each commit s message describes its purpose and effects - [ x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ x] each commit compiles and runs on my machine without known undesirable changes of behavior
1854,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,resolves: https://githubcom/audacity/audacity/issues/1838now that when a label track is the focus tab and shift+tab only "select" a label rather than opening it for editing in a custom text box which is not accessible for screen readers its useful for the name of the label to be readstraightforward fixalso added i18n-hint in transportmenuscpp where there is the same message for screen readers<!-- use "x" to fill the checkboxes below like [x] -->- [x ] i signed [cla](https://wwwaudacityteamorg/cla/)- [x ] the title of the pull request describes an issue it addresses- [x ] if changes are extensive then there is a sequence of easily reviewable commits- [x ] each commits message describes its purpose and effects- [ x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: https://github.com/audacity/audacity/issues/1838  now that when a label track is the focus tab and shift+tab only  select  a label  rather than opening it for editing in a custom text box which is not accessible for screen readers  it s useful for the name of the label to be read.  straightforward fix. also added i18n-hint in transportmenus.cpp where there is the same message for screen readers.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x ] i signed [cla](https://www.audacityteam.org/cla/) - [x ] the title of the pull request describes an issue it addresses - [x ] if changes are extensive  then there is a sequence of easily reviewable commits - [x ] each commit s message describes its purpose and effects - [ x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ x] each commit compiles and runs on my machine without known undesirable changes of behavior
1857,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: #1710this does not resolve all as suggested in the issue description but may offer satisfactory workaroundsfor label track behavior:the esc key already removes the insertion cursor if there is one  but now if there no insertion cursor but there is a label navigated to by tab then esc clears the navigation state  this allows esc and then return to change the selected state of the label trackfor wave track behavior:the return (or number pad enter) key behavior will remain hard-coded  it is also hard-coded for label track text editing about which there isnt a complaint"note that if a clip is not selected then pressing enter does nothing i assume thats just a bug in the implementation"  this is fixed  the return key will be intercepted for editing only in case the selection coincides with the extent of a clipwith this change you can change the selection such as with j or left arrow in default key bindings so it becomes a point  then return toggles the selected state of the wave trackyou may be unsatisfied that restoring the time selection to what it was before requires further tab key presses  maybe further improvement is possible and you @davidbailes  might suggest another commit to accomplish that<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1710  this does not resolve all as suggested in the issue description  but may offer satisfactory workarounds.  for label track behavior:  the esc key already removes the insertion cursor if there is one.  but now  if there no insertion cursor but there is a label navigated to by tab  then esc clears the navigation state.  this allows esc and then return to change the selected state of the label track.  for wave track behavior:  the return (or number pad enter) key behavior will remain hard-coded.  it is also hard-coded for label track text editing  about which there isn t a complaint.   note that if a clip is not selected  then pressing enter does nothing. i assume that s just a bug in the implementation.   this is fixed.  the return key will be intercepted for editing only in case the selection coincides with the extent of a clip.  with this change  you can change the selection such as with j or left arrow in default key bindings so it becomes a point.  then return toggles the selected state of the wave track.  you may be unsatisfied that restoring the time selection to what it was before requires further tab key presses.  maybe further improvement is possible  and you  @davidbailes   might suggest another commit to accomplish that.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1857,1,0,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,resolves: #1710this does not resolve all as suggested in the issue description but may offer satisfactory workaroundsfor label track behavior:the esc key already removes the insertion cursor if there is one  but now if there no insertion cursor but there is a label navigated to by tab then esc clears the navigation state  this allows esc and then return to change the selected state of the label trackfor wave track behavior:the return (or number pad enter) key behavior will remain hard-coded  it is also hard-coded for label track text editing about which there isnt a complaint"note that if a clip is not selected then pressing enter does nothing i assume thats just a bug in the implementation"  this is fixed  the return key will be intercepted for editing only in case the selection coincides with the extent of a clipwith this change you can change the selection such as with j or left arrow in default key bindings so it becomes a point  then return toggles the selected state of the wave trackyou may be unsatisfied that restoring the time selection to what it was before requires further tab key presses  maybe further improvement is possible and you @davidbailes  might suggest another commit to accomplish that<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1710  this does not resolve all as suggested in the issue description  but may offer satisfactory workarounds.  for label track behavior:  the esc key already removes the insertion cursor if there is one.  but now  if there no insertion cursor but there is a label navigated to by tab  then esc clears the navigation state.  this allows esc and then return to change the selected state of the label track.  for wave track behavior:  the return (or number pad enter) key behavior will remain hard-coded.  it is also hard-coded for label track text editing  about which there isn t a complaint.   note that if a clip is not selected  then pressing enter does nothing. i assume that s just a bug in the implementation.   this is fixed.  the return key will be intercepted for editing only in case the selection coincides with the extent of a clip.  with this change  you can change the selection such as with j or left arrow in default key bindings so it becomes a point.  then return toggles the selected state of the wave track.  you may be unsatisfied that restoring the time selection to what it was before requires further tab key presses.  maybe further improvement is possible  and you  @davidbailes   might suggest another commit to accomplish that.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1864,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,1,0,resolves: https://githubcom/audacity/audacity/issues/1863now that there are clip names they should be added to messages sent to screen readersthis commit adds the clip names to the messages sent by various existing clip commands<!-- use "x" to fill the checkboxes below like [x] -->- [ x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x ] the title of the pull request describes an issue it addresses- [x ] if changes are extensive then there is a sequence of easily reviewable commits- [x ] each commits message describes its purpose and effects- [x ] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: https://github.com/audacity/audacity/issues/1863  now that there are clip names  they should be added to messages sent to screen readers. this commit adds the clip names to the messages sent by various existing clip commands.   <!-- use  x  to fill the checkboxes below like [x] -->  - [ x] i signed [cla](https://www.audacityteam.org/cla/) - [x ] the title of the pull request describes an issue it addresses - [x ] if changes are extensive  then there is a sequence of easily reviewable commits - [x ] each commit s message describes its purpose and effects - [x ] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x ] each commit compiles and runs on my machine without known undesirable changes of behavior
1865,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: #1833also "select all" command is available when label is edited- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1833  also  select all  command is available when label is edited  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1871,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: https://githubcom/audacity/audacity/issues/1870when a user presses tab or shift+tab to select the next/previous clip a message is sent to any screen reader<!-- use "x" to fill the checkboxes below like [x] -->- [x ] i signed [cla](https://wwwaudacityteamorg/cla/)- [x ] the title of the pull request describes an issue it addresses- [ x] if changes are extensive then there is a sequence of easily reviewable commits- [ x] each commits message describes its purpose and effects- [ x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: https://github.com/audacity/audacity/issues/1870  when a user presses tab or shift+tab to select the next/previous clip  a message is sent to any screen reader.   <!-- use  x  to fill the checkboxes below like [x] -->  - [x ] i signed [cla](https://www.audacityteam.org/cla/) - [x ] the title of the pull request describes an issue it addresses - [ x] if changes are extensive  then there is a sequence of easily reviewable commits - [ x] each commit s message describes its purpose and effects - [ x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x ] each commit compiles and runs on my machine without known undesirable changes of behavior
1872,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: #1858exit clip name editing when a mouse click causes the trackpanel to lose focusnote that this implementation commits any unfinished text edit with a undo history item -- it doesnt cancel it as if by the escape key- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1858  exit clip name editing when a mouse click causes the trackpanel to lose focus.  note that this implementation commits any unfinished text edit with a undo history item -- it doesn t cancel it as if by the escape key.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1874,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,resolves: #1835resolves: #1834 - [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1835 resolves: #1834   - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1874,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,resolves: #1835resolves: #1834 - [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1835 resolves: #1834   - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1883,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,resolves: #1814- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1814  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1894,0,0,0,1,0,0,0,1,0,1,1,1,1,0,1,1,0,1,0,resolves: #1890  some lagginess has to be tolerated because there must be a queue of somelength between the trackbufferexchange thread and the portaudio thread   buthow short can it be?in case of playback looping that lag is now set to an arbitrary hard-coded1/2 second in loopingplaybackpolicy::suggestedbuffertimes which is less thanthe old default latency of 4 seconds (see playbackpolicy::suggestedbuffertimes)which perhaps was a value motivated by older generations of hardwareso if you adjust looping play bounds while the play head is within 1/2 secondof the end of the loop (thats 1/2 second of real time not track time in caseyou also have a time-warping time track) -- then you might yet notice the playhead not doing quite what you want(should we make that latency user-tunable?  or more challengingly for usdetect hardware limitations and make it adaptive?)<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1890   ... some lagginess has to be tolerated  because there must be a queue of some length between the trackbufferexchange thread and the portaudio thread.   but how short can it be?  in case of playback looping  that lag is now set to an arbitrary hard-coded 1/2 second in loopingplaybackpolicy::suggestedbuffertimes  which is less than the old default latency of 4 seconds (see playbackpolicy::suggestedbuffertimes)  which perhaps was a value motivated by older generations of hardware.  so  if you adjust looping play bounds while the play head is within 1/2 second of the end of the loop (that s 1/2 second of real time  not track time  in case you also have a time-warping time track) -- then you might yet notice the play head not doing quite what you want.  (should we make that latency user-tunable?  or  more challengingly for us  detect hardware limitations and make it adaptive?)  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1898,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0, this inserts a menu item under editalso share code with the clip context menuresolves: #1842 *(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  ... this inserts a menu item under edit.  also share code with the clip context menu  resolves: #1842   *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1914,1,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,1,1,0,currently this is implemented for macos users onlywindows has not yet published the api linux requires gtk3 and we build against gtk2 currentlyresolves: #1752*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  currently  this is implemented for macos users only. windows has not yet published the api  linux requires gtk3 and we build against gtk2 currently.  resolves: #1752  *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1916,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1739 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1739   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1930,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,resolves: #1896 this is unlike the case of loss of focus when clicking outside of audacitywhich was the case fixed at ec258e0- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1896  ... this is unlike the case of loss of focus when clicking outside of audacity  which was the case fixed at ec258e0.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1936,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1927 - [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1927   - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1938,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1884 - [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1884   - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1940,0,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,this commit introduces a new mechanism to allow projects components to specify the audacity version they require to be loaded it is possible to set the version based on the features that are currently in use smart clips use this new approach to require at least audacity 31 if there are trimmed clips in the projectresolves: #1903*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  this commit introduces a new mechanism to allow projects components to specify the audacity version they require to be loaded.   it is possible to set the version based on the features that are currently in use.   smart clips use this new approach to require at least audacity 3.1 if there are trimmed clips in the project.  resolves: #1903  *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1947,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: https://githubcom/audacity/audacity/issues/1934using the keyboard to rename a clip in an audio track regardless of which clip is selected the same clip in the audio track is always renamedfix:in wavetrackaffordancecontrols::starteditnameofmatchingclip() the call to starteditclipname() edits the name of mfocusclip so set the value of mfocusclip not meditedclip<!-- use "x" to fill the checkboxes below like [x] -->- [ x] i signed [cla](https://wwwaudacityteamorg/cla/)- [ x] the title of the pull request describes an issue it addresses- [ x] if changes are extensive then there is a sequence of easily reviewable commits- [x ] each commits message describes its purpose and effects- [ x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: https://github.com/audacity/audacity/issues/1934  using the keyboard to rename a clip in an audio track  regardless of which clip is selected  the same clip in the audio track is always renamed.  fix: in wavetrackaffordancecontrols::starteditnameofmatchingclip()  the call to starteditclipname() edits the name of mfocusclip  so set the value of mfocusclip  not meditedclip.  <!-- use  x  to fill the checkboxes below like [x] -->  - [ x] i signed [cla](https://www.audacityteam.org/cla/) - [ x] the title of the pull request describes an issue it addresses - [ x] if changes are extensive  then there is a sequence of easily reviewable commits - [x ] each commit s message describes its purpose and effects - [ x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x ] each commit compiles and runs on my machine without known undesirable changes of behavior
1950,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,1,1,resolves: #1260resolves: #1706resolves: #1707this completes the user interface for playback looping with three click-and-drag actions in the timeline:* dragging a completely new play region (arrow cursor)* resizing an existing region (east-west arrows)* moving an existing region (hand)please observe also:* the context menu item to make selection follow play region drags works* yellow snap guidelines at edges of labels or clips and of the selection when it isnt following the play region* escape key aborts all drags* left click without drag still starts playback- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1260 resolves: #1706 resolves: #1707  this completes the user interface for playback looping with three click-and-drag actions in the timeline: * dragging a completely new play region (arrow cursor) * resizing an existing region (east-west arrows) * moving an existing region (hand)  please observe also: * the context menu item  to make selection follow play region drags  works * yellow snap guidelines at edges of labels or clips  and of the selection when it isn t following the play region * escape key aborts all drags * left click without drag still starts playback  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1950,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,1,1,resolves: #1260resolves: #1706resolves: #1707this completes the user interface for playback looping with three click-and-drag actions in the timeline:* dragging a completely new play region (arrow cursor)* resizing an existing region (east-west arrows)* moving an existing region (hand)please observe also:* the context menu item to make selection follow play region drags works* yellow snap guidelines at edges of labels or clips and of the selection when it isnt following the play region* escape key aborts all drags* left click without drag still starts playback- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1260 resolves: #1706 resolves: #1707  this completes the user interface for playback looping with three click-and-drag actions in the timeline: * dragging a completely new play region (arrow cursor) * resizing an existing region (east-west arrows) * moving an existing region (hand)  please observe also: * the context menu item  to make selection follow play region drags  works * yellow snap guidelines at edges of labels or clips  and of the selection when it isn t following the play region * escape key aborts all drags * left click without drag still starts playback  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1950,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,1,1,resolves: #1260resolves: #1706resolves: #1707this completes the user interface for playback looping with three click-and-drag actions in the timeline:* dragging a completely new play region (arrow cursor)* resizing an existing region (east-west arrows)* moving an existing region (hand)please observe also:* the context menu item to make selection follow play region drags works* yellow snap guidelines at edges of labels or clips and of the selection when it isnt following the play region* escape key aborts all drags* left click without drag still starts playback- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1260 resolves: #1706 resolves: #1707  this completes the user interface for playback looping with three click-and-drag actions in the timeline: * dragging a completely new play region (arrow cursor) * resizing an existing region (east-west arrows) * moving an existing region (hand)  please observe also: * the context menu item  to make selection follow play region drags  works * yellow snap guidelines at edges of labels or clips  and of the selection when it isn t following the play region * escape key aborts all drags * left click without drag still starts playback  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1958,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,also real link to the video is now addedresolves: #1946*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [ ] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  also  real link to the video is now added  resolves: #1946  *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [ ] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1965,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,1,0,resolves: #1822 a recurrence of bugs 1887 and 2025  these worked around a bug in the soxrlibrary  recent rearrangements of playback engine sometimes failed to do theworkaround<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1822  ... a recurrence of bugs 1887 and 2025.  these worked around a bug in the soxr library.  recent rearrangements of playback engine sometimes failed to do the workaround.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1967,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,1,1,resolves: #1961 moving the whole play region should never change its length when it snaps either end<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1961   moving the whole play region should never change its length when it snaps either end  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1976,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,there are still edge cases left while editing the clip name the fix for them will be complex and is out of scope for the release branch hotfixresolves: #1962 *(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  there are still edge cases left while editing the clip name. the fix for them will be complex and is out of scope for the release branch hotfix  resolves: #1962   *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1978,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: https://githubcom/audacity/audacity/issues/1710resolves: https://githubcom/audacity/audacity/issues/1780problem: for label tracks enter (hardcoded) for renaming the selected label is the same shortcut used by default by the command for toggling the selectedness of the trackfix: use the shortcut ctrl+f2 for renaming the selected labelwarning: this has been implemented by hardcoding this shortcut rather than providing a context sensitive command for renaming both clips and labels this was done due to a shortage of time this hardcoded shortcut should be removed after the release of 310in changing the shortcut from enter to ctrl+f2 in labeltrackview::docapturekey() in the line:if (isvalidindex(mtexteditindex project) || isvalidindex(mnavigationindex project)) {the case isvalidindex(mnavigationindex project) was removed this had been added in commit a0ad72d presumably to capture the enter key this was an incorrect change and caused issue #1780:a label can be created by typing regardless of option settingso this commit also fixes that issue<!-- use "x" to fill the checkboxes below like [x] -->- [x ] i signed [cla](https://wwwaudacityteamorg/cla/)- [x ] the title of the pull request describes an issue it addresses- [x ] if changes are extensive then there is a sequence of easily reviewable commits- [x ] each commits message describes its purpose and effects- [ x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: https://github.com/audacity/audacity/issues/1710 resolves: https://github.com/audacity/audacity/issues/1780  problem: for label tracks enter (hardcoded) for renaming the selected label  is the same shortcut used by default by the command for toggling the selectedness of the track.  fix: use the shortcut ctrl+f2 for renaming the selected label. warning: this has been implemented by hardcoding this shortcut  rather than providing a context sensitive command for renaming both clips and labels. this was done due to a shortage of time. this hardcoded shortcut should be removed after the release of 3.1.0  in changing the shortcut from enter to ctrl+f2  in labeltrackview::docapturekey()  in the line: if (isvalidindex(mtexteditindex  project) || isvalidindex(mnavigationindex  project)) {  the case isvalidindex(mnavigationindex  project) was removed. this had been added in commit a0ad72d  presumably to capture the enter key. this was an incorrect change and caused issue #1780:a label can be created by typing regardless of option setting. so this commit also fixes that issue.   <!-- use  x  to fill the checkboxes below like [x] -->  - [x ] i signed [cla](https://www.audacityteam.org/cla/) - [x ] the title of the pull request describes an issue it addresses - [x ] if changes are extensive  then there is a sequence of easily reviewable commits - [x ] each commit s message describes its purpose and effects - [ x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ x] each commit compiles and runs on my machine without known undesirable changes of behavior
1981,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,resolves: #1860 - [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1860   - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
1985,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: #1931same fix is applied to both clip names and labels- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1931  same fix is applied to both clip names and labels  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1992,0,0,0,1,0,0,0,1,0,1,1,1,1,0,1,1,0,1,0, do not play a short bit from time zero do not briefly show play head thereuse the start time option which prepares all before the firsttrackbufferexchange call and not the older "seek" mechanism  that instead seta variable and let the portaudio thread to react to it  possibly the threaddid not see the change in variable promptly enough explaining the symptomresolves: #1924*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  ... do not play a short bit from time zero  do not briefly show play head there.  use the start time option  which prepares all before the first trackbufferexchange call  and not the older  seek  mechanism.  that instead set a variable and let the portaudio thread to react to it.  possibly the thread did not see the change in variable promptly enough  explaining the symptom.  resolves: #1924  *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
1993,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,1,1,resolves: #1971 make correct hot zones for drags in the timeline when looping is disabled<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1971   make correct hot zones for drags in the timeline when looping is disabled.  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
2002,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,resolves: #1984resolves: #1994resolves: #1995resolves: #2003behavior of playback when looping is not enabled should be as before  play from left edge of the selection either to right edge (if that is different) or to the end of the tracks and once onlyalso change reactions of play in progress to changes of the loop region or state of the loop button  when button is up play as non-looped  when it is down jump only leftward to the start of the loop and only when playback reaches the right edge  so if playback is right of the loop it also continues to the end and stops- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1984 resolves: #1994 resolves: #1995 resolves: #2003  behavior of playback when looping is not enabled should be as before.  play from left edge of the selection  either to right edge (if that is different) or to the end of the tracks  and once only.  also change reactions of play in progress to changes of the loop region or state of the loop button.  when button is up  play as non-looped.  when it is down  jump only leftward to the start of the loop  and only when playback reaches the right edge.  so if playback is right of the loop  it also continues to the end and stops.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
2002,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,resolves: #1984resolves: #1994resolves: #1995resolves: #2003behavior of playback when looping is not enabled should be as before  play from left edge of the selection either to right edge (if that is different) or to the end of the tracks and once onlyalso change reactions of play in progress to changes of the loop region or state of the loop button  when button is up play as non-looped  when it is down jump only leftward to the start of the loop and only when playback reaches the right edge  so if playback is right of the loop it also continues to the end and stops- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1984 resolves: #1994 resolves: #1995 resolves: #2003  behavior of playback when looping is not enabled should be as before.  play from left edge of the selection  either to right edge (if that is different) or to the end of the tracks  and once only.  also change reactions of play in progress to changes of the loop region or state of the loop button.  when button is up  play as non-looped.  when it is down  jump only leftward to the start of the loop  and only when playback reaches the right edge.  so if playback is right of the loop  it also continues to the end and stops.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
2002,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,resolves: #1984resolves: #1994resolves: #1995resolves: #2003behavior of playback when looping is not enabled should be as before  play from left edge of the selection either to right edge (if that is different) or to the end of the tracks and once onlyalso change reactions of play in progress to changes of the loop region or state of the loop button  when button is up play as non-looped  when it is down jump only leftward to the start of the loop and only when playback reaches the right edge  so if playback is right of the loop it also continues to the end and stops- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1984 resolves: #1994 resolves: #1995 resolves: #2003  behavior of playback when looping is not enabled should be as before.  play from left edge of the selection  either to right edge (if that is different) or to the end of the tracks  and once only.  also change reactions of play in progress to changes of the loop region or state of the loop button.  when button is up  play as non-looped.  when it is down  jump only leftward to the start of the loop  and only when playback reaches the right edge.  so if playback is right of the loop  it also continues to the end and stops.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
2002,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,resolves: #1984resolves: #1994resolves: #1995resolves: #2003behavior of playback when looping is not enabled should be as before  play from left edge of the selection either to right edge (if that is different) or to the end of the tracks and once onlyalso change reactions of play in progress to changes of the loop region or state of the loop button  when button is up play as non-looped  when it is down jump only leftward to the start of the loop and only when playback reaches the right edge  so if playback is right of the loop it also continues to the end and stops- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1984 resolves: #1994 resolves: #1995 resolves: #2003  behavior of playback when looping is not enabled should be as before.  play from left edge of the selection  either to right edge (if that is different) or to the end of the tracks  and once only.  also change reactions of play in progress to changes of the loop region or state of the loop button.  when button is up  play as non-looped.  when it is down  jump only leftward to the start of the loop  and only when playback reaches the right edge.  so if playback is right of the loop  it also continues to the end and stops.  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
2007,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,1,0,1,1,resolves: #1999 (and two other problems)* dragging of looping region partly into negative time should not make it disappear* yellow snap guideline should be visible at right edge of last clip* remove arbitrary restriction on selection of play regions with error message "cannot lock region beyond end of project"- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1999  (and two other problems)  * dragging of looping region partly into negative time should not make it disappear * yellow snap guideline should be visible at right edge of last clip * remove arbitrary restriction on selection of play regions with error message  cannot lock region beyond end of project.   - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
2013,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,resolves: #1990- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1990  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
2014,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,resolves: #1969- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #1969  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
2015,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,0,1,1,this change is required to maintain consistency between default and cleared play regionsresolves: #2011 *(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  this change is required to maintain consistency between default and cleared play regions  resolves: #2011   *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
2023,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,resolves: #2019 <!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #2019   <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
2030,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,1,0,resolves: #2029*(short description of the changes and the motivation to make the changes)*<!-- use "x" to fill the checkboxes below like [x] -->- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [ ] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #2029  *(short description of the changes and the motivation to make the changes)*  <!-- use  x  to fill the checkboxes below like [x] -->  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [ ] each commit compiles and runs on my machine without known undesirable changes of behavior
2039,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,0,1,0,resolves: #2036fix drawing of envelope points correctly for trimming or time shifting or both- [x] i signed [cla](https://wwwaudacityteamorg/cla/)- [x] the title of the pull request describes an issue it addresses- [x] if changes are extensive then there is a sequence of easily reviewable commits- [x] each commits message describes its purpose and effects- [x] there are no behavior changes unnecessary for the stated purpose of the prrecommended:- [x] each commit compiles and runs on my machine without known undesirable changes of behavior  resolves: #2036  fix drawing of envelope points correctly for trimming or time shifting or both  - [x] i signed [cla](https://www.audacityteam.org/cla/) - [x] the title of the pull request describes an issue it addresses - [x] if changes are extensive  then there is a sequence of easily reviewable commits - [x] each commit s message describes its purpose and effects - [x] there are no behavior changes unnecessary for the stated purpose of the pr  recommended: - [x] each commit compiles and runs on my machine without known undesirable changes of behavior
